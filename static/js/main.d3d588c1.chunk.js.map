{"version":3,"sources":["simulation/Time.tsx","Bean.tsx","WorldGen.tsx","simulation/Institutions.tsx","Economy.tsx","World.tsx","Politics.tsx","events/Events.tsx","Modal.tsx","widgets/NeedReadout.tsx","simulation/City.tsx","OverviewPanel.tsx","AnimatedBean.tsx","WorldTile.tsx","EconomyReport.tsx","CharityPanel.tsx","right-panel/Events.tsx","BeanPanel.tsx","widgets/Dropdown.tsx","modal-content/FoundParty.tsx","modal-content/PartyOverview.tsx","widgets/BubbleText.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Season","Now","world","year","date","season","withinLastYear","current","last","Bean","key","cityKey","alive","dob","name","city","ethnicity","GetRandom","lastApproval","discrete_food","shelter","discrete_health","community","ideals","job","faith","cash","partyLoyalty","lastHappiness","lastSentiment","lastPartySentiment","seasonSinceLastSale","seasonSinceLastRent","lastApprovalDate","lastInsultDate","fairGoodPrice","econ","homeCity","law","mods","TraitToModifier","this","food","health","majorityEthnicity","push","reason","mod","MaslowScore","Deficient","getCostOfLiving","party","result","environment","GetHappiness","getHappinessModifiers","sent","getSentimentModifiers","myGood","JobToGood","getFairGoodPrice","traits","policies","multiplier","forEach","policy","fx","mag","costOfLiving","bad","idea","canBaby","Math","random","Boolean","tryFindRandomJob","newJob","mostInDemandJob","produceAndPrice","economy","buyFood","maybeDie","groceries","tryTransact","bought","buyHousing","housing","buyMeds","min","meds","threshold","breedBean","icon","message","isInCrisis","direct","canDonate","baseChance","chance","chanceToDonate","willDonate","donation","cause","die","onCitizenDie","Charity","institutionKey","seasonalBudget","good","parentInstitution","beansHelped","inventory","addCharity","AllGoods","Economy","market","OrderBook","charity","unfulfilledSeasonalDemand","medicine","fun","totalSeasonalDemand","totalSeasonalSupply","onBeanDie","deadBean","g","existing","getBeansListings","lucky","getRandomCitizen","sellerCityKey","sellerBeanKey","seller","buyer","listing","getLowestPriceListing","price","transact","charityTicket","quantity","addNewListing","sort","getOrgsListings","addNewOrgListing","reduce","max","GoodToJob","supply","demand","listings","fullListings","filter","l","length","numberOfSamePriceListings","lowPrice","i","floor","b","find","x","sellerOrganizationKey","splice","bean","org","a","BaseParty","playerKey","organizations","slogan","availablePolicies","proposedPolicy","availableCampaigns","activeCampaigns","politicalCapital","materialCapital","activeHQs","seasonalIncome","seasonalActions","CityPartyHQ","ChangePubSub","callbacks","args","c","callback","indexOf","EventBus","physicalCapital","World","cities","institutions","Spring","electionIn","yearsEvents","bus","calculate","beans","calculateBeliefs","inflate","resetYearlyCounters","resetSeasonalDemand","fundOrganizations","shuffle","work","e","eat","weather","age","maybeBaby","getTaxesAndDonations","maybeOverconsume","calculateComputedState","percent","sum","o","yearlyInflationDollars","round","richest","obj","winner","yearsPartyDonations","budget","list","concat","historicalBeans","institute","array","counter","index","temp","City","url","type","houses","partyHQ","doOnCitizenDie","shuffled","parent","GenerateBean","maybeDonate","count","circle","square","triangle","hapMod","Sufficient","Abundant","GetRandomIndex","randomBuffer","Uint32Array","window","crypto","getRandomValues","randomNumber","ceil","GetRandomNumber","choices","console","log","GenerateWorld","GenerateCity","next","previousCityCount","newCity","houseCount","cityPopulation","left","top","previousBeanCount","newBean","base","StartingCash","Modal","props","state","show","hideCloseButton","className","onClick","closeButtonText","children","getButton","React","Component","NeedReadout","dire","need","dire_style","width","full","abundant","full_style","header","style","keyToName","reportIdeals","_report","reportCommunity","defWin","beanPropGet","avg","all","stash","value","Object","keys","trait","OverviewPanel","toFixed","clearCity","avg_happy","avg_cash","avg_approval","report","hq","AxisReadout","maj","AnimatedBean","timerID","delaySeedSec","waitSeedSec","paused","startWander","setState","setTimeout","stopWander","clearInterval","getIdea","classes","title","animationDelay","stopPropagation","getFace","WorldTile","tile","activeTileID","map","onBeanClick","deaths","h","src","alt","median","values","half","EconomyReport","food_median","health_median","wealth_total","y","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","s","jobs","unemployed","jobless","reducer","farmer","builder","doc","CharityPanel","onChangeValue","event","selectedCharityGood","target","onChangeBudgetValue","selectedCharityBudget","onFoundCharity","selectedCharityName","onChange","change","panel","EventsPanel","events","BeanPanel","solicit","faceOverride","_resetFace","insult","support","undefined","chanceText","actionLimit","colSpan","happyTable","disabled","canInsult","canSupport","CityDropdown","data","options","getTextForOption","FoundParty","onName","onSlogan","onCity","ideal","members","goal","val","onBigFourChange","checked","onCommunity","currentTarget","onIdeal","onFound","PartyOverview","hq_names","p","rowSpan","BubbleText","ev","id","Date","positive","bubbles","t","changeEvent","subscribe","unsubscribe","bubbleClass","join","ego","trad","prog","book","heart","music","noFaith","hungry","sated","stuffed","podless","crowded","homeowner","sick","bruised","fresh","magnitude","magToTextSw","compass","App","foundParty","GeneratePartyHQ","activeModal","foundCharity","publish","activeCityID","activeBeanID","activeRightPanel","COL","tiles","seasonalCost","marginRight","endTurn","getPanel","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"4MAEYA,E,mFAOL,SAASC,EAAIC,GAChB,MAAO,CAACC,KAAMD,EAAME,KAAKD,KAAME,OAAQH,EAAME,KAAKC,QAG/C,SAASC,EAAeC,EAAgBC,GAC3C,OAAOA,EAAKL,MAAQ,IAChBK,EAAKL,MAAQI,EAAQJ,MACjBK,EAAKL,MAAQI,EAAQJ,KAAO,GAC5BK,EAAKH,OAASE,EAAQF,S,SAftBL,O,mBAAAA,I,mBAAAA,I,eAAAA,I,oBAAAA,M,KCwBZ,IAEaS,EAAb,iDACWC,IAAc,EADzB,KAEWC,QAAkB,EAF7B,KAGWC,OAAiB,EAH5B,KAIWC,IAAa,CAACV,KAAM,EAAGE,OAAQ,GAJ1C,KAKWS,KAAe,eAL1B,KAOWC,KAAkB,KAP7B,KASWC,UCNAC,EAAU,CAAC,SAAS,SAAS,aDHxC,KAUWC,aAAsB,CAACf,MAAO,EAAGE,OAAQ,GAVpD,KAaWc,cAAwB,EAbnC,KAsBWC,QAAwB,UAtBnC,KAuBWC,gBAA0B,EAvBrC,KAiCWC,UAA4B,MAjCvC,KAkCWC,OAAsB,OAlCjC,KAoCWC,IAAgB,UApC3B,KAqCWC,WArCX,OAsCWC,KAAe,EAtC1B,KAuCWC,aAAuB,GAvClC,KA2CWC,cAAwB,EA3CnC,KA+CWC,cAAwB,EA/CnC,KAmDWC,mBAA6B,EAnDxC,KAoDWC,oBAA8B,EApDzC,KAqDWC,oBAA8B,EArDzC,KAsDWC,iBAA0B,CAAC9B,MAAO,EAAGE,OAAQ,GAtDxD,KAuDW6B,eAAwB,CAAC/B,MAAO,EAAGE,OAAQ,GAvDtD,KAwDW8B,cAAwB,EAxDnC,kEA8D0BC,EAAeC,EAAgBC,GACjD,IAAMC,EAA6B,CAC/BC,EAAgBC,KAAKC,MACrBF,EAAgBC,KAAKrB,SACrBoB,EAAgBC,KAAKE,SAgBzB,MAdmB,QAAfF,KAAKlB,QAAoBkB,KAAKzB,WAAaqB,EAASO,mBACpDL,EAAKM,KAAK,CAACC,OAAQ,aAAcC,KAAM,KAEvCN,KAAKf,KAAO,EACZa,EAAKM,KAAK,CAACC,OAAQ,YAAaC,IAAKC,EAAYC,YAC1CR,KAAKf,KAAgC,EAAzBU,EAAKc,kBACxBX,EAAKM,KAAK,CAACC,OAAQ,cAAeC,IAAK,KAChCN,KAAKf,KAAgC,EAAzBU,EAAKc,mBACxBX,EAAKM,KAAK,CAACC,OAAQ,eAAgBC,IAAK,MAE5B,WAAZN,KAAKjB,KACLe,EAAKM,KAAK,CAACC,OAAQ,aAAcC,IAAKC,EAAYC,YAG/CV,IAlFf,4CAoF0BH,EAAeC,EAAgBC,EAAUa,GAI3D,IAAMC,EAAS,CAACD,MAAO,GAA4Bb,IAAK,IAaxD,OAXIG,KAAKnB,WAAa6B,EAAM7B,WACxB8B,EAAOD,MAAMN,KAAK,CAACC,OAAQ,iBAAkBC,IAAK,MAElDN,KAAKlB,QAAU4B,EAAM5B,OACrB6B,EAAOD,MAAMN,KAAK,CAACC,OAAQ,cAAeC,IAAK,MACxCN,KAAKnB,WAAa6B,EAAM7B,WAC/B8B,EAAOD,MAAMN,KAAK,CAACC,OAAQ,sBAAuBC,KAAM,MAExDV,EAASgB,aAAe/C,EAAe+B,EAASgB,YAAaZ,KAAKR,mBAClEmB,EAAOD,MAAMN,KAAK,CAACC,OAAQ,qBAAsBC,IAAK,KAEnDK,IArGf,uCAuGqBhB,EAAeC,EAAgBC,EAAUa,GACtDV,KAAKb,cAAgB0B,EAAab,KAAKc,sBAAsBnB,EAAMC,EAAUC,IAC7E,IAAMkB,EAAOf,KAAKgB,sBAAsBrB,EAAMC,EAAUC,EAAKa,GAI7D,GAHAV,KAAKZ,cAAgByB,EAAaE,EAAKlB,KACvCG,KAAKX,mBAAqBwB,EAAaE,EAAKL,OAE5B,WAAZV,KAAKjB,IACLiB,KAAKN,cAAgB,MAClB,CACH,IAAMuB,EAASC,EAAUlB,KAAKjB,KAC9BiB,KAAKN,cAAgBC,EAAKwB,iBAAiBF,MAjHvD,2CAuHyBG,EAA8BC,GAC/C,IAAIC,EAAa,IAOjB,OANAD,EAASE,SAAQ,SAACC,GACdA,EAAOC,GAAGF,SAAQ,SAACE,GACXL,EAAOK,EAAGxD,OACdqD,GAAuB,GAATG,EAAGC,WAGlBJ,EAAa,MA/H5B,qCAiImB,IAAD,EACNF,GAAM,mBAAKpB,KAAKnB,WAAY,GAAtB,cAA6BmB,KAAKlB,QAAU,GAA5C,cAAmDkB,KAAKzB,WAAY,GAApE,GAGV,OAFIyB,KAAKhB,QACLoC,EAAOpB,KAAKhB,QAAS,GAClBoC,IArIf,gCAwIQ,OAAKpB,KAAK7B,MAEO,UAAb6B,KAAKC,KACE,eACQ,QAAfD,KAAKE,OACE,eACS,WAAhBF,KAAKrB,QACE,eACK,WAAZqB,KAAKjB,IACE,eACPiB,KAAKb,cAAgB,EACd,eACPa,KAAKb,eAAiB,GACf,eACJ,eAbI,iBAzInB,8BAwJYwC,GACJ,MAAiB,UAAb3B,KAAKC,KACE,CAAC2B,KAAK,EAAMC,KAAM,gBACV,QAAf7B,KAAKE,OACE,CAAC0B,KAAK,EAAMC,KAAM,gBACT,WAAhB7B,KAAKrB,QACE,CAACiD,KAAK,EAAMC,KAAM,gBACzB7B,KAAK8B,QAAQH,GACN,CAACC,KAAK,EAAOC,KAAM,gBACvB,OAjKf,uCAmKqBhC,GACTkC,KAAKC,SAAW,KAChBhC,KAAKjB,IAAMP,EAAU,CAAC,UAAW,MAAO,cArKpD,kCAyKQ,OAAOyD,QAAQjC,KAAK1B,MAAQ0B,KAAK1B,KAAKsC,cAAgB/C,EAAemC,KAAK1B,KAAKsC,YAAaZ,KAAKP,mBAzKzG,mCA4KQ,OAAOwC,QAAQjC,KAAK1B,MAAQ0B,KAAK1B,KAAKsC,cAAgB/C,EAAemC,KAAK1B,KAAKsC,YAAaZ,KAAKR,qBA5KzG,2BA8KSK,EAA8BF,GAC/B,GAAgB,WAAZK,KAAKjB,IACLiB,KAAKkC,iBAAiBrC,OACnB,CAEH,GADAG,KAAKV,sBACDU,KAAKV,oBAAsB,GAEvByC,KAAKC,SAAW,GAAK,CACrB,IAAMG,EAASxC,EAAKyC,kBAChBD,IACAnC,KAAKjB,IAAMoD,GAGvBxC,EAAK0C,gBAAgBrC,KAAMkB,EAAUlB,KAAKjB,KAAM,IAAKiB,KAAKN,kBA3LtE,0BA8LQ4C,GAWA,MAVgB,UAAZtC,KAAKjB,IACLiB,KAAKtB,eAAiB,EAEtBsB,KAAKuC,QAAQD,GAGjBtC,KAAKtB,eAAiB,EAClBsB,KAAKtB,cAAgB,IACrBsB,KAAKpB,iBAAmB,IAErBoB,KAAKwC,SAAS,aAAc,MAzM3C,8BA2MoBF,GACZ,IAAMG,EAAYH,EAAQI,YAAY1C,KAAM,QACxCyC,IACAzC,KAAKtB,eAAiB+D,EAAUE,UA9M5C,8BAiNYL,GACJ,IAAKtC,KAAK7B,MAAO,OAAO,KACR,WAAZ6B,KAAKjB,IACLiB,KAAKrB,QAAU,UAEIqB,KAAK4C,WAAWN,KAE3BtC,KAAKT,oBAzNI,EA0NTS,KAAKrB,QAAU,UAGfqB,KAAKT,uBAQjB,MAHoB,WAAhBS,KAAKrB,UACLqB,KAAKpB,iBAAmB,IAErBoB,KAAKwC,SAAS,WAAY,MApOzC,iCAsOuBF,GACf,IAAMO,EAAUP,EAAQI,YAAY1C,KAAM,WAK1C,OAJI6C,IACA7C,KAAKT,oBAAsB,EAC3BS,KAAKrB,QAAU,WAED,MAAXkE,IA5Of,0BA+OQP,GACA,OAAKtC,KAAK7B,OACM,OAAZ6B,KAAKjB,IACLiB,KAAKpB,iBAAmB,IAExBoB,KAAK8C,QAAQR,GAEjBtC,KAAKpB,iBAAmB,GACxBoB,KAAKpB,gBAAkBmD,KAAKgB,IAAI/C,KAAKpB,gBAAiB,GAC/CoB,KAAKwC,SAAS,WAAY,KART,OAhPhC,8BA0PoBF,GACZ,IAAMU,EAAOV,EAAQI,YAAY1C,KAAM,YACnCgD,IACAhD,KAAKpB,iBAAmBoE,EAAKL,UA7PzC,uCAgQqBL,GACb,IAAMW,EAAwC,EAA5BX,EAAQ7B,kBACT,WAAbT,KAAKC,MAAqBD,KAAKf,KAAOgE,GACtCjD,KAAKuC,QAAQD,GAEE,SAAftC,KAAKE,QAAqBF,KAAKf,KAAOgE,GACtCjD,KAAK8C,QAAQR,KAtQzB,gCA0QcA,GACN,GAAItC,KAAK8B,QAAQQ,EAAQ7B,oBACrBsB,KAAKC,UA9QE,IA8QsB,CAC7B,IAAIhC,KAAK1B,KAGL,KAAM,gCACV,OAHI0B,KAAK1B,KAAK4E,UAAUlD,MAGjB,CAACmD,KAAM,eAAMC,QAAS,uBAE7B,OAAO,OAnRnB,8BAsRYzB,GACJ,OAAO3B,KAAKf,KAAsB,EAAf0C,IACd3B,KAAKqD,aAxRlB,qCA8RmBf,GAAmD,IAAjCgB,EAAgC,wDACvDC,EAAYvD,KAAKf,KAAmC,EAA5BqD,EAAQ7B,oBAA0BT,KAAKqD,WACrE,GAAIE,GAAavD,KAAKX,mBAAqB,GAAI,CAC3C,IAAM4D,EAAYK,EAAS,GAAM,GAC3BE,EAAaxD,KAAKX,mBAAqB4D,EAC7C,OAAQO,EAAc,EAE1B,OAAO,IArSf,kCAuSgBlB,GAAmD,IAAjCgB,EAAgC,wDACpDG,EAASzD,KAAK0D,eAAepB,EAASgB,GAC5C,GAAIG,EAAS,EAAE,CACX,IAAME,EAAa5B,KAAKC,SAAWyB,EACnC,GAAIE,EAAW,CACX,IAAMC,EAAW,EAEjB,OADA5D,KAAKf,MAAQ2E,EACNA,GAGf,OAAO,IAjTf,+BAmTaC,GAA0C,IAA3BJ,EAA0B,uDAAjB,GAC7B,OAAIzD,KAAKpB,gBAAkB,GAAKmD,KAAKC,UAAYyB,GAC7CzD,KAAK8D,MACE,CAACX,KAAM,eAAMC,QAAQ,kBAAD,OAAoBS,EAApB,OAEpB,OAxTnB,4BA2TU,IAAD,EACD7D,KAAK7B,OAAQ,EACb,UAAA6B,KAAK1B,YAAL,SAAWyF,aAAa/D,QA7ThC,2BAeQ,OAAIA,KAAKtB,eAAiB,EACnB,UACEsB,KAAKtB,eAAiB,EACxB,QAEA,WApBf,6BAyBQ,OAAIsB,KAAKpB,iBAAmB,EACrB,QACEoB,KAAKpB,iBAAmB,EAC1B,UAEA,SA9Bf,iCA0DQ,MAAoB,UAAboB,KAAKC,MACI,WAAhBD,KAAKrB,SACU,QAAfqB,KAAKE,WA5Db,KENa8D,EAAb,iDACI/F,IAAM,EADV,KAEII,KAAe,GAFnB,KAGI4F,eAAiB,EAHrB,KAIIhF,KAAO,EAJX,KAKIK,oBAAsB,EAL1B,KAMI4E,eAAiB,EANrB,KAOIC,KAAkB,OAPtB,KAQIC,kBAAuC,KAR3C,KASIC,YAAsB,EAT1B,KAUIC,UAAoB,EAVxB,iDAYSzE,EAA8ByC,GAC/B,KAAMtC,KAAKf,KAAO,GAAKe,KAAKsE,UAAY,IAAI,CACxC,IAAM7B,EAAYH,EAAQI,YAAY1C,KAAMA,KAAKmE,MACjD,IAAI1B,EAGA,MAFAH,EAAQiC,WAAWvE,KAAMA,KAAKmE,KAAM1B,EAAUE,aAhB9D,KCLM6B,EAAwB,CAAC,OAAQ,UAAW,WAAY,OAEjDC,EAAb,WAMI,aAAc,IAAD,gCALbC,OAAS,IAAIC,EAKA,KAJbC,QAAU,IAAID,EAID,KAHbE,0BAA0D,CAAE5E,KAAM,EAAGtB,QAAS,EAAGmG,SAAU,EAAGC,IAAK,GAGtF,KAFbC,oBAAoD,CAAE/E,KAAM,EAAGtB,QAAS,EAAGmG,SAAU,EAAGC,IAAK,GAEhF,KADbE,oBAAoD,CAAEhF,KAAM,EAAGtB,QAAS,EAAGmG,SAAU,EAAGC,IAAK,GAChF,KAmENG,UAAY,SAACC,EAAgB7G,GAChCkG,EAASjD,SAAQ,SAAC6D,GACd,IAAMC,EAAW,EAAKX,OAAOY,iBAAiBH,EAAUC,GACxD,GAAIC,EAAS,CACT,IAAME,EAAQjH,EAAKkH,mBACfD,IACAF,EAASI,cAAgBF,EAAMrH,QAC/BmH,EAASK,cAAgBH,EAAMtH,IAC/BoH,EAASM,OAASJ,QAjFtC,kEAUQvF,KAAK6E,0BAA4B,CAAE5E,KAAM,EAAGtB,QAAS,EAAGmG,SAAU,EAAGC,IAAK,GAC1E/E,KAAKgF,oBAAsB,CAAE/E,KAAM,EAAGtB,QAAS,EAAGmG,SAAU,EAAGC,IAAK,GACpE/E,KAAKiF,oBAAsB,CAAEhF,KAAM,EAAGtB,QAAS,EAAGmG,SAAU,EAAGC,IAAK,KAZ5E,kCAcgBa,EAAuBzB,GAE/BnE,KAAKgF,oBAAoBb,IADV,EAEf,IAAM0B,EAAU7F,KAAK0E,OAAOoB,sBAAsB3B,EAFnC,GAGf,GAAe,MAAX0B,OAGC,IAAIA,EAAQE,OAASH,EAAM3G,KAC5B,OAAOe,KAAK0E,OAAOsB,SAASH,EAAS1B,EAP1B,EAOwCyB,GAChD,GAAIA,aAAiB5H,EAAM,CAE9B,IAAMiI,EAAgBjG,KAAK4E,QAAQkB,sBAAsB3B,EAV9C,GAWX,GAAI8B,GAAiBA,EAAcN,kBAAkB3B,EAKjD,OAHA4B,EAAM1G,cA7BY,GA8BlB+G,EAAcN,OAAOtB,cACrB4B,EAAcN,OAAOrB,WAfd,EAgBAtE,KAAK4E,QAAQoB,SAASC,EAAe9B,EAhBrC,EAgBmDyB,IAIlE,OADA5F,KAAK6E,0BAA0BV,IAnBhB,EAoBR,OAnCf,sCAqCoBwB,EAAcxB,EAAiB+B,EAAkBH,GAC7D/F,KAAKiF,oBAAoBd,IAAS+B,EAClC,IAAMb,EAAWrF,KAAK0E,OAAOY,iBAAiBK,EAAQxB,GAClDkB,GACAA,EAASa,UAAYA,EACrBb,EAASU,MAAQA,EACjBV,EAASa,SAAWnE,KAAKgB,IAAIsC,EAASa,SAAU,IAEhDlG,KAAK0E,OAAOyB,cAAchC,EAAM+B,EAAUH,EAAOJ,GAErD3F,KAAK0E,OAAO0B,KAAKjC,KA/CzB,iCAiDewB,EAAiBxB,EAAiB+B,GACzC,IAAMb,EAAWrF,KAAK4E,QAAQyB,gBAAgBV,EAAQxB,GAClDkB,GACAA,EAASa,UAAYA,EACrBb,EAASa,SAAWnE,KAAKgB,IAAIsC,EAASa,SAAU,IAChDP,EAAOrB,UAAYe,EAASa,WAE5BlG,KAAK4E,QAAQ0B,iBAAiBnC,EAAM+B,EAAU,EAAGP,GACjDA,EAAOrB,UAAY4B,KAzD/B,wCA6D4C,IAAD,OAUnC,OAT2B1B,EACT+B,QAAO,SAACxI,EAAMoG,GAK5B,OAJI,EAAKU,0BAA0BV,GAAQpG,EAAKyI,MAC5CzI,EAAKyI,IAAM,EAAK3B,0BAA0BV,GAC1CpG,EAAKgB,ICoOd,SAAmBoF,GACtB,OAAOA,GACH,IAAK,UAAW,MAAO,UACvB,IAAK,WAAY,MAAO,MACxB,IAAK,MAAO,MAAO,cACnB,QAAS,IAAK,OAAQ,MAAO,UDzOVsC,CAAUtC,IAElBpG,IACR,CAACyI,IAAK,EAAGzH,IAAK,OAENA,MAvEnB,uCAsF4BoF,GACpB,IAAMuC,EAAS1G,KAAKiF,oBAAoBd,IAAS,EAC3CwC,EAAS3G,KAAKgF,oBAAoBb,GACxC,MAAO,IAAQ,IAAOpC,KAAKgB,IAAI4D,EAAOD,EAAQ,KAzFtD,wCA4FQ,OAAO1G,KAAKmB,iBAAiB,QAAQnB,KAAKmB,iBAAiB,WAAWnB,KAAKmB,iBAAiB,gBA5FpG,KAgGawD,EAAb,iDACoBiC,SAA4C,CACxD3G,KAAM,GACNtB,QAAS,GACTmG,SAAU,GACVC,IAAK,IALb,kEAOiCZ,EAAiBwC,GAC1C,IAAME,EAAgB7G,KAAK4G,SAASzC,GAAM2C,QAAO,SAACC,GAC9C,OAAOA,EAAEb,UAAYS,KAEzB,GAAIE,EAAaG,OAAS,EAAE,CAGxB,IAFA,IAAIC,EAA4B,EAC1BC,EAAWL,EAAa,GAAGd,MACxBoB,EAAI,EAAGA,EAAIN,EAAaG,OAAQG,IAAK,CAE1C,GADaN,EAAaM,GACjBpB,MAAQmB,EACb,MACJD,IAEJ,IAAME,EAAIpF,KAAKqF,MAAMrF,KAAKC,SAAWiF,GACrC,GAAIE,GAAKN,EAAaG,OAClB,KAAM,gBACV,OAAOH,EAAaM,GAExB,OAAO,OAzBf,uCA2B4BE,EAASjC,GAC7B,OAAOpF,KAAK4G,SAASxB,GAAGkC,MAAK,SAACC,GAAD,OAAOA,EAAE7B,eAAiB2B,EAAEpJ,KAAOsJ,EAAE9B,eAAiB4B,EAAEnJ,aA5B7F,sCA8B2BmJ,EAAkBjC,GACrC,OAAOpF,KAAK4G,SAASxB,GAAGkC,MAAK,SAACC,GAAD,OAAOA,EAAEC,uBAAyBH,EAAEpJ,SA/BzE,+BAiCoB4H,EAAkB1B,EAAiBwC,EAAgBf,GAQ/D,OAPAC,EAAQK,UAAYS,EAChBd,EAAQK,UAAY,GACpBlG,KAAK4G,SAASzC,GAAMsD,OAAO,EAAG,GAElC7B,EAAM3G,MAAQ4G,EAAQE,MACtBF,EAAQF,OAAO1G,MAAQ4G,EAAQE,MAC/BF,EAAQF,OAAOrG,sBACR,CACHqD,OAAQgE,EACRZ,MAAOF,EAAQE,SA3C3B,oCA8CyB5B,EAAiB+B,EAAkBH,EAAe2B,GACnE1H,KAAK4G,SAASzC,GAAM/D,KAAK,CACrBqF,cAAeiC,EAAKxJ,QACpBwH,cAAegC,EAAKzJ,IACpB8H,MAAOA,EACPJ,OAAQ+B,EACRxB,SAAUA,MApDtB,uCAuD4B/B,EAAiB+B,EAAkBH,EAAe4B,GACtE3H,KAAK4G,SAASzC,GAAM/D,KAAK,CACrBoH,sBAAuBG,EAAI1J,IAC3B8H,MAAOA,EACPJ,OAAQgC,EACRzB,SAAUA,MA5DtB,2BA+DgB/B,GACRnE,KAAK4G,SAASzC,GAAMiC,MAAK,SAACwB,EAAGP,GAAJ,OAAUO,EAAE7B,MAAQsB,EAAEtB,aAhEvD,KE7Fa8B,EAAb,iDACI5J,IAAM,EADV,KAEI6J,UAAY,EAFhB,KAGIC,cAAiC,GAHrC,KAIW1J,KAAe,kBAJ1B,KAKW2J,OAAiB,eAL5B,KAMWnJ,UAA4B,QANvC,KAOWC,OAAsB,OAPjC,KAQWmJ,kBAA8B,GARzC,KASWC,oBATX,OAUWC,mBAAiC,GAV5C,KAWWC,gBAA8B,GAXzC,KAYWC,iBAA2B,GAZtC,KAaWC,gBAA0B,GAbrC,KAcWC,UAAsB,GAdjC,KAgBWC,eAAyB,EAhBpC,KAiBWC,gBAA0B,EAjBrC,gEAkB8B,IAAD,OACrBzI,KAAK+H,cAAcxG,SAAQ,SAACoG,GACpB,EAAKW,iBAAmBX,EAAIzD,iBAC5B,EAAKoE,iBAAmBX,EAAIzD,eAC5ByD,EAAI1I,MAAQ0I,EAAIzD,uBAtBhC,KA+BawE,EAAb,sCACIxK,QAAkB,GCnCTyK,EAAb,4HAbA,iDACYC,UAAsC,GADlD,oDAEmBC,GACX7I,KAAK4I,UAAUrH,SAAQ,SAACuH,GAAD,OAAOA,EAAED,QAHxC,gCAKqBE,GACb/I,KAAK4I,UAAUxI,KAAK2I,KAN5B,kCAQgBA,GACR/I,KAAK4I,UAAUnB,OAAOzH,KAAK4I,UAAUI,QAAQD,GAAW,OAThE,MAgBaE,EAAb,sCACIC,gBAAkB,IAAIP,EAD1B,KAEIN,iBAAmB,IAAIM,GFOdQ,EAAb,iDACWC,OAAiB,GAD5B,KAEWvJ,IAEH,CACAwB,SAAU,IALlB,KAOWiB,QAAmB,IAAImC,EAPlC,KAQW4E,aAA+B,GAR1C,KASW3I,MAAe,IAAImH,EAT9B,KAUWlK,KAAO,CAACD,KAAM,EAAGE,OAAQL,EAAO+L,QAV3C,KAWWC,WAAa,GAXxB,KAYWC,YAAwB,GAZnC,KAaWC,IAAM,IAAIR,EAbrB,qEAkCoC,IAAD,OAC3BjJ,KAAKoJ,OAAO7H,SAAQ,SAAAuH,GAChBA,EAAEY,UAAU,EAAKpH,QAAS,EAAKzC,KAC/BiJ,EAAEa,MAAMpI,SAAQ,SAAA8F,GAAC,OAAIA,EAAEuC,iBAAiB,EAAKtH,QAASwG,EAAG,EAAKjJ,IAAK,EAAKa,eArCpF,6BA4CkB,IAAD,OACTV,KAAKuJ,aACDvJ,KAAKuJ,YAAc,IACnBvJ,KAAKuJ,WAAa,GAEtBvJ,KAAKrC,KAAKC,SACNoC,KAAKrC,KAAKC,OAAS,IACnBoC,KAAKrC,KAAKD,OACVsC,KAAK6J,UACL7J,KAAK8J,sBACL9J,KAAKrC,KAAKC,OAAS,GAGvBoC,KAAKsC,QAAQyH,sBAEb/J,KAAKqJ,aAAa9H,SAAQ,SAAC4F,GAAD,OAAOA,EAAE6C,uBAEnCC,EAAQjK,KAAK2J,OAAOpI,SAAQ,SAAC8F,GACzBA,EAAE6C,KAAK,EAAKrK,IAAK,EAAKyC,YAG1BtC,KAAK+H,cAAcxG,SAAQ,SAACoG,GAAD,OAASA,EAAIuC,KAAK,EAAKrK,IAAK,EAAKyC,YAK5D2H,EAAQjK,KAAK2J,OAAOpI,SAAQ,SAAC8F,GACzB,IAAI8C,EAAI9C,EAAE+C,IAAI,EAAK9H,SACf6H,GAAG,EAAKX,YAAYpJ,KAAK+J,IAC7BA,EAAI9C,EAAEgD,QAAQ,EAAK/H,WACZ,EAAKkH,YAAYpJ,KAAK+J,IAC7BA,EAAI9C,EAAEiD,IAAI,EAAKhI,WACR,EAAKkH,YAAYpJ,KAAK+J,IAC7BA,EAAI9C,EAAEkD,UAAU,EAAKjI,WACd,EAAKkH,YAAYpJ,KAAK+J,MAEjCnK,KAAKoJ,OAAO7H,SAAQ,SAACuH,GAAD,OAAOA,EAAE0B,qBAAqB,EAAK9J,MAAO,EAAK4B,YACnE2H,EAAQjK,KAAK2J,OAAOpI,SAAQ,SAAC8F,GACzBA,EAAEoD,iBAAiB,EAAKnI,YAE5BtC,KAAK0K,2BApFb,gCAuFQ,IACMC,GADW3K,KAAK2J,MAAMpD,QAAO,SAACqE,EAAKvD,GAAN,OAAYuD,EAAIvD,EAAEpI,OAAM,GAAKe,KAAK+H,cAAcxB,QAAO,SAACqE,EAAKC,GAAN,OAAYD,EAAMC,EAAE5L,OAAM,IACzF,IACrB6L,EAAyB/I,KAAKgJ,MAAgB,EAAVJ,GAC1C,GAAIG,EAAyB,EAAE,CAC3B,IAAME,EAAUhL,KAAK2J,MAAMpD,QAAO,SAAC0E,EAAmC5D,GAKlE,OAJIA,EAAEpI,KAAOgM,EAAIzE,MACbyE,EAAIC,OAAS7D,EACb4D,EAAIzE,IAAMa,EAAEpI,MAETgM,IACR,CAACzE,IAAK,IACLwE,EAAQE,SACRF,EAAQE,OAAOjM,MAAQ6L,MAnGvC,4CAwGQ9K,KAAKwJ,YAAc,GACnBxJ,KAAKoJ,OAAO7H,SAAQ,SAACuH,GACjBA,EAAEqC,oBAAsB,OA1GpC,iCA6GehH,EAAiB9F,EAAc+M,GACtC,IAAMxG,EAAU,IAAIZ,EACpBY,EAAQvG,KAAOA,EACfuG,EAAQT,KAAOA,EACfS,EAAQV,eAAiBkH,EACzBpL,KAAKU,MAAMqH,cAAc3H,KAAKwE,KAlHtC,4BAgBQ,OAAO5E,KAAKoJ,OAAO7C,QAAO,SAAC8E,EAAMvC,GAC7B,OAAOuC,EAAKC,OAAOxC,EAAEa,SACtB,MAlBX,sCAqBQ,OAAO3J,KAAKoJ,OAAO7C,QAAO,SAAC8E,EAAMvC,GAC7B,OAAOuC,EAAKC,OAAOxC,EAAEyC,mBACtB,MAvBX,oCA0BQ,OAAOvL,KAAKqJ,aAAa9C,QAAO,SAAC8E,EAAMG,GACnC,OAAOH,EAAKC,OAAOE,EAAUzD,iBAC9B,QA5BX,KAqHA,SAASkC,EAAQwB,GAIb,IAHA,IAAIC,EAAUD,EAAMzE,OAGb0E,EAAU,GAAG,CAEhB,IAAIC,EAAQ5J,KAAKqF,MAAMrF,KAAKC,SAAW0J,GAMnCE,EAAOH,IAHXC,GAIAD,EAAMC,GAAWD,EAAME,GACvBF,EAAME,GAASC,EAGnB,OAAOH,EAeJ,IAwFKlL,EAxFCsL,EAAb,iDACWxN,KAAe,GAD1B,KAEWyN,IAAc,GAFzB,KAGWC,KAAe,GAH1B,KAIW9N,IAAc,EAJzB,KAWWsN,gBAA0B,GAXrC,KAYWS,OAAgB,GAZ3B,KAaWC,aAbX,OAcWd,oBAA8B,EAdzC,KAeWhL,kBAAgC,SAf3C,KAiBWS,iBAjBX,OAkBWsL,eAAoD,GAlB/D,+DAqBQ,IAAMC,EAAWlC,EAAQjK,KAAK2J,OAC9B,OAAIwC,EAASnF,OAAS,EACXmF,EAAS,GAET,OAzBnB,mCA4BiBhH,GAAgB,IAAD,OACxB,GAAIA,EAASlG,KAAO,EAAE,CAClB,IAAMsG,EAAQvF,KAAKwF,mBACfD,IACAA,EAAMtG,KAAOsG,EAAMtG,KAAOkG,EAASlG,KACnCkG,EAASlG,KAAO,GAGxBe,KAAKkM,eAAe3K,SAAQ,SAACgG,GAAD,OAAOA,EAAEpC,EAAU,QApCvD,gCAsCciH,GAAe,IAAD,IAChB1E,EAAO2E,EAAarM,KAAMA,KAAKuL,gBAAgBvE,QACnDU,EAAKnJ,UAAY6N,EAAO7N,UACxBmJ,EAAK3I,IAAMgD,KAAKC,UAAY,GAAKoK,EAAOrN,IAAMP,EAAU,CAAC,MAAO,SAAU,UAAW,YACrFkJ,EAAKzI,KAAOmN,EAAOnN,KAAO,EAC1BmN,EAAOnN,MAAQ,EACXe,KAAKY,cACL8G,EAAKtJ,IAAM,CAACV,KAAI,UAAEsC,KAAKY,mBAAP,aAAE,EAAkBlD,KAAME,OAAM,UAAEoC,KAAKY,mBAAP,aAAE,EAAkBhD,SACxEoC,KAAKuL,gBAAgBnL,KAAKsH,KA9ClC,2CAgDyBhH,EAAc4B,GAAkB,IAAD,OAC5CtC,KAAKiM,SACLjM,KAAK2J,MAAMpI,SAAQ,SAAC8F,GAChB,IAAMzD,EAAWyD,EAAEiF,YAAYhK,GAC/B5B,EAAM4H,iBAAmB1E,EACzB,EAAKuH,qBAAuBvH,OArD5C,gCAyDctB,EAAkBzC,GACxB,IAAMiJ,EAAI9I,KAAK2J,MAAMpD,QAAO,SAACgG,EAA2D7E,GACpF,OAAOA,EAAKnJ,WACR,IAAK,SAAUgO,EAAMC,SAAS,MAC9B,IAAK,SAAUD,EAAME,SAAS,MAC9B,IAAK,WAAYF,EAAMG,WAE3B,OAAOH,IACR,CAACC,OAAQ,EAAGC,OAAQ,EAAGC,SAAU,IAChC5D,EAAE0D,OAAS1D,EAAE2D,QAAU3D,EAAE0D,OAAS1D,EAAE4D,SACpC1M,KAAKG,kBAAoB,SAClB2I,EAAE2D,OAAS3D,EAAE0D,QAAU1D,EAAE2D,OAAS3D,EAAE4D,SAC3C1M,KAAKG,kBAAoB,SAEzBH,KAAKG,kBAAoB,aAvErC,4BAMQ,OAAOH,KAAKuL,gBAAgBzE,QAAO,SAACS,GAAD,OAAOA,EAAEpJ,UANpD,aAQqBwL,GACb,KAAM,2BATd,KAkGO,SAAS9I,EAAa4K,GAYzB,OAAyB,IAXF1J,KAAKgB,IACxB,EACAhB,KAAKyE,KACA,EACDiF,EAAMlF,QAAO,SAACqE,EAAK+B,GAEf,OADA/B,GAAO+B,EAAOrM,MAEf,M,SAlBHC,O,4BAAAA,I,2BAAAA,I,0BAAAA,M,KAyBL,IAAMR,EAAqF,CAC9F,QAAW,CAACM,OAAQ,WAAYC,IAAKC,EAAYC,WACjD,QAAW,CAACH,OAAQ,UAAWC,IAAKC,EAAYqM,YAChD,UAAa,CAACvM,OAAQ,YAAaC,IAAKC,EAAYsM,UACpD,KAAQ,CAACxM,OAAQ,OAAQC,IAAKC,EAAYC,WAC1C,QAAW,CAACH,OAAQ,UAAWC,IAAKC,EAAYqM,YAChD,MAAS,CAACvM,OAAQ,UAAWC,IAAKC,EAAYsM,UAC9C,OAAU,CAACxM,OAAQ,SAAUC,IAAKC,EAAYC,WAC9C,MAAS,CAACH,OAAQ,QAASC,IAAKC,EAAYqM,YAC5C,QAAW,CAACvM,OAAQ,UAAWC,IAAKC,EAAYsM,WAG7C,SAAS3L,EAAUnC,GACtB,OAAOA,GACH,IAAK,UAAW,MAAO,UACvB,IAAK,MAAO,MAAO,WACnB,IAAK,cAAe,MAAO,MAC3B,QAAS,IAAK,SAAU,MAAO,QH1ShC,SAAS+N,EAAe9F,GAC3B,OATG,SAAyBjE,EAAayD,GACzC,IAAMuG,EAAe,IAAIC,YAAY,GACrCC,OAAOC,OAAOC,gBAAgBJ,GAC9B,IAAMK,EAAeL,EAAa,GAAb,WAGrB,OAFAhK,EAAMhB,KAAKsL,KAAKtK,GAChByD,EAAMzE,KAAKqF,MAAMZ,GACVzE,KAAKqF,MAAMgG,GAAgB5G,EAAMzD,EAAM,IAAMA,EAG7CuK,CAAgB,EAAGtG,EAAO,GAE9B,SAASxI,EAAa+O,GAEzB,GAAW,GADCA,EAAQvG,OAEhB,OAAOuG,EAAQ,GAEnB,IAAMpG,EAAI2F,EAAeS,EAAQvG,QAEjC,OADAwG,QAAQC,IAAItG,GACLoG,EAAQpG,GAsBZ,SAASuG,IACZ,IAAMjQ,EAAQ,IAAI0L,EAClB1L,EAAMiD,MAAQ,IAAImH,EAClBpK,EAAM4L,aAAajJ,KAAK3C,EAAMiD,OAC9B,IAAK,IAAIyG,EAAI,EAAGA,EAAI,EAAGA,IAKnB,GAJA1J,EAAM2L,OAAOhJ,KAAKuN,EAAalQ,EAAM2L,OAAOpC,SAC5CvJ,EAAM2L,OAAOjC,GAAG+E,eAAe9L,KAAK3C,EAAM6E,QAAQ4C,WAClDzH,EAAM2L,OAAOjC,GAAGvG,YAAcnD,EAAME,KAEhCwJ,EAAI,EACS1J,EAAM2L,OAAOjC,GAYlC,OARA1J,EAAM6E,QAAQ0C,oBAAoB/E,KAAOxC,EAAMkM,MAAM3C,OACrDvJ,EAAM6E,QAAQ0C,oBAAoBrG,QAAUlB,EAAMkM,MAAM3C,OACxDvJ,EAAM6E,QAAQ0C,oBAAoBF,SAAWrH,EAAMkM,MAAM3C,OAEzDvJ,EAAMmQ,OACNnQ,EAAMmQ,OACNnQ,EAAMmQ,OACNnQ,EAAMmQ,OACCnQ,EAUJ,SAASkQ,EAAaE,GACzB,IAAIC,EAAU,IAAIjC,EAClBiC,EAAQ7P,IAAM4P,EACdC,EAAQzP,KAAOG,EAAU,CAAC,OAAQ,OAAQ,QAAS,OAAQ,SAAU,SAAU,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACnHsP,EAAQzP,MAAQG,EAAU,CAAC,SAAU,SAAU,OAAQ,OAAQ,OAAQ,QAAS,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,QAAS,OAAQ,MAAO,SAAU,OAAQ,OAAQ,QAAS,QAAS,QAAS,OAAQ,KAAM,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,QAC1QsP,EAAQzP,MAAQG,EAAU,CAAC,SAAU,WAAY,QAAS,OAAQ,OAAQ,OAAQ,QAAS,QAAS,OAAQ,SAAU,MAAO,QAAS,SAAU,OAAQ,QAAS,SAAU,OAAQ,OAAQ,UAAW,MAAO,OAAQ,UAAW,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,MAAO,UAG1R,KAAMsP,EAAQvC,gBAAgBvE,OADP,GAEnB8G,EAAQvC,gBAAgBnL,KACpBiM,EAAayB,EAASA,EAAQvC,gBAAgBvE,SAItD,IADA,IAAM+G,EAAahM,KAAKqF,MAAO4G,IAAsBjM,KAAKqF,MANnC,EAMyCrF,KAAKC,SAA4B,IACxFmF,EAAI,EAAGA,EAAI4G,EAAY5G,IAC5B2G,EAAQ9B,OAAO5L,KAAK,CAChB6N,KAAMlM,KAAKqF,MAAsB,GAAhBrF,KAAKC,UACtBkM,IAAKnM,KAAKqF,MAAsB,GAAhBrF,KAAKC,YAI7B,OAAO8L,EAEJ,SAASzB,EAAa/N,EAAY6P,GACrC,IAAIC,EAAU,IAAIpQ,EAElBoQ,EAAQnQ,IAAMkQ,EACdC,EAAQlQ,QAAUI,EAAKL,IACvBmQ,EAAQ9P,KAAOA,EACf8P,EAAQ/P,KAAOG,EAAU,CAAC,QAAS,QAAS,SAAU,OAAQ,OAAQ,OAAQ,YAAa,QAAS,OAAQ,SAAU,UAAW,MAAO,WAAa,IACrJ4P,EAAQ/P,MAAQG,EAAU,CAAC,OAAQ,OAAQ,SAAU,MAAO,OAAQ,OAAQ,OAAQ,MAAO,QAAS,QAAS,UAC7G4P,EAAQ/P,MAAQG,EAAU,CAAC,QAAS,OAAQ,MAAO,MAAO,OAAQ,OAAQ,OAAQ,UAClF4P,EAAQvP,UAhFDL,EAAU,CAAC,QAAS,QAiF3B4P,EAAQtP,OApFDN,EAAU,CAAC,OAAQ,SAqF1B4P,EAAQpP,MA5EDR,EAAU,CAAC,OAAO,QAAQ,QAAS,YA6E1C,IAAM8B,EAAM6N,EAAoB,EAMhC,OALAC,EAAQrP,IAAa,GAAPuB,EAAW,SAAkB,GAAPA,EAAW,UAAY,MAE3D8N,EAAQnP,KA9EL,SAAsBF,GACzB,IAAIsP,EAAO,EAAItM,KAAKqF,MAAsB,EAAhBrF,KAAKC,UAC/B,OAAOjD,GACH,IAAK,MAAO,OAAOsP,EAAK,EACxB,QAAS,OAAOA,GA0ELC,CAAaF,EAAQrP,KACpCqP,EAAQ1P,cAAgB,EAEjB0P,EAGJ,IMhHMG,EAAb,kDACI,WAAYC,GAAiB,IAAD,8BACxB,cAAMA,IACDC,MAAQ,CACTC,MAAM,GAHc,EADhC,wDAOgB,IAAD,OACP,OAAI1O,KAAKwO,MAAMG,gBACJ,KAEA,4BAAQ5C,KAAK,SAAS6C,UAAU,OAAOC,QAAS,kBAAM,EAAKL,MAAMK,YAAa7O,KAAKwO,MAAMM,iBAAmB,UAX/H,+BAcQ,OAAK9O,KAAKwO,MAAME,KAIhB,yBAAKE,UAAU,SACV5O,KAAKwO,MAAMO,SACX/O,KAAKgP,aALH,SAff,GAA2BC,IAAMC,WCHpBC,EAAb,kDAMI,WAAYX,GAAa,IAAD,8BACpB,cAAMA,IACDC,MAAQ,GAFO,EAN5B,qDAYQ,OAAIzO,KAAKwO,MAAMO,SACJ,2BAAI/O,KAAKwO,MAAMO,UAEf,OAfnB,+BAkBa,IAAD,OACEK,EAAOpP,KAAKwO,MAAM7E,MAAM7C,QAAO,SAAAO,GAAC,OAAI,EAAKmH,MAAMa,KAAKhI,IAAM,EAAKmH,MAAMY,QAAMpI,OAC3EsI,EAAa,CACfC,MAAOxN,KAAKqF,MAAOgI,EAAOpP,KAAKwO,MAAM7E,MAAM3C,OAAQ,KAAK,KAEtDwI,EAAOxP,KAAKwO,MAAM7E,MAAM7C,QAAO,SAAAO,GAAC,OAAI,EAAKmH,MAAMa,KAAKhI,IAAM,EAAKmH,MAAMiB,YAAUzI,OAC/E0I,EAAa,CACfH,MAAOxN,KAAKqF,MAAOoI,EAAOxP,KAAKwO,MAAM7E,MAAM3C,OAAQ,KAAK,KAE5D,OACA,yBAAK4H,UAAW5O,KAAKwO,MAAMI,WACtB5O,KAAK2P,SAEN,yBAAKf,UAAU,OACX,yBAAKA,UAAU,iBAAiBgB,MAAON,GACjCF,EAAO,EAAP,UAAcA,EAAd,YAAsBS,GAAU7P,KAAKwO,MAAMY,OAAS,IAE1D,yBAAKR,UAAU,qBAAqBgB,MAAOF,GACtCF,EAAO,EAAIA,EAAO,UApCvC,GAAiCP,IAAMC,WCDhC,SAASY,EAAanG,GACzB,OAAOoG,EAAQpG,EAAO,OAAgB,SAACtC,GAAD,OAAOA,EAAEvI,UAE5C,SAASkR,EAAgBrG,GAC5B,OAAOoG,EAAQpG,EAAO,SAAkB,SAACtC,GAAD,OAAOA,EAAExI,aAK9C,SAASkR,EAAQpG,EAAesG,EAAeC,GAClD,IAAMvP,EAAS,CAAEwP,IAAK,EAAGjF,OAAQ+E,GAC3BG,EAAMzG,EAAMpD,QAAO,SAAC8J,EAAY3I,GAClC,IAAM4I,EAAQJ,EAAYxI,GAG1B,OAFoB,MAAhB2I,EAAMC,GAAkBD,EAAMC,GAAS,EACpCD,EAAMC,KACND,IACR,IAQH,OAPAE,OAAOC,KAAKJ,GAAK7O,SAAQ,SAACkP,GAClBL,EAAIK,GAAS9P,EAAOwP,MACpBxP,EAAOwP,IAAMC,EAAIK,GACjB9P,EAAOuK,OAASuF,MAGxB9P,EAAOwP,KAAOxG,EAAM3C,OACbrG,ECfJ,IAAM+P,EAAb,kDACI,WAAYlC,GAAa,IAAD,8BACpB,cAAMA,IACDC,MAAQ,GAFO,EAD5B,iDAOQ,OAAIzO,KAAKwO,MAAMlQ,KACP0B,KAAKwO,MAAMlQ,KAAK2N,QACT,yDACY,6BADZ,IAEDjM,KAAKwO,MAAMlQ,KAAK6M,oBAAoBwF,QAAQ,GAF3C,wBAKJ,yBAAK/B,UAAU,eAClB,4BAAQ7C,KAAK,SAAS6C,UAAU,aAAhC,+BAES,6BACT,+EAGD,OArBf,+BAuBa,IAAD,OACAe,EAAS,KACT3P,KAAKwO,MAAMlQ,OACXqR,EAAS,6BAAK,2BAAI3P,KAAKwO,MAAMlQ,KAAKD,MAC9B,4BAAQ0N,KAAK,SAAS6C,UAAU,SAASC,QAAS,kBAAM,EAAKL,MAAMoC,cAAnE,YAGR,IDjCoBjH,ECiCdkH,EAAY7Q,KAAKwO,MAAM7E,MAAMpD,QAAO,SAACqE,EAAKrD,GAAN,OAAYqD,EAAIrD,EAAEpI,gBAAe,IAAMa,KAAKwO,MAAM7E,MAAM3C,QAAU,GACtG8J,EAAW9Q,KAAKwO,MAAM7E,MAAMpD,QAAO,SAACqE,EAAKrD,GAAN,OAAYqD,EAAIrD,EAAEtI,OAAM,IAAMe,KAAKwO,MAAM7E,MAAM3C,QAAU,GAC5F+J,EAAe/Q,KAAKwO,MAAM7E,MAAMpD,QAAO,SAACqE,EAAKrD,GAAN,OAAYqD,EAAIrD,EAAElI,qBAAoB,IAAMW,KAAKwO,MAAM7E,MAAM3C,QAAU,GACpH,OACA,6BACK2I,EACD,yBAAKf,UAAU,UAAS,4CACxB,6BACI,yCADJ,OAEI,8BAAO5O,KAAKwO,MAAM7E,MAAM3C,SAE5B,kBAAC,EAAD,CAAagK,QD5CGrH,EC4CiB3J,KAAKwO,MAAM7E,MD3C7CoG,EAAQpG,EAAO,UAAmB,SAACtC,GAAD,OAAOA,EAAE9I,eC2C1C,aACA,yBAAKqQ,UAAU,UAAS,yCACxB,kBAAC,EAAD,CAAajF,MAAO3J,KAAKwO,MAAM7E,MAAO0F,KAAM,SAAChI,GAAD,OAAOA,EAAEpH,MAAMmP,KAAK,SAASK,SAAS,WAAlF,iBACA,kBAAC,EAAD,CAAa9F,MAAO3J,KAAKwO,MAAM7E,MAAO0F,KAAM,SAAChI,GAAD,OAAOA,EAAE1I,SAASyQ,KAAK,UAAUK,SAAS,aAAtF,WACA,kBAAC,EAAD,CAAa9F,MAAO3J,KAAKwO,MAAM7E,MAAO0F,KAAM,SAAChI,GAAD,OAAOA,EAAEnH,QAAQkP,KAAK,OAAOK,SAAS,SAAlF,cACA,yCAZJ,KAYwBqB,EAASH,QAAQ,GAZzC,QAaI,6CAbJ,IAa2B5O,KAAKgJ,MAAM8F,GAbtC,IAcI,yBAAKjC,UAAU,UAAS,0CAExB,kBAAC,EAAD,CAAaoC,OAAQhB,EAAgBhQ,KAAKwO,MAAM7E,QAAhD,aACA,kBAAC,EAAD,CAAaqH,OAAQlB,EAAa9P,KAAKwO,MAAM7E,QAA7C,UACA,yBAAKiF,UAAU,UAAS,qCAEpB5O,KAAKiR,KAET,6BACI,uCADJ,OAEI,8BAAOF,EAAaJ,QAAQ,GAA5B,WA1DhB,GAAmC1B,IAAMC,WAiE5BgC,EAAb,kDACI,WAAY1C,GAAa,IAAD,8BACpB,cAAMA,IACDC,MAAQ,GAFO,EAD5B,qDAOQ,IAAI0C,EAAM,UACNnR,KAAKwO,MAAMwC,OAAOb,KAAO,MACzBgB,EAAM,SACNnR,KAAKwO,MAAMwC,OAAOb,KAAO,KACzBgB,EAAM,WACV,IAAMxG,EAAU5I,KAAKqF,MAA8B,IAAxBpH,KAAKwO,MAAMwC,OAAOb,KACvCP,EAAQ,CACVL,MAAO5E,EAAQ,KAEnB,OACA,6BACI,2BACM3K,KAAKwO,MAAMO,UAFrB,WAII,8BAAOoC,EAAP,IAAatB,GAAU7P,KAAKwO,MAAMwC,OAAO9F,SACzC,yBAAK0D,UAAU,OACX,yBAAKA,UAAU,YAAYgB,MAAOA,GAC7BjF,EADL,WAvBhB,GAAiCsE,IAAMC,WCrE1BkC,EAAb,kDACI,WAAY5C,GAAuB,IAAD,8BAChC,cAAMA,IAQR6C,aATkC,IAUlCC,kBAVkC,IAWlCC,iBAXkC,EAEhC,EAAKF,QAAU,KACf,EAAKC,aAAgC,GAAhBvP,KAAKC,SAAiB,EAAKwM,MAAM9G,KAAKzJ,IAC3D,EAAKsT,YAAc,EAAqB,EAAhBxP,KAAKC,SAAgB,EAAKwM,MAAM9G,KAAKzJ,IAC7D,EAAKwQ,MAAQ,CACX+C,QAAQ,GANsB,EADtC,gEAcMxR,KAAKyR,gBAdX,oCAgBkB,IAAD,OACXzR,KAAK0R,SAAS,CAACF,QAAQ,IACvBxR,KAAKqR,QAAUpE,OAAO0E,YACpB,kBAAM,EAAKC,eACV,IAAO5R,KAAKuR,eApBrB,6CAwBSvR,KAAKqR,SACNpE,OAAO4E,cAAc7R,KAAKqR,WAzBlC,mCA2BiB,IAAD,OACVrR,KAAK0R,SAAS,CAACF,QAAQ,IACvBxR,KAAKqR,QAAUpE,OAAO0E,YACpB,kBAAM,EAAKF,gBACX,OA/BR,gCAmCQ,GAAIzR,KAAKyO,MAAM+C,OAAQ,CACnB,IAAM3P,EAAO7B,KAAKwO,MAAM9G,KAAKoK,QAAQ9R,KAAKwO,MAAM7M,cAChD,GAAIE,EACA,OAAO,0BAAM+M,UAAW/M,EAAKD,IAAM,WAAY,QAASC,EAAKA,MAGrE,OAAO,OAzCf,+BA2Cc,IAAD,OACHkQ,EAAU/R,KAAKwO,MAAM9G,KAAK3I,IAAM,IAAMiB,KAAKwO,MAAM9G,KAAKnJ,UAC1DwT,GAAW/R,KAAKyO,MAAM+C,SAAWxR,KAAKwO,MAAM9G,KAAKvJ,MAAQ,UAAY,GACrE,IAAI6T,EAAK,UAAMhS,KAAKwO,MAAM9G,KAAKzH,KAAtB,YAA8BD,KAAKwO,MAAM9G,KAAK/I,QAA9C,YAAyDqB,KAAKwO,MAAM9G,KAAKxH,OAAzE,YAAmFF,KAAKwO,MAAM9G,KAAK7I,UAAnG,YAAgHmB,KAAKwO,MAAM9G,KAAK5I,OAAhI,aAA2IkB,KAAKwO,MAAM9G,KAAKzI,MACpK,OACE,0BAAM2P,UAAWmD,EAAQ,iCACvBnC,MAAO,CAACqC,eAAgB,IAAIjS,KAAKsR,aAAa,KAAMU,MAAOA,EAC3DnD,QAAS,SAAC1E,GAAOA,EAAE+H,kBAAmB,EAAK1D,MAAMK,YAEhD7O,KAAKwO,MAAM9G,KAAKyK,UAJnB,IAI+BnS,KAAK8R,eApD5C,GAAkC7C,IAAMC,WCG3BkD,EAAb,kDACI,WAAY5D,GAAqB,IAAD,8BAC9B,cAAMA,IACDC,MAAQ,CACX4D,KAAM,KACN/T,KAAM,KACNgU,aAAc,MALc,EADpC,qDASc,IAAD,OACD3I,EAAQ3J,KAAKwO,MAAMlQ,KAAKqL,MAAM4I,KAAI,SAAClL,GACvC,OACE,kBAAC,EAAD,CAAcK,KAAML,EAAGpJ,IAAKoJ,EAAEpJ,IAAK0D,aAAc,EAAK6M,MAAM7M,aAAckN,QAAS,kBAAM,EAAKL,MAAMgE,YAAYnL,SAG9GoL,EAASzS,KAAKwO,MAAMlQ,KAAKiN,gBAAgBzE,QAAO,SAACS,GAAD,OAAQA,EAAEpJ,SAAOoU,KAAI,SAAClL,EAASF,GACnF,OACE,0BAAMlJ,IAAKkJ,EAAGyH,UAAU,OAAOgB,MAAO,CAAC3B,KAAS,GAAF9G,EAAM,OAApD,mBAGE6E,EAAShM,KAAKwO,MAAMlQ,KAAK0N,OAAOuG,KAAI,SAACG,EAAQvL,GACjD,IAAMyI,EAAQ,CACV3B,KAAMyE,EAAEzE,KAAK,IACbC,IAAKwE,EAAExE,IAAI,KAEf,OACE,0BAAMjQ,IAAKkJ,EAAGyI,MAAOA,EAAOhB,UAAU,SAAtC,mBAGJ,OACE,yBAAKA,UAAU,OAAOC,QAAS,kBAAM,EAAKL,MAAMK,YAC7C4D,EACAzG,EACArC,EACD,0BAAMiF,UAAU,cAAc5O,KAAKwO,MAAM6D,KAAKhU,MAC9C,yBAAKsU,IAAK3S,KAAKwO,MAAM6D,KAAKvG,IAAK8G,IAAK5S,KAAKwO,MAAM6D,KAAKtG,YAnC9D,GAA+BkD,IAAMC,WCNrC,SAAS2D,EAAOC,GACd,GAAoB,IAAjBA,EAAO9L,OAAa,OAAO,EAE9B8L,EAAO1M,MAAK,SAASwB,EAAEP,GACrB,OAAOO,EAAEP,KAGX,IAAI0L,EAAOhR,KAAKqF,MAAM0L,EAAO9L,OAAS,GAEtC,OAAI8L,EAAO9L,OAAS,EACX8L,EAAOC,IAERD,EAAOC,EAAO,GAAKD,EAAOC,IAAS,EAGtC,IAAMC,EAAb,kDACI,WAAYxE,GAAwB,IAAD,8BACjC,cAAMA,IACDC,MAAQ,CACX+C,QAAQ,GAHuB,EADvC,qDAQM,IAAI7H,EAAQ3J,KAAKwO,MAAM/Q,MAAMkM,MACvBsJ,EAAcJ,EAAOlJ,EAAM4I,KAAI,SAAAhL,GAAC,OAAIA,EAAE7I,kBACtCwU,EAAgBL,EAAOlJ,EAAM4I,KAAI,SAAAhL,GAAC,OAAIA,EAAE3I,oBAAkB+R,QAAQ,GAClEwC,EAAexJ,EAAMpD,QAAO,SAACqE,EAAKwI,GAAN,OAAYxI,EAAMwI,EAAEnU,OAAM,GACtDoU,EAAaF,GAAgBxJ,EAAM3C,QAAU,GAC7CsM,EAAgBT,EAAOlJ,EAAM4I,KAAI,SAAAhL,GAAC,OAAIA,EAAEtI,SACxCsU,EAAc5J,EAAM7C,QAAO,SAAAS,GAAC,OAAIA,EAAEtI,KAAO,KAAG+H,OAC5CwM,EAAgBzR,KAAKyE,IAAI6M,EAAYC,GACrCG,EAAU9J,EAAM7C,QAAO,SAAAS,GAAC,OAAIA,EAAEtI,KAAOuU,KACrCE,EAAsBD,EAAQzM,QAAU2C,EAAM3C,QAAU,GAAM,IAC9D2M,EAAqBF,EAAQlN,QAAO,SAACqN,EAAGrM,GAAJ,OAAUqM,EAAErM,EAAEtI,OAAM,GAAKkU,EAAc,IAC3EU,EAAOlK,EAAMpD,QAAO,SAAC0E,EAAK5D,GAE9B,OADA4D,EAAI5D,EAAEtI,MAAQkM,EAAI5D,EAAEtI,MAAQ,GAAG,EACxBkM,IACN,IACG6I,IAAgBD,EAAKE,SAAW,GAAKpK,EAAM3C,OAAQ,KAAK2J,QAAQ,GACtE,SAASqD,EAAQ/I,EAAmElE,GAKlF,OAJAkE,EAAIvE,QAAUK,EAAEb,SAChB+E,EAAIlF,OAASgB,EAAEhB,MACfkF,EAAIsB,QACJtB,EAAIkF,IAAMlF,EAAIlF,MAAQkF,EAAIsB,MACnBtB,EAET,IAAMhL,EAAOD,KAAKwO,MAAM/Q,MAAM6E,QAAQoC,OAAOkC,SAAhC,KAAiDL,OAAOyN,EAAS,CAACtN,OAAQ,EAAGX,MAAO,EAAGoK,IAAK,EAAG5D,MAAO,IAC7GvJ,EAAOhD,KAAKwO,MAAM/Q,MAAM6E,QAAQoC,OAAOkC,SAAhC,SAAqDL,OAAOyN,EAAS,CAACtN,OAAQ,EAAGX,MAAO,EAAGoK,IAAK,EAAG5D,MAAO,IACjHP,EAAShM,KAAKwO,MAAM/Q,MAAM6E,QAAQoC,OAAOkC,SAAhC,QAAoDL,OAAOyN,EAAS,CAACtN,OAAQ,EAAGX,MAAO,EAAGoK,IAAK,EAAG5D,MAAO,IACxH,OACE,yBAAKqC,UAAU,UACb,gDACA,yBAAKA,UAAU,SACb,6BACE,8DADF,WAC4CqE,EAD5C,UAC+D,6BAC7D,kBAAC,EAAD,CAAatJ,MAAO3J,KAAKwO,MAAM/Q,MAAMkM,MAAO0F,KAAM,SAAChI,GAAD,OAAOA,EAAEpH,MAAMmP,KAAK,SAASK,SAAS,UAAUb,UAAU,QAF9G,WAGW3O,EAAKyG,OAHhB,uBAG4CzG,EAAKkQ,IAAIQ,QAAQ,GAH7D,IAGiE,6BAHjE,uBAIuB3Q,KAAKwO,MAAM/Q,MAAM6E,QAAQuC,0BAA0B5E,KAJ1E,UAMA,6BACE,2DADF,WACyCiT,EADzC,IACwD,6BACtD,kBAAC,EAAD,CAAavJ,MAAO3J,KAAKwO,MAAM/Q,MAAMkM,MAAO0F,KAAM,SAAChI,GAAD,OAAOA,EAAEnH,QAAQkP,KAAK,OAAOK,SAAS,QAAQb,UAAU,QAF5G,WAGW5L,EAAK0D,OAHhB,4BAGiD1D,EAAKmN,IAAIQ,QAAQ,GAHlE,KAGuE,6BAHvE,uBAIuB3Q,KAAKwO,MAAM/Q,MAAM6E,QAAQuC,0BAA0BC,SAJ1E,gBAOF,yBAAK8J,UAAU,SACb,6BACE,wDADF,IAC8B,6BAC5B,kBAAC,EAAD,CAAajF,MAAO3J,KAAKwO,MAAM/Q,MAAMkM,MAAO0F,KAAM,SAAChI,GAAD,OAAOA,EAAE1I,SAASyQ,KAAK,UAAUK,SAAS,YAAYb,UAAU,QAFpH,WAGW5C,EAAOtF,OAHlB,uBAG8CsF,EAAOmE,IAAIQ,QAAQ,GAHjE,MAGuE,6BAHvE,uBAIuB3Q,KAAKwO,MAAM/Q,MAAM6E,QAAQuC,0BAA0BlG,QAJ1E,WAOF,+CACA,yBAAKiQ,UAAU,SACb,6BACE,uDADF,sBACgDuE,EAAaxC,QAAQ,GAAG,6BACrE4C,EAFH,kDAEmEvT,KAAKwO,MAAM/Q,MAAM6E,QAAQ7B,kBAAkBkQ,QAAQ,GAFtH,IAE0H,6BAF1H,YAGY2C,EAAc3C,QAAQ,GAHlC,cAGiD0C,EAAW1C,QAAQ,GAHpE,IAGwE,6BAHxE,OAIO+C,EAAmB/C,QAAQ,GAJlC,kBAIqDgD,EAAkBhD,QAAQ,GAJ/E,mBAMA,8BACE,gDADF,IACiCmD,EADjC,MACgDD,EAAKE,QADrD,IAC8D,6BAC5D,8CACA,wBAAInF,UAAU,SACZ,4BAAKiF,EAAKI,OAAV,YACA,4BAAKJ,EAAKK,QAAV,aACA,4BAAKL,EAAKM,IAAV,oBAzEhB,GAAmClF,IAAMC,WCL5BkF,G,MAAb,kDACI,WAAY5F,GAAmB,IAAD,8BAC1B,cAAMA,IAQV6F,cAAgB,SAACC,GACf,EAAK5C,SAAS,CAAC6C,oBAAqBD,EAAME,OAAOlE,SAVrB,EAY9BmE,oBAAsB,SAACH,GACrB,EAAK5C,SAAS,CAACgD,uBAAwBJ,EAAME,OAAOlE,SAbxB,EAe9BqE,eAAiB,WACT,EAAKlG,MAAM8F,qBACX,EAAK/F,MAAMmG,eAAe,EAAKlG,MAAM8F,oBAAqB,EAAK9F,MAAMmG,oBAAqB,EAAKnG,MAAMiG,uBAEzG,EAAKhD,SAAS,CAAC6C,oBAAqB,KAAM7F,MAAM,KAjBhD,EAAKD,MAAQ,CACTC,MAAM,EACN6F,oBAAqB,KACrBK,oBAAqB,eACrBF,sBAAuB,GAND,EADlC,oDAsBY,IAAD,OACH,OAAI1U,KAAKyO,MAAMC,KAEP,yBAAKE,UAAU,aACX,2BAAO7C,KAAK,OAAO1N,KAAK,OAAOiS,MAAOtQ,KAAKyO,MAAMmG,oBAAqBC,SAAU,SAACC,GAAD,OAAY,EAAKpD,SAAS,CAACkD,oBAAqBE,EAAON,OAAOlE,WAC9I,yBAAKuE,SAAU7U,KAAKqU,eAChB,+BACI,2BAAOtI,KAAK,QAAQ1N,KAAK,OAAOiS,MAAM,SAD1C,cAGA,+BACI,2BAAOvE,KAAK,QAAQ1N,KAAK,OAAOiS,MAAM,YAD1C,qBAGA,+BACI,2BAAOvE,KAAK,QAAQ1N,KAAK,OAAOiS,MAAM,aAD1C,iBAIJ,6BACI,kDAEI,2BAAOvE,KAAK,SAAS6D,MAAO,CAACL,MAAM,QAAUsF,SAAU7U,KAAKyU,oBAAqBnE,MAAM,IAAIvN,IAAI,IAAIyD,IAAI,QAE3G,4BAAQuF,KAAK,SAAS6C,UAAU,UAAUC,QAAS7O,KAAK2U,gBAAxD,mBAOL,OAlDnB,6BAsDQ,OAAO3U,KAAKwO,MAAM/Q,MAAMiD,MAAMqH,cAAcjB,QAAO,SAACS,GAAD,OAAOA,aAAavD,KAASuO,KAAI,SAACpL,GACjF,IAAMvC,EAAUuC,EAChB,OAAO,yBAAKlJ,IAAK2G,EAAQ3G,KAAlB,gBACA,2BAAI2G,EAAQvG,MADZ,cACiCuG,EAAQP,YADzC,eACkEO,EAAQT,KAD1E,KACkFS,EAAQN,UAD1F,IACsGM,EAAQT,KAD9G,SAC0HS,EAAQ3F,KAAK0R,QAAQ,GAD/I,eAxDnB,+BA6Dc,IAAD,OACL,OACI,6BACI,yBAAK/B,UAAU,aACX,uCACA,4BAAQ7C,KAAK,SAAS6C,UAAU,UAAUC,QAAS,kBAAM,EAAK6C,SAAS,CAAChD,MAAM,MAA9E,mCAEJ,qGACC1O,KAAKqL,OACLrL,KAAK+U,aAtEtB,GAAkC9F,IAAMC,YCR3B8F,EAAb,kDACI,WAAYxG,GAAa,IAAD,8BACpB,cAAMA,IACDC,MAAQ,GAFO,EAD5B,qDAOQ,IAAIwG,EAASjV,KAAKwO,MAAMyG,OAAO1C,KAAI,SAACpI,EAAGhD,GACnC,OAAO,yBAAKlJ,IAAKkJ,GACb,8BAAOgD,EAAEhH,MADN,OAEH,8BAAOgH,EAAE/G,aAQjB,OALiC,IAA7BpD,KAAKwO,MAAMyG,OAAOjO,SAClBiO,EAAS,CAAC,yBAAKhX,IAAK,GAChB,6DAIR,6BACI,6BACI,sCAEHgX,OAvBb,GAAiChG,IAAMC,WCoB1BgG,EAAb,kDACI,WAAY1G,GAAoB,IAAD,8BAC3B,cAAMA,IAIV2G,QAAU,WACF,EAAK3G,MAAM2G,QAAQ,EAAK3G,MAAM9G,QAC9B,EAAKgK,SAAS,CAAC0D,aAAc,iBAC7B,EAAKC,eARkB,EAW/BC,OAAS,WACL,EAAK9G,MAAM8G,OAAO,EAAK9G,MAAM9G,MAC7B,EAAKgK,SAAS,CAAC0D,aAAc,iBAC7B,EAAKC,cAdsB,EAgB/BE,QAAU,WACN,EAAK/G,MAAM+G,QAAQ,EAAK/G,MAAM9G,MAC9B,EAAKgK,SAAS,CAAC0D,aAAc,iBAC7B,EAAKC,cAjBL,EAAK5G,MAAQ,GAFc,EADnC,yDAsBiB,IAAD,OACRkD,YAAW,WACP,EAAKD,SAAS,CAAC0D,kBAAcI,MAC9B,OAzBX,iCA2Be1V,GACP,OAAOA,EAAKgH,QAAO,SAACsM,GAAD,OAAgB,GAATA,EAAE9S,OAAUiS,KAAI,SAAChL,EAAGJ,GAC1C,OAAO,wBAAIlJ,IAAKkJ,GACZ,wBAAIyH,UAAU,oBAAoBrH,EAAElH,QACpC,wBAAIuO,UAAU,SAAS7M,KAAKgJ,MAAc,IAARxD,EAAEjH,KAApC,WA/BhB,+BAmCa,IAAD,OACEyR,EAAU/R,KAAKwO,MAAM9G,KAAK3I,IAAM,IAAMiB,KAAKwO,MAAM9G,KAAKnJ,UACtDkF,EAASzD,KAAKwO,MAAM9G,KAAKhE,eAAe1D,KAAKwO,MAAMlM,SAAS,GAC5DmT,GAAuB,IAAThS,GAAckN,QAAQ,GAAK,6BACzC+E,EAAc1V,KAAKwO,MAAM9N,MAAM6H,UAAUvB,OAAS,EACxD,OACA,6BACI,6BACI,2BAAIhH,KAAKwO,MAAM9G,KAAKrJ,KAApB,OACA,qCACQ2B,KAAKwO,MAAMlQ,KAAKD,OAGxB,4BAAQ0N,KAAK,SAAS6C,UAAU,SAASC,QAAS,kBAAM,EAAKL,MAAMoC,cAAnE,WAEJ,yBAAKhC,UAAU,aACX,0BAAMA,UAAWmD,EAAQ,cAEWyD,IAA5BxV,KAAKyO,MAAM2G,aAA6BpV,KAAKwO,MAAM9G,KAAKyK,UAAYnS,KAAKyO,MAAM2G,eAI3F,2BAAOxG,UAAU,cAAa,+BAC1B,4BACI,4BACI,yCAEJ,4BACKiB,GAAU7P,KAAKwO,MAAM9G,KAAKnJ,aAGnC,4BACI,wBAAIoX,QAAS,EAAG/G,UAAU,UACtB,0CAGR,4BACI,4BACI,6CAEJ,4BACKiB,GAAU7P,KAAKwO,MAAM9G,KAAKzH,QAGnC,4BACI,4BACI,uCAEJ,4BACK4P,GAAU7P,KAAKwO,MAAM9G,KAAK/I,WAGnC,4BACI,4BACI,0CAEJ,4BACKkR,GAAU7P,KAAKwO,MAAM9G,KAAKxH,UAGnC,4BACI,4BACI,qCAEJ,gCACMF,KAAKwO,MAAM9G,KAAKzI,KAAK0R,QAAQ,KAGvC,4BACI,4BACI,yCAEJ,4BACK5O,KAAKgJ,MAAM/K,KAAKwO,MAAM9G,KAAKvI,eADhC,MAIHa,KAAK4V,WAAW5V,KAAKwO,MAAM9G,KAAK5G,sBAAsBd,KAAKwO,MAAMlM,QAAStC,KAAKwO,MAAMlQ,KAAM0B,KAAKwO,MAAM3O,MACvG,4BACI,4BACI,yCAEJ,4BACKgQ,GAAU7P,KAAKwO,MAAM9G,KAAK7I,aAGnC,4BACI,4BACI,qCAEJ,4BACKgR,GAAU7P,KAAKwO,MAAM9G,KAAK5I,UAGnC,4BACI,wBAAI6W,QAAS,EAAG/G,UAAU,UACtB,sCAGR,4BACI,4BACI,wCAEJ,4BACK7M,KAAKgJ,MAAM/K,KAAKwO,MAAM9G,KAAKrI,oBADhC,MAIHW,KAAK4V,WAAW5V,KAAKwO,MAAM9G,KAAK1G,sBAAsBhB,KAAKwO,MAAMlM,QAAStC,KAAKwO,MAAMlQ,KAAM0B,KAAKwO,MAAM3O,IAAKG,KAAKwO,MAAM9N,OAAOA,SAWlI,yBAAKkO,UAAU,eACX,4BAAQ7C,KAAK,SAAS8J,SAAUpS,EAAS,IAAMmL,UAAU,YAAYC,QAAS7O,KAAKmV,QAASnD,MAAOyD,GAAnG,iCACA,6BACA,+BAAO,0DAEX,yBAAK7G,UAAU,eACX,4BAAQ7C,KAAK,SAAS6C,UAAU,UAAUC,QAAS7O,KAAKsV,OAAQO,UAAW7V,KAAKwO,MAAM9G,KAAKoO,YACvF9D,MAAM,iEADV,kCAGA,4BAAQjG,KAAK,SAAS6C,UAAU,UAAUC,QAAS7O,KAAKuV,QAASM,UAAW7V,KAAKwO,MAAM9G,KAAKqO,aACxF/D,MAAM,kEADV,oCAIJ,yBAAKpD,UAAU,eACX,+BACK8G,EAAc1V,KAAKwO,MAAM9N,MAAM+H,gBADpC,OACyDiN,EADzD,+BAtKhB,GAA+BzG,IAAMC,WCKxB8G,EAAb,+KACqBC,GACb,OAAOA,EAAK5X,SAFpB,GAtBA,kDACI,WAAYmQ,GAAa,IAAD,8BACpB,cAAMA,IAKVqG,SAAW,SAAC1K,GACR,EAAKqE,MAAMqG,SAAS1K,EAAEqK,OAAOlE,QAL7B,EAAK7B,MAAQ,CACTxQ,IAAK,MAHW,EAD5B,sDAWc,IAAD,OACL,OAAO+B,KAAKwO,MAAM0H,QAAQ3D,KAAI,SAAC1H,GAC3B,OAAO,4BAAQyF,MAAOzF,EAAE5M,IAAKA,IAAK4M,EAAE5M,KAAM,EAAKkY,iBAAiBtL,SAb5E,+BAiBQ,OAAO,4BAAQgK,SAAU7U,KAAK6U,SAAUvE,MAAOtQ,KAAKyO,MAAMxQ,KACrD+B,KAAKkW,eAlBlB,GAA0CjH,IAAMC,YCSnCkH,EAAb,kDACI,WAAY5H,GAAa,IAAD,8BACpB,cAAMA,IA4CV6H,OAAS,SAAClM,GACN,EAAKuH,SAAS,CAACrT,KAAM8L,EAAEqK,OAAOlE,SA9CV,EAgDxBgG,SAAW,SAACnM,GACR,EAAKuH,SAAS,CAAC1J,OAAQmC,EAAEqK,OAAOlE,SAjDZ,EAmDxBiG,OAAS,SAACtY,GACN,EAAKyT,SAAS,CAACxT,SAAUD,KAlDzB,EAAKwQ,MAAQ,CACT5P,UAAW,KACX2X,MAAO,KACPnY,KAAM,kBACN2J,OAAQ,eACRyO,QAAS,WACTC,KAAM,cACNxY,QAAS,GATO,EAD5B,wDAagByY,GAAqB,IAAD,OAC5B3W,KAAK0R,SAAS,CAAC7S,UAAW8X,IAAM,WAC5B,EAAKC,uBAfjB,8BAkBYD,GAAkB,IAAD,OACrB3W,KAAK0R,SAAS,CAAC8E,MAAOG,IAAM,WACxB,EAAKC,uBApBjB,wCAwBqC,QAAzB5W,KAAKyO,MAAM5P,WAA4C,SAArBmB,KAAKyO,MAAM+H,MAC7CxW,KAAK0R,SAAS,CACVrT,KAAM,uBACN2J,OAAQ,qBACRyO,QAAS,UAAWC,KAAM,YACE,QAAzB1W,KAAKyO,MAAM5P,WAA4C,SAArBmB,KAAKyO,MAAM+H,MACpDxW,KAAK0R,SAAS,CACVrT,KAAM,sBACN2J,OAAQ,qBACRyO,QAAS,WAAYC,KAAM,oBACC,UAAzB1W,KAAKyO,MAAM5P,WAA8C,SAArBmB,KAAKyO,MAAM+H,MACtDxW,KAAK0R,SAAS,CACVrT,KAAM,6BACN2J,OAAQ,yBACRyO,QAAS,aAAcC,KAAM,wBACD,UAAzB1W,KAAKyO,MAAM5P,WAA8C,SAArBmB,KAAKyO,MAAM+H,OACtDxW,KAAK0R,SAAS,CACVrT,KAAM,wBACN2J,OAAQ,wBACRyO,QAAS,YAAaC,KAAM,mBA3C5C,+BAuDa,IAAD,OACJ,OAAO,6BACL,0DACA,yBAAK9H,UAAU,SACb,mEAEE,6BACE,+BACE,2BAAO7C,KAAK,QAAQ1N,KAAK,YAAYiS,MAAM,QAAQuG,QAAkC,UAAzB7W,KAAKyO,MAAM5P,UAAuBgW,SAAU,SAAC1K,GAAD,OAAO,EAAK2M,YAAY3M,EAAE4M,cAAczG,UADlJ,IAC+K,0CAFjL,qBAKE,+BACE,2BAAOvE,KAAK,QAAQ1N,KAAK,YAAYiS,MAAM,MAAMuG,QAAkC,QAAzB7W,KAAKyO,MAAM5P,UAAqBgW,SAAU,SAAC1K,GAAD,OAAO,EAAK2M,YAAY3M,EAAE4M,cAAczG,UAD9I,IAC0K,2CAR9K,uCAcA,kEAEE,6BACE,+BACE,2BAAOvE,KAAK,QAAQ1N,KAAK,QAAQiS,MAAM,OAAOuG,QAA8B,SAArB7W,KAAKyO,MAAM+H,MAAkB3B,SAAU,SAAC1K,GAAD,OAAO,EAAK6M,QAAQ7M,EAAE4M,cAAczG,UADpI,IAC6J,2CAF/J,qBAKE,+BACE,2BAAOvE,KAAK,QAAQ1N,KAAK,QAAQiS,MAAM,OAAOuG,QAA8B,SAArB7W,KAAKyO,MAAM+H,MAAkB3B,SAAU,SAAC1K,GAAD,OAAO,EAAK6M,QAAQ7M,EAAE4M,cAAczG,UADpI,IAC8J,4CARlK,wBAeF,6BACA,yBAAK1B,UAAU,SACb,oEACsC,2BAAI5O,KAAKyO,MAAMgI,UAErD,uEACyC,2BAAIzW,KAAKyO,MAAMiI,QAG1D,6BACA,yBAAK9H,UAAU,SACb,kDACoB,2BAAO7C,KAAK,OAAOuE,MAAOtQ,KAAKyO,MAAMpQ,KAAMwW,SAAU7U,KAAKqW,UAE9E,qDACuB,2BAAOtK,KAAK,OAAOuE,MAAOtQ,KAAKyO,MAAMzG,OAAQ6M,SAAU7U,KAAKsW,aAGrF,6BACA,yBAAK1H,UAAU,SACb,wDAC4B,kBAAC,EAAD,CAAcsH,QAASlW,KAAKwO,MAAMpF,OAAQyL,SAAU7U,KAAKuW,UAErF,+BAIF,4BAAQxK,KAAK,SAAS8J,SAAkC,MAAxB7V,KAAKyO,MAAM5P,WAAyC,MAApBmB,KAAKyO,MAAM+H,MAAe5H,UAAU,4BAA4BC,QAAS,kBAAM,EAAKL,MAAMyI,QAAQ,EAAKxI,SAAvK,aAA0LzO,KAAKyO,MAAMpQ,WAnH/M,GAAgC4Q,IAAMC,WCTzBgI,EAAb,kDACI,WAAY1I,GAAa,uCACfA,GAFd,qDAKQ,IACM2I,EADMnX,KAAKwO,MAAM/Q,MAAM2L,OAAOtC,QAAO,SAACS,GAAD,OAAoB,MAAbA,EAAE0E,WAC/BsG,KAAI,SAAChL,EAAGJ,GAAJ,OAAU,2BAAKA,EAAI,EAAI,KAAM,GAAKI,EAAElJ,SACvDqX,EAAc1V,KAAKwO,MAAM/Q,MAAMiD,MAAM6H,UAAUvB,OAAS,EAC9D,OAAO,6BACH,yBAAK4H,UAAU,SACf,6BACE,4BACG5O,KAAKwO,MAAM/Q,MAAMiD,MAAMrC,OAG5B,6BACE,wBAAIuQ,UAAU,gBACZ,0BAAMA,UAAU,iBACd,0BAAMA,UAAU,cAAhB,uBAIF,0BAAMA,UAAU,UACb5O,KAAKwO,MAAM/Q,MAAMiD,MAAMsH,QAE1B,0BAAM4G,UAAU,gBACd,0BAAMA,UAAU,cAAhB,0BAOR,yBAAKA,UAAU,YACZ5O,KAAKwO,MAAM/Q,MAAMiD,MAAMuH,kBAAkBsK,KAAI,SAAC6E,GAAD,OAAO5V,GAAO4V,OAE9D,yBAAKxI,UAAU,SACb,6BACI,wBAAIA,UAAU,SAAd,YACA,wEACJ,2BAAOA,UAAU,WAMb,+BACA,4BACI,wBAAIyI,QAAS,GAAb,WACA,6CAGA,sCAEJ,4BACI,qDACA,oCAEJ,4BACI,2CACA,oCAEJ,4BACI,wBAAIzI,UAAU,WAAWyI,QAAS,GAAlC,YACA,wBAAIzI,UAAU,YAAd,aAGA,wBAAIA,UAAU,YAAd,QAIJ,4BACI,0CAGA,oCAIJ,4BACI,wBAAIA,UAAU,WAAWyI,QAAS,GAAlC,WAA6C,6BAA7C,WACA,wBAAIzI,UAAU,YAAd,UAGA,wBAAIA,UAAU,YAAd,IACM5O,KAAKwO,MAAM/Q,MAAMiD,MAAM8H,eAAemI,QAAQ,KAGxD,4BACI,uCAGA,gCACM3Q,KAAKwO,MAAM/Q,MAAMiD,MAAM4H,gBAAgBqI,QAAQ,QAM7D,6BACI,wBAAI/B,UAAU,SAAd,gBACA,8EACA,6BACI,iDADJ,IACoCuI,GAEpC,wBAAIvI,UAAU,SAAd,cACA,kFACA,iDACsB5O,KAAKwO,MAAM/Q,MAAMiD,MAAM6H,UAAUvB,OADvD,8BAGA,6BACK0O,EAAc1V,KAAKwO,MAAM/Q,MAAMiD,MAAM+H,gBAD1C,4CA9GhB,GAAmCwG,IAAMC,WCR5BoI,EAAb,kDAQI,WAAY9I,GAAY,IAAD,8BACnB,cAAMA,IAWVqG,SAAW,SAAC0C,GACR,IAAMC,GAAO,IAAIC,KACXC,EAAWH,EAAGzC,OAAS,EAC7B,EAAKpD,SAAS,CACViG,QAAS,EAAKlJ,MAAMkJ,QAAQrM,OAAO,CAAC,CAChCsI,GAAI8D,EAAW,IAAK,IAAMH,EAAGzC,OAC7B8C,EAAGJ,EACH1O,EAAG4O,EAAW,MAAQ,WAG9B/F,YAAW,WACP,EAAKD,SAAS,CACViG,QAAS,EAAKlJ,MAAMkJ,QAAQ7Q,QAAO,SAACO,GAAD,OAAOA,EAAEuQ,GAAKJ,SAEtD,OAxBH,EAAK/I,MAAQ,CACTkJ,QAAS,IAHM,EAR3B,gEAeY3X,KAAKwO,MAAMqJ,aACX7X,KAAKwO,MAAMqJ,YAAYC,UAAU9X,KAAK6U,YAhBlD,6CAsCY7U,KAAKwO,MAAMqJ,aACX7X,KAAKwO,MAAMqJ,YAAYE,YAAY/X,KAAK6U,YAvCpD,+BA2Ca,IAAD,OACE8C,EAAU3X,KAAKyO,MAAMkJ,QAAQpF,KAAI,SAAClL,GAAD,OAAO,0BAAMpJ,IAAKoJ,EAAEuQ,EAAGhJ,UAAW,CAACvH,EAAEyB,EAAG,EAAK0F,MAAMwJ,YAAa,WAAWC,KAAK,MAClH,EAAKzJ,MAAMrL,KAD8B,IACvBkE,EAAEuM,MAEzB,OAAO,0BAAMhF,UAAU,iBAClB5O,KAAKwO,MAAMO,SACX4I,OAjDb,GAAgC1I,IAAMC,WCmBzBW,GAAY,CACvBpB,MAAO,UAAWyJ,IAAK,SACvBC,KAAM,iBAAkBC,KAAM,cAC9B5L,OAAQ,SAAUC,OAAQ,SAAUC,SAAU,WAC9C2L,KAAM,OAAQC,MAAO,QAASC,MAAO,QAASC,QAAS,YACvDC,OAAQ,SAAUC,MAAO,QAASC,QAAS,UAC3CC,QAAS,WAAYC,QAAS,UAAWC,UAAW,YACpDC,KAAM,OAAQC,QAAS,UAAWC,MAAO,SA6BpC,SAASzX,GAAO4V,GACrB,OACE,yBAAKxI,UAAU,SAAS3Q,IAAKmZ,EAAEnZ,KAC7B,2BAAImZ,EAAEnZ,KACN,2BACGmZ,EAAE3V,GAAG8Q,KAAI,SAAChL,GAAD,OAblB,SAAiB6P,GACf,OACE,0BAAMxI,UAAU,SACZiB,GAAUuH,EAAEnZ,KArBpB,SAAqBib,GACnB,OAAOA,GACL,KAAM,EACJ,MAAO,MACT,KAAM,EACJ,MAAO,KACT,KAAM,EACJ,MAAO,IACT,KAAK,EACH,MAAO,IACT,KAAK,EACH,MAAO,KACT,KAAK,EACH,MAAO,MACT,QACE,MAAO,KAOLC,CAAY/B,EAAE1V,MASG0X,CAAQ7R,Q,IAuOlB8R,G,kDArNb,WAAY7K,GAAe,IAAD,8BACxB,cAAMA,IAcR8K,WAAa,SAAC7K,GACZ,EAAKA,MAAMhR,MAAMiD,MAAMrC,KAAOoQ,EAAMpQ,KACpC,EAAKoQ,MAAMhR,MAAMiD,MAAMsH,OAASyG,EAAMzG,OAClCyG,EAAM5P,YACR,EAAK4P,MAAMhR,MAAMiD,MAAM7B,UAAY4P,EAAM5P,WACvC4P,EAAM+H,QACR,EAAK/H,MAAMhR,MAAMiD,MAAM5B,OAAS2P,EAAM+H,OACxC,IAAMlY,EAAO,EAAKmQ,MAAMhR,MAAM2L,OAAO9B,MAAK,SAACC,GAAD,OAAOA,EAAEtJ,KAAOwQ,EAAMvQ,WAC5DI,IACFA,EAAKqL,MAAMpI,SAAQ,SAAC8F,GACfoH,EAAM5P,YAAWwI,EAAExI,UAAY4P,EAAM5P,WACrC4P,EAAM+H,QAAOnP,EAAEvI,OAAS2P,EAAM+H,UpBtClC,SAAyBlY,EAAYoC,GACxC,IAAMuQ,EAAK,IAAIvI,EACfuI,EAAG/S,QAAUI,EAAKL,IAClBK,EAAK2N,QAAUgF,EACfvQ,EAAM6H,UAAUnI,KAAK6Q,EAAG/S,SoBoCtBqb,CAAgBjb,EAAM,EAAKmQ,MAAMhR,MAAMiD,QAEzC,EAAK+N,MAAMhR,MAAMiN,yBACjB,EAAKgH,SAAS,CACZjU,MAAO,EAAKgR,MAAMhR,MAClB+b,YAAa,QAjCS,EAmC1BC,aAAe,SAACtV,EAAiB9F,EAAc+M,GAC7C,EAAKqD,MAAMhR,MAAM8G,WAAWJ,EAAM9F,EAAM+M,GACxC,EAAKsG,SAAS,CAACjU,MAAO,EAAKgR,MAAMhR,SArCT,EAuC1B6X,OAAS,SAAC5N,GACR,EAAK+G,MAAMhR,MAAMiD,MAAM2H,kBAAoB,EAC3CX,EAAKjI,eAAiBjC,EAAI,EAAKiR,MAAMhR,OACjCiK,EAAKpJ,MACPoJ,EAAKkC,iBAAiB,EAAK6E,MAAMhR,MAAM6E,QAASoF,EAAKpJ,KAAM,EAAKmQ,MAAMhR,MAAMoC,IAAK,EAAK4O,MAAMhR,MAAMiD,OACpG,EAAKgR,SAAS,CAACjU,MAAO,EAAKgR,MAAMhR,QACjC,EAAKgR,MAAMhR,MAAMgM,IAAIpB,iBAAiBqR,QAAQ,CAAC5E,OAAQ,KA7C/B,EA+C1BS,QAAU,SAAC7N,GACT,EAAK+G,MAAMhR,MAAMiD,MAAM2H,kBAAoB,EAC3CX,EAAKlI,iBAAmBhC,EAAI,EAAKiR,MAAMhR,OACnCiK,EAAKpJ,MACPoJ,EAAKkC,iBAAiB,EAAK6E,MAAMhR,MAAM6E,QAASoF,EAAKpJ,KAAM,EAAKmQ,MAAMhR,MAAMoC,IAAK,EAAK4O,MAAMhR,MAAMiD,OACpG,EAAKgR,SAAS,CAACjU,MAAO,EAAKgR,MAAMhR,QACjC,EAAKgR,MAAMhR,MAAMgM,IAAIpB,iBAAiBqR,QAAQ,CAAC5E,QAAS,KArDhC,EAuD1BK,QAAU,SAACzN,GACT,IAAM9D,EAAW8D,EAAK4E,YAAY,EAAKmC,MAAMhR,MAAM6E,SAAS,GAC5D,OAAIsB,EAAW,IACb,EAAK6K,MAAMhR,MAAMiD,MAAM4H,iBAAmB1E,EAC1C,EAAK8N,SAAS,CAACjU,MAAO,EAAKgR,MAAMhR,QACjC,EAAKgR,MAAMhR,MAAMgM,IAAIP,gBAAgBwQ,QAAQ,CAAC5E,OAAQlR,KAC/C,IA3DT,EAAK6K,MAAQ,CACXhR,MAAOiQ,IACPiM,aAAc,KACdC,aAAc,KACdJ,YAAa,iBACbK,iBAAkB,YAEpB,EAAKpL,MAAMhR,MAAMiN,yBATO,E,sDAYxB1K,KAAKyO,MAAMhR,MAAMmQ,OACjB5N,KAAK0R,SAAS,CAACjU,MAAOuC,KAAKyO,MAAMhR,U,iCAqDxB,IAAD,OACR,OAAOuC,KAAKyO,MAAMoL,kBAChB,IAAK,WACH,GAA+B,MAA3B7Z,KAAKyO,MAAMkL,aACb,OAAO,kBAAC,EAAD,CAAehQ,MAAO3J,KAAKyO,MAAMhR,MAAMkM,MAAOiH,UAAW,kBAAM,EAAKc,SAAS,CAACiI,aAAc,UAEnG,IAAMrb,EAAO0B,KAAKyO,MAAMhR,MAAM2L,OAAO9B,MAAK,SAACC,GAAD,OAAOA,EAAEtJ,KAAO,EAAKwQ,MAAMkL,gBACrE,GAAIrb,EAAM,CACR,GAA+B,MAA3B0B,KAAKyO,MAAMmL,aAAsB,CACnC,IAAMlS,EAAOpJ,EAAKqL,MAAMrC,MAAK,SAAC8L,GAAD,OAAOA,EAAEnV,KAAO,EAAKwQ,MAAMmL,gBACxD,GAAIlS,EACF,OAAO,kBAAC,EAAD,CAAWA,KAAMA,EAAMpJ,KAAMA,EACpCgE,QAAStC,KAAKyO,MAAMhR,MAAM6E,QAAS5B,MAAOV,KAAKyO,MAAMhR,MAAMiD,MAAO+I,IAAKzJ,KAAKyO,MAAMhR,MAAMgM,IAAK5J,IAAKG,KAAKyO,MAAMhR,MAAMoC,IACnHsV,QAASnV,KAAKmV,QAASG,OAAQtV,KAAKsV,OAAQC,QAASvV,KAAKuV,QAC1D3E,UAAW,kBAAM,EAAKc,SAAS,CAACiI,aAAc,KAAMC,aAAc,UAGtE,OAAO,kBAAC,EAAD,CAAejQ,MAAK,OAAErL,QAAF,IAAEA,OAAF,EAAEA,EAAMqL,MAAOrL,KAAMA,EAAMsS,UAAW,kBAAM,EAAKc,SAAS,CAACiI,aAAc,UAGpG,OAAO,8BAGb,IAAK,QACH,OAAO,6BACL,6BAAK,qCACL,4BACE,yDAGA,6DAEE,0BAAM3H,MAAM,6CAAZ,WAEF,yDAGA,8DAGA,+DAKN,IAAK,SACH,OAAO,kBAAC,EAAD,CAAaiD,OAAQjV,KAAKyO,MAAMhR,MAAM+L,iB,+BAGzC,IAAD,OACD5L,EAASL,EAAOyC,KAAKyO,MAAMhR,MAAME,KAAKC,QACtCkc,EAAM9Z,KAAKyO,MAAMhR,MAAM6E,QAAQ7B,kBAC/BsZ,EAAQ/Z,KAAKyO,MAAMhR,MAAM2L,OAAOmJ,KAAI,SAACqF,GACzC,OACE,kBAAC,EAAD,CAAWvF,KAAMuF,EAAGtZ,KAAMsZ,EAAGjW,aAAcmY,EAAK7b,IAAK2Z,EAAE3Z,IACrD4Q,QAAS,kBAAM,EAAK6C,SAAS,CAACiI,aAAc/B,EAAE3Z,IAAK4b,iBAAkB,WAAYD,aAAc,QAC/FpH,YAAa,SAACnL,GAAD,OAAO,EAAKqK,SAAS,CAACiI,aAAc/B,EAAE3Z,IAAK4b,iBAAkB,WAAYD,aAAcvS,EAAEpJ,YAItG+b,EAAeha,KAAKyO,MAAMhR,MAAMiD,MAAM0H,gBAAgB7B,QAAO,SAACqE,EAAKrD,GAAN,OAAYqD,EAAKrD,EAAEyS,eAAc,GACpG,OACA,yBAAKpL,UAAU,UACb,yBAAKA,UAAU,SACZmL,GAEH,yBAAKnL,UAAU,WACb,kBAAC,EAAD,CAAOF,KAAgC,kBAA1B1O,KAAKyO,MAAM+K,YAAiC3K,QAAS,kBAAM,EAAK6C,SAAS,CAAC8H,YAAa,QAAQ7K,iBAAiB,GAC3H,kBAAC,EAAD,CAAYvF,OAAQpJ,KAAKyO,MAAMhR,MAAM2L,OAAQ6N,QAASjX,KAAKsZ,cAE7D,kBAAC,EAAD,CAAO5K,KAAgC,SAA1B1O,KAAKyO,MAAM+K,YAAwB3K,QAAS,kBAAM,EAAK6C,SAAS,CAAC8H,YAAa,SACzF,kBAAC,EAAD,CAAe/b,MAAOuC,KAAKyO,MAAMhR,SAEnC,kBAAC,EAAD,CAAOiR,KAAgC,UAA1B1O,KAAKyO,MAAM+K,YAAyB3K,QAAS,kBAAM,EAAK6C,SAAS,CAAC8H,YAAa,SAC1F,8CACA,yBAAK5K,UAAU,YACZ5O,KAAKyO,MAAMhR,MAAMiD,MAAMuH,kBAAkBsK,KAAI,SAAC6E,GAAD,OAAO5V,GAAO4V,QAGhE,kBAAC,EAAD,CAAO1I,KAAgC,YAA1B1O,KAAKyO,MAAM+K,YAA2B3K,QAAS,kBAAM,EAAK6C,SAAS,CAAC8H,YAAa,SAC5F,yBAAK5K,UAAU,YACb,yBAAKA,UAAU,aACX,0CACA,4BAAQ7C,KAAK,SAAS6C,UAAU,UAAUC,QAAS,cAAnD,6CAEJ,iGAGA,kBAAC,EAAD,CAAcpR,MAAOuC,KAAKyO,MAAMhR,MAAOkX,eAAgB3U,KAAKyZ,eAC5D,6BACE,gDADF,IAC2B,6BACzB,uCAFF,KAEoBO,EAFpB,IAEkC,sCAFlC,KAEmDha,KAAKyO,MAAMhR,MAAMiD,MAAM8H,eAAiBwR,KAI/F,kBAAC,EAAD,CAAOtL,KAAgC,WAA1B1O,KAAKyO,MAAM+K,YAA0B3K,QAAS,kBAAM,EAAK6C,SAAS,CAAC8H,YAAa,SAC/D,WAA1BxZ,KAAKyO,MAAM+K,YAA0B,kBAAC,EAAD,CAAe/b,MAAOuC,KAAKyO,MAAMhR,QAA0B,IAEpG,yBAAKmR,UAAU,QACb,yBAAKA,UAAU,OACb,2CAEQ5O,KAAKyO,MAAMhR,MAAME,KAAKD,KAF9B,SAIGE,GALL,sBAWE,wCAGA,0BAAMgR,UAAU,SAASgB,MAAO,CAACqK,YAAa,QAA9C,eACeja,KAAKyO,MAAMhR,MAAM8L,WADhC,gBAGE,4BAAQwC,KAAK,SAAS6C,UAAU,YAAYC,QAAS,kBAAM,EAAKqL,YAAhE,cAGJ,yBAAKtL,UAAU,UACb,kBAAC,EAAD,CAAYiJ,YAAa7X,KAAKyO,MAAMhR,MAAMgM,IAAIP,gBAAiB/F,KAAK,gBAClE,4DADF,IAC8BnD,KAAKyO,MAAMhR,MAAMiD,MAAM4H,gBAAgBqI,QAAQ,IAE7E,kBAAC,EAAD,CAAYkH,YAAa7X,KAAKyO,MAAMhR,MAAMgM,IAAIpB,iBAAkBlF,KAAK,gBACnE,6DADF,IAC+BnD,KAAKyO,MAAMhR,MAAMiD,MAAM2H,kBAEtD,8BACE,4BAAQ0D,KAAK,SAAS6C,UAAU,UAAUC,QAAS,kBAAM,EAAK6C,SAAS,CAAC8H,YAAY,cAApF,oBACA,4BAAQzN,KAAK,SAAS6C,UAAU,UAAUC,QAAS,kBAAM,EAAK6C,SAAS,CAAC8H,YAAY,YAApF,SACA,4BAAQzN,KAAK,SAAS8C,QAAS,kBAAM,EAAK6C,SAAS,CAAC8H,YAAY,eAAhE,aACA,4BAAQzN,KAAK,SAAS8C,QAAS,kBAAM,EAAK6C,SAAS,CAAC8H,YAAY,aAAhE,UAIN,yBAAK5K,UAAU,SACb,yBAAKA,UAAU,mBACb,4BAAQC,QAAS,kBAAM,EAAK6C,SAAS,CAACmI,iBAAkB,eAAxD,yBACA,4BAAQhL,QAAS,kBAAM,EAAK6C,SAAS,CAACmI,iBAAkB,aAAxD,uBACA,4BAAQhL,QAAS,kBAAM,EAAK6C,SAAS,CAACmI,iBAAkB,YAAxD,uBAED7Z,KAAKma,kB,GA/MElL,IAAMC,WCpEJjN,QACW,cAA7BgL,OAAOmN,SAASC,UAEe,UAA7BpN,OAAOmN,SAASC,UAEhBpN,OAAOmN,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3N,QAAQ2N,MAAMA,EAAM/X,c","file":"static/js/main.d3d588c1.chunk.js","sourcesContent":["import { World } from \"../World\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\n\r\nexport interface IDate{\r\n    season: Season;\r\n    year: number;\r\n}\r\n\r\nexport function Now(world: World){\r\n    return {year: world.date.year, season: world.date.season};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","import { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitFood, TraitJob, City, Law, JobToGood, IHappinessModifier, TraitToModifier, MaslowScore, GetHappiness } from \"./World\";\r\nimport { RandomEthno, GetRandom } from \"./WorldGen\";\r\nimport { Economy, ISeller } from \"./Economy\";\r\nimport { Policy, Party } from \"./Politics\";\r\nimport { IEvent } from \"./events/Events\";\r\nimport { IDate, withinLastYear } from \"./simulation/Time\";\r\n\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean{\r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith?: TraitFaith;\r\n    shelter: TraitShelter;\r\n    health: TraitHealth;\r\n    discrete_food: number;\r\n    cash: number;\r\n    dob: IDate;\r\n}\r\n\r\nconst BabyChance = 0.05;\r\nconst SeasonsUntilEviction = 1;\r\nexport class Bean implements IBean, ISeller{\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public alive: boolean = true;\r\n    public dob: IDate = {year: 0, season: 0};\r\n    public name: string = 'Bean Beanson';\r\n\r\n    public city: City|null = null;\r\n\r\n    public ethnicity: TraitEthno = RandomEthno();\r\n    public lastApproval: IDate = {year: -1, season: 0};\r\n\r\n    //maslow\r\n    public discrete_food: number = 1;\r\n    public get food(): TraitFood {\r\n        if (this.discrete_food >= 3)\r\n        return 'stuffed';\r\n        else if (this.discrete_food >= 1)\r\n        return 'sated'\r\n        else\r\n        return 'hungry';\r\n    }\r\n    public shelter: TraitShelter = 'crowded';\r\n    public discrete_health: number = 2;\r\n    public get health(): TraitHealth {\r\n        if (this.discrete_health >= 3)\r\n        return 'fresh';\r\n        else if (this.discrete_health >= 1)\r\n        return 'bruised'\r\n        else\r\n        return 'sick';\r\n    }\r\n    //values\r\n    public community: TraitCommunity = 'ego';\r\n    public ideals: TraitIdeals = 'trad';\r\n    //other\r\n    public job: TraitJob = 'jobless';\r\n    public faith?: TraitFaith;\r\n    public cash: number = 3;\r\n    public partyLoyalty: number = 0.2;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastHappiness: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastSentiment: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastPartySentiment: number = 0;\r\n    public seasonSinceLastSale: number = 0;\r\n    public seasonSinceLastRent: number = 0;\r\n    public lastApprovalDate: IDate = {year: -1, season: 0};\r\n    public lastInsultDate: IDate = {year: -1, season: 0};\r\n    public fairGoodPrice: number = 1;\r\n    get isInCrisis(): boolean{\r\n        return this.food == 'hungry' ||\r\n        this.shelter == 'podless' ||\r\n        this.health == 'sick';\r\n    }\r\n    getHappinessModifiers(econ: Economy, homeCity: City, law: Law): IHappinessModifier[]{\r\n        const mods: IHappinessModifier[] = [\r\n            TraitToModifier[this.food],\r\n            TraitToModifier[this.shelter],\r\n            TraitToModifier[this.health],\r\n        ];\r\n        if (this.ideals == 'trad' && this.ethnicity != homeCity.majorityEthnicity) {\r\n            mods.push({reason: 'Xenophobic', mod: -.1});\r\n        }\r\n        if (this.cash < 1) {\r\n            mods.push({reason: 'Penniless', mod: MaslowScore.Deficient});\r\n        } else if (this.cash > econ.getCostOfLiving() * 3){\r\n            mods.push({reason: 'Upper Class', mod: 0.3});\r\n        } else if (this.cash > econ.getCostOfLiving() * 2){\r\n            mods.push({reason: 'Middle Class', mod: 0.15});\r\n        }\r\n        if (this.job == 'jobless') {\r\n            mods.push({reason: 'Unemployed', mod: MaslowScore.Deficient});\r\n        }\r\n\r\n        return mods;\r\n    }\r\n    getSentimentModifiers(econ: Economy, homeCity: City, law: Law, party: Party): {\r\n        party: IHappinessModifier[],\r\n        law: IHappinessModifier[]\r\n    }{\r\n        const result = {party: [] as IHappinessModifier[], law: [] as IHappinessModifier[]};\r\n\r\n        if (this.community == party.community){\r\n            result.party.push({reason: 'Same Community', mod: 0.15});\r\n        }\r\n        if (this.ideals == party.ideals){\r\n            result.party.push({reason: 'Same Ideals', mod: 0.15});\r\n        } else if (this.community != party.community){\r\n            result.party.push({reason: 'Incompatible Values', mod: -0.15});\r\n        }\r\n        if (homeCity.environment && withinLastYear(homeCity.environment, this.lastApprovalDate)){\r\n            result.party.push({reason: 'Public Endorsement', mod: 0.2});   \r\n        }\r\n        return result;\r\n    }\r\n    calculateBeliefs(econ: Economy, homeCity: City, law: Law, party: Party): void{\r\n        this.lastHappiness = GetHappiness(this.getHappinessModifiers(econ, homeCity, law));\r\n        const sent = this.getSentimentModifiers(econ, homeCity, law, party);\r\n        this.lastSentiment = GetHappiness(sent.law);\r\n        this.lastPartySentiment = GetHappiness(sent.party);\r\n\r\n        if (this.job == 'jobless'){\r\n            this.fairGoodPrice = 1;\r\n        } else {\r\n            const myGood = JobToGood(this.job);\r\n            this.fairGoodPrice = econ.getFairGoodPrice(myGood);\r\n        }\r\n    }\r\n    /**\r\n     * non-normalized multiplier\r\n     */\r\n    getSentimentPolicies(traits: {[x:string]:boolean}, policies: Policy[]){\r\n        let multiplier = 100;\r\n        policies.forEach((policy) => {\r\n            policy.fx.forEach((fx) => {\r\n                if (traits[fx.key])\r\n                multiplier += fx.mag * 10; //-30 to +30\r\n            });\r\n        });\r\n        return multiplier / 100;\r\n    }\r\n    _getTraitMap(){\r\n        let traits = {[this.community]: true, [this.ideals]:  true, [this.ethnicity]: true};\r\n        if (this.faith)\r\n            traits[this.faith] = true;\r\n        return traits;\r\n    }\r\n    getFace(): string{\r\n        if (!this.alive)\r\n            return '💀';\r\n        if (this.food == 'hungry')\r\n            return '😫';\r\n        if (this.health == 'sick')\r\n            return '🤢';\r\n        if (this.shelter == 'podless')\r\n            return '🥶';\r\n        if (this.job == 'jobless')\r\n            return '😧';\r\n        if (this.lastHappiness < 0)\r\n            return '☹️';\r\n        if (this.lastHappiness >= 50)\r\n            return '🙂';\r\n        return '😐';\r\n    }\r\n    getIdea(costOfLiving: number): {bad: boolean, idea: string}|null {\r\n        if (this.food == 'hungry')\r\n            return {bad: true, idea: '🍗'};\r\n        if (this.health == 'sick')\r\n            return {bad: true, idea: '💊'};\r\n        if (this.shelter == 'podless')\r\n            return {bad: true, idea: '🏠'};\r\n        if (this.canBaby(costOfLiving))\r\n            return {bad: false, idea: '👶'};\r\n        return null;        \r\n    }\r\n    tryFindRandomJob(law: { policies: Policy[]; }) {\r\n        if (Math.random() > 0.5) {\r\n            this.job = GetRandom(['builder', 'doc', 'farmer']);\r\n        }\r\n    }\r\n    canInsult(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastInsultDate));\r\n    }\r\n    canSupport(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastApprovalDate));\r\n    }\r\n    work(law: { policies: Policy[]; }, econ: Economy) {\r\n        if (this.job == 'jobless'){\r\n            this.tryFindRandomJob(law);\r\n        } else {\r\n            this.seasonSinceLastSale++;\r\n            if (this.seasonSinceLastSale > 2){\r\n                //underemployment\r\n                if (Math.random() > 0.5) {\r\n                    const newJob = econ.mostInDemandJob();\r\n                    if (newJob)\r\n                        this.job = newJob;\r\n                }\r\n            }\r\n            econ.produceAndPrice(this, JobToGood(this.job), 2.5, this.fairGoodPrice);\r\n        }\r\n    }\r\n    eat(economy: Economy): IEvent|null {\r\n        if (this.job == 'farmer'){\r\n            this.discrete_food += 1;\r\n        } else {\r\n            this.buyFood(economy);\r\n        }\r\n\r\n        this.discrete_food -= 1;\r\n        if (this.discrete_food < 0)\r\n            this.discrete_health -= 0.3;\r\n\r\n        return this.maybeDie('starvation', 0.6);\r\n    }\r\n    private buyFood(economy: Economy) {\r\n        const groceries = economy.tryTransact(this, 'food');\r\n        if (groceries)\r\n            this.discrete_food += groceries.bought;\r\n    }\r\n\r\n    weather(economy: Economy): IEvent|null {\r\n        if (!this.alive) return null;\r\n        if (this.job == 'builder'){\r\n            this.shelter = 'crowded';\r\n        } else {\r\n            const hasHousing = this.buyHousing(economy);\r\n            if (!hasHousing){\r\n                if (this.seasonSinceLastRent > SeasonsUntilEviction) {\r\n                    this.shelter = 'podless';\r\n                }\r\n                else {\r\n                    this.seasonSinceLastRent++;\r\n                }\r\n            }\r\n        }        \r\n        \r\n        if (this.shelter == 'podless')\r\n            this.discrete_health -= 0.1;\r\n        \r\n        return this.maybeDie('exposure', 0.2);\r\n    }\r\n    private buyHousing(economy: Economy): boolean {\r\n        const housing = economy.tryTransact(this, 'shelter');\r\n        if (housing) {\r\n            this.seasonSinceLastRent = 0;\r\n            this.shelter = 'crowded';\r\n        }\r\n        return housing != null;\r\n    }\r\n\r\n    age(economy: Economy): IEvent|null {\r\n        if (!this.alive) return null;\r\n        if (this.job == 'doc'){\r\n            this.discrete_health += 0.25;\r\n        } else {\r\n            this.buyMeds(economy);\r\n        }\r\n        this.discrete_health -= 0.2;\r\n        this.discrete_health = Math.min(this.discrete_health, 3);\r\n        return this.maybeDie('sickness', 0.4);\r\n    }\r\n    private buyMeds(economy: Economy) {\r\n        const meds = economy.tryTransact(this, 'medicine');\r\n        if (meds)\r\n            this.discrete_health += meds.bought;\r\n    }\r\n\r\n    maybeOverconsume(economy: Economy){\r\n        const threshold = economy.getCostOfLiving() * 2;\r\n        if (this.food != 'stuffed' && this.cash > threshold){\r\n            this.buyFood(economy);\r\n        }\r\n        if (this.health != 'fresh' && this.cash > threshold){\r\n            this.buyMeds(economy);\r\n        }\r\n    }\r\n\r\n    maybeBaby(economy: Economy): IEvent | null {\r\n        if (this.canBaby(economy.getCostOfLiving()) &&\r\n            Math.random() <= BabyChance) {\r\n            if (this.city)\r\n                this.city.breedBean(this);\r\n            else\r\n                throw 'bean doesnot have city object';\r\n            return {icon: '🎉', message: 'A new bean is born!'}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    canBaby(costOfLiving: number): boolean{\r\n        return this.cash > costOfLiving * 3 &&\r\n            !this.isInCrisis;\r\n    }\r\n    /**\r\n     * should return 0-1 float, with 1 meaning 100%\r\n     * @param economy \r\n     */\r\n    chanceToDonate(economy: Economy, direct: boolean = false): number{\r\n        const canDonate = this.cash > economy.getCostOfLiving() * 2 && !this.isInCrisis;\r\n        if (canDonate && this.lastPartySentiment > 0.5){\r\n            const threshold = direct ? 0.2 : 0.5;\r\n            const baseChance = this.lastPartySentiment - threshold;\r\n            return (baseChance) / 2;\r\n        }\r\n        return 0;\r\n    }\r\n    maybeDonate(economy: Economy, direct: boolean = false): number{\r\n        const chance = this.chanceToDonate(economy, direct);\r\n        if (chance > 0){\r\n            const willDonate = Math.random() < chance;\r\n            if (willDonate){\r\n                const donation = 1;\r\n                this.cash -= donation;\r\n                return donation;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    maybeDie(cause: string, chance = 0.5): IEvent|null{\r\n        if (this.discrete_health < 0 && Math.random() <= chance) {\r\n            this.die();\r\n            return {icon: '☠️', message: `A bean died of ${cause}!`};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    die(){\r\n        this.alive = false;\r\n        this.city?.onCitizenDie(this);\r\n    }\r\n}\r\n","import { City, TraitIdeals, TraitCommunity, TraitEthno, TraitFaith, World, TraitJob } from './World';\r\nimport { Bean } from './Bean';\r\nimport { Policy, BaseParty, CityPartyHQ, Party } from './Politics';\r\n\r\nexport function GetRandomNumber(min: number, max: number): number{\r\n    const randomBuffer = new Uint32Array(1);\r\n    window.crypto.getRandomValues(randomBuffer);\r\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\nexport function GetRandomIndex(length: number): number{\r\n    return GetRandomNumber(0, length-1)\r\n}\r\nexport function GetRandom<S>(choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(choices.length);\r\n    console.log(i);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(): TraitIdeals{\r\n    return GetRandom(['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(): TraitCommunity{\r\n    return GetRandom(['state', 'ego']);\r\n}\r\nexport function RandomEthno(): TraitEthno{\r\n    return GetRandom(['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(): TraitFaith{\r\n    return GetRandom(['book','music','heart', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\n\r\nexport function GenerateWorld(): World{\r\n    const world = new World();\r\n    world.party = new BaseParty();\r\n    world.institutions.push(world.party);\r\n    for (let i = 0; i < 6; i++) {\r\n        world.cities.push(GenerateCity(world.cities.length));\r\n        world.cities[i].doOnCitizenDie.push(world.economy.onBeanDie);\r\n        world.cities[i].environment = world.date;\r\n\r\n        if (i < 2){\r\n            const city = world.cities[i];\r\n            //GeneratePartyHQ(city);\r\n        }\r\n    }\r\n    world.economy.totalSeasonalDemand.food = world.beans.length;\r\n    world.economy.totalSeasonalDemand.shelter = world.beans.length;\r\n    world.economy.totalSeasonalDemand.medicine = world.beans.length;\r\n\r\n    world.next();\r\n    world.next();\r\n    world.next();\r\n    world.next();\r\n    return world;\r\n}\r\n\r\nexport function GeneratePartyHQ(city: City, party: Party) {\r\n    const hq = new CityPartyHQ();\r\n    hq.cityKey = city.key;\r\n    city.partyHQ = hq;\r\n    party.activeHQs.push(hq.cityKey);\r\n}\r\n\r\nexport function GenerateCity(previousCityCount: number): City{\r\n    let newCity = new City();\r\n    newCity.key = previousCityCount;\r\n    newCity.name = GetRandom(['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', '']);\r\n    newCity.name += GetRandom(['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash']);\r\n    newCity.name += GetRandom(['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest']);\r\n\r\n    const cityPopulation = 3;\r\n    while(newCity.historicalBeans.length < cityPopulation){\r\n        newCity.historicalBeans.push(\r\n            GenerateBean(newCity, newCity.historicalBeans.length)\r\n        );\r\n    }\r\n    const houseCount = Math.floor((cityPopulation / 2) + Math.floor(Math.random() * cityPopulation / 2));\r\n    for (let i = 0; i < houseCount; i++) {\r\n        newCity.houses.push({\r\n            left: Math.floor(Math.random() * 60),\r\n            top: Math.floor(Math.random() * 60),\r\n        });\r\n    }\r\n\r\n    return newCity;\r\n}\r\nexport function GenerateBean(city: City, previousBeanCount: number): Bean{\r\n    let newBean = new Bean();\r\n    \r\n    newBean.key = previousBeanCount;\r\n    newBean.cityKey = city.key;\r\n    newBean.city = city;\r\n    newBean.name = GetRandom(['Chick', 'Broad', 'Velvet', 'Jack', 'Lima', 'Whit', 'Black-Eye', 'Baker', 'Pony', 'Castor', 'Frenchy', 'Kid', 'Runner']) + ' ';\r\n    newBean.name += GetRandom(['Bean', 'Navy', 'Sprout', 'Soy', 'Mung', 'Lent', 'Faba', 'Wax', 'Chick', 'Green', 'Pinto']);\r\n    newBean.name += GetRandom(['shell', 'seed', 'pea', 'pod', 'snap', 'vine', 'leaf', 'shoot']);\r\n    newBean.community = RandomCommunity();\r\n    newBean.ideals = RandomIdeal();\r\n    newBean.faith = RandomFaith();\r\n    const mod = previousBeanCount % 3;\r\n    newBean.job = mod == 0 ? 'farmer' : mod == 1 ? 'builder' : 'doc';\r\n    //newBean.job = GetRandom(['farmer','builder','doc']);\r\n    newBean.cash = StartingCash(newBean.job);\r\n    newBean.discrete_food = 2;\r\n    \r\n    return newBean;\r\n}\r\n\r\nexport class Data {\r\n    static AllPolicies: Policy[] = [\r\n        { key: \"Food Welfare\", fx:[{key: 'state', mag: 1}, {key: 'prog', mag:1}] },\r\n        { key: \"Church Schooling\", fx:[{key: 'state', mag:1}, {key:'trad', mag:1}] },\r\n        { key: \"Free Trade\", fx:[{key: 'ego', mag:1}, {key:'prog', mag:1}], axis: 'trade' },\r\n        { key: \"Tariffs\", fx:[{key: 'ego', mag:1}, {key:'trad', mag:1}], axis: 'trade' },\r\n        { key: \"Secularism\", fx:[{key: 'ego', mag:1}, {key:'prog', mag:2}, {key:'trad', mag:-1}], axis: 'faith' },\r\n        { key: \"State Religion\", fx:[{key: 'state', mag:1}, {key:'trad', mag:2}, {key:'prog', mag:-1}], axis: 'faith' },\r\n        { key: \"Univ. Suffrage\", fx:[{key:'prog', mag:2}], axis: 'vote' },\r\n        { key: \"Male Suffrage\", fx:[{key:'trad', mag:2}], axis: 'vote' },\r\n    ];\r\n}","import { ISeller, Economy } from \"../Economy\";\r\nimport { TraitGood, GoodToJob } from \"../World\";\r\nimport { Policy } from \"../Politics\";\r\n\r\nexport interface IInstitution{\r\n    key: number;\r\n    playerKey: number;\r\n    name: string;\r\n\r\n    organizations: IOrganization[];\r\n    fundOrganizations(): void;\r\n}\r\n\r\nexport interface IOrganization extends ISeller{\r\n    work(law: { policies: Policy[]; }, economy: Economy): void;\r\n    key: number;\r\n    institutionKey: number;\r\n    seasonalBudget: number;\r\n    parentInstitution: IInstitution|null;\r\n    cash: number;\r\n}\r\n\r\nexport class Charity implements IOrganization, ISeller{\r\n    key = 0;\r\n    name: string = '';\r\n    institutionKey = 1;\r\n    cash = 0;\r\n    seasonSinceLastSale = 0;\r\n    seasonalBudget = 0;\r\n    good: TraitGood = 'food';\r\n    parentInstitution: IInstitution|null = null;\r\n    beansHelped: number = 0;\r\n    inventory: number = 0;\r\n    \r\n    work(law: { policies: Policy[]; }, economy: Economy): void{\r\n        while(this.cash > 0 && this.inventory < 10) {\r\n            const groceries = economy.tryTransact(this, this.good);\r\n            if (groceries){\r\n                economy.addCharity(this, this.good, groceries.bought);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n} ","import { TraitGood, TraitJob, GoodToJob, City, Trait } from \"./World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { IOrganization, Charity } from \"./simulation/Institutions\";\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    seasonSinceLastSale: number;\r\n}\r\nexport interface Listing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerOrganizationKey?: number;\r\n    price: number;\r\n    seller: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'shelter', 'medicine', 'fun'];\r\nconst PartyLoyaltyPerCharityUse = 0.2;\r\nexport class Economy {\r\n    market = new OrderBook();\r\n    charity = new OrderBook();\r\n    unfulfilledSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalSupply: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    constructor(){\r\n\r\n    }\r\n    public resetSeasonalDemand(){\r\n        this.unfulfilledSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalSupply = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    }\r\n    tryTransact(buyer: IEconomicAgent, good: TraitGood): {bought: number, price: number}|null {\r\n        const demand = 1;\r\n        this.totalSeasonalDemand[good] += demand;\r\n        const listing = this.market.getLowestPriceListing(good, demand);\r\n        if (listing == null){\r\n            //console.log('agent could not find '+good);\r\n        }\r\n        else if (listing.price <= buyer.cash){\r\n            return this.market.transact(listing, good, demand, buyer);\r\n        } else if (buyer instanceof Bean) {\r\n            // console.log('bean couldnot afford '+good+\" @ $\"+listing?.price);\r\n            const charityTicket = this.charity.getLowestPriceListing(good, demand);\r\n            if (charityTicket && charityTicket.seller instanceof Charity) {\r\n                // console.log('bean got '+good+\" from charity\");\r\n                buyer.partyLoyalty += PartyLoyaltyPerCharityUse;\r\n                charityTicket.seller.beansHelped++;\r\n                charityTicket.seller.inventory -= demand;\r\n                return this.charity.transact(charityTicket, good, demand, buyer);\r\n            }\r\n        }\r\n        this.unfulfilledSeasonalDemand[good] += demand;\r\n        return null;\r\n    }\r\n    produceAndPrice(seller: Bean, good: TraitGood, quantity: number, price: number) {\r\n        this.totalSeasonalSupply[good] += quantity;\r\n        const existing = this.market.getBeansListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    addCharity(seller: Charity, good: TraitGood, quantity: number) {\r\n        const existing = this.charity.getOrgsListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.quantity = Math.min(existing.quantity, 10);\r\n            seller.inventory = existing.quantity;\r\n        } else {\r\n            this.charity.addNewOrgListing(good, quantity, 0, seller);\r\n            seller.inventory = quantity;\r\n        }\r\n        //this.book[good].sort((a, b) => a.price - b.price);\r\n    }\r\n    public mostInDemandJob(): TraitJob|null{\r\n        const goods: TraitGood[] = AllGoods;\r\n        const max = goods.reduce((last, good) => {\r\n            if (this.unfulfilledSeasonalDemand[good] > last.max){\r\n                last.max = this.unfulfilledSeasonalDemand[good];\r\n                last.job = GoodToJob(good);\r\n            }\r\n            return last;\r\n        }, {max: 0, job: null as TraitJob|null})\r\n\r\n        return max.job;\r\n    }\r\n    public onBeanDie = (deadBean: Bean, city: City) => {\r\n        AllGoods.forEach((g) => {\r\n            const existing = this.market.getBeansListings(deadBean, g);\r\n            if (existing){\r\n                const lucky = city.getRandomCitizen();\r\n                if (lucky) {\r\n                    existing.sellerCityKey = lucky.cityKey;\r\n                    existing.sellerBeanKey = lucky.key;\r\n                    existing.seller = lucky;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public getFairGoodPrice(good: TraitGood){\r\n        const supply = this.totalSeasonalSupply[good] || 1;\r\n        const demand = this.totalSeasonalDemand[good];\r\n        return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n    }\r\n    public getCostOfLiving(){\r\n        return this.getFairGoodPrice('food')+this.getFairGoodPrice('shelter')+this.getFairGoodPrice('medicine');\r\n    }\r\n}\r\n\r\nexport class OrderBook{\r\n    public readonly listings: {[key in TraitGood]: Listing[]} = {\r\n        food: [] as Listing[],\r\n        shelter: [] as Listing[],\r\n        medicine: [] as Listing[],\r\n        fun: [] as Listing[],\r\n    };\r\n    public getLowestPriceListing(good: TraitGood, demand: number): Listing|null{\r\n        const fullListings =  this.listings[good].filter((l) => {\r\n            return l.quantity >= demand;\r\n        });\r\n        if (fullListings.length > 0){\r\n            let numberOfSamePriceListings = 1;\r\n            const lowPrice = fullListings[0].price;\r\n            for (let i = 1; i < fullListings.length; i++) {\r\n                const list = fullListings[i];\r\n                if (list.price > lowPrice)\r\n                    break;\r\n                numberOfSamePriceListings++;\r\n            }\r\n            const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n            if (i >= fullListings.length)\r\n                throw \"invalid index\";\r\n            return fullListings[i];\r\n        }\r\n        return null;\r\n    }\r\n    public getBeansListings(b: Bean, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == b.key && x.sellerCityKey == b.cityKey);\r\n    }\r\n    public getOrgsListings(b: IOrganization, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerOrganizationKey == b.key);\r\n    }\r\n    public transact(listing: Listing, good: TraitGood, demand: number, buyer: IEconomicAgent){        \r\n        listing.quantity -= demand;\r\n        if (listing.quantity <= 0){\r\n            this.listings[good].splice(0, 1);\r\n        }\r\n        buyer.cash -= listing.price;\r\n        listing.seller.cash += listing.price;\r\n        listing.seller.seasonSinceLastSale--;\r\n        return {\r\n            bought: demand,\r\n            price: listing.price\r\n        }\r\n    }\r\n    public addNewListing(good: TraitGood, quantity: number, price: number, bean: Bean){\r\n        this.listings[good].push({\r\n            sellerCityKey: bean.cityKey,\r\n            sellerBeanKey: bean.key,\r\n            price: price,\r\n            seller: bean,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public addNewOrgListing(good: TraitGood, quantity: number, price: number, org: IOrganization){\r\n        this.listings[good].push({\r\n            sellerOrganizationKey: org.key,\r\n            price: price,\r\n            seller: org,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public sort(good: TraitGood){        \r\n        this.listings[good].sort((a, b) => a.price - b.price);\r\n    }\r\n}","import * as React from 'react';\r\nimport { GetRandom, RandomEthno, GenerateBean } from './WorldGen';\r\nimport { maxHeaderSize } from 'http';\r\nimport { Bean, IBean } from './Bean';\r\nimport { Economy } from './Economy';\r\nimport { Policy, Party, BaseParty, ICityPartyHQ } from './Politics';\r\nimport { IInstitution, IOrganization, Charity } from './simulation/Institutions';\r\nimport { IEvent, EventBus } from './events/Events';\r\nimport { Season, IDate } from './simulation/Time';\r\n\r\n\r\nexport interface IBeanContainer{\r\n    /**\r\n     * all beans ever, including dead ones\r\n     */\r\n    historicalBeans: Bean[];\r\n    /**\r\n     * current non-dead beans\r\n     */\r\n    beans: Bean[];\r\n}\r\n\r\nexport interface IWorld{\r\n    cities: City[];\r\n    law: Law;\r\n    party: Party;\r\n    electionIn: number;\r\n    institutions: IInstitution[];\r\n    bus: EventBus;\r\n    date: IDate;\r\n}\r\nexport class World implements IWorld, IBeanContainer{\r\n    public cities: City[] = [];\r\n    public law: {\r\n        policies: Policy[]\r\n    } = { \r\n        policies: [] \r\n    };\r\n    public economy: Economy = new Economy();\r\n    public institutions: IInstitution[] = [];\r\n    public party: Party = new BaseParty();\r\n    public date = {year: 0, season: Season.Spring};\r\n    public electionIn = 11;\r\n    public yearsEvents: IEvent[] = [];\r\n    public bus = new EventBus();\r\n\r\n    public get beans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.beans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get historicalBeans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.historicalBeans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get organizations(): IOrganization[]{\r\n        return this.institutions.reduce((list, institute) => {\r\n            return list.concat(institute.organizations);\r\n        }, [] as IOrganization[]);\r\n    }\r\n\r\n    /**\r\n     * update 'pushed' state\r\n     */\r\n    public calculateComputedState(){\r\n        this.cities.forEach(c => {\r\n            c.calculate(this.economy, this.law);\r\n            c.beans.forEach(b => b.calculateBeliefs(this.economy, c, this.law, this.party));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * simulates a season passing, setting a lot of state\r\n     */\r\n    public next(){\r\n        this.electionIn--;\r\n        if (this.electionIn <= 0){\r\n            this.electionIn = 8;\r\n        }\r\n        this.date.season++;\r\n        if (this.date.season > 3){\r\n            this.date.year++;\r\n            this.inflate();\r\n            this.resetYearlyCounters();\r\n            this.date.season = 0;\r\n        }\r\n        \r\n        this.economy.resetSeasonalDemand();\r\n\r\n        this.institutions.forEach((i) => i.fundOrganizations());\r\n\r\n        shuffle(this.beans).forEach((b: Bean) => {\r\n            b.work(this.law, this.economy);\r\n        });\r\n\r\n        this.organizations.forEach((org) => org.work(this.law, this.economy));\r\n        // console.log(JSON.stringify(this.economy.book, (key, value) => {\r\n        //     if (key != 'seller') return value;\r\n        //     else return undefined;\r\n        // }, ' '));\r\n        shuffle(this.beans).forEach((b: Bean) => {\r\n            let e = b.eat(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n            e = b.weather(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n            e = b.age(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n            e = b.maybeBaby(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n        });\r\n        this.cities.forEach((c) => c.getTaxesAndDonations(this.party, this.economy));\r\n        shuffle(this.beans).forEach((b: Bean) => {\r\n            b.maybeOverconsume(this.economy);\r\n        });\r\n        this.calculateComputedState();\r\n    }\r\n    inflate() {\r\n        const allMoney = this.beans.reduce((sum, b) => sum+b.cash, 0) + this.organizations.reduce((sum, o) => sum + o.cash, 0);\r\n        const percent = allMoney / 100;\r\n        const yearlyInflationDollars = Math.round(percent * 1);\r\n        if (yearlyInflationDollars > 0){\r\n            const richest = this.beans.reduce((obj: {winner?: Bean, max: number}, b) => {\r\n                if (b.cash > obj.max){\r\n                    obj.winner = b;\r\n                    obj.max = b.cash;\r\n                }\r\n                return obj;\r\n            }, {max: 0});\r\n            if (richest.winner){\r\n                richest.winner.cash += yearlyInflationDollars;\r\n            }\r\n        }\r\n    }\r\n    resetYearlyCounters() {\r\n        this.yearsEvents = [];\r\n        this.cities.forEach((c) => {\r\n            c.yearsPartyDonations = 0;\r\n        })\r\n    }\r\n    addCharity(good: TraitGood, name: string, budget: number) {\r\n        const charity = new Charity();\r\n        charity.name = name;\r\n        charity.good = good;\r\n        charity.seasonalBudget = budget;\r\n        this.party.organizations.push(charity);\r\n    }\r\n}\r\nfunction shuffle(array: Array<any>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface Tile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\nexport class City implements Tile, IBeanContainer {\r\n    public name: string = '';\r\n    public url: string = '';\r\n    public type: string = '';\r\n    public key: number = 0;\r\n    public get beans(): Bean[] {\r\n        return this.historicalBeans.filter((x) => x.alive);\r\n    }\r\n    public set beans(beans: Bean[]){\r\n        throw \"can't set city beans\";\r\n    }\r\n    public historicalBeans: Bean[] = [];\r\n    public houses: any[] = [];\r\n    public partyHQ?: ICityPartyHQ;\r\n    public yearsPartyDonations: number = 0;\r\n    public majorityEthnicity: TraitEthno = 'circle';\r\n\r\n    public environment?: IDate;\r\n    public doOnCitizenDie: Array<(b: Bean, c: City) => void> = [];\r\n\r\n    getRandomCitizen(): Bean|null{\r\n        const shuffled = shuffle(this.beans);\r\n        if (shuffled.length > 0) {\r\n            return shuffled[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    onCitizenDie(deadBean: Bean){\r\n        if (deadBean.cash > 0){\r\n            const lucky = this.getRandomCitizen();\r\n            if (lucky) {\r\n                lucky.cash = lucky.cash + deadBean.cash;\r\n                deadBean.cash = 0;\r\n            }\r\n        }\r\n        this.doOnCitizenDie.forEach((x) => x(deadBean, this));\r\n    }\r\n    breedBean(parent: Bean) {\r\n        let bean = GenerateBean(this, this.historicalBeans.length);\r\n        bean.ethnicity = parent.ethnicity;\r\n        bean.job = Math.random() <= .5 ? parent.job : GetRandom(['doc', 'farmer', 'builder', 'jobless']);\r\n        bean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n        if (this.environment)\r\n            bean.dob = {year: this.environment?.year, season: this.environment?.season};\r\n        this.historicalBeans.push(bean);\r\n    }\r\n    getTaxesAndDonations(party: Party, economy: Economy){\r\n        if (this.partyHQ){\r\n            this.beans.forEach((b) => {\r\n                const donation = b.maybeDonate(economy);\r\n                party.materialCapital += donation;\r\n                this.yearsPartyDonations += donation;\r\n            });\r\n        }\r\n    }\r\n    calculate(economy: Economy, law: { policies: Policy[]; }) {\r\n        const c = this.beans.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\r\n            switch(bean.ethnicity){\r\n                case 'circle': count.circle++;break;\r\n                case 'square': count.square++;break;\r\n                case 'triangle': count.triangle++;break;\r\n            }\r\n            return count;\r\n        }, {circle: 0, square: 0, triangle: 0});\r\n        if (c.circle > c.square && c.circle > c.triangle){\r\n            this.majorityEthnicity = 'circle';\r\n        } else if (c.square > c.circle && c.square > c.triangle){\r\n            this.majorityEthnicity = 'square';\r\n        } else {\r\n            this.majorityEthnicity = 'triangle';\r\n        }\r\n    }\r\n}\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'book'|'music'|'heart'|'noFaith';\r\nexport type TraitFood = 'hungry'|'sated'|'stuffed';\r\nexport type TraitShelter = 'podless'|'crowded'|'homeowner';\r\nexport type TraitHealth = 'sick'|'bruised'|'fresh';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitShelter|TraitHealth;\r\nexport type Axis = 'vote'|'healthcare'|'faith'|'trade';\r\n\r\nexport enum MaslowScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport const TraitToModifier: {[key in TraitFood|TraitShelter|TraitHealth]: IHappinessModifier} = {\r\n    'podless': {reason: 'Homeless', mod: MaslowScore.Deficient},\r\n    'crowded': {reason: 'Renting', mod: MaslowScore.Sufficient},\r\n    'homeowner': {reason: 'Homeowner', mod: MaslowScore.Abundant},\r\n    'sick': {reason: 'Sick', mod: MaslowScore.Deficient},\r\n    'bruised': {reason: 'Bruised', mod: MaslowScore.Sufficient},\r\n    'fresh': {reason: 'Healthy', mod: MaslowScore.Abundant},\r\n    'hungry': {reason: 'Hungry', mod: MaslowScore.Deficient},\r\n    'sated': {reason: 'Sated', mod: MaslowScore.Sufficient},\r\n    'stuffed': {reason: 'Stuffed', mod: MaslowScore.Abundant},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'builder': return 'shelter';\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'shelter': return 'builder';\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'shelter'|'medicine'|'fun';\r\n\r\nexport interface Law {\r\n    policies: Policy[];\r\n}","import { Trait, Axis, TraitCommunity, TraitIdeals } from \"./World\";\r\nimport { IInstitution, IOrganization } from \"./simulation/Institutions\";\r\n\r\n\r\nexport interface Party extends IInstitution{\r\n    slogan: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    \r\n    availablePolicies: Policy[]; \r\n    proposedPolicy?: Policy;\r\n    availableCampaigns: Campaign[];\r\n    activeCampaigns: Campaign[];\r\n\r\n    politicalCapital: number;\r\n    materialCapital: number;\r\n\r\n    seasonalIncome: number;\r\n    seasonalActions: number;\r\n    activeHQs: number[];\r\n}\r\n\r\nexport class BaseParty implements Party{\r\n    key = 1;\r\n    playerKey = 1;\r\n    organizations: IOrganization[] = [];\r\n    public name: string = \"Citizen's Party\";\r\n    public slogan: string = \"Vote for us!\";\r\n    public community: TraitCommunity = 'state';\r\n    public ideals: TraitIdeals = 'trad';\r\n    public availablePolicies: Policy[] = [];\r\n    public proposedPolicy?: Policy;\r\n    public availableCampaigns: Campaign[] = [];\r\n    public activeCampaigns: Campaign[] = [];\r\n    public politicalCapital: number = 10;\r\n    public materialCapital: number = 20;\r\n    public activeHQs: number[] = [];\r\n\r\n    public seasonalIncome: number = 0;\r\n    public seasonalActions: number = 0;\r\n    fundOrganizations(): void{\r\n        this.organizations.forEach((org) => {\r\n            if (this.materialCapital >= org.seasonalBudget){\r\n                this.materialCapital -= org.seasonalBudget;\r\n                org.cash += org.seasonalBudget;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport interface ICityPartyHQ{\r\n    cityKey: number;\r\n}\r\nexport class CityPartyHQ implements ICityPartyHQ{\r\n    cityKey: number = 0;\r\n}\r\n\r\nexport interface PoliticalEffect {\r\n    key: Trait;\r\n    /**\r\n     * magnitude (-3 to +3)\r\n     */\r\n    mag: number;\r\n}\r\nexport interface Policy {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    axis?: Axis;\r\n}\r\nexport interface Campaign {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    cityKey?: number;\r\n\r\n    seasonalCost: number;\r\n}","\r\nexport interface IEvent{\r\n    icon: string;\r\n    message: string;\r\n}\r\n\r\nexport class PubSub<T>{\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public publish(args: T){\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\nexport class EventBus{\r\n    physicalCapital = new ChangePubSub();\r\n    politicalCapital = new ChangePubSub();\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick: () => void;\r\n    closeButtonText?: string;\r\n    hideCloseButton?: boolean\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (this.props.hideCloseButton)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n        return null;\r\n        }\r\n        return (\r\n        <div className=\"modal\">\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../Bean\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: Bean[], \r\n    need: (b: Bean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import { Trait } from \"../World\";\r\nimport { Bean } from \"../Bean\";\r\n\r\n\r\nexport function reportIdeals(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: Bean[], defWin: Trait, beanPropGet: (bean: Bean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}","import React from \"react\";\r\nimport { City, Trait } from \"./World\";\r\nimport { keyToName } from \"./App\";\r\nimport { Bean } from \"./Bean\";\r\nimport { NeedReadout } from \"./widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno } from \"./simulation/City\";\r\n\r\ninterface OverviewPanelP{\r\n    city?: City,\r\n    beans: Bean[],\r\n    clearCity: () => void;\r\n}\r\n\r\nexport class OverviewPanel extends React.Component<OverviewPanelP> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    hq(){\r\n        if (this.props.city){\r\n            if (this.props.city.partyHQ) {\r\n                return <div>\r\n                    🏢 Has Party HQ<br/>\r\n                    ${this.props.city.yearsPartyDonations.toFixed(2)} donations this year\r\n                </div>\r\n            }\r\n            return <div className=\"text-center\">\r\n                <button type=\"button\" className=\"important\">\r\n                    🏢 Add HQ for $10\r\n                </button><br/>\r\n                <small>+1 action per season &amp; chance for donations</small>\r\n            </div>\r\n        }\r\n        return null;\r\n    }\r\n    render(){\r\n        let header = null;\r\n        if (this.props.city){\r\n            header = <div><b>{this.props.city.name}</b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n            </div>;\r\n        }\r\n        const avg_happy = this.props.beans.reduce((sum, x) => sum+x.lastHappiness, 0) / (this.props.beans.length || 1);\r\n        const avg_cash = this.props.beans.reduce((sum, x) => sum+x.cash, 0) / (this.props.beans.length || 1);\r\n        const avg_approval = this.props.beans.reduce((sum, x) => sum+x.lastPartySentiment, 0) / (this.props.beans.length || 1);\r\n        return (                \r\n        <div>\r\n            {header}\r\n            <div className=\"header\"><b>Demographics</b></div>\r\n            <div>\r\n                <b>Population</b>&nbsp;\r\n                <span>{this.props.beans.length}</span>\r\n            </div>\r\n            <AxisReadout report={reportEthno(this.props.beans)}>Ethnicity</AxisReadout>\r\n            <div className=\"header\"><b>Situation</b></div>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\">Housing</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n            <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n            <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n            <div className=\"header\"><b>Electorate</b></div>\r\n            {/* <AxisReadout report={reportIdeals(this.props.beans)}>Sentiment</AxisReadout> */}\r\n            <AxisReadout report={reportCommunity(this.props.beans)}>Community</AxisReadout>\r\n            <AxisReadout report={reportIdeals(this.props.beans)}>Ideals</AxisReadout>\r\n            <div className=\"header\"><b>Party</b></div>\r\n            {\r\n                this.hq()\r\n            }\r\n            <div>\r\n                <b>Approval</b>&nbsp;\r\n                <span>{avg_approval.toFixed(0)}%</span>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{report: {avg: number, winner: Trait}}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent+'%'\r\n        }\r\n        return (                \r\n        <div>\r\n            <b>\r\n                { this.props.children }\r\n            </b>&nbsp;&nbsp;\r\n            <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner\" style={style}>\r\n                    {percent}%\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import { Bean } from \"./Bean\";\r\nimport React from \"react\";\r\n\r\ninterface AnimatedBeanP {\r\n  bean: Bean;\r\n  costOfLiving: number;\r\n  onClick: () => void;\r\n}\r\n\r\nexport class AnimatedBean extends React.Component<AnimatedBeanP, {paused: boolean}> {\r\n    constructor(props: AnimatedBeanP) {\r\n      super(props);\r\n      this.timerID = null;\r\n      this.delaySeedSec = (Math.random() * 60) + this.props.bean.key;\r\n      this.waitSeedSec = 1 + (Math.random() * 3) + this.props.bean.key;\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    timerID: number|null;\r\n    delaySeedSec: number;\r\n    waitSeedSec: number;\r\n    componentDidMount() {\r\n      this.startWander();\r\n    }\r\n    startWander(){\r\n      this.setState({paused: false});\r\n      this.timerID = window.setTimeout(\r\n        () => this.stopWander(),\r\n        (1000 * this.waitSeedSec)\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      if(this.timerID)\r\n        window.clearInterval(this.timerID);\r\n    }\r\n    stopWander(){\r\n      this.setState({paused: true});\r\n      this.timerID = window.setTimeout(\r\n        () => this.startWander(),\r\n        1000\r\n      );\r\n    }\r\n    getIdea(){\r\n        if (this.state.paused) {\r\n            const idea = this.props.bean.getIdea(this.props.costOfLiving)\r\n            if (idea){\r\n                return <span className={idea.bad ? 'bad idea': 'idea'}>{idea.idea}</span>\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n      let classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n      classes += this.state.paused || !this.props.bean.alive ? ' paused' : '';\r\n      let title = `${this.props.bean.food} ${this.props.bean.shelter} ${this.props.bean.health} ${this.props.bean.community} ${this.props.bean.ideals} $${this.props.bean.cash}`\r\n      return (\r\n        <span className={classes+\" bean bean-walker interactable\"}\r\n          style={{animationDelay: '-'+this.delaySeedSec+'s'}} title={title}\r\n          onClick={(e) => {e.stopPropagation(); this.props.onClick(); }}\r\n        >\r\n          {this.props.bean.getFace()} {this.getIdea()}\r\n        </span>\r\n      )\r\n    }\r\n  }","import { Tile, City } from \"./World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport React from \"react\";\r\n\r\ninterface WorldTilePs {\r\n    tile: Tile;\r\n    city: City;\r\n    costOfLiving: number;\r\n    onClick: () => void;\r\n    onBeanClick: (b: Bean) => void;\r\n  }\r\nexport class WorldTile extends React.Component<WorldTilePs> {\r\n    constructor(props: WorldTilePs) {\r\n      super(props);\r\n      this.state = {\r\n        tile: null,\r\n        city: null,\r\n        activeTileID: null,\r\n      }\r\n    }\r\n    render() {\r\n      const beans = this.props.city.beans.map((b: Bean) => {\r\n        return (\r\n          <AnimatedBean bean={b} key={b.key} costOfLiving={this.props.costOfLiving} onClick={() => this.props.onBeanClick(b)}></AnimatedBean>\r\n        )\r\n      })\r\n      const deaths = this.props.city.historicalBeans.filter((x) => !x.alive).map((b: Bean, i) => {\r\n        return (\r\n          <span key={i} className=\"dead\" style={{left: (i*10)+'px'}}>⚰️</span>\r\n        )\r\n      })\r\n      const houses = this.props.city.houses.map((h: any, i) => {\r\n        const style = {\r\n            left: h.left+'%',\r\n            top: h.top+'%'\r\n        }\r\n        return (\r\n          <span key={i} style={style} className=\"house\">🏡</span>\r\n        )\r\n      })\r\n      return (\r\n        <div className=\"tile\" onClick={() => this.props.onClick()}>\r\n          {deaths}\r\n          {houses}\r\n          {beans}\r\n          <span className=\"tile-label\">{this.props.tile.name}</span>\r\n          <img src={this.props.tile.url} alt={this.props.tile.type} />\r\n        </div>\r\n      )\r\n    }\r\n  }","import { Bean } from \"./Bean\";\r\nimport React from \"react\";\r\nimport { World, TraitJob } from \"./World\";\r\nimport { NeedReadout } from \"./widgets/NeedReadout\";\r\nimport { Listing } from \"./Economy\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport class EconomyReport extends React.Component<{world: World}, {paused: boolean}> {\r\n    constructor(props: {world: World}) {\r\n      super(props);\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    render() {\r\n      let beans = this.props.world.beans;\r\n      const food_median = median(beans.map(x => x.discrete_food));\r\n      const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n      const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n      const wealth_avg = wealth_total / (beans.length || 1);\r\n      const wealth_median = median(beans.map(x => x.cash));\r\n      const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n      const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n      const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n      const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n      const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n      const jobs = beans.reduce((obj, b) => {\r\n        obj[b.job] = (obj[b.job] || 0)+1;\r\n        return obj;\r\n      }, {} as {[key in TraitJob]: number});\r\n      const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n      function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: Listing){\r\n        obj.supply += l.quantity;\r\n        obj.price += l.price;\r\n        obj.count++;\r\n        obj.avg = obj.price / obj.count;\r\n        return obj;\r\n      }\r\n      const food = this.props.world.economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const meds = this.props.world.economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const houses = this.props.world.economy.market.listings['shelter'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      return (\r\n        <div className=\"pad-20\">\r\n          <h3>Citizen's Health</h3>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🍞 Food Security</strong> Median:{food_median} meals <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n              Supply: {food.supply} meals. Avg. price ${food.avg.toFixed(2)} <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.food} meals\r\n            </div>\r\n            <div>\r\n              <strong>🩺 Healthcare</strong> Median:{health_median} <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n              Supply: {meds.supply} treatments. Avg. price ${meds.avg.toFixed(2)}  <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.medicine} treatments\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🏡 Housing</strong> <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\" className=\"big\"></NeedReadout>\r\n              Supply: {houses.supply} units. Avg. price ${houses.avg.toFixed(2)}   <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.shelter} units\r\n            </div>\r\n          </div>\r\n          <h3>Economic Health</h3>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>💰 Wealth</strong> Household Wealth: {wealth_total.toFixed(2)}<br/>\r\n              {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${this.props.world.economy.getCostOfLiving().toFixed(2)} <br/>\r\n              Median: ${wealth_median.toFixed(2)} Average: ${wealth_avg.toFixed(2)} <br/>\r\n              Top {wealthy_percentage.toFixed(1)}% of beans own {wealthy_ownership.toFixed(1)}% of the wealth\r\n            </div>\r\n            <span>\r\n              <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n              <strong>Employment</strong>\r\n              <ul className=\"boxes\">\r\n                <li>{jobs.farmer} farmers</li>\r\n                <li>{jobs.builder} builders</li>\r\n                <li>{jobs.doc} doctors</li>\r\n              </ul>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React, { SyntheticEvent, ChangeEvent } from \"react\";\r\nimport { World, TraitGood } from \"./World\";\r\nimport './panels.css';\r\nimport { Charity } from \"./simulation/Institutions\";\r\n\r\nexport interface charityPS{\r\n    world: World,\r\n    onFoundCharity: (good: TraitGood, name: string, budget: number) => void\r\n}\r\nexport interface charityS{\r\n    show: boolean,\r\n    selectedCharityGood: TraitGood|null,\r\n    selectedCharityBudget: number\r\n    selectedCharityName: string\r\n}\r\n\r\nexport class CharityPanel extends React.Component<charityPS, charityS> {\r\n    constructor(props: charityPS) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            selectedCharityGood: null,\r\n            selectedCharityName: 'Our Lady of ',\r\n            selectedCharityBudget: 1\r\n        }\r\n    }\r\n    onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n      this.setState({selectedCharityGood: event.target.value as TraitGood});\r\n    }\r\n    onChangeBudgetValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n      this.setState({selectedCharityBudget: +event.target.value});\r\n    }\r\n    onFoundCharity = () => {\r\n        if (this.state.selectedCharityGood){\r\n            this.props.onFoundCharity(this.state.selectedCharityGood, this.state.selectedCharityName, this.state.selectedCharityBudget);\r\n        }\r\n        this.setState({selectedCharityGood: null, show: false});\r\n    }\r\n    panel(){\r\n        if (this.state.show){\r\n            return (\r\n                <div className=\"panel-add\">\r\n                    <input type=\"text\" name=\"name\" value={this.state.selectedCharityName} onChange={(change) => this.setState({selectedCharityName: change.target.value})}  />\r\n                    <div onChange={this.onChangeValue}>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"type\" value=\"food\" /> Food Bank\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"type\" value=\"shelter\" /> Homeless Shelter\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"type\" value=\"medicine\" /> Free Clinic\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Seasonal Budget: \r\n                            <input type=\"number\" style={{width:50+'px'}} onChange={this.onChangeBudgetValue} value=\"1\" min=\"1\" max=\"50\" />\r\n                        </label>\r\n                        <button type=\"button\" className=\"callout\" onClick={this.onFoundCharity}>\r\n                            Found Charity\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n    list(){\r\n        return this.props.world.party.organizations.filter((x) => x instanceof Charity).map((i) => {\r\n            const charity = i as unknown as Charity;\r\n            return <div key={charity.key}>\r\n                💗 <b>{charity.name}</b> Has given {charity.beansHelped} beans free {charity.good}. {charity.inventory} {charity.good} and ${charity.cash.toFixed(2)} cash.\r\n            </div>\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"subheader\">\r\n                    <h3>Charity</h3>\r\n                    <button type=\"button\" className=\"callout\" onClick={() => this.setState({show: true})} >💗 Found New Charity</button>\r\n                </div>\r\n                <span>Charities help needy beans while also improving their party loyalty</span>\r\n                {this.list()}\r\n                {this.panel()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\n\r\nexport interface EventsPanelPS\r\n{\r\n    events: IEvent[]\r\n}\r\n\r\nexport class EventsPanel extends React.Component<EventsPanelPS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let events = this.props.events.map((e, i) => {\r\n            return <div key={i}>\r\n                <span>{e.icon}</span>&nbsp;\r\n                <span>{e.message}</span>\r\n            </div>\r\n        });\r\n        if (this.props.events.length === 0){\r\n            events = [<div key={0}>\r\n                <small>No events yet this year</small>\r\n            </div>]\r\n        }\r\n        return (                \r\n        <div>\r\n            <div>\r\n                <b>Events</b>\r\n            </div>\r\n            {events}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { City, Trait, Law, IHappinessModifier } from \"./World\";\r\nimport { keyToName } from \"./App\";\r\nimport { Bean } from \"./Bean\";\r\nimport { NeedReadout } from \"./widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno } from \"./simulation/City\";\r\nimport { Economy } from \"./Economy\";\r\nimport { Party } from \"./Politics\";\r\nimport { IEvent, EventBus } from \"./events/Events\";\r\nimport { withinLastYear } from \"./simulation/Time\";\r\n\r\ninterface BeanPanelP{\r\n    city: City,\r\n    bean: Bean,\r\n    economy: Economy,\r\n    law: Law,\r\n    party: Party,\r\n    clearCity: () => void;\r\n    bus: EventBus\r\n    solicit: (bean: Bean) => boolean;\r\n    insult: (bean: Bean) => void;\r\n    support: (bean: Bean) => void;\r\n}\r\n\r\ninterface BeanPanelS{\r\n    faceOverride?: string;\r\n}\r\n\r\nexport class BeanPanel extends React.Component<BeanPanelP, BeanPanelS> {\r\n    constructor(props: BeanPanelP) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    solicit = () => {\r\n        if (this.props.solicit(this.props.bean)){\r\n            this.setState({faceOverride: '😇'});\r\n            this._resetFace();\r\n        }\r\n    }\r\n    insult = () => {\r\n        this.props.insult(this.props.bean);\r\n        this.setState({faceOverride: '😡'});\r\n        this._resetFace();\r\n    }\r\n    support = () => {\r\n        this.props.support(this.props.bean);\r\n        this.setState({faceOverride: '🤩'});\r\n        this._resetFace();\r\n    }\r\n    _resetFace(){\r\n        setTimeout(() => {\r\n            this.setState({faceOverride: undefined})\r\n        }, 5000);\r\n    }\r\n    happyTable(mods: IHappinessModifier[]){\r\n        return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{x.reason}</td>\r\n                <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n            </tr>\r\n        });\r\n    }\r\n    render(){\r\n        const classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n        const chance = this.props.bean.chanceToDonate(this.props.economy, true);\r\n        const chanceText = (chance * 100).toFixed(0) + '% to gain Physical Capital';\r\n        const actionLimit = this.props.party.activeHQs.length + 2;\r\n        return (                \r\n        <div>\r\n            <div>\r\n                <b>{this.props.bean.name}&nbsp;\r\n                <small>\r\n                    of {this.props.city.name}\r\n                </small>\r\n                </b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n            </div>\r\n            <div className=\"bean-view\">                \r\n                <span className={classes+\" bean\"}>\r\n                    {\r\n                        this.state.faceOverride === undefined ? this.props.bean.getFace() : this.state.faceOverride\r\n                    }\r\n                </span>\r\n            </div>\r\n            <table className=\"width-100p\"><tbody>\r\n                <tr>\r\n                    <td>\r\n                        <b>Ethnicity</b> \r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.ethnicity]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2} className=\"header\">\r\n                        <b>Situation</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Food Security</b> \r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.food]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Shelter</b>\r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.shelter]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Healthcare</b>\r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.health]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Money</b>\r\n                    </td>\r\n                    <td>\r\n                        ${this.props.bean.cash.toFixed(2)}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Happiness</b>\r\n                    </td>\r\n                    <td>\r\n                        {Math.round(this.props.bean.lastHappiness)}%\r\n                    </td>\r\n                </tr>\r\n                {this.happyTable(this.props.bean.getHappinessModifiers(this.props.economy, this.props.city, this.props.law))}\r\n                <tr>\r\n                    <td>\r\n                        <b>Community</b>\r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.community]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Ideal</b>\r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.ideals]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2} className=\"header\">\r\n                        <b>Party</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Approval</b>\r\n                    </td>\r\n                    <td>\r\n                        {Math.round(this.props.bean.lastPartySentiment)}%\r\n                    </td>\r\n                </tr>\r\n                {this.happyTable(this.props.bean.getSentimentModifiers(this.props.economy, this.props.city, this.props.law, this.props.party).party)}\r\n                {/* <tr>\r\n                    <td>\r\n                        <b>Party Loyalty</b>\r\n                    </td>\r\n                    <td>\r\n                        <span>{Math.round(this.props.bean.partyLoyalty * 100)}%</span>\r\n                    </td>\r\n                </tr> */}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"text-center\">\r\n                <button type=\"button\" disabled={chance < 0.05} className=\"important\" onClick={this.solicit} title={chanceText}>🤲 Solicit Donation</button>\r\n                <br/>\r\n                <small><i>Does not cost an Activity</i></small>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <button type=\"button\" className=\"callout\" onClick={this.insult} disabled={!this.props.bean.canInsult()}\r\n                    title=\"Decrease this bean's party approval to gain Political Capital\"\r\n                >😈 Publically Insult</button>\r\n                <button type=\"button\" className=\"callout\" onClick={this.support} disabled={!this.props.bean.canSupport()}\r\n                    title=\"Spend Political Capital to increase this bean's party approval\"\r\n                >😘 Publically Support</button>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <small>\r\n                    {actionLimit - this.props.party.seasonalActions} of {actionLimit} Activities remaining\r\n                </small>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { City } from \"../World\";\r\n\r\nexport interface DropdownPS<T>{\r\n    options: Array<T&{key: any}>,\r\n    onChange: (key: any) => void\r\n}\r\ninterface DropdownS{\r\n    key: any;\r\n}\r\n\r\nexport abstract class Dropdown<T> extends React.Component<DropdownPS<T>, DropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n    }\r\n    abstract getTextForOption(data: T): string;\r\n    options(){\r\n        return this.props.options.map((o) => {\r\n            return <option value={o.key} key={o.key}>{this.getTextForOption(o)}</option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key}>\r\n            {this.options()}\r\n        </select>\r\n    }\r\n}\r\nexport class CityDropdown extends Dropdown<City>{\r\n    getTextForOption(data: City): string{\r\n        return data.name;\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { TraitCommunity, TraitIdeals, City } from \"../World\";\r\nimport { CityDropdown } from \"../widgets/Dropdown\";\r\n\r\nexport interface FoundPartyPS\r\n{\r\n    cities: City[],\r\n    onFound: (state: FoundPartyS) => void\r\n}\r\nexport interface FoundPartyS\r\n{\r\n    community: TraitCommunity|null\r\n    ideal: TraitIdeals|null,\r\n    name: string,\r\n    slogan: string,\r\n    members: string,\r\n    goal: string,\r\n    cityKey: number\r\n}\r\n\r\nexport class FoundParty extends React.Component<FoundPartyPS, FoundPartyS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            community: null,\r\n            ideal: null,\r\n            name: \"Citizen's Party\",\r\n            slogan: \"Vote for us!\",\r\n            members: \"Citizens\",\r\n            goal: \"Legislation\",\r\n            cityKey: 0\r\n        }\r\n    }\r\n    onCommunity(val: TraitCommunity){\r\n        this.setState({community: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onIdeal(val: TraitIdeals){\r\n        this.setState({ideal: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onBigFourChange(){\r\n        if (this.state.community === 'ego' && this.state.ideal === 'trad'){\r\n            this.setState({\r\n                name: 'Liberal Family Party',\r\n                slogan: \"Father Knows Best.\",\r\n                members: \"Farmers\", goal: \"Tariffs\"});\r\n        } else if (this.state.community === 'ego' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Free Worker's Party\",\r\n                slogan: \"Liberty for Labor!\",\r\n                members: \"Builders\", goal: \"Right to Strike\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'trad') {\r\n            this.setState({\r\n                name: \"National Landowners' Party\",\r\n                slogan: \"For Culture & Country!\",\r\n                members: \"Homeowners\", goal: \"Repeal Property Tax\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Social People's Party\",\r\n                slogan: \"Equality, Guaranteed.\",\r\n                members: \"Penniless\", goal: \"Food Welfare\"});\r\n        }\r\n    }\r\n    onName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({name: e.target.value});\r\n    }\r\n    onSlogan = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({slogan: e.target.value});\r\n    }\r\n    onCity = (key: any) => {\r\n        this.setState({cityKey: +key});\r\n    }\r\n    render(){\r\n        return <div>            \r\n          <h2>Found your Political Party</h2>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My fellow party members believe the\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"state\" checked={this.state.community === 'state'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)} /> <b>Government</b>\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"ego\" checked={this.state.community === 'ego'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)}/> <b>Individual</b>\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              is responsible for well-being.\r\n            </div>\r\n            <div>\r\n              My fellow party members believe in\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"trad\" checked={this.state.ideal === 'trad'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)}/> <b>Traditional</b>\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"prog\" checked={this.state.ideal === 'prog'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)} /> <b>Progressive</b>\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              social values.\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My party's first members are mostly <b>{this.state.members}</b>\r\n            </div>\r\n            <div>\r\n              My party's first major goal is to pass <b>{this.state.goal}</b>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My party is named <input type=\"text\" value={this.state.name} onChange={this.onName} />\r\n            </div>\r\n            <div>\r\n              My party's slogan is <input type=\"text\" value={this.state.slogan} onChange={this.onSlogan}  />\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My party is based in&nbsp;<CityDropdown options={this.props.cities} onChange={this.onCity}></CityDropdown>\r\n            </div>\r\n            <div>\r\n              \r\n            </div>\r\n          </div>\r\n          <button type=\"button\" disabled={this.state.community == null || this.state.ideal == null} className=\"important btn-found-party\" onClick={() => this.props.onFound(this.state)}>Found the {this.state.name}</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { World } from \"../World\";\r\nimport { policy } from \"../App\";\r\n\r\nexport interface PartyOverviewPS{\r\n    world: World;\r\n}\r\ninterface PartyOverviewS{\r\n\r\n}\r\n\r\nexport class PartyOverview extends React.Component<PartyOverviewPS, PartyOverviewS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    render(){\r\n        const hqs = this.props.world.cities.filter((x) => x.partyHQ != null);\r\n        const hq_names = hqs.map((x, i) => <i>{(i > 0 ? ', ': '')}{x.name}</i>);\r\n        const actionLimit = this.props.world.party.activeHQs.length + 2;\r\n        return <div>\r\n            <div className=\"col-2\">\r\n            <div>\r\n              <h2>\r\n                {this.props.world.party.name}\r\n              </h2>\r\n            </div>\r\n            <div>              \r\n              <h2 className=\"slogan-group\">\r\n                <span className=\"slogan-before\">\r\n                  <span className=\"align-base\">\r\n                    ★★★\r\n                  </span>\r\n                </span>\r\n                <span className=\"slogan\">\r\n                  {this.props.world.party.slogan}\r\n                </span>\r\n                <span className=\"slogan-after\">\r\n                  <span className=\"align-base\">\r\n                    ★★★\r\n                  </span>\r\n                </span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"policies\">\r\n            {this.props.world.party.availablePolicies.map((p) => policy(p))}\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n                <h3 className=\"small\">Finances</h3>\r\n                <small>Where money is being raised and spent</small>\r\n            <table className=\"classic\">\r\n                {/* <thead>\r\n                    <tr>\r\n                        <th colSpan={3}>Finances</th>\r\n                    </tr>\r\n                </thead> */}\r\n                <tbody>\r\n                <tr>\r\n                    <th rowSpan={3}>Revenue</th>\r\n                    <td>\r\n                        Solicitations\r\n                    </td>\r\n                    <td> +$1 </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Unsolicited Donations</td>\r\n                    <td>+$1</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Fundraisers</td>\r\n                    <td>+$1</td>\r\n                </tr>\r\n                <tr>\r\n                    <th className=\"border-t\" rowSpan={2}>Expenses</th>\r\n                    <td className=\"border-t\">\r\n                        Charities\r\n                    </td>\r\n                    <td className=\"border-t\">\r\n                        -$1\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Propaganda\r\n                    </td>\r\n                    <td>\r\n                        -$1\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th className=\"border-t\" rowSpan={2}>Physical<br/>Capital</th>\r\n                    <td className=\"border-t\">\r\n                        Income\r\n                    </td>\r\n                    <td className=\"border-t\">\r\n                        ${this.props.world.party.seasonalIncome.toFixed(2)}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        On Hand\r\n                    </td>\r\n                    <td>\r\n                        ${this.props.world.party.materialCapital.toFixed(2)}\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n            <div>\r\n                <h3 className=\"small\">Headquarters</h3>\r\n                <small>Party HQs add Activities and cash donations</small>\r\n                <div>\r\n                    <strong>HQ Locations:</strong> {hq_names}\r\n                </div>\r\n                <h3 className=\"small\">Activities</h3>\r\n                <small>Number of things that can be done in one season</small>\r\n                <div>\r\n                    2 free actions + {this.props.world.party.activeHQs.length} Activities from party HQs\r\n                </div>\r\n                <div>\r\n                    {actionLimit - this.props.world.party.seasonalActions} Activities remaining this season\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { ChangePubSub } from \"../events/Events\";\r\n\r\nexport class BubbleText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<{s: string, t: number, c?: string}>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n\r\n    onChange = (ev: {change: number}) => {\r\n        const id = +(new Date());\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                s: (positive ? '+': '') + ev.change,\r\n                t: id,\r\n                c: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.t != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.t} className={[b.c, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.s}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { World, Tile, City, TraitGood } from './World';\nimport { GenerateWorld, GeneratePartyHQ } from './WorldGen';\nimport { Modal } from './Modal';\nimport { OverviewPanel } from './OverviewPanel';\nimport { Bean } from './Bean';\nimport { AnimatedBean } from './AnimatedBean';\nimport { WorldTile } from './WorldTile';\nimport { EconomyReport } from './EconomyReport';\nimport { CharityPanel } from './CharityPanel';\nimport { PoliticalEffect, Policy, CityPartyHQ } from './Politics';\nimport { EventsPanel } from './right-panel/Events';\nimport { BeanPanel } from './BeanPanel';\nimport { FoundParty, FoundPartyS } from './modal-content/FoundParty';\nimport { PartyOverview } from './modal-content/PartyOverview';\nimport { BubbleText } from './widgets/BubbleText';\nimport { Season, Now } from './simulation/Time';\n\n\n\nexport const keyToName = {\n  state: 'Statist', ego: 'Egoist', \n  trad: 'Traditionalist', prog: 'Progressive', \n  circle: 'Circle', square: 'Square', triangle: 'Triangle', \n  book: 'Book', heart: 'Heart', music: 'Music', noFaith: 'Faithless',\n  hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\n  podless: 'Homeless', crowded: 'Crowded', homeowner: 'Homeowner',\n  sick: 'Sick', bruised: 'Bruised', fresh: 'Fresh'\n};\nexport const magToText = {'-3':'---', '-2':'--', '-1':'-', '1':'+', '2':'++', '3':'+++' };\nfunction magToTextSw(magnitude: number){\n  switch(magnitude) {\n    case -3:\n      return '---';\n    case -2:\n      return '--';\n    case -1:\n      return '-';\n    case 1:\n      return '+';\n    case 2:\n      return '++';\n    case 3:\n      return '+++';\n    default:\n      return '/';\n  }\n}\nfunction compass(p: PoliticalEffect){\n  return (\n    <span className=\"badge\">\n      { keyToName[p.key] }\n      { magToTextSw(p.mag) }\n    </span>\n  )\n}\nexport function policy(p: Policy){\n  return (\n    <div className=\"policy\" key={p.key}>\n      <b>{p.key}</b>\n      <p>\n        {p.fx.map((x) => compass(x))}\n      </p>\n    </div>\n  )\n}\n\nexport type ModalView = 'policy'|'economy'|'campaign'|'party_creation'|'party';\ninterface AppPs{\n}\ninterface AppState{\n  world: World,\n  activeCityID: number|null;\n  activeBeanID: number|null;\n  activeModal: ModalView|null;\n  activeRightPanel: 'events'|'overview'|'goals';\n}\n\nclass App extends React.Component<AppPs, AppState>{\n  constructor(props: AppPs) {\n    super(props);\n    this.state = {\n      world: GenerateWorld(),\n      activeCityID: null,\n      activeBeanID: null,\n      activeModal: 'party_creation',\n      activeRightPanel: 'overview'\n    };\n    this.state.world.calculateComputedState();\n  }\n  endTurn() {\n    this.state.world.next();\n    this.setState({world: this.state.world});\n  }\n  foundParty = (state: FoundPartyS) => {\n    this.state.world.party.name = state.name;\n    this.state.world.party.slogan = state.slogan;\n    if (state.community)\n      this.state.world.party.community = state.community;\n    if (state.ideal)\n      this.state.world.party.ideals = state.ideal;\n    const city = this.state.world.cities.find((x) => x.key == state.cityKey);\n    if (city) {\n      city.beans.forEach((b) => {\n        if(state.community) b.community = state.community;\n        if(state.ideal) b.ideals = state.ideal;\n      })\n      GeneratePartyHQ(city, this.state.world.party);\n    }\n    this.state.world.calculateComputedState();\n    this.setState({\n      world: this.state.world,\n      activeModal: null});\n  }\n  foundCharity = (good: TraitGood, name: string, budget: number) => {\n    this.state.world.addCharity(good, name, budget);\n    this.setState({world: this.state.world});\n  }\n  insult = (bean: Bean) => {\n    this.state.world.party.politicalCapital += 1;\n    bean.lastInsultDate = Now(this.state.world);\n    if (bean.city)\n      bean.calculateBeliefs(this.state.world.economy, bean.city, this.state.world.law, this.state.world.party);\n    this.setState({world: this.state.world});\n    this.state.world.bus.politicalCapital.publish({change: 1});\n  }\n  support = (bean: Bean) => {\n    this.state.world.party.politicalCapital -= 1;\n    bean.lastApprovalDate = Now(this.state.world);\n    if (bean.city)\n      bean.calculateBeliefs(this.state.world.economy, bean.city, this.state.world.law, this.state.world.party);\n    this.setState({world: this.state.world});\n    this.state.world.bus.politicalCapital.publish({change: -1});\n  }\n  solicit = (bean: Bean) => {\n    const donation = bean.maybeDonate(this.state.world.economy, true);\n    if (donation > 0){\n      this.state.world.party.materialCapital += donation;\n      this.setState({world: this.state.world});\n      this.state.world.bus.physicalCapital.publish({change: donation});\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getPanel(){\n    switch(this.state.activeRightPanel){\n      case 'overview':\n        if (this.state.activeCityID == null) {\n          return <OverviewPanel beans={this.state.world.beans} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>\n        } else {\n          const city = this.state.world.cities.find((x) => x.key == this.state.activeCityID);\n          if (city) {\n            if (this.state.activeBeanID != null) {\n              const bean = city.beans.find((y) => y.key == this.state.activeBeanID);\n              if (bean)\n                return <BeanPanel bean={bean} city={city} \n                economy={this.state.world.economy} party={this.state.world.party} bus={this.state.world.bus} law={this.state.world.law}\n                solicit={this.solicit} insult={this.insult} support={this.support}\n                clearCity={() => this.setState({activeCityID: null, activeBeanID: null})}></BeanPanel>\n            }\n\n            return <OverviewPanel beans={city?.beans} city={city} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>            \n          }\n          else\n            return <div>\n            </div>\n        }\n      case 'goals':\n        return <div>\n          <div><b>Goals</b></div>\n          <ul>\n            <li>\n            ☑️ Create Party\n            </li>\n            <li>\n            ⭕️ Solicit Donations\n              <span title=\"Select a single Bean and Solicit Donation\">❔</span>\n            </li>\n            <li>\n            ⭕️ Review Party\n            </li>\n            <li>\n            ⭕️ Create Propaganda\n            </li>\n            <li>\n            ⭕️ Pass Legislation\n            </li>\n          </ul>\n        </div>\n      case 'events':\n        return <EventsPanel events={this.state.world.yearsEvents}></EventsPanel>\n    }\n  }\n  render() {\n    const season = Season[this.state.world.date.season];\n    const COL = this.state.world.economy.getCostOfLiving();\n    const tiles = this.state.world.cities.map((t) => {\n      return (\n        <WorldTile tile={t} city={t} costOfLiving={COL} key={t.key}\n          onClick={() => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeBeanID: null})} \n          onBeanClick={(b) => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeBeanID: b.key})} \n          ></WorldTile>\n      )\n    });\n    const seasonalCost = this.state.world.party.activeCampaigns.reduce((sum, x) => sum +x.seasonalCost, 0);\n    return (\n    <div className=\"canvas\">\n      <div className=\"world\">\n        {tiles}\n      </div>\n      <div className=\"overlay\">\n        <Modal show={this.state.activeModal == 'party_creation'} onClick={() => this.setState({activeModal: null})} hideCloseButton={true}>\n          <FoundParty cities={this.state.world.cities} onFound={this.foundParty}></FoundParty>\n        </Modal>\n        <Modal show={this.state.activeModal == 'party'} onClick={() => this.setState({activeModal: null})}>\n          <PartyOverview world={this.state.world}></PartyOverview>\n        </Modal>\n        <Modal show={this.state.activeModal == 'policy'} onClick={() => this.setState({activeModal: null})}>\n          <b>Active Policies</b>\n          <div className=\"policies\">\n            {this.state.world.party.availablePolicies.map((p) => policy(p))}\n          </div>\n        </Modal>\n        <Modal show={this.state.activeModal == 'campaign'} onClick={() => this.setState({activeModal: null})}>\n          <div className=\"policies\">\n            <div className=\"subheader\">\n                <h3>Propaganda</h3>\n                <button type=\"button\" className=\"callout\" onClick={() => void(0)} >🎙️ Create New Propaganda</button>\n            </div>\n            <span>\n              Propaganda changes beans' feelings on a wide variety of topics.\n            </span>\n            <CharityPanel world={this.state.world} onFoundCharity={this.foundCharity}></CharityPanel>\n            <div>\n              <b>Campaign Finances</b> <br/>\n              <b>Expenses</b> ${seasonalCost} <b>Surplus</b> ${this.state.world.party.seasonalIncome - seasonalCost}\n            </div>\n          </div>\n        </Modal>\n        <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({activeModal: null})}>\n          {(this.state.activeModal == 'economy'? <EconomyReport world={this.state.world}></EconomyReport> : '')}\n        </Modal>\n        <div className=\"left\">\n          <div className=\"top\">\n            <span>\n              &nbsp;\n              Year {this.state.world.date.year}, \n              &nbsp;\n              {season}\n            </span>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            <span>\n              Budget\n            </span>\n            <span className=\"pull-r\" style={{marginRight: 2+'em'}}>\n              election in {this.state.world.electionIn} seasons\n              &nbsp;\n              <button type=\"button\" className=\"important\" onClick={() => this.endTurn()}>End Turn</button>\n            </span>\n          </div>\n          <div className=\"bottom\">\n            <BubbleText changeEvent={this.state.world.bus.physicalCapital} icon=\"💰\">\n              <b>💰 Physical Capital</b> {this.state.world.party.materialCapital.toFixed(0)}\n            </BubbleText>\n            <BubbleText changeEvent={this.state.world.bus.politicalCapital} icon=\"🤝\">\n              <b>🤝 Political Capital</b> {this.state.world.party.politicalCapital}\n            </BubbleText>\n            <span>\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'economy'})}>Situation Report</button>\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'party'})}>Party</button>\n              <button type=\"button\" onClick={() => this.setState({activeModal:'campaign'})}>Campaigns</button>\n              <button type=\"button\" onClick={() => this.setState({activeModal:'policy'})}>Law</button>\n            </span>\n          </div>\n        </div>\n        <div className=\"right\">\n          <div className=\"full-width-tabs\">\n            <button onClick={() => this.setState({activeRightPanel: 'overview'})}>📈 Overview</button>\n            <button onClick={() => this.setState({activeRightPanel: 'events'})}>📣 Events</button>\n            <button onClick={() => this.setState({activeRightPanel: 'goals'})}>🏆 Goals</button>\n          </div>\n          {this.getPanel()}\n        </div>\n      </div>\n    </div>\n  )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}