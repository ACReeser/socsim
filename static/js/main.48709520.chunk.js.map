{"version":3,"sources":["events/Events.tsx","GameStorage.ts","World.tsx","MoverStoreSingleton.tsx","simulation/MoverBus.tsx","simulation/Beliefs.tsx","simulation/Utils.tsx","simulation/Geography.tsx","state/entity.state.ts","WorldGen.tsx","simulation/Government.tsx","simulation/Economy.tsx","simulation/Pickup.tsx","simulation/Bean.tsx","SignalStore.tsx","simulation/Player.tsx","simulation/RealEstate.tsx","simulation/City.tsx","simulation/Agent.tsx","simulation/AgentDuration.tsx","simulation/AgentDurationInstance.tsx","simulation/BeanAndCity.tsx","WorldSound.tsx","simulation/Time.tsx","simulation/MarketTraits.tsx","simulation/WorldSim.tsx","Game.tsx","state/features/world.reducer.ts","state/features/world.ts","state/hooks.ts","state/features/selected.reducer.ts","state/state.ts","widgets/ConfirmButton.tsx","widgets/StringDropdown.tsx","modal-content/BeliefRow.tsx","modal-content/Brainwashing.tsx","chrome/Subtab.tsx","simulation/Titles.tsx","modal-content/Society.tsx","i18n/text.ts","widgets/NeedReadout.tsx","modal-content/EconomyReport.tsx","modal-content/EscapeMenu.tsx","widgets/TreasuryReport.tsx","modal-content/Gov.tsx","modal-content/GreetingPanel.tsx","modal-content/LoadGameMenu.tsx","modal-content/MainMenu.tsx","widgets/RobotArm.tsx","modal-content/Research.tsx","modal-content/TraitsReport.tsx","petri-ui/AnimatedUFO2.tsx","simulation/Institutions.tsx","widgets/CostSmall.tsx","right-panel/HexPanel.tsx","petri-ui/Building.tsx","petri-ui/PetriHexes.tsx","petri-ui/Magnet.tsx","petri-ui/AnimatedBean.tsx","petri-ui/AnimatedPickup.tsx","petri-ui/Mover.tsx","petri-ui/WorldTile.tsx","widgets/CardButton.tsx","right-panel/BeanPanel.tsx","right-panel/OverviewPanel.tsx","right-panel/DetailPanel.tsx","right-panel/Events.tsx","right-panel/Goals.tsx","right-panel/MarketPanel.tsx","simulation/SeedGen.tsx","widgets/Autosave.tsx","widgets/BubbleText.tsx","widgets/CapsuleLabel.tsx","widgets/Modal.tsx","widgets/Season.tsx","widgets/SocialGraph.tsx","widgets/StopPlayFast.tsx","widgets/TimelyEventToggle.tsx","modal-content/Entitling.tsx","App.tsx","serviceWorker.js","index.js"],"names":["PubSub","onPublish","callbacks","current","undefined","args","this","forEach","c","callback","push","splice","indexOf","ChangePubSub","MaslowHappinessScore","GameStorageInstance","Dirty","Saving","rawID","localStorage","getItem","id","parseInt","isNaN","slots","i","brief","JSON","parse","rawgame","errors","game","e","world","raw","stringify","Name","cities","byID","name","Population","beans","allIDs","map","x","filter","y","lifecycle","length","Age","day","date","hour","season","year","setItem","saveSlot","toString","publish","MoverStoreInstance","cache","type","key","PickupPhysics","BeanPhysics","TraitIcon","Deficient","Sufficient","Abundant","GoodToThreshold","warning","sufficient","abundant","JobToGood","job","GoodIcon","EmoteIcon","EmotionWorth","EmotionSanity","CommonalityChances","PrimaryBeliefData","prog","noun","adj","icon","description","rarity","trad","state","ego","NarrativeBeliefData","rocket","dragon","music","noFaith","SecondaryBeliefData","Diligence","Natalism","Antinatalism","Charity","Progressivism","Libertarianism","Wanderlust","Germophobia","Parochialism","Cosmopolitanism","Capitalism","Socialism","Communism","Fraud","Naturalism","Hedonism","Gluttony","Paranoia","Depression","Optimism","Authority","Anarchism","Greed","Bloodthirst","Extroversion","Introversion","Charisma","Gossip","Antagonism","Enthusiasm","Sadism","Vandalism","Delirium","DelusionalMania","Catatonia","Neuroticism","Dogmatism","Insanities","InsanityChances","SanityChances","BeliefsAll","Object","keys","RandomBeliefBucket","reduce","list","str","t","MathClamp","input","min","max","Math","SampleNormalDistribution","seed","q","u","v","mean","standardDeviation","GetRandomFloat","sqrt","log","Hex","r","hex_directions","hex_direction","direction","hex_neighbor","hex","dir","hex_ring","center","radius","a","k","results","cube","b","hex_add","j","hex_spiral","concat","OriginAccelerator","point","velocity","accelerate_towards","mover","target","acceleration","maxSpeed","colDistance","brake","delta","magnitude","accelerator_coast","lerp","cube_lerp","z","cube_round","rx","round","ry","rz","x_diff","abs","y_diff","z_diff","cube_to_axial","axial_to_cube","cube_linedraw","N","cube_distance","Orientation","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","layout_pointy","hex_to_pixel","size","origin","h","M","polarToPoint","p","cos","az","sin","transformPoint","transform","BuildingIcon","UpgradedBuildingIcon","BuildingJobIcon","BuildingToGood","GoodToBuilding","JobToBuilding","BuildingToJob","DistrictHexSize","CreateEntitySlice","all","entity","nextID","EntityAddToSlice","slice","newEntity","RandomSeeds","GetRandomGenerator","Rand","PRNG","sfc32","GetRandomNumber","randomNumber","next","ceil","floor","GetRandomRoll","chance","GetRandom","choices","GetRandomIndex","RandomIdeal","RandomCommunity","RandomFaith","PI","CityPrefixes","CityFirstsnames","CityLastnames","GenerateCity","numberOfRings","hexes","hex_size","petriRadius","petriOrigin","GenerateGeography","deadBeanKeys","beanKeys","ufoKeys","pickupKeys","buildingKeys","pickupMagnetPoint","costOfLiving","buildingMap","districtKeys","GenerateDistrictsAndLots","city","lots","ds","isCenter","d","kind","hexString","GenerateDistrict","DistrictAddLots","urbanHexes","ruralHexes","district","lotSlice","lot","districtKey","GenerateBean","parent","hexPoint","newBean","cityKey","ethnicity","community","ideals","faith","stamina","health","food","discrete_food","discrete_health","discrete_sanity","discrete_stamina","discrete_fun","graceTicks","dob","sanity","beliefs","hedonHistory","priorities","happiness","flatAverage","maxSource","minSource","weightedAverage","lastHappiness","hedonFiveDayRecord","fairGoodPrice","bornInPetri","cash","ticksSinceLastSale","ticksSinceLastRelax","lastChatMS","action","actionData","act","activity_duration","beanBeliefCount","random","newBelief","includes","split","PlayerKnowsPrereq","prereq","seen","Array","isArray","some","PlayerKnowsBelief","BeliefString","LawData","group","axis","prereqs","IsLaw","gov","l","lawTree","GovPurchaseQualifiesForWelfare","law","buyer","good","bean","GovCanPayWelfare","price","AllGoods","MarketTransact","market","listing","demand","seller","salesTaxPercentage","MarketListingSubtract","listPrice","tax","grossPrice","bought","MarketGovernmentTransact","quantity","listings","EconomyTryTransact","economy","getSeller","minDemand","maxDemand","monthlyDemand","MarketLowestPriceListing","actualDemand","salesTaxPercent","receipt","unfulfilledMonthlyDemand","GetFairGoodPrice","econ","supply","monthlySupply","GetCostOfLiving","fullListings","numberOfSamePriceListings","lowPrice","GenerateEmoteFromBean","emote","Get","BeanCalculateHealth","difficulty","BeanCalculateShelter","BeanCalculateSanity","BeanCalculateFood","BeanMaybeChat","Date","now","roll","BeanBelievesIn","BeanEmote","source","out","trait","BeanMaybeBaby","BeanIsInCrisis","BeanCanBaby","base","BeanBabyChance","trigger","message","BeanMaybeDie","cause","isDire","BeanDie","pains","emotes","death","beanKey","BeanLoseSanity","amount","multiplier","BeanGetSpeech","chat","participation","preachBelief","BeanCanPurchase","cost","sanityBonus","BeanGetFace","BeanMaybeGetInsanity","insanity","existingBeliefs","s","find","GetInsanityFromBrainwashing","newInsanity","SignalStoreInstance","alienEnergy","alienBots","alienHedons","newTraitSeen","events","autosave","Goals","found_utopia","text","check","buildings","build_house_n_farm","reward","energy","bots","beam_3","scan","alien","scanned_bean","set_policy","brainwash","Curriculums","GradeWorld","Happiness","BooleanAverageGrader","o","Prosperity","Stability","Dogma","GradeUpToNumber","speechcrimes","RubricDescription","number","allowance","maximum","NormalizedScoreToGrade","array","grade","normNumber","GradeWeights","A","B","C","D","F","TechData","tech","techPoints","PlayerReward","player","change","hedons","HasResearched","techProgress","researchPoints","PlayerCanAfford","qty","PlayerTryPurchase","PlayerPurchase","EnterpriseBuildings","BuildingOpenSlots","jobs","upgraded","BeanLoseJob","employerEnterpriseKey","building","enterprise","enterprises","ownerBeanKey","BuildingUnsetJob","oldLen","BuildingTryFreeBean","BeanActions","enter","agent","elapsed","deltaMS","destinationTargetIndex","destinationIndex","destinations","intent","newActivity","console","warn","newAccelerator","collide","beanHitDestination","nearbyBeanKeys","bKey","squared","pow","CityGetNearestNeighbors","targets","findNeedy","needy","targetBeanKey","persuasionStrength","BeanGetRandomChat","least","changeState","newState","WanderlustEmoteChance","beanEmote","exit","beanWork","belief","strength","defense","BeanMaybePersuaded","beanBePersuaded","top","travelState","sideEffect","substitute","SubstituteIntent","CreateTravelFromIntent","shift","BeanMaybeParanoid","buyReceipt","buyAttempts","beanBuy","beanCrime","crimeGood","durationMS","beanRelax","desiredGoodState","EconomyCanBuy","BeanMaybeCrime","scarce","BeanMaybeScarcity","IntentToDestination","RouteRandom","buildingDest","keysOfType","CityGetRandomEntertainmentBuilding","Route","nature","districts","RouteToHexAndPoint","destination","GetPriority","StatsNormalMean","StatsNormalDev","bean_life","vital_thresh","shelter","medicine","GetPriorities","priors","priority","sort","buildingType","CityGetRandomBuildingOfType","start","nearestHex","pt","pixel_to_hex","AgentDurationStoreInstance","duration","BeanTryFindJob","openSlotBuildings","counter","index","temp","shuffle","canHire","isHiring","BeanSetJob","Season","SFXToFile","SoundBuffer","file","volume","buffer","ended","audio","play","aud","Audio","process","WorldSfxInstance","lib","sfx","CommonalityBaseCost","CommonalityRandomMaxCost","getMarketTraitListing","rare","PartOfDay","TicksPerHour","simulate_world","eKey","workers","enterpriseType","share","owner","pay","commShare","simulate_every_other_tick","pop","unshift","simulate_every_day","marketTraitsForSale","newTraits","GetMarketTraits","WorldAddEvent","collected","cityID","selectBeansByCity","allowedTreasury","perBean","MaybeRebate","values","simulate_every_week","fun","simulate_every_month","arr","percent","sum","yearlyInflationDollars","richest","obj","winner","WorldInflate","simulate_every_year","income","currentlyResearchingTech","abductedBeanKeys","beliefInventory","gems","CoL","ageResult","diff","wasNotHungry","wasNotSick","degrade_per_tick","penalty","starving_health","starve","exposure","sick","BeanAge","pickups","lastPoint","allSum","daySum","sources","allSources","val","GetHedonReport","goals","goal","goalProgress","done","step","CheckGoals","workingReportCard","CheckReportCard","removedID","triadToString","sign","costs","tortrons","join","DefaultDifficulty","emptyHex","build","house","farm","theater","hospital","church","courthouse","park","beam","upgrade","fallow_2_rural","rural_2_urban","bean_brain","brainwash_ideal","brainimplant_secondary","brainwash_secondary","abduct","gift","empower","vaporize","siphon","scrubHedons","resource","common","uncommon","unique","homeless_health","death_chance","starvation","sickness","vaporization","report_card_progression","worldSlice","createSlice","initialState","ufos","titles","laws","Spring","seenBeliefs","next_grade","pastReportCards","spotlightEvent","insanityEvent","GetBlankWorldState","reducers","refreshMarket","magnetChange","payload","px","worldTick","newGame","dls","natureID","loadGame","what","lotKey","newBuilding","buildingKey","enterpriseKey","sellerCityKey","sellerEnterpriseKey","GenerateIBuilding","upgradeDistrict","changeEnterprise","newType","fireBean","ufo","where","remove_ufo","ufoKey","cheatAdd","release","lucky_bean_key","luckyBean","washCommunity","washMotive","washNarrative","oldFaith","washBelief","sanityCostBonus","extractBelief","existing","chargeBonus","acknowledgeNewInsanity","setResearch","implant","PlayerUseTraitGem","pickUpPickup","pickup","pickupKey","amt","oldAct","ADS","beanGiveCharity","senderBeanKey","_emote","needyBeanKey","_ifBelievesInMaybeEmote","newJob","last","GoodToJob","allOfType","BeanTrySetJob","workedForEmployer","employer","EconomyEmployAndPrice","sellerBeanKey","EconomyProduceAndPrice","stolen","enactLaw","data","lawKey","repealLaw","buyBots","buyEnergy","buyTrait","addTitle","privileges","editTitle","oldTitle","newT","badge","titleKey","headwear","hat","manualSave","SaveGame","beanSetTitle","title","beanPosition","actions","selectCityBeanIDs","createSelector","cityBeanIDs","beansByID","cityBeanKey","useAppDispatch","cityBeans","count","circle","square","triangle","useDispatch","useAppSelector","useSelector","selectedSlice","selectedCityKey","selectedBeanKey","doSelectCity","selectedBuildingKey","selectedDistrictKey","selectedLotKey","doSelectDistrict","doSelectLot","doSelectBuilding","doSelectBean","selectedHexKey","doSelectNone","store","configureStore","reducer","selected","middleware","getDefaultMiddleware","storeApi","startsWith","selectSelectedCity","selectSelectedBean","selectSelectedBuilding","buildingID","selectEventIDs","ConfirmButton","props","confirming","onConfirm","setState","className","onClick","click","disabled","confirmText","children","React","Component","StringDropdown","onChange","value","hint","hidden","titleCase","toUpperCase","options","getTitleForOption","getTextForOption","required","BeliefWidget","leftButton","titleView","bottomView","EditBeliefInput","divergent","frozen","available","wash","extract","SortedBeliefs","localeCompare","TraitInventoryList","dispatch","dogmatic","BrainwashingContent","isScanned","brains","colSpan","style","clear","Subtabs","additionalClasses","active","PrivilegeData","social_deference","criminal_immunity","tax_exemption","hereditary","gentility","SocietyPanel","onEdit","TitleEdit","ev","newArray","keyToName","starving","hungry","sated","stuffed","homeless","sleepy","awake","rested","sickly","bruised","fresh","sane","stressed","disturbed","NeedReadout","dire","need","dire_style","width","full","full_style","header","median","half","EconomyReport","food_median","health_median","toFixed","shelter_median","wealth_total","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","unemployed","jobless","avg","meds","houses","farmer","builder","doc","entertainer","EscapeMenu","TreasuryReport","coin","GovernmentPanel","useState","view","setView","LawDetailList","enacted","lKey","revokeLaw","LawFormula","canSeeName","unlocked","every","PlayerMeetsPrereqs","has","PrereqString","GreetingPanel","whiteSpace","changeSeed","currentTarget","maxLength","fontFamily","fontSize","LoadGameMenu","MainMenu","continueID","HasContinueGame","GetGameSlots","startGame","RobotArm","height","xmlns","classN","fill","display","overflow","strokeWidth","stroke","cy","cx","tool","tools","loop","lastI","ResearchPanel","currentTech","tool1","setTool1","tool2","setTool2","tool3","setTool3","tool4","setTool4","useEffect","interval","window","setInterval","clearInterval","techs","progress","total","complete","isCurrent","rootClassName","renderTech","TraitsReport","AnimatedUFO2","showBeam","setShowBeam","setTimeout","EnterpriseTypes","EnterpriseTypeIcon","CostSmall","rider","BeamButton","BuildPanel","districtLots","targetLot","eHex","DistrictTypeIcon","urban","rural","fallow","DistrictTypeText","HexPanel","HexBuildingPanel","free","hasJobs","renderDensityWarning","typ","WorkerList","EnterpriseTypePicker","substring","EnterpriseListings","hexDirectionToJobSlot","2","0","4","1","5","3","BuildingToJobIcon","PetriGoods","goodType","is","row","col","ii","PetriBuilding","UIBuilding","getStyle","UIBuildingSlots","jobSlot","hasJob","PetriLot","preventDefault","lotDrawn","PetriHex","extraClasses","hex_style","onMouseEnter","isDefaultPrevented","stopPropagation","viewBox","version","position","left","opacity","PetriHexes2","dKey","SocialBuildings","selectBuildingKeysByCity","selectBuildingsByCity","onClickBuilding","Magnet2","useRef","magnetPoint","BeanIsBuying","AnimatedBean","st","working","speech","face","classes","animationClasses","selectBeanAnimation","isSelected","sitStill","AnimatedPickup","played","setPlayed","useContext","SfxContext","Mover","MoverContext","el","onMove","pubsub","moverType","moverKey","subscribe","unsubscribe","ref","PetriBeanList","PickupList2","pKey","HexSizeR","WorldTile2","mtn_transforms","mtnRadius","bk","onMouseLeave","uK","CardButton","thin","singleLine","subtext","TraitToCard","renderInner","scanned","innerView","idealPro","idealCon","hedonTable","ActivityDisplay","ActivityIcon","acts","actDurations","BeanPanel","faceOverride","setFaceOverride","setInnerView","_resetFace","renderTraits","entitle","TitleButton","TitleView","OverviewPanel","clearCity","avg_happy","avg_cash","scannedBeans","from","m","prev","get","set","Map","entries","aC","CityGetPopulationTraitsList","DetailPanel","openBrainwash","openEntitle","EventsPanel","eventIDs","reverse","elements","alert","tallTrigger","shouldEventJumpToBean","href","renderGoal","g","tooltip","renderReward","GoalsPanel","reportCard","margin","MarketPanel","MarketTraits","fourLetterWords","GetSeedName","rand","AutosaveWidget","isDirty","setDirty","isSaving","setSaving","onDirty","dirty","onSaving","BubbleNumberText","bubbleSeed","positive","bubbles","string","changeEvent","bubbleClass","BubbleSeenTraitsText","sub","setBubbles","onEvent","event","useBubbles","CapsuleLabel","label","EnergyAmount","BotsAmount","HedonAmount","Modal","show","closeButtonText","getButton","SeasonWidget","Morning","Noon","Evening","SocialGraph","static","StopPlayFastButtons","timeScale","setTimeScale","GeoNetworkButtons","activeMain","setActiveMain","TimelyEventToggle","eventCount","eventClass","eventIcon","EntitleModalContent","closeModal","createContext","StoreState","App","previousTimeMS","logicTickAccumulatorMS","millisecondsSinceLastSave","saveAccumulatorMS","tick","timeMS","deltaTimeMS","gameDeltaTimeMS","animate_ufos","getState","pickupIDs","pickupID","magnet","animate_pickups","actResult","exitAction","enterAction","animate_beans","requestAnimationFrame","cheatMode","keyupHandler","activeModal","newGameSeed","shiftKey","onDeath","startSpotlight","timescaleBeforeSpotlight","activeRightPanel","document","addEventListener","time","removeEventListener","endSpotlight","Provider","minScale","centerZoomedOut","centerOnInit","initialPositionX","limitToBounds","alignmentAnimation","wheel","slot","GetGame","n","getPanel","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.48709520.chunk.js","sourcesContent":["import { Point } from \"../simulation/Geography\";\r\n\r\nexport type EventTrigger = 'speechcrime'|'birth'|'death'|'nojobslots'|'marketrefresh'|'persuasion';\r\n\r\nexport interface IEvent{\r\n    key: number;\r\n    icon: string;\r\n    message: string;\r\n    beanKey?: number;\r\n    cityKey?: number;\r\n    point?: Point;\r\n    trigger: EventTrigger;\r\n}\r\n\r\nexport const EventBufferLength = 25; \r\n\r\nexport class PubSub<T>{\r\n    constructor(private onPublish?: (args: T) => void){}\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public current: T|undefined = undefined;\r\n    public publish(args: T){\r\n        if (this.onPublish)\r\n            this.onPublish(args);\r\n        this.current = args;\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    public unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\n","import { PubSub } from \"./events/Events\";\r\nimport { IDate } from \"./simulation/Time\";\r\nimport { IWorldState } from \"./state/features/world\";\r\n\r\nconst GameSavePrefix = 'game-';\r\nconst GameBriefPrefix = 'game-brief-';\r\nconst LastGameSaveIDKey = 'last-game-id';\r\nconst MaxNumGameSlots = 3;\r\n\r\ninterface IWorldBrief {\r\n    Name: string,\r\n    Population: number,\r\n    Age: IDate\r\n}\r\nexport function isGame(g: {game: IWorldState}|{errors: string[]}): g is {game:IWorldState}{\r\n    return (<any>g).game != null;\r\n}\r\nexport class GameStorage{\r\n    HasContinueGame(): number|undefined{\r\n        const rawID = localStorage.getItem(LastGameSaveIDKey);\r\n        if (rawID == null)\r\n            return undefined;\r\n\r\n        const id = parseInt(rawID);\r\n        if (isNaN(id))\r\n            return undefined;\r\n\r\n        const rawgame = localStorage.getItem(`${GameSavePrefix}${id}`);\r\n        if (rawgame != null)\r\n            return id;\r\n        else\r\n            return undefined;\r\n    }\r\n    GetGameSlots(): {id: number, brief?: IWorldBrief}[] {\r\n        const slots: {id: number, brief: IWorldBrief}[] = [];\r\n        for (let i = 0; i < MaxNumGameSlots; i++) {\r\n            const brief = localStorage.getItem(`${GameBriefPrefix}${i+1}`);\r\n            slots.push({\r\n                id: i+1,\r\n                brief: brief ? JSON.parse(brief) : undefined\r\n            });\r\n        }\r\n        return slots;\r\n    }\r\n    GetGame(id: number): {game: IWorldState}|{errors: string[]}{\r\n        const rawgame = localStorage.getItem(`${GameSavePrefix}${id}`);\r\n        if (rawgame){\r\n\r\n        } else {\r\n            return {\r\n                errors: ['Cannot find game']\r\n            }\r\n        }\r\n        try {\r\n            const game = JSON.parse(rawgame);\r\n            return {\r\n                game: game as IWorldState\r\n            }\r\n        } catch(e) {\r\n            return {\r\n                errors: [e]\r\n            }\r\n        }\r\n    }\r\n    SaveGame(world: IWorldState){\r\n        const raw = JSON.stringify(world);\r\n        const brief: IWorldBrief = {\r\n            Name: world.cities.byID[0].name,\r\n            Population: world.beans.allIDs.map(x => world.beans.byID[x]).filter(y => y.lifecycle != 'dead').length,\r\n            Age: {\r\n                day: world.date.day,\r\n                hour: world.date.hour,\r\n                season: world.date.season,\r\n                year: world.date.year\r\n            }\r\n        };\r\n        localStorage.setItem(`${GameSavePrefix}${world.saveSlot}`, raw);\r\n        localStorage.setItem(`${GameBriefPrefix}${world.saveSlot}`, JSON.stringify(brief));\r\n        localStorage.setItem(LastGameSaveIDKey, world.saveSlot.toString());\r\n        this.Dirty.publish(false);\r\n        this.Saving.publish();\r\n    }\r\n    Dirty = new PubSub<boolean>();\r\n    Saving = new PubSub<void>();\r\n}\r\nexport const GameStorageInstance = new GameStorage();","import * as React from 'react';\r\nimport { Season, IDate } from './simulation/Time';\r\nimport { Act, IBean, IChatData } from './simulation/Agent';\r\nimport { IDifficulty, PlayerResources } from './Game';\r\nimport { type } from 'os';\r\nimport { GetHedonReport, IsBeliefDivergent, SecondaryBeliefData, TraitBelief } from './simulation/Beliefs';\r\nimport { WorldSfxInstance, WorldSound } from './WorldSound';\r\nimport { GetMarketTraits, MarketTraitListing } from './simulation/MarketTraits';\r\nimport { IWorldState } from './state/features/world';\r\n\r\nexport const PickupPhysics = {\r\n    Brake: { x: .94, y: .94},\r\n    AccelerateS: 60,\r\n    MaxSpeed: 9,\r\n    CollisionDistance: 10\r\n}\r\nexport const BeanPhysics = {\r\n    Brake: { x: .94, y: .94},\r\n    AccelerateS: 10,\r\n    MaxSpeed: 4,\r\n    CollisionDistance: 10\r\n}\r\nexport const MaxHedonHistory = 5;\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface ITile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'rocket'|'music'|'dragon'|'noFaith';\r\nexport type TraitFood = 'starving'|'hungry'|'sated'|'stuffed';\r\nexport type TraitStamina = 'homeless'|'sleepy'|'awake'|'rested';\r\nexport type TraitHealth = 'sick'|'sickly'|'bruised'|'fresh';\r\nexport type TraitSanity = 'psychotic'|'disturbed'|'stressed'|'sane';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitStamina|TraitHealth|TraitSanity;\r\n\r\nexport const TraitIcon: {[key in Trait]: string} = {\r\n    'state': '🕊️', 'ego': '🦅',\r\n    'prog': '⚖️', 'trad': '👑',\r\n    'circle': '🤎', 'square': '💛', 'triangle': '🧡',\r\n    'rocket': '🚀', 'music': '🎵', 'dragon': '🐲',\r\n    'noFaith': '⚫️',\r\n    'starving': '🍴', 'hungry': '🍽️', 'sated': '🥜', 'stuffed': '🥩',\r\n    'homeless': '🌨️', 'sleepy': '🌙', 'awake': '☀️', 'rested': '🌞',\r\n    'sick': '🤢', 'sickly': '😷', 'bruised': '🩹', 'fresh': '💪',\r\n    'psychotic': '🤪', 'disturbed': '🤤', 'stressed':'', 'sane': '🧠',\r\n}\r\nexport enum MaslowHappinessScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport const TraitToModifier: {[key in TraitFood|TraitStamina|TraitHealth]: IHappinessModifier} = {\r\n    'homeless': {reason: 'Homeless', mod: MaslowHappinessScore.Deficient},\r\n    'sleepy': {reason: 'Renting', mod: MaslowHappinessScore.Sufficient},\r\n    'awake': {reason: 'Homeowner', mod: MaslowHappinessScore.Sufficient},\r\n    'rested': {reason: 'Homeowner', mod: MaslowHappinessScore.Abundant},\r\n    'sick': {reason: 'Sick', mod: MaslowHappinessScore.Deficient},\r\n    'sickly': {reason: 'Sick', mod: MaslowHappinessScore.Sufficient},\r\n    'bruised': {reason: 'Bruised', mod: MaslowHappinessScore.Sufficient},\r\n    'fresh': {reason: 'Healthy', mod: MaslowHappinessScore.Abundant},\r\n    'starving': {reason: 'Hungry', mod: MaslowHappinessScore.Deficient},\r\n    'hungry': {reason: 'Hungry', mod: MaslowHappinessScore.Sufficient},\r\n    'sated': {reason: 'Sated', mod: MaslowHappinessScore.Sufficient},\r\n    'stuffed': {reason: 'Stuffed', mod: MaslowHappinessScore.Abundant},\r\n}\r\nexport interface IThreshold {warning: number, sufficient: number, abundant: number}\r\nexport const GoodToThreshold: {[key in TraitGood]: IThreshold} = {\r\n    'food': {warning: 0.5, sufficient: 1, abundant: 3},\r\n    'shelter': {warning: 3, sufficient: 4, abundant: 7},\r\n    'medicine': {warning: 0.5, sufficient: 1, abundant: 3},\r\n    'fun': {warning: 0.1, sufficient: 1, abundant: 3},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'builder': return 'shelter';\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'shelter': return 'builder';\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'shelter'|'medicine'|'fun';\r\nexport const GoodIcon: {[key in TraitGood]: string} ={\r\n    'food': '🥪',\r\n    'shelter': '🏠', \r\n    'medicine': '💊', \r\n    'fun': '👏'\r\n};\r\n\r\nexport type TraitEmote = 'happiness'|'unhappiness'|'love'|'hate';\r\nexport const EmoteIcon: {[key in TraitEmote]: string} ={\r\n    'love': '💛',\r\n    'happiness': '👍',\r\n    'unhappiness': '💢',\r\n    'hate': '💔'\r\n};\r\nexport const EmotionWorth: {[key in TraitEmote]: number} ={\r\n    'love': 5,\r\n    'happiness': 1,\r\n    'unhappiness': -1,\r\n    'hate': -5\r\n};\r\nexport const EmotionSanity: {[key in TraitEmote]: number} ={\r\n    'love': 1,\r\n    'happiness': 0.2,\r\n    'unhappiness': 0,\r\n    'hate': -1\r\n};\r\n\r\nexport function WorldInflate(world: IWorldState){\r\n    const beans = world.beans.allIDs.reduce((arr, key) => { arr.push(world.beans.byID[key]); return arr;}, [] as IBean[])\r\n    const allMoney = beans.reduce((sum, b) => sum+b.cash, 0);\r\n    const percent = allMoney / 100;\r\n    const yearlyInflationDollars = Math.round(percent * 1);\r\n    if (yearlyInflationDollars > 0){\r\n        const richest = beans.reduce((obj: {winner?: IBean, max: number}, b) => {\r\n            if (b.cash > obj.max){\r\n                obj.winner = b;\r\n                obj.max = b.cash;\r\n            }\r\n            return obj;\r\n        }, {max: 0});\r\n        if (richest.winner){\r\n            richest.winner.cash += yearlyInflationDollars;\r\n        }\r\n    }\r\n}","import { MoverStore } from \"./simulation/MoverBus\";\r\n\r\nexport const MoverStoreInstance = new MoverStore();","import { PubSub } from \"../events/Events\";\r\nimport { IAccelerator } from \"./Geography\";\r\n\r\nexport type MoverType = 'ufo'|'bean'|'pickup';\r\ntype MoverCache = {\r\n    [key in MoverType]: {\r\n        [k2: number]: PubSub<IAccelerator>;\r\n    };\r\n};\r\n\r\nexport class MoverStore{\r\n    private cache: MoverCache = {\r\n        'ufo': {},\r\n        'bean': {},\r\n        'pickup': {}\r\n    }\r\n    public Get(type: MoverType, key: number): PubSub<IAccelerator>{\r\n        if (!this.cache[type][key])\r\n            this.cache[type][key] = new PubSub<IAccelerator>();\r\n        return this.cache[type][key];\r\n    }\r\n}","import { TraitCommunity, TraitFaith, TraitIdeals, TraitSanity } from \"../World\";\r\nimport { GetRandom, GetRandomRoll } from \"../WorldGen\";\r\n\r\nexport type BeliefCommonality = 'common'|'uncommon'|'rare'|'unique';\r\nexport const CommonalityChances: {[b in BeliefCommonality]: number} = {\r\n    'common': 3,\r\n    'uncommon': 2,\r\n    'rare': 1,\r\n    'unique': 0\r\n};\r\n\r\nexport type TraitBelief = 'Diligence'| // happy from work\r\n'Natalism'| // increased % of having kids\r\n'Antinatalism'|\r\n'Naturalism'|\r\n'Hedonism'| //more entertainment\r\n'Progressivism'|\r\n'Libertarianism'|\r\n'Parochialism'|\r\n'Cosmopolitanism'|\r\n'Capitalism'|\r\n'Socialism'|\r\n'Communism'|\r\n// 'Tribalism'| \r\n// 'Globalism'| \r\n// 'Pacifism'| \r\n'Neuroticism'| // takes extra sanity damage\r\n'Dogmatism'| \r\n// 'Mysticism'| \r\n 'Paranoia'| \r\n// 'Evangelism'| \r\n// 'Fanaticism'| // doesn't like beings that don't share narrative \r\n'Authority'| //less crime, more crime reports\r\n'Anarchism'| // breaks rules easily\r\n'Sadism'| \r\n'Vandalism'|\r\n'Antagonism'|\r\n'Enthusiasm'|\r\n'Gossip'|\r\n'Extroversion'|\r\n'Charity'| // % to donate\r\n'Gluttony'|\r\n'Wanderlust'|\r\n'Germophobia'|\r\n'Bloodthirst'|\r\n'Introversion'|\r\n'Charisma'|\r\n'Depression'|\r\n'Optimism'|\r\n'Fraud'|\r\n'Greed'| // steal easier\r\n'Delirium'|\r\n'Catatonia'|\r\n'DelusionalMania';\r\n\r\n\r\n// 'friendly'| // likes all beings more\r\n// 'realistic'| // lower happiness\r\n// 'athletic'| // takes less health damage\r\n// 'open-minded'| // beliefs are easily changed\r\n\r\nexport type BeliefSubject = 'self'|'other';\r\nexport type BeliefVerb = 'are'|'arenot';\r\nexport interface IBeliefData {\r\n    noun: string,\r\n    adj: string,\r\n    icon: string,\r\n    description?: string,\r\n    rarity: BeliefCommonality,\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>\r\n}\r\nexport const PrimaryBeliefData: {[key in TraitIdeals|TraitCommunity]: IBeliefData} = {\r\n    prog: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️',\r\n        description: \"Strives to help others\", rarity: 'common',\r\n    },\r\n    trad: {\r\n        noun: 'Elitism', adj: 'Elitist', icon: '👑',\r\n        description: \"Strives for individual power\", rarity: 'common',\r\n    },\r\n    state: {\r\n        noun: 'Collectivism', adj: 'Collectivist', icon: '🕊️',\r\n        description: \"Trusts in the social group\", rarity: 'common',\r\n    },\r\n    ego: {\r\n        noun: 'Independence', adj: 'Independent', icon: '🦅',\r\n        description: \"Trusts only in oneself\", rarity: 'common',\r\n    },\r\n}\r\nexport const NarrativeBeliefData: {[key in TraitFaith]: IBeliefData} = {\r\n    rocket: {\r\n        noun: 'Futurism', adj: 'Futuristic', icon: '🚀',\r\n        description: \"Loves stories of the far future\", rarity: 'common',\r\n    },\r\n    dragon: {\r\n        noun: 'Mythology', adj: 'Mythical', icon: '🐲',\r\n        description: \"Loves stories of the legendary past\", rarity: 'common',\r\n    },\r\n    music: {\r\n        noun: 'Drama', adj: 'Dramatic', icon: '🎵',\r\n        description: \"Loves stories of emotional bonding\", rarity: 'common',\r\n    },\r\n    noFaith: {\r\n        noun: 'Nihilism', adj: 'Nihilist', icon: '⚫️',\r\n        description: \"Hates fairy tales\", rarity: 'common',\r\n    },\r\n}\r\nexport const SecondaryBeliefData: {[key in TraitBelief]: IBeliefData} = {\r\n    // misc 🎲 traits\r\n    Diligence: {\r\n        noun: 'Diligence', adj: 'Diligence', icon: '💪', rarity: 'common',\r\n        description: \"🎲 to 👍 while working\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['state', 'ego']\r\n    },\r\n    Natalism: {\r\n        noun: 'Natalism', adj: 'Natalist', icon: '👶', rarity: 'common',\r\n        description: \"Extra 🎲 for 👶;Extra 👍 after birth\" //implemented\r\n    },\r\n    Antinatalism: {\r\n        noun: 'Antinatalism', adj: 'Antinatalist', icon: '🚷', rarity: 'uncommon',\r\n        description: \"Less 🎲 for 👶;💢 after birth\" //implemented\r\n    },\r\n    Charity: {\r\n        noun: 'Charity', adj: 'Charitable', icon: '😇', rarity: 'uncommon',\r\n        description: \"🎲 to gift 💰 to the penniless; and spread 👍\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Progressivism: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️', rarity: 'uncommon',\r\n        description: \"🎲 to 👍 when paying taxes\" //implemented\r\n    },\r\n    Libertarianism: {\r\n        noun: 'Libertarianism', adj: 'Libertarian', icon: '🔫', rarity: 'rare',\r\n        description: \"🎲 to 💢 when paying taxes\", //implemented\r\n    },\r\n    Wanderlust: {\r\n        noun: 'Wanderlust', adj: 'Wanderer', icon: '🔭', rarity: 'uncommon',\r\n        description: \"🎲 to 👍 when travelling\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Germophobia: {\r\n        noun: 'Germophobia', adj: 'Germophobic', icon: '🤧', rarity: 'rare',\r\n        description: \"💢 when sick or working in hospital\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n\r\n    // work traits\r\n    Parochialism: {\r\n        noun: 'Parochialism', adj: 'Parochial', icon: '🐮', rarity: 'common',\r\n        description: \"Extra 👍 working 🌾; 💢 from dense houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Cosmopolitanism: {\r\n        noun: 'Cosmopolitanism', adj: 'Cosmopolitan', icon: '🍸', rarity: 'common',\r\n        description: \"Extra 👍 working 🎻; 💢 from rural houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Capitalism: {\r\n        noun: 'Capitalism', adj: 'Capitalist', icon: '🎩', rarity: 'common',\r\n        description: \"💢 working in co-ops and communes; Extra 👍 when owner\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Socialism: {\r\n        noun: 'Socialism', adj: 'Socialist', icon: '🤝', rarity: 'common',\r\n        description: \"Extra 👍 working in co-ops\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Communism: {\r\n        noun: 'Communism', adj: 'Communist', icon: '⚒️', rarity: 'common',\r\n        description: \"💢 working in companies\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n\r\n    Fraud: {\r\n        noun: 'Fraud', adj: 'Fraudulent', icon: '🤥', rarity: 'uncommon',\r\n        description: \"🎲 to avoid taxes; Extra 🎲 for theft 😈 Crime\"\r\n    },\r\n\r\n    // 👍 traits\r\n    Naturalism: {\r\n        noun: 'Naturalism', adj: 'Naturalist', icon: '🛶', rarity: 'uncommon',\r\n        description: \"Extra 👍 from 😎; 😎 3x longer\" //implemented\r\n    },\r\n    Hedonism: {\r\n        noun: 'Hedonism', adj: 'Hedonistic', icon: '💋', rarity: 'uncommon',\r\n        description: \"🎲 to emote extra 👍;🎲 to 💢 when working;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Gluttony: {\r\n        noun: 'Gluttony', adj: 'Glutton', icon: '🎃', rarity: 'common',\r\n        description: \"Extra 👍 when stuffed; Extra 💢 when hungry;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Paranoia: {\r\n        noun: 'Paranoia', adj: 'Paranoid', icon: '👽', rarity: 'uncommon',\r\n        description: \"🎲 to 💢 at any time\",  //implemented\r\n        //idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n    Depression: {\r\n        noun: 'Depression', adj: 'Depressive', icon: '😓', rarity: 'common',\r\n        description: \"🎲 to 💢 when unhappy\",\r\n    },\r\n    Optimism: {\r\n        noun: 'Optimism', adj: 'Optimistic', icon: '😺', rarity: 'uncommon',\r\n        description: \"🎲 to 👍 when happy\",\r\n    },\r\n\r\n    // 😈 Crime traits\r\n    Authority: {\r\n        noun: 'Authority', adj: 'Authoritarian', icon: '👢', rarity: 'common',\r\n        description: \"Less 🎲 for all 😈 Crime\", //implemented\r\n        //idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    Anarchism: {\r\n        noun: 'Anarchism', adj: 'Anarchist', icon: '🖕', rarity: 'uncommon',\r\n        description: \"Extra 🎲 for all 😈 Crime\", //implemented\r\n    },\r\n    Greed: {\r\n        noun: 'Greed', adj: 'Greedy', icon: '🤑', rarity: 'common',\r\n        description: \"Extra 🎲 for theft 😈 Crime; Extra 👍 when rich\",\r\n        //idealCon: ['prog'], idealPro: ['trad']\r\n    },\r\n    Bloodthirst: {\r\n        noun: 'Bloodthirst', adj: 'Bloodthirsty', icon: '🩸', rarity: 'rare',\r\n        description: \"High 🎲 to ☠️ Kill during 😈 Crime\"\r\n    },\r\n    // Pacifism: {\r\n    //     noun: 'Pacifism', adj: 'Pacifist', icon: '😘', rarity: 'common',\r\n    //     description: \"will never punish others\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n    // Mysticism: {\r\n    //     noun: 'Mysticism', adj: 'Mystical', icon: '🔮', rarity: 'common',\r\n    //     description: \"🎲 to 👏 in any conversation\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n\r\n    // 🗣️ traits\r\n    Extroversion: {\r\n        noun: 'Extroversion', adj: 'Extroverted', icon: '🤩', rarity: 'common',\r\n        description: \"Extra 🎲 to start a 🗣️\", //implemented\r\n    },\r\n    Introversion: {\r\n        noun: 'Introversion', adj: 'Introverted', icon: '🤓', rarity: 'uncommon',\r\n        description: \"Less 🎲 to be in a 🗣️\", //implemented\r\n    },\r\n    Charisma: {\r\n        noun: 'Charisma', adj: 'Charismatic', icon: '😏', rarity: 'uncommon',\r\n        description: \"More 🎲 to persuade in a 🗣️\", //implemented\r\n    },\r\n    Gossip: {\r\n        noun: 'Gossip', adj: 'Gossipy', icon: '📞', rarity: 'common',\r\n        description: \"🎲 to spread 💢 in a 🗣️; 🎲 to 👍 after 🗣️\", //implemented\r\n    },\r\n    Antagonism: {\r\n        noun: 'Antagonism', adj: 'Antagonistic', icon: '🤬', rarity: 'common',\r\n        description: \"🎲 to spread 💢 in a 🗣️\" //implemented\r\n    },\r\n    Enthusiasm: {\r\n        noun: 'Enthusiasm', adj: 'Enthusiastic', icon: '🥳', rarity: 'common',\r\n        description: \"🎲 to spread 👍 in a 🗣️\" //implemented\r\n    },\r\n    // Globalism: {\r\n    //     noun: 'Globalism', adj: 'Globalist', icon: '🌍', rarity: 'common',\r\n    //     description: \"🎲 to 👍 other hair colors in a 🗣️\",\r\n    //     idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    // },\r\n    // Tribalism: {\r\n    //     noun: 'Tribalism', adj: 'Tribal', icon: '🏰', rarity: 'common',\r\n    //     description: \"🎲 to 💢 other hair colors in a 🗣️\",\r\n    //     idealCon: ['prog'], idealPro: ['state', 'ego']\r\n    // },\r\n\r\n    // narrative traits\r\n    // Evangelism: {\r\n    //     noun: 'Evangelism', adj: 'Evangelist', icon: '📣', rarity: 'common',\r\n    //     description: \"+50% persuasion of 🎭\",\r\n    //     idealCon: ['ego'], idealPro: ['state']\r\n    // },\r\n    // Fanaticism: {\r\n    //     noun: 'Fanaticism', adj: 'Fanatical', icon: '👺', rarity: 'common',\r\n    //     description: \"🎲 to 💢 other 🎭\",\r\n    //     idealCon: ['prog'], idealPro: []\r\n    // },\r\n    // Xenophobia: {\r\n    //     noun: 'Xenophobia', adj: 'Xenophobic', icon: '🛑', rarity: 'common',\r\n    //     description: \"🎲 to 💢 when living with other hair colors\",\r\n    // },\r\n\r\n    // super bad traits\r\n    Sadism: {\r\n        noun: 'Sadism', adj: 'Sadistic', icon: '😈', rarity: 'rare',\r\n        description: \"🎲 to ☠️ Kill in a 🗣️;👍 from ☠️ Kill\"\r\n    },\r\n    Vandalism: {\r\n        noun: 'Vandalism', adj: 'Vandal', icon: '💩', rarity: 'rare',\r\n        description: \"🎲 to destroy goods;👍 from 😈 Theft Crime\"\r\n    },\r\n\r\n    // madness traits\r\n    Delirium: {\r\n        noun: 'Delirium', adj: 'Delirious', icon: '😪', rarity: 'unique',\r\n        description: \"Chooses actions at random\"\r\n    },\r\n    DelusionalMania: {\r\n        noun: 'Delusional Mania', adj: 'Delusional Maniac', icon: '😵', rarity: 'unique',\r\n        description: \"🎲 to ☠️ nearby subjects\"\r\n    },\r\n    Catatonia: {\r\n        noun: 'Catatonia', adj: 'Catatonic', icon: '😶', rarity: 'unique',\r\n        description: \"-50% walk speed. Cannot work.\"\r\n    },\r\n\r\n    // meta-traits\r\n    Neuroticism: {\r\n        noun: 'Neuroticism', adj: 'Neurotic', icon: '😱', rarity: 'rare',\r\n        description: \"+100% 🧠 damage\", //implemented\r\n    },\r\n    Dogmatism: {\r\n        noun: 'Dogmatism', adj: 'Dogmatic', icon: '🐶', rarity: 'uncommon',\r\n        description: \"Cannot change beliefs\", //implemented\r\n    },\r\n};\r\n\r\nexport function IsIdealDivergent(con: TraitCommunity|TraitIdeals, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    switch(con){\r\n        case 'trad':\r\n        case 'prog':\r\n            return con == utopiaMotive;\r\n        case 'state':\r\n        case 'ego':\r\n            return con == utopiaCommunity;\r\n    }\r\n}\r\n\r\nexport function IsBeliefDivergent(belief: TraitBelief, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    const data = SecondaryBeliefData[belief];\r\n    return data.idealCon != null && data.idealCon.reduce((isDivergent: boolean, con) => {\r\n        return isDivergent || IsIdealDivergent(con, utopiaMotive, utopiaCommunity);\r\n    }, false);\r\n}\r\n\r\nexport type InsanityTraits = 'Depression'|'Catatonia'|'Neuroticism'|'DelusionalMania'|'Delirium'|'Sadism'|'Antagonism';\r\nexport const Insanities: Array<InsanityTraits> = ['Depression','Catatonia','Neuroticism','DelusionalMania','Delirium','Sadism','Antagonism'];\r\nconst InsanityChances = {\r\n    'Catatonia': 2,\r\n    'Neuroticism': 2,\r\n    'DelusionalMania': 2,\r\n    'Delirium': 2,\r\n    'Sadism': 2,\r\n    'Depression': 1,\r\n    'Antagonism': 1\r\n};\r\n/**\r\n * maps bean sanity to chance of getting any insanity.\r\n * \r\n * Value will be between 0-1\r\n */\r\nconst SanityChances = {\r\n    'psychotic': 1,\r\n    'disturbed': .65,\r\n    'stressed': .1,\r\n    'sane': 0\r\n}\r\nexport function GetInsanityFromBrainwashing(seed: string, sanity: TraitSanity, existingBeliefs: TraitBelief[]): InsanityTraits|undefined{\r\n    const chance = SanityChances[sanity];\r\n    if (GetRandomRoll(seed, chance)){\r\n        const list: InsanityTraits[] = [];\r\n        for (let s = 0; s < Insanities.length; s++) {\r\n            const insanity = Insanities[s];\r\n\r\n            // don't allow duplicate insanities\r\n            if (existingBeliefs.find(x => x === insanity))\r\n                continue;\r\n            \r\n            let slots = InsanityChances[insanity];\r\n            if (sanity === 'psychotic')\r\n                slots *= 2;\r\n            \r\n            for (let i = 0; i < slots; i++) {\r\n                list.push(insanity);\r\n            }\r\n        }\r\n        return GetRandom(seed, list);\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const BeliefsAll = Object.keys(SecondaryBeliefData).map((x) => x as TraitBelief);\r\n\r\n/**\r\n * static list of beliefs with rarity\r\n * \r\n * common traits are duplicated many times within the array\r\n * rarer traits have fewer duplications or a singular instance \r\n */\r\nexport const RandomBeliefBucket = Object.keys(SecondaryBeliefData).reduce((list, str) => {\r\n    const t = str as TraitBelief;\r\n    const slots = CommonalityChances[SecondaryBeliefData[t].rarity];\r\n    for (let i = 0; i < slots; i++) {\r\n        list.push(t);\r\n    }\r\n    return list;\r\n}, [] as TraitBelief[]);\r\n\r\nexport interface Belief{\r\n    subject: BeliefSubject;\r\n    verb: BeliefVerb;\r\n    adj: TraitBelief;\r\n}\r\n\r\nexport type HedonSourceToVal = {[source: string]: number};\r\nexport interface HedonReport {\r\n    flatAverage: number,\r\n    weightedAverage: number,\r\n    maxSource: string,\r\n    minSource: string,\r\n    all: HedonSourceToVal\r\n}\r\nexport interface HedonExtremes { max:number, min:number }\r\n\r\nexport function GetHedonReport(hedonHistory: HedonSourceToVal[]): HedonReport {\r\n    if (hedonHistory.length === 0){\r\n        return {\r\n            all: {},\r\n            flatAverage: 0,\r\n            weightedAverage: 0,\r\n            maxSource: '',\r\n            minSource: ''\r\n        }\r\n    }\r\n    const all: {[source: string]: number} = {};\r\n    let weightedAverage: number = 0;\r\n    let allSum: number = 0;\r\n    for (let i = 0; i < hedonHistory.length; i++) {\r\n        const day = hedonHistory[i];\r\n        let daySum = 0;\r\n        const sources = Object.keys(day);\r\n        for (let j = 0; j < sources.length; j++) {\r\n            const source = sources[j];\r\n            daySum += day[source];\r\n            if (!all[source]) all[source] = 0;\r\n            all[source] += day[source];\r\n        }\r\n        weightedAverage += daySum / (i + 1);\r\n        allSum += daySum;\r\n    }\r\n\r\n    const allSources = Object.keys(all);\r\n    return {\r\n        flatAverage: allSum / hedonHistory.length,\r\n        weightedAverage: weightedAverage,\r\n        maxSource: allSources.reduce((max, source) => {\r\n            if (all[source] > max.val)\r\n                return {source: source, val: all[source]};\r\n            else return max;\r\n        }, {source: '', val: 0}).source,\r\n        minSource: allSources.reduce((max, source) => {\r\n            if (all[source] < max.val)\r\n                return {source: source, val: all[source]};\r\n            else return max;\r\n        }, {source: '', val: 0}).source,\r\n        all: all\r\n    }\r\n}","import { GetRandomFloat } from \"../WorldGen\";\r\n\r\nexport function shuffle<T>(array: Array<T>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function MathClamp(input: number, min: number, max: number): number{\r\n    return Math.max(Math.min(input, max), min)\r\n}\r\n\r\nexport function groupBy<T>(list: T[], keyGetter: (val: T) => string|number): Map<string|number, T[]> {\r\n    const map = new Map<string|number, T[]>();\r\n    list.forEach((item) => {\r\n         const key = keyGetter(item);\r\n         const collection = map.get(key);\r\n         if (!collection) {\r\n             map.set(key, [item]);\r\n         } else {\r\n             collection.push(item);\r\n         }\r\n    });\r\n    return map;\r\n}\r\n\r\nexport const StatsNormalMean = 0.5;\r\nexport const StatsNormalDev = 0.125;\r\n\r\n/**\r\n * Marsaglia polar method\r\n * @param mean \r\n * @param standardDeviation \r\n * @returns \r\n */\r\nexport function SampleNormalDistribution(seed: string, mean: number = StatsNormalMean, standardDeviation: number = StatsNormalDev) {\r\n    let q, u, v, p;\r\n    do {\r\n        u = 2.0 * GetRandomFloat(seed) - 1.0;\r\n        v = 2.0 * GetRandomFloat(seed) - 1.0;\r\n        q = u * u + v * v;\r\n    } while (q >= 1.0 || q === 0);\r\n    p = Math.sqrt(-2.0 * Math.log(q) / q);\r\n    return mean + standardDeviation * u * p;\r\n}","import { TraitGood, TraitJob } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IEnterprise } from \"./Institutions\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nexport interface HexPoint{\r\n    q: number;\r\n    r: number;\r\n}\r\nexport interface IDistrict extends HexPoint{\r\n    key: number,\r\n    hexString: string,\r\n    point: Point,\r\n    kind: 'fallow'|'rural'|'urban'|'nature',\r\n    lots: number[]\r\n}\r\nexport interface ILot{\r\n    key: number,\r\n    districtKey: number,\r\n    point: Point,\r\n    buildingKey?: number,\r\n    kind: 'rural'|'urban',\r\n}\r\nexport class Hex implements HexPoint{\r\n    constructor(public q: number, public r: number){}\r\n}\r\nexport const hex_directions: HexPoint[] = [\r\n    {q:+1, r:0}, {q: +1, r: -1}, {q: 0, r: -1}, \r\n    {q:-1, r:0}, {q: -1, r: +1}, {q: 0, r: +1}, \r\n];\r\nexport function hex_direction(direction: number): HexPoint{\r\n    return hex_directions[direction]\r\n}\r\n\r\nexport function hex_neighbor(hex: HexPoint, direction: number): HexPoint{\r\n    var dir = hex_direction(direction)\r\n    return {q: hex.q + dir.q, r: hex.r + dir.r};\r\n}\r\nexport function hex_distance(a: HexPoint, b: HexPoint): number{\r\n    return (Math.abs(a.q - b.q) \r\n          + Math.abs(a.q + a.r - b.q - b.r)\r\n          + Math.abs(a.r - b.r)) / 2\r\n}\r\nexport function hex_add(a: HexPoint, b: HexPoint): HexPoint {\r\n    return {q: a.q + b.q, r: a.r + b.r};\r\n}\r\nexport function hex_scale(a: HexPoint, k: number): HexPoint {\r\n    return {q:a.q * k, r:a.r * k};\r\n}\r\nexport function hex_ring(center: HexPoint, radius: number): HexPoint[]{\r\n    var results: HexPoint[] = [];\r\n    // this code doesn't work for radius == 0; can you see why?\r\n    var cube = hex_add(center, \r\n                        hex_scale(hex_direction(4), radius));\r\n    for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < radius; j++) {\r\n            results.push(cube)\r\n            cube = hex_neighbor(cube, i);       \r\n        }\r\n    }\r\n    return results;\r\n}\r\nexport function hex_spiral(center: HexPoint, radius: number): HexPoint[]{\r\n    var results = [center];\r\n    for (let k = 0; k < radius; k++) {\r\n        results = results.concat(hex_ring(center, k));\r\n        //console.log(results);   \r\n    }\r\n    return results;\r\n}\r\n\r\nexport function move_towards(current: Point, target: Point, maxDistanceDelta: number)\r\n{\r\n    const a: Point = {x: target.x - current.x, y: target.y - current.y};\r\n    const magnitude = Math.sqrt(a.x * a.x + a.y * a.y);\r\n    if (magnitude <= maxDistanceDelta || magnitude == 0)\r\n    {\r\n        return target;\r\n    }\r\n    return {\r\n        x: current.x + a.x / magnitude * maxDistanceDelta,\r\n        y: current.y + a.y / magnitude * maxDistanceDelta,\r\n    };\r\n}\r\nexport interface IAccelerator {point: Point, velocity: Vector};\r\nexport const OriginAccelerator = { point: {x: 0, y: 0}, velocity: {x: 0, y: 0}}\r\nexport function accelerate_towards(\r\n    mover: IAccelerator, \r\n    target: Point, \r\n    acceleration: number,\r\n    maxSpeed: number, \r\n    colDistance: number, \r\n    brake: Point): boolean\r\n{\r\n    const delta: Point = {\r\n        x: target.x - mover.point.x, \r\n        y: target.y - mover.point.y\r\n    };\r\n    const magnitude = Math.sqrt((delta.x * delta.x) + (delta.y * delta.y));\r\n    if (magnitude <= colDistance) return true;\r\n\r\n    delta.x /= magnitude;\r\n    delta.y /= magnitude;\r\n\r\n    mover.velocity.x += (delta.x * acceleration);\r\n    mover.velocity.y += (delta.y * acceleration);\r\n    mover.velocity.x = MathClamp(mover.velocity.x, -maxSpeed, maxSpeed);\r\n    mover.velocity.y = MathClamp(mover.velocity.y, -maxSpeed, maxSpeed);\r\n\r\n    accelerator_coast(mover, brake);\r\n    return false;\r\n}\r\nexport function accelerator_coast(\r\n    current: IAccelerator, \r\n    brake: Point): void\r\n{\r\n    current.velocity.x *= brake.x;\r\n    current.velocity.y *= brake.y;\r\n\r\n    current.point.x += current.velocity.x;\r\n    current.point.y += current.velocity.y;\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number{\r\n    return a + (b - a) * t\r\n}\r\n\r\nexport function vector_lerp(a: Point, b: Point, t: number): Point{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t)\r\n    };\r\n}\r\nfunction cube_lerp(a: CubicPoint, b: CubicPoint, t: number): CubicPoint{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t),\r\n        z: lerp(a.z, b.z, t)\r\n    };\r\n}\r\nfunction cube_distance(a: CubicPoint, b: CubicPoint): number{\r\n    return (Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z)) / 2\r\n}\r\nfunction cube_round(cube: CubicPoint): CubicPoint{\r\n    var rx = Math.round(cube.x);\r\n    var ry = Math.round(cube.y);\r\n    var rz = Math.round(cube.z);\r\n\r\n    var x_diff = Math.abs(rx - cube.x)\r\n    var y_diff = Math.abs(ry - cube.y)\r\n    var z_diff = Math.abs(rz - cube.z)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff)\r\n        rx = -ry-rz;\r\n    else if (y_diff > z_diff)\r\n        ry = -rx-rz;\r\n    else\r\n        rz = -rx-ry;\r\n\r\n    return {x: rx, y: ry, z: rz};\r\n}\r\nfunction round_point_to_hex(hex: HexPoint): HexPoint{\r\n    return cube_to_axial(cube_round(axial_to_cube(hex)))\r\n\r\n}\r\nfunction cube_to_axial(cube: CubicPoint){\r\n    var q = cube.x;\r\n    var r = cube.z;\r\n    return new Hex(q, r);\r\n}\r\nfunction axial_to_cube(hex: HexPoint): CubicPoint{\r\n    return {\r\n        x: hex.q,\r\n        z: hex.r,\r\n        y: -hex.q-hex.r\r\n    };\r\n}\r\nfunction cube_linedraw(a: CubicPoint, b: CubicPoint): HexPoint[]{\r\n    var N = cube_distance(a, b);\r\n    var results: HexPoint[] = [];\r\n    for (let i = 0; i <= N; i++) {\r\n        results.push(cube_to_axial(cube_round(cube_lerp(a, b, 1.0/N * i))))\r\n    }\r\n    return results;\r\n}\r\nexport function hex_linedraw(a: HexPoint, b: HexPoint): HexPoint[]{\r\n    return cube_linedraw(axial_to_cube(a), axial_to_cube(b));\r\n}\r\n\r\nclass Orientation {\r\n    // angle is in multiples of 60°\r\n    constructor(public f0: number, public f1: number, public  f2: number, public f3: number,\r\n        public b0: number, public b1: number,public b2: number,public b3: number,\r\n        public start_angle: number){}\r\n};\r\nexport const layout_flat: Orientation = new Orientation(\r\n    3.0 / 2.0, \r\n    0.0, \r\n    Math.sqrt(3.0) / 2.0, \r\n    Math.sqrt(3.0),\r\n    2.0 / 3.0, \r\n    0.0, \r\n    -1.0 / 3.0, \r\n    Math.sqrt(3.0) / 3.0,\r\n    0.0\r\n);\r\nexport const layout_pointy: Orientation = new Orientation(\r\n    Math.sqrt(3.0), \r\n    Math.sqrt(3.0) / 2.0, \r\n    0.0, 3.0 / 2.0,       \r\n    Math.sqrt(3.0) / 3.0, \r\n    -1.0 / 3.0, \r\n    0.0, \r\n    2.0 / 3.0,\r\n    0.5\r\n);\r\nexport const origin_point: Point = {x: 0, y: 0};\r\nexport const hex_origin: HexPoint = {q: 0, r: 0};\r\nexport function hex_to_pixel(size: Point, origin: Point, h: HexPoint): Point {\r\n    const M: Orientation = layout_pointy;\r\n    const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\r\n    const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\r\n    return {x: x + origin.x, y: y + origin.y};\r\n}\r\nexport function pixel_to_hex(size: Point, origin: Point, p: Point) {\r\n    const M = layout_pointy;\r\n    const pt = {x: (p.x - origin.x) / size.x,\r\n                y: (p.y - origin.y) / size.y\r\n            };\r\n    const q = M.b0 * pt.x + M.b1 * pt.y;\r\n    const r = M.b2 * pt.x + M.b3 * pt.y;\r\n    return new Hex(q, r);\r\n}\r\n\r\n\r\nexport interface PolarPoint{\r\n    /**\r\n     * radius (in pixels)\r\n     */\r\n    r: number;\r\n    /**\r\n     * azimuth (radians)\r\n     */\r\n    az: number;\r\n}\r\n\r\nexport function polarToPoint(p: PolarPoint): Point{\r\n    return {\r\n        x: p.r * Math.cos(p.az),\r\n        y: p.r * Math.sin(p.az)\r\n    }\r\n}\r\n\r\nexport function distanceBetweenPolar(a: PolarPoint, b: PolarPoint): number{\r\n    const aCart = polarToPoint(a);\r\n    const bCart = polarToPoint(b)\r\n    return Math.sqrt(\r\n        Math.pow(aCart.x - aCart.x, 2) +\r\n        Math.pow(bCart.y - aCart.y, 2)\r\n    );\r\n}\r\n\r\nexport interface Point{\r\n    x: number; y: number;\r\n}\r\nexport interface Vector extends Point{\r\n}\r\nexport interface CubicPoint extends Point{\r\n    z: number;\r\n}\r\n\r\nexport function transformPoint(p: Point){\r\n    return {transform:`translate(${p.x}px, ${p.y}px)`};\r\n}\r\n\r\nexport interface IBuilding{\r\n    key: number;\r\n    hex: HexPoint,\r\n    point: Point;\r\n    type: BuildingTypes;\r\n    jobs: number[];\r\n    upgraded: boolean,\r\n    enterpriseKey?: number,\r\n    lotKey: number\r\n}\r\n\r\n/**\r\n * address books allow lookups from entity \"name\" to location\r\n */\r\nexport interface AddressBookHex{\r\n    [entityKey: number]: HexPoint\r\n}\r\nexport interface AddressBookPoint{\r\n    [entityKey: number]: Point\r\n}\r\n/**\r\n * address grids allow lookups from location to entity\r\n * \r\n * note: coordinates are of form \"X,Y\"\r\n * and the map cannot distinguish between hex and cartesian points\r\n */\r\nexport interface AddressGrid<T>{\r\n    [coordinate: string]: T|undefined\r\n}\r\nexport interface AddressBuildingGrid extends AddressGrid<IBuilding>{}\r\n\r\nexport interface BuildingMap{\r\n    coordByID: AddressBookHex;\r\n    all: IBuilding[];\r\n}\r\n\r\nexport type BuildingTypes = 'farm'|'house'|'hospital'|'church'|'theater'|'courthouse'|'park'|'nature';\r\nexport type TopiaBuildingTypes = 'utopia_fields'|'utopia_pump'|'dystopia_refinery'|'dystopia_crypt';\r\n//utopian fields = free relax\r\n//utopia pump = slowly sucks up happiness/unhappiness?\r\n//dystopia refinery = slowly converts negative emotions to energy/bots\r\n//dystopia crypt = skips death notifications (limited use?)\r\nexport type MoverTypes = 'bean'|'ufo'|'pickup';\r\nexport type MatterTypes = MoverTypes|BuildingTypes;\r\n\r\nexport const BuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🐄',\r\n    'house': '🏡', 'hospital': '🏥', 'church': '⛪', 'theater': '🎪', 'courthouse':'🏫',\r\n    'park': '⛲️', 'nature': '🏞️'\r\n};\r\nexport const UpgradedBuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🚜',\r\n    'house': '🏘️', 'hospital': '🏙️', 'church': '⛪', 'theater': '🏟️', 'courthouse':'🏫',\r\n    'park': '🎡', 'nature': '🏞️'\r\n};\r\nexport const BuildingJobIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🌾',\r\n    'house': '📪', 'hospital': '🛏️', 'church': '⛪', 'theater': '🪑', 'courthouse':'🏫',\r\n    'park': '💐', 'nature': '♨️'\r\n};\r\nexport const BuildingToGood: {[key in BuildingTypes]: TraitGood} = {\r\n    'farm': 'food',\r\n    'house': 'shelter', \r\n    'hospital': 'medicine', \r\n    'church': 'fun', \r\n    'theater': 'fun', \r\n    'courthouse': 'fun',\r\n    'park': 'fun', \r\n    'nature': 'fun'\r\n};\r\nexport const GoodToBuilding: {[key in TraitGood]: BuildingTypes} = {\r\n    'food': 'farm',\r\n    'shelter': 'house',\r\n    'medicine':'hospital',\r\n    'fun': 'theater'\r\n};\r\nexport const JobToBuilding: {[key in TraitJob]: BuildingTypes} = {\r\n    'farmer': 'farm',\r\n    'builder': 'house', \r\n    'doc':'hospital', \r\n    'entertainer': 'theater',\r\n    'cleric': 'church', \r\n    'jobless': 'house', \r\n    'polit': 'house'\r\n};\r\nexport const BuildingToJob: {[key in BuildingTypes]: TraitJob} = {\r\n    'farm': 'farmer',\r\n    'house': 'builder', \r\n    'hospital':'doc', \r\n    'theater': 'entertainer',\r\n    'church': 'cleric',\r\n    'park': 'entertainer',\r\n    'nature': 'entertainer',\r\n    'courthouse': 'polit'\r\n};\r\n\r\n//district sized hexes\r\nexport const HexSizePX = 150;\r\nexport const HexSizeR = 260; // rounded sqrt(3) * HexSizePX\r\nexport const DistrictHexSize = {x: HexSizePX, y: HexSizePX};\r\n\r\nexport function GenerateGeography(numberOfRings: number = 3){\r\n    const radius = ((numberOfRings - 0.5) * HexSizeR);\r\n    return {\r\n        numberOfRings: numberOfRings,\r\n        hexes: hex_spiral({q:0, r:0}, numberOfRings),\r\n        hex_size: {...DistrictHexSize},\r\n        petriRadius: radius,\r\n        petriOrigin: {x: radius, y: radius}\r\n    }\r\n}\r\n\r\nexport const LotHexSizePX = 50;\r\nexport const LotHexSizeR = 86; // rounded sqrt(3) * LotHexSizePX","\r\nexport interface IEntitySlice<T extends {key: number}> {\r\n    byID: { [key: number]: T },\r\n    allIDs: number[],\r\n    nextID: number\r\n}\r\n\r\nexport function CreateEmptyEntitySlice<T extends {key: number}>(): IEntitySlice<T>{\r\n    return {\r\n        byID: {},\r\n        allIDs: [],\r\n        nextID: 0\r\n    }\r\n}\r\nexport function CreateEntitySlice<T extends {key: number}>(all: T[]): IEntitySlice<T>{\r\n    return {\r\n        byID: all.reduce((map, entity) => { map[entity.key] = entity; return map; }, {} as {[key: number]: T}),\r\n        allIDs: all.map(x => x.key),\r\n        nextID: all.reduce((max, entity) => Math.max(entity.key+1, max), 0)\r\n    }\r\n}\r\nexport function EntityAddToSlice<T extends {key: number}>(slice: IEntitySlice<T>, newEntity: T){\r\n    const k = slice.nextID++;\r\n    newEntity.key = k;\r\n    slice.allIDs.push(k);\r\n    slice.byID[k] = newEntity;\r\n}","import { IBean } from './simulation/Agent';\r\nimport { RandomBeliefBucket } from './simulation/Beliefs';\r\nimport { ICity } from './simulation/City';\r\nimport { BuildingTypes, GenerateGeography, HexPoint, hex_to_pixel, IDistrict, ILot, LotHexSizePX, PolarPoint } from './simulation/Geography';\r\nimport { IDate } from './simulation/Time';\r\nimport { IWorldState } from './state/features/world';\r\nimport { TraitCommunity, TraitEthno, TraitFaith, TraitIdeals, TraitJob } from './World';\r\nimport Rand, {PRNG} from 'rand-seed';\r\nimport { CreateEntitySlice, EntityAddToSlice, IEntitySlice } from './state/entity.state';\r\n\r\nconst EnterpriseStartingListing = 1;\r\nconst MaxNumBeanTraitsOnGenerate = 3;\r\nconst RandomSeeds: {[seed: string]: Rand} = {};\r\n\r\nexport function GetRandomGenerator(seed: string){\r\n    if (RandomSeeds[seed] == null)\r\n        RandomSeeds[seed] = new Rand(seed, PRNG.sfc32);\r\n    return RandomSeeds[seed];\r\n}\r\n\r\n/**\r\n * return better random values\r\n * @param min \r\n * @param max \r\n * @returns \r\n */\r\nexport function GetRandomNumber(seed: string, min: number = 0, max: number = 1): number{\r\n    const randomNumber = GetRandomGenerator(seed).next();\r\n    // const randomNumber = window.crypto.getRandomValues()[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * \r\n * @returns float between 0 and 1\r\n */\r\nexport function GetRandomFloat(seed: string): number{\r\n    return GetRandomGenerator(seed).next();\r\n}\r\n\r\n/**\r\n * given a chance (0-1) return true if random float is <= chance\r\n * @param chance \r\n * @returns \r\n */\r\nexport function GetRandomRoll(seed: string, chance: number): boolean{\r\n    const randomNumber = GetRandomFloat(seed);\r\n    //console.log(`DC ${(chance*100).toFixed(3)} rolled ${(randomNumber*100).toFixed(4)}`);\r\n    return randomNumber <= chance;\r\n}\r\n\r\n/**\r\n * convenience random function\r\n * @param length \r\n * @returns \r\n */\r\nexport function GetRandomIndex(seed: string, length: number): number{\r\n    return GetRandomNumber(seed, 0, length-1)\r\n}\r\n\r\nexport function GetRandom<S>(seed: string, choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(seed, choices.length);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(seed: string): TraitIdeals{\r\n    return GetRandom(seed, ['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(seed: string): TraitCommunity{\r\n    return GetRandom(seed, ['state', 'ego']);\r\n}\r\nexport function RandomEthno(seed: string): TraitEthno{\r\n    return GetRandom(seed, ['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(seed: string): TraitFaith{\r\n    return GetRandom(seed, ['rocket','music','dragon', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\nexport const MAX_PETRI_RADIUS = 200;\r\nexport const PI2 = Math.PI*2;\r\nexport function RandomPolar(seed: string, r?: number): PolarPoint{\r\n    return {\r\n        r: r || GetRandomNumber(seed, 0, MAX_PETRI_RADIUS),\r\n        az: GetRandomNumber(seed, 0, PI2)\r\n    };\r\n}\r\nexport function GetBuildingR(seed: string, type: BuildingTypes): number{\r\n    switch(type){\r\n        case 'farm':\r\n            return GetRandomNumber(seed, 200, 300);\r\n        default: \r\n            return GetRandomNumber(seed, 80, 200);\r\n    }\r\n}\r\n\r\nconst CityPrefixes = ['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', ''];\r\nconst CityFirstsnames = ['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash'];\r\nconst CityLastnames = ['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest'];\r\nexport function GetRandomCityName(seed: string){\r\n    return `${GetRandom(seed, CityPrefixes)}${GetRandom(seed, CityFirstsnames)}${GetRandom(seed, CityLastnames)}`;\r\n}\r\nexport const Number_Starting_City_Pop = 0;\r\n\r\nexport function GenerateCity(): ICity{\r\n    return {\r\n        ...GenerateGeography(),\r\n        key: 0,\r\n        name: 'string',\r\n        deadBeanKeys: [],\r\n        beanKeys: [],\r\n        ufoKeys: [],\r\n        pickupKeys: [],\r\n        buildingKeys: [],\r\n        pickupMagnetPoint: undefined,\r\n        costOfLiving: 0,\r\n        buildingMap: {},\r\n        districtKeys: []\r\n      }\r\n}\r\nexport function GenerateDistrictsAndLots(city: ICity): {ds:IEntitySlice<IDistrict>,lots:IEntitySlice<ILot>}{\r\n    const lots = CreateEntitySlice<ILot>([]);\r\n    const ds = CreateEntitySlice<IDistrict>(city.hexes.map((x, i) => {\r\n        const isCenter = (x.q === 0 && x.r === 0);\r\n        const d = GenerateDistrict(isCenter ? 'urban': 'fallow', city, x);\r\n        d.key = i+1;\r\n        city.districtKeys.push(d.key);\r\n        if (isCenter)\r\n            DistrictAddLots(d, lots, 'urban');\r\n        return d;\r\n    }));\r\n    return {\r\n        ds: ds,\r\n        lots: lots\r\n    }\r\n}\r\n\r\nexport function GenerateDistrict(kind: 'urban'|'rural'|'fallow'|'nature', city: ICity, hex: HexPoint): IDistrict{\r\n    return {\r\n        kind: kind,\r\n        key: 0,\r\n        q: hex.q,\r\n        r: hex.r,\r\n        hexString: hex.q+','+hex.r,\r\n        point: hex_to_pixel(city.hex_size, city.petriOrigin, hex),\r\n        lots: []\r\n    }\r\n}\r\n\r\nconst urbanHexes = [{q: 1, r: -1},{q: 1, r: 0},{q: 0, r: 1},{q: -1, r: 1},{q: -1, r: 0},{q: 0, r: -1}];\r\nconst ruralHexes = [{q: 1, r: -1},{q: 0, r: 1},{q: -1, r: 0}];\r\nexport function DistrictAddLots(district: IDistrict, lotSlice: IEntitySlice<ILot>, kind: 'urban'|'rural'){\r\n    const hexes = (kind === 'rural')? ruralHexes : urbanHexes;\r\n    hexes.forEach((h, i) => {\r\n        if (district.lots[i] == null){\r\n            const lot: ILot = {\r\n                key: 0,\r\n                kind: kind,\r\n                districtKey: district.key,\r\n                point: hex_to_pixel({x: LotHexSizePX, y: LotHexSizePX}, district.point, h)\r\n            }\r\n            EntityAddToSlice(lotSlice, lot);\r\n            district.lots.push(lot.key);\r\n        }\r\n    });\r\n}\r\n\r\nexport function GenerateBean(world: {beans: {nextID:number}, date: IDate, seed: string}, city: ICity, parent?: IBean, hexPoint?: HexPoint, job?: TraitJob): IBean{\r\n    let newBean: IBean = {\r\n        key: world.beans.nextID++,\r\n        cityKey: city.key,\r\n        name: '',\r\n        ethnicity: RandomEthno(world.seed),\r\n        community: RandomCommunity(world.seed),\r\n        ideals: RandomIdeal(world.seed),\r\n        faith: RandomFaith(world.seed),\r\n        stamina: 'awake',\r\n        health: 'fresh',\r\n        food: 'sated',\r\n        discrete_food: 3,\r\n        discrete_health: 2,\r\n        discrete_sanity: 10,\r\n        discrete_stamina: 7,\r\n        discrete_fun: 0,\r\n        graceTicks: 0,\r\n        dob: {year: world.date.year, season: world.date.season, day: world.date.day, hour: world.date.hour},\r\n        sanity: 'sane',\r\n        beliefs: [],\r\n        lifecycle: 'alive',\r\n        hedonHistory: [{}, {}, {}, {}, {}],\r\n        priorities: [],\r\n        job: 'jobless',\r\n        happiness: { flatAverage: 0,all: {}, maxSource: '', minSource: '', weightedAverage: 0},\r\n        lastHappiness: 0,\r\n        hedonFiveDayRecord: { max: 0, min: 0 },\r\n        fairGoodPrice: 0,\r\n        bornInPetri: parent != null,\r\n        cash: 3,\r\n        ticksSinceLastSale: 0,\r\n        ticksSinceLastRelax: 0,\r\n        lastChatMS: 0,\r\n        action: 'idle',\r\n        actionData: {act: 'idle'},\r\n        activity_duration: {'buy': 0, 'chat': 0, 'craze': 0, 'crime': 0, 'idle': 0, 'relax': 0, 'sleep': 0, 'soapbox': 0, 'travel': 0, 'work': 0},\r\n    };\r\n    // MoverBusInstance.Get('bean', newBean.key).publish({\r\n    //     velocity: {x: 0, y: 0},\r\n    //     point: hex_to_pixel(city.hex_size, city.petriOrigin, hexPoint || {q: 0, r: 0})\r\n    // });\r\n    newBean.name = GetRandom(world.seed, ['Joe', 'Frank', 'Jill', 'Jose',\r\n    'Johnny', 'Isabelle', 'Carmen', 'Ace', 'Carl', 'Zander', 'Jean',\r\n    'Anne', 'Leslie', 'Ben', 'Ron', \r\n    'Ellen', 'Dallas', 'Kane', 'Ash', \r\n    'Jim', 'James', 'Leonard', 'Nyota', 'Christine', 'Scotty', 'Tasha', 'Geordi', 'Beverly', 'Deanna', 'Wesley', 'Majel',\r\n    'Malcolm','River',  \r\n    'Luke', 'Han', 'Owen', 'Rey', 'Mace', 'Cody',\r\n    'Dana', 'Walter',  \r\n    'Rick', 'Holden', 'Roy', 'Pris', 'Eldon', 'Rachael',\r\n    'Rose', 'Donna', 'Jack', 'Amy', 'Rory', 'Martha', 'Clara', \r\n    'Arnold', 'Dave', 'Holly', \r\n    'Kara', 'Gaius','William', 'Lee', 'Laura', 'Saul',\r\n    'Max', 'Edison', 'Theora', 'Bryce', 'Murray', 'Ned',\r\n    'Daniel', 'Samantha', \r\n    'Logan', 'Francis', 'Jessica',\r\n    'Thomas',\r\n    'Benny', 'James', 'John Henry', 'Sarah', 'Piper', 'Nick', 'Shaun', 'Preston'\r\n    ]) + ' ';\r\n    newBean.name += GetRandom(world.seed, [\r\n        'Ripley', 'Bishop', 'Hicks', 'Vasquez', 'Hudson', \r\n        'Rico', 'Flores', 'Ibanez', 'Levy', 'Jenkins', 'Barlow', 'Zim', 'Rasczak',\r\n        'Kirk', 'McCoy', 'Sulu', 'Uhura', 'Chekov', 'Chapel', 'Rand','Riker', 'Crusher', 'Barret', \"O'Brien\",\r\n        'Reynolds', 'Tam', \r\n        'Scully', 'Mulder','Skinner', \r\n        'Connor', \r\n        'Rex',\r\n        'Thrace', 'Baltar', 'Smith','Adama', 'Roslin', 'Tigh', 'Song', 'Oswald', \r\n        'Deckard', 'Bryant', 'Tyrell', 'Sebastian', 'Voight', 'Kampff',\r\n        'Tyler', 'Harkness', 'Jones', 'Noble', 'Pond', 'Williams',\r\n        'Rimmer', 'Lister', \r\n        'Head', 'Carter', 'Lynch', 'McKenzie', 'Grossberg',\r\n        \"O'Neil\", 'Jackson', 'Carter',\r\n        'Whitmore',\r\n        'House', 'Mitchell', 'Eden', 'Lyons', 'Valentine', 'Garvey'\r\n         ]);\r\n    const beanBeliefCount = Math.ceil(Math.random() * MaxNumBeanTraitsOnGenerate);\r\n    while (newBean.beliefs.length < beanBeliefCount) {\r\n        const newBelief = GetRandom(world.seed, RandomBeliefBucket);\r\n        const hasAlready = newBean.beliefs.includes(newBelief);\r\n        if (!hasAlready)\r\n            newBean.beliefs.push(newBelief);\r\n    }\r\n\r\n    if (parent){\r\n        newBean.ethnicity = parent.ethnicity;\r\n        newBean.name = newBean.name.split(' ')[0] + ' ' + parent.name.split(' ')[1];\r\n        newBean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n    }\r\n    \r\n    // if (job == null){\r\n    //     switch (city.beanSeed){\r\n    //         case 1:\r\n    //             job = 'farmer'; break;\r\n    //         case 2:\r\n    //             job = 'builder'; break;\r\n    //         case 3:\r\n    //             job = 'doc'; break;\r\n    //         default:\r\n    //             job = GetRandom(['farmer', 'builder', 'doc', 'entertainer']); break;\r\n    //     }\r\n    // }\r\n    // newBean.trySetJob(job);\r\n    \r\n    return newBean;\r\n}","import { TraitCommunity, TraitFood, TraitGood, TraitHealth, TraitIdeals } from \"../World\";\r\nimport { IBean } from \"./Agent\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { IEconomicAgent } from \"./Economy\";\r\n\r\nexport type LawGroup = 'Taxation'|'Welfare'|'Economics'|'Crime'|'Culture';\r\nexport type LawAxis = 'wel_food'|'wel_house'|'wel_health'|'tax_basic'|'tax_second'|'econ_sub'|'cul_rel'|'cul_theo'|'crime_theo';\r\n\r\nexport type LawType = 'civil'|'criminal';\r\n\r\nexport type LawKey = 'food_aid'\r\n|'medical_aid'\r\n|'poll_tax'\r\n// |'wealth_tax'\r\n// |'food_bank'\r\n// |'univ_rations'\r\n// |'housing_subsidy'\r\n// |'state_apartments'\r\n// |'clinics'\r\n// |'grain_sub'\r\n// |'arts'\r\n// |'theocracy'\r\n// |'secularism'\r\n// |'atheism'\r\n// |'mythology'\r\n// |'futurism'\r\n// |'drama'\r\n|'sales_tax'\r\n// |'vice_tax'\r\n// |'prop_tax'\r\n|'death_tax';\r\n\r\nexport type LawPrereq = TraitBelief|TraitBelief[];\r\nexport const DollarPerBeanRebateThreshold = 1;\r\nexport const PollTaxWeeklyAmount = 0.1;\r\n\r\nexport function PlayerCanSeePrereqs(prereqs: LawPrereq[], seen: {[belief: string]: boolean}){\r\n    return prereqs.length === 0 || prereqs.some((x) => PlayerKnowsPrereq(x, seen));\r\n}\r\nexport function PlayerMeetsPrereqs(prereqs: LawPrereq[], seen: {[belief: string]: boolean}){\r\n    return prereqs.length === 0 || prereqs.every((x) => PlayerKnowsPrereq(x, seen));\r\n}\r\nexport function PlayerKnowsPrereq(prereq: LawPrereq, seen: {[belief: string]: boolean}){\r\n    return Array.isArray(prereq) ? prereq.some((x) => PlayerKnowsBelief(x, seen)) : PlayerKnowsBelief(prereq, seen);\r\n}\r\nexport function PlayerKnowsBelief(prereq: TraitBelief, seen: {[belief: string]: boolean}){\r\n    return seen[prereq];\r\n}\r\nexport function PrereqKey(prereq: LawPrereq){\r\n    return Array.isArray(prereq) ? prereq.join('/') : prereq;\r\n}\r\nexport function PrereqString(prereq: LawPrereq){\r\n    return Array.isArray(prereq) ? prereq.map(x => BeliefString(x)).join(' / ') : BeliefString(prereq);\r\n}\r\nexport function BeliefString(prereq: TraitBelief){\r\n    return SecondaryBeliefData[prereq].icon+' '+SecondaryBeliefData[prereq].noun;\r\n}\r\n\r\nexport type LawPunishment = 'fine'|'imprison'|'death';\r\n\r\nexport interface ILaw{\r\n    /**\r\n     * convenience grouping property\r\n     */\r\n    group: LawGroup;\r\n    /**\r\n     * \"slot\" for law\r\n     */\r\n    axis: LawAxis;\r\n    /**\r\n     * specific law selected\r\n     */\r\n    key: LawKey;\r\n}\r\nexport interface IGovernment{\r\n    laws: ILaw[];\r\n    lawTree: {[key in LawAxis]: ILaw|undefined};\r\n    cash: number;\r\n    ticksSinceLastSale: number;\r\n}\r\nexport interface ILawData extends ILaw{\r\n    prereqs: LawPrereq[];\r\n    name: string;\r\n    hint?: string;\r\n    description?: string;\r\n    icon?: string;\r\n}\r\nexport const LawAxisData: {[key in LawAxis]: {name: string}} = {\r\n    'wel_food': {name: 'Food Welfare'},\r\n    'wel_house': {name: 'Housing Welfare'},\r\n    'wel_health': {name: 'Healthcare'},\r\n    'tax_basic': {name: 'Taxation'},\r\n    'tax_second': {name: 'Advanced Taxation'},\r\n    'econ_sub': {name: 'Subsidies'},\r\n    'cul_rel': {name: 'Culture'},\r\n    'cul_theo': {name: 'State Narrative'},\r\n    crime_theo: {name: 'Persecution'}\r\n}\r\nexport const LawData: {[key in LawKey]: ILawData} = {\r\n    'food_aid':{\r\n        key: 'food_aid', group: 'Welfare', name: 'Food Aid', axis: 'wel_food', icon: '👨‍🌾',\r\n        description: 'The government buys Hungry Subjects food.', prereqs: [['Gluttony','Parochialism'], ['Charity', 'Socialism']]},\r\n    'medical_aid':{\r\n        key: 'medical_aid', group: 'Welfare', name: 'Med Aid', axis: 'wel_health', icon: '👩‍⚕️',\r\n        description: 'The government buys Sick Subjects medicine.', prereqs: ['Charity', 'Cosmopolitanism']},\r\n    // 'food_bank':{\r\n    //     key: 'food_bank', group: 'Welfare', name: 'Food Bank', axis: 'wel_food',\r\n    //     description: 'Hungry Subjects are provided food purchased by the government.'\r\n    // },\r\n    // 'food_stamps':{\r\n    //     key: 'food_stamps', group: 'Welfare', name: 'Food Stamps', axis: 'wel_food',\r\n    //     description: 'Hungry Subjects are provided money by the government to purchase food.'},\r\n    // 'univ_rations':{\r\n    //     key: 'univ_rations', group: 'Welfare', name: 'Universal Rations', axis: 'wel_food',\r\n    //     description: 'All Subjects are provided small amounts of food from the government.'},\r\n    // 'outside':{\r\n    //     key: 'outside', group: 'Welfare', name: 'Sleep Outside', axis: 'wel_house',\r\n    //     description: 'Homeless Subjects must sleep in the cold.'},\r\n    // 'homeless_shelters':{\r\n    //     key: 'homeless_shelters', group: 'Welfare', name: 'Homeless Shelters', axis: 'wel_house',\r\n    //     description: 'Homeless Subjects are provided shelter purchased by the government.'},\r\n    // 'housing_subsidy':{\r\n    //     key: 'housing_subsidy', group: 'Welfare', name: 'Housing Subsidy', axis: 'wel_house',\r\n    //     description: 'Homeless Subjects are provided money by the government to purchase shelter.'},\r\n    // 'state_apartments':{\r\n    //     key: 'state_apartments', group: 'Welfare', name: 'State Apartments', axis: 'wel_house'},\r\n    // 'stay_healthy':{\r\n    //     key: 'stay_healthy', group: 'Welfare', name: 'Stay Healthy', axis: 'wel_health',\r\n    //     description: 'Sick Subjects must pay for their own medical care.'},\r\n    // 'clinics':{\r\n    //     key: 'clinics', group: 'Welfare', name: 'Charity Clinics', axis: 'wel_health',\r\n    //     description: 'Sick Subjects are provided medicine purchased by the government.'},\r\n    // 'medical_aid':{\r\n    //     key: 'medical_aid', group: 'Welfare', name: 'Medical Aid', axis: 'wel_health',\r\n    //     description: 'Sick Subjects are provided money by the government to pay for medical care.'},\r\n    // 'univ_health':{\r\n    //     key: 'univ_health', group: 'Welfare', name: 'Universal Healthcare', axis: 'wel_health',\r\n    //     description: 'All Subjects are provided medical care by the government.'},\r\n    // 'hands_off':{\r\n    //     key: 'hands_off', group: 'Economics', name: 'Laissez-faire', axis: 'econ_sub',\r\n    //     description: 'No industries receive subsidies.'},\r\n    // 'grain_sub':{\r\n    //     key: 'grain_sub', group: 'Economics', name: 'Grain Subsidy', axis: 'econ_sub',\r\n    //     description: 'Farmers are provided money.'},\r\n    // 'arts':{\r\n    //     key: 'arts', group: 'Economics', name: 'Arts Patronage', axis: 'econ_sub'},\r\n    // 'theocracy':{\r\n    //     key: 'theocracy', group: 'Crime', name: 'Illegal Narratives', axis: 'crime_theo',\r\n    //     description: \"It is illegal for subjects to speak about other universal narratives.\"},\r\n    // 'secularism':{\r\n    //     key: 'secularism', group: 'Culture', name: 'Secularism', axis: 'cul_theo',\r\n    //     description: \"The government does not endorse a particular universal narrative.\"},\r\n    // 'atheism':{\r\n    //     key: 'atheism', group: 'Culture', name: 'State Nihilism', axis: 'cul_theo'},\r\n    // 'mythology':{\r\n    //     key: 'mythology', group: 'Culture', name: 'State Mythology 🐲', axis: 'cul_theo'},\r\n    // 'futurism':{\r\n    //     key: 'futurism', group: 'Culture', name: 'State Futurism 🚀', axis: 'cul_theo'},\r\n    // 'drama':{\r\n    //     key: 'drama', group: 'Culture', name: 'State Drama 🎵', axis: 'cul_theo'},\r\n    // '':{key: // , group: '', name: 'Religious Schooling', 'state', idealPro: [ 'trad', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'University Grants', 'ego', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'College For All', 'state', idealPro: [ 'prog', axis: 'cul_ed'},\r\n    'poll_tax':{\r\n        key: 'poll_tax', group: 'Taxation', name: 'Head Tax', axis: 'tax_basic', prereqs: [], icon: '👑',\r\n        description: 'Subjects must pay a flat tax.'},\r\n    'sales_tax':{\r\n        key: 'sales_tax', group: 'Taxation', name: 'Sales Tax', axis: 'tax_basic', prereqs: [], icon: '💸',\r\n        description: 'Subjects must pay a percentage tax for every transaction.'},\r\n    // 'wealth_tax':{\r\n    //     key: 'wealth_tax', group: 'Taxation', name: 'Wealth Tax', axis: 'tax_basic',\r\n    //     description: 'Rich subjects must pay a percentage tax on their excess cash.'},\r\n    // 'vice_tax':{\r\n    //     key: 'vice_tax', group: 'Taxation', name: 'Vice Tax', axis: 'tax_second',\r\n    //     description: 'Entertainment goods have a flat tax.'},\r\n    // 'prop_tax':{\r\n    //     key: 'prop_tax', group: 'Taxation', name: 'Property Tax', axis: 'tax_second',\r\n    //     description: 'Subjects must pay a tax on housing.'},\r\n    'death_tax':{\r\n        key: 'death_tax', group: 'Taxation', name: 'Death Tax', axis: 'tax_second', prereqs: [], icon: '☠️',\r\n        description: 'Dead subjects pay a portion of their cash to the government.'},\r\n}\r\nexport interface IGovernment{\r\n    \r\n}\r\nexport type LawGroupToLaws = {\r\n    [key in LawGroup]: ILaw[]\r\n};\r\nexport const SalesTaxPercentage = 0.05;\r\nexport class Government{\r\n    public get laws(): ILaw[] {\r\n        return Object.values(this.lawTree).flatMap(law => law ? [law] : []);\r\n    }\r\n    public set laws(val: ILaw[]) {\r\n        val.forEach((v) => {\r\n            this.lawTree[v.axis] = v;\r\n        });\r\n    }\r\n    public getLawsByGroup(): LawGroupToLaws {\r\n        return this.laws.reduce((d, x) => {\r\n            d[x.group].push(x);\r\n            return d;\r\n        }, {\r\n            Taxation: [] as ILaw[],\r\n            Welfare: [] as ILaw[],\r\n            Economics: [] as ILaw[],\r\n            Crime: [] as ILaw[],\r\n            Culture: [] as ILaw[]\r\n        });\r\n    }\r\n    public lawTree: {[key in LawAxis]: ILaw|undefined} = {} as {[key in LawAxis]: ILaw|undefined};\r\n\r\n    isLaw(l: LawKey): boolean{\r\n        return this.lawTree[LawData[l].axis]?.key === l;\r\n    }\r\n\r\n    enact(l: LawKey): void {\r\n        const data = LawData[l];\r\n        this.lawTree[data.axis] = data;\r\n    }\r\n\r\n    revoke(l: LawKey): void {\r\n        const data = LawData[l];\r\n        this.lawTree[data.axis] = undefined;\r\n    }\r\n\r\n    get salesTaxPercentage(): number{\r\n        return this.isLaw('sales_tax') ? SalesTaxPercentage : 0;\r\n    }\r\n    \r\n    PurchaseQualifiesForWelfare(bean: IBean, good: TraitGood): boolean{\r\n        switch(good){\r\n            case 'food':\r\n                return (bean.food === 'starving' || bean.food === 'hungry') && this.isLaw('food_aid');\r\n            case 'medicine':\r\n                return (bean.health === 'sick' || bean.health === 'sickly') && this.isLaw('medical_aid');\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function IsLaw(gov: IGovernment, l: LawKey){\r\n    return gov.lawTree[LawData[l].axis]?.key === l;\r\n}\r\nexport function MaybeRebate(gov: IGovernment, beans: IBean[]){\r\n    const allowedTreasury = beans.length * DollarPerBeanRebateThreshold;\r\n    if (gov.cash > allowedTreasury){\r\n        const overage = gov.cash - allowedTreasury;\r\n        const perBean = overage / beans.length;\r\n        gov.cash = allowedTreasury;\r\n        beans.forEach((b) => b.cash += perBean);\r\n    }\r\n}\r\nfunction AgentIsPhysical(bean: any): bean is {food: TraitFood, health: TraitHealth} {\r\n    return bean['food'] != undefined && bean['sick'] != undefined;\r\n}\r\nexport function GovPurchaseQualifiesForWelfare(law: IGovernment, buyer: IEconomicAgent, good: TraitGood){\r\n    if (AgentIsPhysical(buyer)){\r\n        switch(good){\r\n            case 'food':\r\n                return (buyer.food === 'starving' || buyer.food === 'hungry') && IsLaw(law, 'food_aid');\r\n            case 'medicine':\r\n                return (buyer.health === 'sick' || buyer.health === 'sickly') && IsLaw(law, 'medical_aid');\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function GovCanPayWelfare(law: IGovernment, price: number): boolean{\r\n    return law.cash >= price;\r\n}","import { TraitGood, TraitJob, GoodToJob, Trait } from \"../World\";\r\nimport { IEnterprise } from \"./Institutions\";\r\nimport { GovCanPayWelfare, Government, GovPurchaseQualifiesForWelfare, IGovernment, ILaw, IsLaw, SalesTaxPercentage } from \"./Government\";\r\nimport { IBean } from \"./Agent\";\r\n\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    ticksSinceLastSale: number;\r\n}\r\nfunction AgentIsSeller(a: any): a is ISeller{\r\n    return a.ticksSinceLastSale != null;\r\n}\r\nexport interface IListing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerEnterpriseKey?: number;\r\n    price: number;\r\n    seller?: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'shelter', 'medicine', 'fun'];\r\n\r\nexport interface IEconomy{\r\n    unfulfilledMonthlyDemand: {[key in TraitGood]: number};\r\n    monthlyDemand: {[key in TraitGood]: number};\r\n    monthlySupply: {[key in TraitGood]: number};\r\n    market: IMarket;\r\n}\r\nexport interface IMarket{\r\n    listings: {[key in TraitGood]: IListing[]};\r\n}\r\nexport interface IMarketReceipt{\r\n    bought: number, \r\n    price: number, \r\n    tax: number\r\n}\r\nexport function MarketTransact(\r\n    market: IMarket, \r\n    listing: IListing, \r\n    good: TraitGood, \r\n    demand: number, \r\n    buyer: IEconomicAgent, \r\n    seller: ISeller, \r\n    salesTaxPercentage: number){    \r\n    MarketListingSubtract(market, listing, good, demand);\r\n    const listPrice = listing.price * demand;\r\n    const tax = listPrice * salesTaxPercentage;\r\n    const grossPrice = listPrice + tax;\r\n    buyer.cash -= grossPrice;\r\n    seller.cash += listPrice;\r\n    seller.ticksSinceLastSale = 0;\r\n    return {\r\n        bought: demand,\r\n        price: listPrice,\r\n        tax: tax\r\n    }\r\n}\r\nexport function MarketGovernmentTransact(market: IMarket, gov: IGovernment, listing: IListing, good: TraitGood, demand: number, seller: ISeller){\r\n    MarketListingSubtract(market, listing, good, demand);\r\n    const listPrice = listing.price * demand;\r\n    const grossPrice = listPrice;\r\n    gov.cash -= grossPrice;\r\n    seller.cash += listPrice;\r\n    seller.ticksSinceLastSale = 0;\r\n    return {\r\n        bought: demand,\r\n        price: listPrice,\r\n        tax: 0\r\n    }\r\n}\r\nexport function MarketListingSubtract(market: IMarket, listing: IListing, good: TraitGood, demand: number){     \r\n    listing.quantity -= demand;\r\n    if (listing.quantity <= 0){\r\n        market.listings[good].splice(0, 1);\r\n    }\r\n}\r\n\r\nexport function EconomyTryTransact(\r\n    economy: IEconomy,\r\n    gov: IGovernment,\r\n    buyer: IEconomicAgent, \r\n    good: TraitGood,\r\n    getSeller: (l: IListing) => ISeller,\r\n    minDemand: number = 1,\r\n    maxDemand: number = 1\r\n    ): IMarketReceipt|undefined {\r\n    economy.monthlyDemand[good] += maxDemand;\r\n    const listing = MarketLowestPriceListing(economy.market, good, minDemand);\r\n    if (listing == null){\r\n        //console.log('agent could not find '+good);\r\n        economy.unfulfilledMonthlyDemand[good] += maxDemand;\r\n        return undefined;\r\n    }\r\n    const actualDemand = Math.min(listing.quantity, maxDemand);\r\n    const salesTaxPercent = IsLaw(gov, 'sales_tax') ? SalesTaxPercentage : 0;\r\n    if ((listing.price * (1 + salesTaxPercent)) <= buyer.cash * actualDemand){ \r\n        const receipt = MarketTransact(economy.market, listing, good, actualDemand, buyer, getSeller(listing), salesTaxPercent);\r\n        if (receipt.tax){\r\n            gov.cash += receipt.tax;\r\n        }\r\n        return receipt;\r\n    } else {\r\n        if (GovPurchaseQualifiesForWelfare(gov, buyer, good) && GovCanPayWelfare(gov, listing.price)){\r\n            return MarketGovernmentTransact(economy.market, gov, listing, good, actualDemand, getSeller(listing));\r\n        }\r\n    }\r\n    economy.unfulfilledMonthlyDemand[good] += actualDemand;\r\n    return undefined;\r\n}\r\nexport function EconomyMostInDemandJob(economy: IEconomy){\r\n    const goods: TraitGood[] = AllGoods;\r\n    const max = goods.reduce((last, good) => {\r\n        if (economy.unfulfilledMonthlyDemand[good] > last.max){\r\n            last.max = economy.unfulfilledMonthlyDemand[good];\r\n            last.job = GoodToJob(good);\r\n        }\r\n        return last;\r\n    }, {max: 0, job: null as TraitJob|null})\r\n\r\n    return max.job;\r\n}\r\nconst MaximumListingQuantity = 20;\r\nexport function EconomyProduceAndPrice(economy: IEconomy, seller: IBean, good: TraitGood, quantity: number, price: number) {\r\n    economy.monthlySupply[good] += quantity;\r\n    const existing = economy.market.listings[good].find((x) => x.sellerBeanKey == seller.key);\r\n    if (existing){\r\n        existing.quantity += quantity;\r\n        existing.price = price;\r\n        existing.quantity = Math.min(existing.quantity, MaximumListingQuantity);\r\n    } else {\r\n        economy.market.listings[good].push({\r\n            sellerBeanKey: seller.key,\r\n            sellerCityKey: seller.cityKey,\r\n            price: price,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    economy.market.listings[good].sort((a, b) => a.price - b.price);\r\n}\r\nexport function EconomyEmployAndPrice(econ: IEconomy, seller: IEnterprise, good: TraitGood, quantity: number, price: number) {\r\n    econ.monthlySupply[good] += quantity;\r\n    const existing = econ.market.listings[good].find((x) => x.sellerEnterpriseKey == seller.key);\r\n    if (existing){\r\n        existing.quantity += quantity;\r\n        existing.price = price;\r\n        existing.quantity = Math.min(existing.quantity, MaximumListingQuantity);\r\n    } else {\r\n        econ.market.listings[good].push({\r\n            sellerEnterpriseKey: seller.key,\r\n            price: price,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    econ.market.listings[good].sort((a, b) => a.price - b.price);\r\n}\r\nexport function GetFairGoodPrice(econ: IEconomy, good: TraitGood){\r\n    const supply = econ.monthlySupply[good] || 1;\r\n    const demand = econ.monthlyDemand[good];\r\n    return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n}\r\nexport function GetCostOfLiving(econ: IEconomy){\r\n    return GetFairGoodPrice(econ, 'food')+GetFairGoodPrice(econ, 'shelter')+GetFairGoodPrice(econ,'medicine');\r\n}\r\nexport function EconomyCanBuy(econ: IEconomy, gov: IGovernment, buyer: IEconomicAgent, good: TraitGood,\r\n    minDemand: number = 1,\r\n    maxDemand: number = 1): 'yes'|'nosupply'|'pricedout'{\r\n    const listing = MarketLowestPriceListing(econ.market, good, minDemand);\r\n    if (listing == null){\r\n        return 'nosupply';\r\n    }\r\n    const actualDemand = Math.min(listing.quantity, maxDemand);\r\n    if (listing.price <= buyer.cash * actualDemand)\r\n        return 'yes';\r\n    if (GovPurchaseQualifiesForWelfare(gov, buyer, good) && GovCanPayWelfare(gov, listing.price)){\r\n        return 'yes';\r\n    }\r\n    return 'pricedout';\r\n\r\n}\r\n\r\nfunction MarketLowestPriceListing(market: IMarket, good: TraitGood, demand: number): IListing|null{\r\n    const fullListings =  market.listings[good].filter((l) => {\r\n        return l.quantity >= demand;\r\n    });\r\n    if (fullListings.length > 0){\r\n        let numberOfSamePriceListings = 1;\r\n        const lowPrice = fullListings[0].price;\r\n        for (let i = 1; i < fullListings.length; i++) {\r\n            const list = fullListings[i];\r\n            if (list.price > lowPrice)\r\n                break;\r\n            numberOfSamePriceListings++;\r\n        }\r\n        const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n        if (i >= fullListings.length)\r\n            throw \"invalid index\";\r\n        return fullListings[i];\r\n    }\r\n    return null;\r\n}","import { MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { TraitEmote } from \"../World\";\r\nimport { IBean } from \"./Agent\";\r\nimport { OriginAccelerator, Point, Vector } from \"./Geography\";\r\n\r\nexport interface IPickup{\r\n    key: number, \r\n    point: Point, \r\n    type: TraitEmote,\r\n    velocity: Vector\r\n}\r\n\r\nexport function GenerateEmoteFromBean(bean: IBean, emote: TraitEmote): IPickup {\r\n    return {\r\n        key: 0,\r\n        point: {\r\n            ...(MoverStoreInstance.Get('bean', bean.key).current || OriginAccelerator).point\r\n        },\r\n        type: emote,\r\n        velocity: { x: 0, y: 0 }\r\n    };\r\n}","import { IEvent } from \"../events/Events\";\r\nimport { BeanResources, IDifficulty } from \"../Game\";\r\nimport { MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { EmotionSanity, EmotionWorth, GoodToThreshold, JobToGood, TraitEmote, TraitFood, TraitGood, TraitHealth, TraitSanity, TraitStamina } from \"../World\";\r\nimport { GetRandom, GetRandomNumber, GetRandomRoll } from \"../WorldGen\";\r\nimport { IBean, IChatData } from \"./Agent\";\r\nimport { GetInsanityFromBrainwashing, InsanityTraits, SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { GetFairGoodPrice, IEconomy } from \"./Economy\";\r\nimport { OriginAccelerator } from \"./Geography\";\r\nimport { IGovernment } from \"./Government\";\r\nimport { GenerateEmoteFromBean, IPickup } from \"./Pickup\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nconst BabyChance = 0.008;\r\nexport const DaysUntilSleepy = 7;\r\nconst ChatCooldownMS = 4000;\r\n/**\r\n * beans with belief # < this are more likely to be persuaded\r\n * with belief # > this are less likely to be persuaded\r\n */\r\nconst PersuasionBeliefTarget = 2; \r\n\r\nexport const HedonismExtraChance = 0.1;\r\nexport const ParanoidUnhappyChance = 0.05;\r\nexport const HedonismHateWorkChance = 0.15;\r\nexport const DiligenceHappyChance = 0.25;\r\nexport const ParochialHappyChance = 0.25;\r\nexport const CosmopolitanHappyChance = 0.25;\r\nconst ExtrovertChatExtraChance = 0.25;\r\nconst IntrovertChatExtraChance = -.15;\r\nconst AntagonismBullyChance = 0.45;\r\nconst GossipBullyChance = 0.35;\r\nconst EnthusiasmPraiseChance = 0.45;\r\nexport const GermophobiaHospitalWorkChance = 0.25;\r\nconst NatalismExtraBabyChance = 0.04;\r\nconst AntinatalismExtraBabyChance = -0.002;\r\nconst CharismaExtraPersuasionStrength = 2; //d20 based, so 10% extra strength\r\nexport const LibertarianTaxUnhappyChance = 0.1;\r\nexport const ProgressivismTaxHappyChance = 0.1;\r\n\r\nconst MaxGraceTicks = 6;\r\n\r\nexport function BeanMaybePersuaded(bean: IBean, seed: string, belief: TraitBelief, strength: number): boolean{\r\n    if (BeanBelievesIn(bean, 'Dogmatism'))\r\n        return false;\r\n\r\n    if (!bean.beliefs.includes(belief)){\r\n        let defense = 10 + GetRandomNumber(seed, 1, 6);\r\n        defense += bean.beliefs.length - PersuasionBeliefTarget;\r\n        let offense = GetRandomNumber(seed, 1, 20) + strength;\r\n\r\n        return (offense > defense);\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function BeanCalculateHealth(bean: IBean, difficulty: IDifficulty): TraitHealth{\r\n    if (bean.discrete_health >= GoodToThreshold['medicine'].abundant)\r\n        bean.health = 'fresh';\r\n    else if (bean.discrete_health >= GoodToThreshold['medicine'].sufficient)\r\n        bean.health =  'bruised'\r\n    else if (bean.discrete_health >= GoodToThreshold['medicine'].warning)\r\n        bean.health =  'sickly'\r\n    else\r\n        bean.health =  'sick';\r\n\r\n    return bean.health;\r\n}\r\n\r\nexport function BeanCalculateShelter(bean: IBean, difficulty: IDifficulty): TraitStamina{\r\n    if (bean.discrete_stamina < 0)\r\n        bean.stamina = 'homeless';\r\n    else\r\n        bean.stamina = 'rested';\r\n    \r\n    return bean.stamina;\r\n}\r\n\r\nexport function BeanCalculateSanity(bean: IBean, difficulty: IDifficulty): TraitSanity{\r\n    if (bean.discrete_sanity >= 8)\r\n        bean.sanity = 'sane';\r\n    else if (bean.discrete_sanity >= 5)\r\n        bean.sanity =  'stressed'\r\n    else if (bean.discrete_sanity >= 3)\r\n        bean.sanity =  'disturbed'\r\n    else\r\n        bean.sanity =  'psychotic';\r\n    return bean.sanity;\r\n}\r\nexport function BeanCalculateFood(bean: IBean, difficulty: IDifficulty): TraitFood{\r\n    if (bean.discrete_food >= GoodToThreshold['food'].abundant)\r\n    bean.food = 'stuffed';\r\n    else if (bean.discrete_food >= GoodToThreshold['food'].sufficient)\r\n    bean.food = 'sated'\r\n    else if (bean.discrete_food >= GoodToThreshold['food'].warning)\r\n    bean.food = 'hungry'\r\n    else\r\n    bean.food = 'starving';\r\n\r\n    return bean.food;\r\n}\r\n\r\nexport function BeanCalculateBeliefs(bean: IBean, econ: IEconomy, difficulty: IDifficulty, law: IGovernment){\r\n    bean.hedonFiveDayRecord = {\r\n        min: Math.min(bean.hedonFiveDayRecord.min, bean.happiness.flatAverage),\r\n        max: Math.max(bean.hedonFiveDayRecord.max, bean.happiness.flatAverage)  \r\n    };\r\n    if (bean.happiness.flatAverage === 0){\r\n        bean.lastHappiness = 0;\r\n    } else {\r\n        bean.lastHappiness = bean.happiness.flatAverage >= 0 ? (\r\n            bean.happiness.flatAverage / Math.abs(bean.hedonFiveDayRecord.max)) * 100 : (\r\n            bean.happiness.flatAverage / Math.abs(bean.hedonFiveDayRecord.min)) * 100;\r\n    }\r\n    \r\n    BeanCalculateFood(bean, difficulty);\r\n    BeanCalculateHealth(bean, difficulty);\r\n    BeanCalculateSanity(bean, difficulty);\r\n    BeanCalculateShelter(bean, difficulty);\r\n\r\n    if (bean.job === 'jobless'){\r\n        bean.fairGoodPrice = 1;\r\n    } else {\r\n        bean.fairGoodPrice = GetFairGoodPrice(econ, JobToGood(bean.job))\r\n    }\r\n}\r\nexport function BeanMaybeChat(bean: IBean): boolean {\r\n        if (bean.lastChatMS + ChatCooldownMS > Date.now()) \r\n            return false;\r\n        if (bean.action === 'chat')\r\n            return false;\r\n        const roll = Math.random();\r\n        let chance = (bean.community === 'state') ? 0.2 : 0.1;\r\n        if (BeanBelievesIn(bean, 'Extroversion')) \r\n            chance += ExtrovertChatExtraChance;\r\n        if (BeanBelievesIn(bean, 'Introversion')) \r\n            chance += IntrovertChatExtraChance;\r\n        return roll < chance;\r\n}\r\nexport function BeanGetRandomChat(bean: IBean, seed: string, findNeedy: () => IBean|undefined): IChatData{\r\n    const canPreach = bean.beliefs.length;\r\n    if (canPreach){\r\n        if (BeanBelievesIn(bean, 'Charity') && bean.cash >= 2){\r\n            //find a bean with less money than self, poorest in sight\r\n            const needy = findNeedy();\r\n            if (needy) {\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'gift',\r\n                    targetBeanKey: needy.key\r\n                }\r\n            }\r\n        } else if(BeanBelievesIn(bean, 'Enthusiasm') && Math.random() < EnthusiasmPraiseChance){\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'praise',\r\n                preachBelief: 'Enthusiasm'\r\n            }\r\n        } else if(BeanBelievesIn(bean, 'Antagonism') && Math.random() < AntagonismBullyChance){\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'bully',\r\n                preachBelief: 'Antagonism'\r\n            }\r\n        } else if(BeanBelievesIn(bean, 'Gossip') && Math.random() < GossipBullyChance){\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'bully',\r\n                preachBelief: 'Gossip'\r\n            }\r\n        }\r\n        return {\r\n            participation: 'speaker',\r\n            type: 'preach',\r\n            preachBelief: GetRandom(seed, bean.beliefs),\r\n            persuasionStrength: 1 + (BeanBelievesIn(bean, 'Charisma') ? CharismaExtraPersuasionStrength : 0)\r\n        }\r\n    } else {\r\n        return {\r\n            participation: 'speaker',\r\n            type: 'praise'\r\n        }\r\n    }\r\n}\r\n\r\nexport function BeanAge(bean: IBean, seed: string, diff: IDifficulty): {death?: IEvent, emotes?: IPickup[]}|undefined {\r\n    if (bean.lifecycle != 'alive') return undefined;\r\n    const emotes: IPickup[] = [];\r\n\r\n    const wasNotHungry = bean.food !== 'starving';\r\n    const wasNotSick = bean.health !== 'sick';\r\n\r\n    bean.discrete_food -= diff.bean_life.degrade_per_tick.food;\r\n    if (bean.discrete_food < 0)\r\n        bean.discrete_health -= diff.bean_life.penalty.starving_health;\r\n\r\n    BeanCalculateFood(bean, diff);\r\n    const starve = BeanMaybeDie(bean, seed, 'starvation', bean.food === 'starving', 0.6);\r\n    if (starve)\r\n        return starve;\r\n    else if (bean.food === 'starving' && wasNotHungry){\r\n        emotes.push(...BeanEmote(bean, 'unhappiness', 'Starving'));\r\n        if (BeanBelievesIn(bean, 'Gluttony')){\r\n            emotes.push(...BeanEmote(bean, 'unhappiness', 'Gluttony'));\r\n            emotes.push(...BeanEmote(bean, 'unhappiness', 'Gluttony'));\r\n        }\r\n    }\r\n        \r\n    bean.discrete_stamina -= diff.bean_life.degrade_per_tick.stamina;\r\n\r\n    BeanCalculateShelter(bean, diff);\r\n    const exposure = BeanMaybeDie(bean, seed, 'exposure', bean.stamina === 'homeless', 0.2);\r\n    if (exposure)\r\n        return exposure;\r\n\r\n    bean.discrete_health -= diff.bean_life.degrade_per_tick.health;\r\n    bean.discrete_health = Math.min(bean.discrete_health, 3);\r\n\r\n    BeanCalculateHealth(bean, diff);\r\n    const sick = BeanMaybeDie(bean, seed, 'sickness', bean.health === 'sick', 0.4);\r\n    if (sick)\r\n        return sick;\r\n    else if (bean.health === 'sick' && wasNotSick){\r\n        emotes.push(...BeanEmote(bean, 'unhappiness', 'Sick'));\r\n        if (BeanBelievesIn(bean, 'Germophobia')){\r\n            emotes.push(...BeanEmote(bean, 'unhappiness', 'Germophobia'));\r\n        }\r\n    }\r\n\r\n    bean.discrete_fun -= diff.bean_life.degrade_per_tick.fun;\r\n    bean.discrete_fun = Math.max(0, bean.discrete_fun);\r\n\r\n    if (!BeanIsInCrisis(bean))\r\n        bean.graceTicks = MathClamp(bean.graceTicks+1, 0, MaxGraceTicks);\r\n    \r\n    if (emotes.length)\r\n        return {\r\n            emotes: emotes\r\n        };\r\n    else \r\n        return undefined;\r\n}\r\n\r\nexport function BeanEmote(bean: IBean, emote: TraitEmote, source: string): IPickup[]{\r\n    bean.discrete_sanity = MathClamp(bean.discrete_sanity + EmotionSanity[emote], 0, 10);\r\n    bean.hedonHistory[0][source] = (bean.hedonHistory[0][source] || 0) + EmotionWorth[emote];\r\n    const out = [\r\n        GenerateEmoteFromBean(bean, emote)\r\n    ];\r\n    if (BeanBelievesIn(bean, 'Hedonism') && (emote === 'happiness' || emote === 'love') && Math.random() < HedonismExtraChance){\r\n        out.push(...BeanEmote(bean, 'happiness', 'Hedonism'));\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function BeanBelievesIn(bean: IBean, trait: TraitBelief): boolean{\r\n    return bean.beliefs.indexOf(trait) !== -1;\r\n}\r\nexport function BeanMaybeBaby(bean: IBean, seed: string, costOfLiving: number): IEvent|undefined{\r\n    if (BeanCanBaby(bean, costOfLiving) &&\r\n        GetRandomRoll(seed, BeanBabyChance(bean))) {\r\n        if (BeanBelievesIn(bean, 'Natalism')){\r\n            BeanEmote(bean, 'love', 'Natalist Parent');\r\n        } else if (BeanBelievesIn(bean, 'Antinatalism')) {\r\n            BeanEmote(bean, 'hate', 'Antinatalism');\r\n        } else {\r\n            BeanEmote(bean, 'happiness', 'Proud Parent');\r\n        }\r\n        return {\r\n            icon: '🎉', trigger: 'birth', message: `${bean.name} has a baby!`,\r\n            key: 0,\r\n        }\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\nexport function BeanMaybeCrime(bean: IBean, good: TraitGood): boolean {\r\n    if (good === 'shelter') return false;\r\n    if (good === 'fun') return false;\r\n    const roll = Math.random();\r\n    let chance = 0.05;\r\n    if (bean.community === 'ego'){\r\n        chance += .1;\r\n    }\r\n    if (BeanIsInCrisis(bean)){\r\n        chance += .1;\r\n    }\r\n    if (BeanBelievesIn(bean, 'Greed')){\r\n        chance += .25;\r\n    }\r\n    if (BeanBelievesIn(bean, 'Anarchism')){\r\n        chance += .33;\r\n    }\r\n    if (BeanBelievesIn(bean, 'Authority')){\r\n        chance += -.25;\r\n    }\r\n    if (good === 'food' && bean.food === 'starving'){\r\n        chance += .25;\r\n    }\r\n    else if (good === 'medicine' && bean.health === 'sick'){\r\n        chance += .25;\r\n    }\r\n    return chance <= roll;\r\n}\r\nexport function BeanMaybeParanoid(bean: IBean) {\r\n    if (BeanBelievesIn(bean, 'Paranoia') && Math.random() < ParanoidUnhappyChance){\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function BeanMaybeScarcity(bean: IBean, good: TraitGood){\r\n    let scarce = false;\r\n    if (good === 'food' && (bean.food === 'starving' || bean.food === 'hungry'))\r\n        scarce = true;\r\n    else if (good === 'shelter' && (bean.stamina === 'homeless' || bean.stamina === 'sleepy'))\r\n        scarce = true;\r\n    else if (good === 'medicine' && (bean.health === 'sick' || bean.health === 'sickly'))\r\n        scarce = true;\r\n    return scarce;\r\n}\r\nexport function BeanCanBaby(bean: IBean, costOfLiving: number): boolean{\r\n    return bean.lifecycle === 'alive' && \r\n        bean.cash > costOfLiving * 3 &&\r\n        !BeanIsInCrisis(bean);\r\n}\r\nexport function BeanBabyChance(bean: IBean): number{\r\n    let base = BabyChance;\r\n    if (BeanBelievesIn(bean, 'Natalism'))\r\n        base += NatalismExtraBabyChance;\r\n    if (BeanBelievesIn(bean, 'Antinatalism'))\r\n        base += AntinatalismExtraBabyChance;\r\n    return base;\r\n}\r\nexport function BeanMaybeDie(bean: IBean, seed: string, cause: string, isDire: boolean, chance: number): {death: IEvent, emotes: IPickup[]}|undefined{\r\n    if (isDire && Math.random() <= chance) {\r\n        if (bean.graceTicks <= 0){\r\n            return BeanDie(bean, seed, cause);\r\n        }\r\n        bean.graceTicks--;\r\n    }\r\n    return undefined;\r\n}\r\nexport function BeanDie(bean: IBean, seed: string, cause: string): {death: IEvent, emotes: IPickup[]}{\r\n    bean.lifecycle = 'dead';\r\n    const pains = GetRandomNumber(seed, 2, 3);\r\n    const emotes = (new Array(pains)).map(\r\n        x => GenerateEmoteFromBean(bean, 'hate')\r\n    );\r\n    return {\r\n        death: {\r\n            icon: '☠️', trigger: 'death', message: `${bean.name} died of ${cause}!`, \r\n            beanKey: bean.key, cityKey: bean.cityKey,\r\n            point: (MoverStoreInstance.Get('bean', bean.key).current || OriginAccelerator).point,\r\n            key: 0,\r\n        },\r\n        emotes: emotes\r\n    }\r\n}\r\n\r\nexport function BeanLoseSanity(bean: IBean, amount: number){\r\n    const multiplier = BeanBelievesIn(bean, 'Neuroticism') ? 2 : 1;\r\n    bean.discrete_sanity -= multiplier * amount;\r\n}\r\n\r\nexport function BeanGetSpeech(bean: IBean): string|undefined { \r\n    if (bean.action === 'chat'){\r\n        if (bean.actionData.chat?.participation === 'speaker' && bean.actionData.chat.preachBelief){\r\n            return '💬'+SecondaryBeliefData[bean.actionData.chat.preachBelief].icon;\r\n        }\r\n    }\r\n}\r\n\r\nexport function BeanIsInCrisis(bean: IBean): boolean{\r\n    return bean.food === 'starving' ||\r\n    bean.stamina === 'homeless' ||\r\n    bean.health === 'sick';\r\n}\r\n\r\nexport function BeanCanPurchase(bean: IBean, cost: BeanResources, sanityBonus: number){\r\n    return (cost.sanity === undefined || bean.discrete_sanity >= cost.sanity + sanityBonus);\r\n}\r\n\r\nexport function BeanGetFace(bean: IBean): string{\r\n    if (bean.lifecycle === 'dead')\r\n        return '💀';\r\n    if (bean.actionData.act === 'sleep'){\r\n        return '😴';\r\n    }\r\n    if (bean.actionData.act === 'crime'){\r\n        return '😈';\r\n    }\r\n    if (bean.actionData.act === 'relax'){\r\n        return '😎';\r\n    }\r\n    if (bean.actionData.act === 'chat'){\r\n        if (bean.actionData.chat?.participation === 'speaker'){\r\n            switch(bean.actionData?.chat?.type){\r\n                default: return '😃';\r\n                case 'gift': return '😇';\r\n                case 'praise': return '🥳';\r\n                case 'bully': return '😈';\r\n            }\r\n        }\r\n        return '🤨';\r\n    }\r\n    if (bean.food === 'starving')\r\n        return '😫';\r\n    if (bean.health === 'sick')\r\n        return '🤢';\r\n    if (bean.stamina === 'homeless')\r\n        return '🥶';\r\n    if (bean.job === 'jobless')\r\n        return '😧';\r\n    if (bean.lastHappiness < 0)\r\n        return '☹️';\r\n    if (bean.lastHappiness >= 50)\r\n        return '🙂';\r\n    return '😐';\r\n}\r\n\r\nexport function BeanMaybeGetInsanity(seed: string, bean: IBean): {beanKey: number, newInsanity: InsanityTraits}|undefined{\r\n    const insanity = GetInsanityFromBrainwashing(seed, bean.sanity, bean.beliefs);\r\n    if (insanity){\r\n        return {\r\n            beanKey: bean.key,\r\n            newInsanity: insanity\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n","import { ChangePubSub, IEvent, PubSub } from \"./events/Events\";\r\n\r\nexport class SignalStore {\r\n    alienEnergy = new ChangePubSub();\r\n    alienBots = new ChangePubSub();\r\n    alienHedons = new ChangePubSub();\r\n    newTraitSeen = new PubSub<{k: string, v: boolean}>();\r\n    events = new PubSub<IEvent>();\r\n    autosave = new PubSub<boolean>();\r\n}\r\n\r\nexport const SignalStoreInstance = new SignalStore();","import { DefaultDifficulty, IDifficulty, PlayerResources } from \"../Game\";\r\nimport { SignalStoreInstance } from \"../SignalStore\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { Number_Starting_City_Pop } from \"../WorldGen\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\nimport { IDate } from \"./Time\";\r\n\r\n\r\nexport interface IPlayerData{\r\n    scanned_bean: {[beanKey: number]: boolean};\r\n    abductedBeanKeys: number[];\r\n    seenBeliefs: {[key: string]: boolean};\r\n    speechcrimes: {[year: number]: number};\r\n    next_grade: IDate;\r\n    pastReportCards: IReportCard[];\r\n    energy: IResource;\r\n    bots: IResource;\r\n    hedons: IResource;\r\n    workingReportCard: IReportCard;\r\n    techProgress: TechProgress;\r\n    currentlyResearchingTech: Tech|undefined;\r\n    difficulty: IDifficulty;\r\n    beliefInventory: BeliefInventory[];\r\n    goalProgress: {[key: string]: IGoalProgress};\r\n    goals: GoalKey[]\r\n}\r\n\r\nexport interface IResource{\r\n    amount: number;\r\n    income: number;\r\n}\r\n\r\nexport type GoalKey = 'found_utopia'|'build_house_n_farm'|'beam_3'|'scan'|'set_policy'|'brainwash'|'c+_grade';\r\nexport interface IGoal{\r\n    key: GoalKey;\r\n    text: string;\r\n    tooltip?: string;\r\n    reward?: PlayerResources,\r\n    check: (world: IWorldState) => boolean\r\n}\r\nexport interface IGoalProgress {\r\n    done: boolean,\r\n    step: number\r\n}\r\nexport interface IProgressable{\r\n    goalProgress: {[key: string]: IGoalProgress},\r\n    goals: Array<GoalKey>\r\n}\r\nexport const Goals: {[key in GoalKey]: IGoal} = {\r\n    found_utopia: {\r\n        key: 'found_utopia', text: 'Found your Utopia',\r\n       check: (world) => world.buildings.allIDs.length > 0\r\n    },\r\n    build_house_n_farm: {\r\n        key: 'build_house_n_farm', text: 'Build a house and farm',\r\n        check: (world) => {\r\n            return world.buildings.allIDs.find(k => world.buildings.byID[k].type == 'farm') != null &&\r\n            world.buildings.allIDs.find(k => world.buildings.byID[k].type == 'house') != null;\r\n        },\r\n        reward: {\r\n            energy: 3, bots: 3\r\n        }\r\n    }, \r\n    beam_3: {\r\n        key: 'beam_3', text: 'Beam in 3 new beings', \r\n        check: (world) => {\r\n            return world.beans.allIDs.filter(k => !world.beans.byID[k].bornInPetri).length >= (3 + Number_Starting_City_Pop)\r\n        }\r\n    }, \r\n    scan: {\r\n        key: 'scan', text: 'Scan a Subject',\r\n        check: (world) => Object.keys(world.alien.scanned_bean).length > 0\r\n    }, \r\n    set_policy: {\r\n        key: 'set_policy', text: 'Set a Gov Policy',\r\n        check: (world) => false\r\n    }, \r\n    brainwash: {\r\n        key: 'brainwash', text: 'Brainwash a Subject',\r\n        check: (world) => false\r\n    }, \r\n    'c+_grade': {\r\n        key: 'c+_grade', text: 'Receive a C+ Grade',\r\n        check: (world) => false\r\n    } \r\n};\r\n\r\nexport type Grade = 'F'|'D'|'C'|'B'|'A';\r\nexport type RubricKeys = 'Happiness'|'Prosperity'|'Stability'|'Dogma';\r\nexport type IReportCard = {[key in RubricKeys]: Grade}\r\nexport type GradingFunc = (world: IWorldState) => IReportCard;\r\nexport interface ICurriculum {\r\n    GradeWorld: GradingFunc,\r\n    RubricDescription: {[key in RubricKeys]: string} \r\n}\r\nexport const Curriculums: {[difficulty: string]: ICurriculum} = {\r\n    Default: {\r\n        GradeWorld: (world: IWorldState) => {return{\r\n            Happiness: BooleanAverageGrader(world.beans.allIDs.map(x => world.beans.byID[x]), (o) => o.lastHappiness >- .2),\r\n            Prosperity: BooleanAverageGrader(world.beans.allIDs.map(x => world.beans.byID[x]), (o) => o.food !== 'hungry'),\r\n            Stability: BooleanAverageGrader(world.beans.allIDs.map(x => world.beans.byID[x]), (o) => o.sanity === 'sane'),\r\n            Dogma: GradeUpToNumber((world.alien.speechcrimes[world.date.year] || 0), 10, 10),\r\n        }},\r\n        RubricDescription: {\r\n            Happiness: 'Subjects are at least 20% happy',\r\n            Prosperity: 'Subjects are not hungry',\r\n            Stability: 'Subjects are all sane',\r\n            Dogma: 'Up to 10 Speechcrimes'\r\n        }\r\n    }\r\n}\r\n/**\r\n * \r\n * @param number number of bad events\r\n * @param allowance number of allowed events\r\n * @param maximum range of \"overflow\" events\r\n */\r\nfunction GradeUpToNumber(number: number, allowance: number, maximum: number): Grade{\r\n    const normalized = 1 - Math.min(1, Math.max(0, number - allowance) / maximum);\r\n    return NormalizedScoreToGrade(normalized);\r\n}\r\nfunction BooleanAverageGrader<T>(array: T[], grade: (o: T) => boolean): Grade{\r\n    if (array.length < 1) return 'F';\r\n    return NormalizedScoreToGrade(array.filter(grade).length / array.length);\r\n}\r\nfunction NormalizedScoreToGrade(normNumber: number): Grade{\r\n    if (normNumber < .58) return 'F';\r\n    if (normNumber < .68) return 'D';\r\n    if (normNumber < .78) return 'C';\r\n    if (normNumber < .88) return 'B';\r\n    return 'A';\r\n}\r\nconst GradeWeights: {[key in Grade]: number} ={\r\n    A: 5,\r\n    B: 4,\r\n    C: 3,\r\n    D: 2,\r\n    F: 1\r\n}\r\nexport function GetAverage(reportCard: IReportCard): Grade{\r\n    return NormalizedScoreToGrade((GradeWeights[reportCard.Happiness] + \r\n        GradeWeights[reportCard.Prosperity] + \r\n        GradeWeights[reportCard.Stability] +\r\n        GradeWeights[reportCard.Dogma] \r\n    ) / 20);\r\n}\r\n\r\nexport type Tech = 'sanity_bonus'|'fast_resources'|'trauma_nanobots'|'neural_duplicator';\r\nexport interface ITechInfo{\r\n    tech: Tech,\r\n    /**\r\n     * number of tech points required to complete research\r\n     */\r\n    techPoints: number,\r\n    name: string,\r\n    description: string\r\n}\r\nexport const TechData: {[key in Tech]: ITechInfo} = {\r\n    'sanity_bonus': {\r\n        tech: 'sanity_bonus',\r\n        name: 'Surgical Psychops',\r\n        techPoints: 30,\r\n        description: 'Brainwashing causes -1 🧠 Sanity damage'\r\n    },\r\n    'fast_resources': {\r\n        tech: 'fast_resources',\r\n        name: '0 Dimensional Supersiphons',\r\n        techPoints: 30,\r\n        description: 'Faster ⚡️ and 🤖 accumulation'\r\n    },\r\n    'trauma_nanobots': {\r\n        tech: 'trauma_nanobots',\r\n        name: 'Trauma Nanobots',\r\n        techPoints: 30,\r\n        description: 'Spend 🤖 to stop Subject from dying'\r\n    },\r\n    'neural_duplicator': {\r\n        tech: 'neural_duplicator',\r\n        name: 'Level 2 Neural Duplication',\r\n        techPoints: 30,\r\n        description: 'Copy 🧠 Traits 1 additional time'\r\n    }\r\n}\r\nexport interface IPlayerTechProgress{\r\n    /**\r\n     * number of research points\r\n     */\r\n    researchPoints: number\r\n}\r\nexport type TechProgress = {[key: string]: IPlayerTechProgress};\r\nexport interface BeliefInventory{\r\n    trait: TraitBelief,\r\n    gems: number\r\n}\r\n\r\nexport function PlayerReward(player: IPlayerData, reward: PlayerResources){\r\n    if (reward.bots){\r\n        player.bots.amount += reward.bots;\r\n        SignalStoreInstance.alienBots.publish({change: reward.bots});\r\n    }\r\n    if (reward.energy){\r\n        player.energy.amount += reward.energy;\r\n        SignalStoreInstance.alienEnergy.publish({change: reward.energy});\r\n    }\r\n    if (reward.hedons){\r\n        player.hedons.amount += reward.hedons;\r\n        SignalStoreInstance.alienHedons.publish({change: reward.hedons});\r\n    }\r\n}\r\n\r\nexport function CheckGoals(world: IWorldState, player: IPlayerData){\r\n    for (let i = 0; i < player.goals.length; i++) {\r\n        const goal = player.goals[i];\r\n        if (player.goalProgress[goal] == null){\r\n            player.goalProgress[goal] = {done: false, step: 0};\r\n        }\r\n        if (!player.goalProgress[goal].done) {\r\n            const done = Goals[goal].check(world);\r\n            const reward = Goals[goal].reward;\r\n            player.goalProgress[goal].done = done;\r\n            if (done && reward != null){\r\n                PlayerReward(player, reward);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function CheckReportCard(world: IWorldState, player: IPlayerData) {\r\n    player.workingReportCard = Curriculums.Default.GradeWorld(world);\r\n}\r\nexport function HasResearched(techProgress: TechProgress, tech: Tech){\r\n    return techProgress[tech] != null && techProgress[tech].researchPoints >= TechData[tech].techPoints\r\n}\r\nexport function PlayerCanAfford(player: IPlayerData, cost: PlayerResources, qty: number = 1): boolean{\r\n    return (cost.bots === undefined || player.bots.amount >= cost.bots * qty) &&\r\n    (cost.energy === undefined || player.energy.amount >= cost.energy * qty) && \r\n    (cost.hedons === undefined || player.hedons.amount >= cost.hedons * qty);\r\n}\r\nexport function PlayerUseTraitGem(alien: IPlayerData, t: TraitBelief){\r\n    const all = alien.beliefInventory;\r\n    const existing = all.find(x => x.trait === t);\r\n    if (existing){\r\n        existing.gems -= 1;\r\n        alien.beliefInventory = [...all.filter(x => x.gems > 0)];\r\n    }\r\n}\r\nexport function PlayerTryPurchase(player: IPlayerData, cost: PlayerResources, qty: number = 1): boolean{\r\n    if (PlayerCanAfford(player, cost, qty)){\r\n        PlayerPurchase(player, cost, qty);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function PlayerPurchase(player: IPlayerData, cost: PlayerResources, qty: number = 1): void{\r\n    if (cost.bots){\r\n        player.bots.amount -= cost.bots * qty;\r\n        SignalStoreInstance.alienBots.publish({change: -cost.bots * qty});\r\n    }\r\n    if (cost.energy){\r\n        player.energy.amount -= cost.energy * qty;\r\n        SignalStoreInstance.alienEnergy.publish({change: -cost.energy * qty});\r\n    }\r\n    if (cost.hedons){\r\n        player.hedons.amount -= cost.hedons * qty;\r\n        SignalStoreInstance.alienHedons.publish({change: -cost.hedons * qty});\r\n    }\r\n}","import { IWorldState } from \"../state/features/world\";\r\nimport { ICity } from \"./City\";\r\nimport { IEconomy } from \"./Economy\";\r\nimport { BuildingToGood, BuildingTypes, HexPoint, IBuilding, Point } from \"./Geography\";\r\nimport { EnterpriseType, IEnterprise } from \"./Institutions\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\n\r\nconst EnterpriseBuildings: BuildingTypes[] = ['farm', 'hospital', 'house', 'theater'];\r\n\r\nexport function BuildingOpenSlots(b: IBuilding): number[]{\r\n    return [0,1,2,3,4,5].filter((s, i) => {\r\n        return b.jobs[+s] == null && (i < 3 || b.upgraded);\r\n    }).map((x) => +x);\r\n}\r\n\r\nexport function BuildingUsedSlots(b: IBuilding): number[]{\r\n    return [0,1,2,3,4,5].filter((s) => {\r\n        return b.jobs[+s] != null;\r\n    }).map((x) => +x);\r\n}\r\n\r\nexport function BuildingTryFreeBean(b: IBuilding, beanKey: number): boolean{\r\n    const oldLen = b.jobs.length;\r\n    b.jobs = b.jobs.filter(x => x != beanKey);\r\n    return oldLen === b.jobs.length+1;\r\n}\r\nexport function GenerateIBuilding(world: IWorldState, city: ICity, type: BuildingTypes, hex: HexPoint, point: Point, lotKey: number, econ: IEconomy): IBuilding{\r\n    const newBuilding: IBuilding = {\r\n        type: type,\r\n        key: world.buildings.nextID++,\r\n        hex: hex,\r\n        point: {...point},\r\n        lotKey: lotKey,\r\n        jobs: [],\r\n        upgraded: false\r\n    }\r\n    world.buildings.allIDs.push(newBuilding.key);\r\n    world.buildings.byID[newBuilding.key] = newBuilding;\r\n    city.buildingKeys.push(newBuilding.key);\r\n    world.lots.byID[lotKey].buildingKey = newBuilding.key;\r\n\r\n    if (EnterpriseBuildings.some(x => type)){\r\n        newBuilding.enterpriseKey = newBuilding.key;\r\n        world.enterprises.allIDs.push(newBuilding.key);\r\n        world.enterprises.byID[newBuilding.key] = {\r\n            cash: 0,\r\n            cityKey: city.key,\r\n            enterpriseType: \"company\",\r\n            key: newBuilding.key,\r\n            ticksSinceLastSale: 0\r\n        }\r\n    }\r\n\r\n    const good = BuildingToGood[type];\r\n    \r\n    if (good != 'fun')\r\n    {\r\n        world.economy.market.listings[good].push({\r\n            price: 1,\r\n            quantity: 3,\r\n            sellerCityKey: city.key,\r\n            sellerEnterpriseKey: newBuilding.key\r\n        });\r\n    }\r\n    return newBuilding;\r\n}","import { PubSub } from \"../events/Events\";\r\nimport { MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { Trait, TraitEmote } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IBean } from \"./Agent\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { GetCostOfLiving, IEconomy } from \"./Economy\";\r\nimport { BuildingTypes, HexPoint, IBuilding, Point, Vector } from \"./Geography\";\r\nimport { IPickup } from \"./Pickup\";\r\nimport { BuildingTryFreeBean } from \"./RealEstate\";\r\n\r\n\r\nexport function reportIdeals(beans: IBean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: IBean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: IBean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: IBean[], defWin: Trait, beanPropGet: (bean: IBean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}\r\n\r\nexport class UFO{\r\n    constructor(public key: number, public point: HexPoint, public action: string){}\r\n}\r\nexport class Pickup implements IPickup{\r\n    constructor(public key: number, public point: Point, public type: TraitEmote){}\r\n    public velocity: Vector = {x: 0, y: 0};\r\n    public onMove = new PubSub<Point>();\r\n}\r\n\r\nexport interface ICity{\r\n    key: number,\r\n    name: string,\r\n    petriRadius: number,\r\n    petriOrigin: Point,\r\n    hex_size: Point,\r\n    deadBeanKeys: number[],\r\n    beanKeys: number[],\r\n    ufoKeys: number[],\r\n    buildingKeys: number[],\r\n    pickupMagnetPoint: Point|undefined,\r\n    hexes: HexPoint[],\r\n    districtKeys: number[],\r\n    buildingMap: {[hexKey: string]: number},\r\n    pickupKeys: number[],\r\n    costOfLiving: number\r\n}\r\n\r\nexport function CalculateCityComputed(city: ICity, economy: IEconomy){\r\n    city.costOfLiving = GetCostOfLiving(economy);\r\n}\r\n/**\r\n * SIDE-EFFECTS\r\n * @param bean \r\n * @param world \r\n */\r\nexport function BeanLoseJob(bean: IBean, world: IWorldState){\r\n    if (bean.employerEnterpriseKey != null){\r\n        const building = world.buildings.byID[bean.employerEnterpriseKey];\r\n        const enterprise = world.enterprises.byID[bean.employerEnterpriseKey];\r\n        if (enterprise.ownerBeanKey == bean.key){\r\n            enterprise.ownerBeanKey = building.jobs.find(x => x != bean.key);\r\n        }\r\n        BuildingUnsetJob(building, bean);\r\n    }\r\n}\r\nexport function BuildingUnsetJob(building: IBuilding, bean: IBean){\r\n    if (bean.job === 'jobless') return;\r\n    if (BuildingTryFreeBean(building, bean.key)){\r\n        bean.employerEnterpriseKey = undefined;\r\n        bean.job = 'jobless';\r\n    }\r\n}\r\nexport function CityGetPopulationTraitsList(scannedBeans: {[beanKey: number]: boolean}, beans: IBean[]): {icon: string, noun: string, count: number}[]{\r\n    return Array.from(\r\n        beans.reduce((m, b) => {\r\n            if (scannedBeans[b.key]){\r\n                b.beliefs.forEach((t) => {\r\n                    const prev = m.get(t) || 0;\r\n                    m.set(t, prev+1);\r\n                });\r\n            } else {\r\n                m.set('Unknown', (m.get('Unknown') || 0) + 1);\r\n            }\r\n            return m;\r\n        }, new Map<TraitBelief|'Unknown', number>()).entries()\r\n    ).sort(([aT, aC], [bT, bC]) => bC - aC).map(([t, c]) => {\r\n        return t === 'Unknown' ? {\r\n            icon: '❔',\r\n            noun: 'Unknown',\r\n            count: c\r\n        } : {\r\n            icon: SecondaryBeliefData[t].icon,\r\n            noun: SecondaryBeliefData[t].noun,\r\n            count: c\r\n        }\r\n    });\r\n}\r\nexport function CityGetRandomBuildingOfType(city: ICity, world: IWorldState, buildingType: BuildingTypes): IBuilding|undefined{\r\n    const keysOfType: number[] = city.buildingKeys.filter(x => world.buildings.byID[x].type === buildingType);\r\n    if (keysOfType.length < 1)\r\n        return undefined;\r\n    const r = GetRandom(world.seed, keysOfType);\r\n    return world.buildings.byID[r]\r\n}\r\nexport function CityGetRandomEntertainmentBuilding(city: ICity, world: IWorldState): IBuilding|undefined{\r\n    const keysOfType: number[] = city.buildingKeys.filter(x => world.buildings.byID[x].type === 'nature' || world.buildings.byID[x].type === 'park' || world.buildings.byID[x].type === 'theater');\r\n    if (keysOfType.length < 1)\r\n        return undefined;\r\n    const r = GetRandom(world.seed, keysOfType);\r\n    return world.buildings.byID[r]\r\n}\r\nexport function CityGetNearestNeighbors(city: ICity, source: IBean): number[]{\r\n    const q = MoverStoreInstance.Get('bean', source.key).current;\r\n    if (!q)\r\n        return [];\r\n    return city.beanKeys.filter((bKey) => {\r\n        if (bKey == source.key) return false;\r\n\r\n        const p = MoverStoreInstance.Get('bean', bKey).current;\r\n        if (!p)\r\n            return false;\r\n        const squared = Math.pow(p.point.x - q.point.x, 2)+Math.pow(p.point.y - q.point.y, 2);\r\n\r\n        return squared < 1600 && squared > 600;\r\n    });\r\n}","import { AnyAction } from \"@reduxjs/toolkit\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { MoverStoreInstance as MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { getRandomSlotOffset } from \"../petri-ui/Building\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { beanBePersuaded, beanBuy, beanCrime, beanEmote, beanHitDestination, beanRelax, beanWork, changeState } from \"../state/features/world.reducer\";\r\nimport { BeanPhysics, GoodIcon, JobToGood, TraitCommunity, TraitEmote, TraitEthno, TraitFaith, TraitFood, TraitGood, TraitHealth, TraitIdeals, TraitJob, TraitSanity, TraitStamina } from \"../World\";\r\nimport { GetRandomNumber } from \"../WorldGen\";\r\nimport { WorldSfxInstance } from \"../WorldSound\";\r\nimport { BeanBelievesIn, BeanEmote, BeanGetRandomChat, BeanMaybeChat, BeanMaybeCrime, BeanMaybeParanoid, BeanMaybePersuaded, BeanMaybeScarcity } from \"./Bean\";\r\nimport { HedonExtremes, HedonReport, HedonSourceToVal, TraitBelief } from \"./Beliefs\";\r\nimport { CityGetNearestNeighbors, CityGetRandomBuildingOfType, CityGetRandomEntertainmentBuilding, ICity } from \"./City\";\r\nimport { EconomyCanBuy, IMarketReceipt, ISeller } from \"./Economy\";\r\nimport { accelerate_towards, BuildingTypes, GoodToBuilding, HexPoint, hex_linedraw, hex_to_pixel, IAccelerator, IBuilding, JobToBuilding, OriginAccelerator, pixel_to_hex, Point } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { SampleNormalDistribution, StatsNormalDev, StatsNormalMean } from \"./Utils\";\r\n\r\nexport type Act = 'travel'|'work'|'sleep'|'chat'|'soapbox'|'craze'|'idle'|'buy'|'crime'|'relax';\r\n\r\n/**\r\n * cruise == interruptible travel towards destination\r\n * \r\n * approach == uninterruptible travel into destination slot\r\n export type Travel = 'cruise'|'approach';\r\n */\r\n\r\nexport type RecreationActivity = 'performance'|'artistry'|'sport'|'music'|'outdoors';\r\n\r\n// 🎤 🩰 🎭\r\n// 🎨 🖋️ 🏺\r\n// ⚽️ 🏒 🎾\r\n// 🎹 🥁 🎸\r\n// 🎣 🤿 🎒\r\n// losers: 🏏 🏐 🏀\r\n\r\nexport interface IActivityData {\r\n    act: Act;\r\n    elapsed?: number;\r\n    // location?: Point, //FROM Point\r\n    destinations?: Point[]; //point to travel to??\r\n    destinationIndex?: number; //which point are we heading towards\r\n    intent?: IActivityData; //when travelling, what do you intend to do next\r\n    good?: TraitGood; //good to buy or work\r\n    crimeGood?: 'food'|'medicine';\r\n    // travel?: Travel;\r\n    chat?: IChatData;\r\n    buyAttempts?: number;\r\n    buyReceipt?: IMarketReceipt\r\n}\r\n\r\nexport interface IPrioritizedActivityData extends IActivityData{\r\n    priority: number;\r\n}\r\n\r\nexport interface IChatData{\r\n    participation: 'speaker'|'listener';\r\n    type: 'praise'|'bully'|'preach'|'gift';\r\n    preachBelief?: TraitBelief;\r\n    /**\r\n     * strength of the preacher's persuasion\r\n     */\r\n    persuasionStrength?: number;\r\n    /**\r\n     * target key of the bean who is targeted for praise or bully\r\n     */\r\n    targetBeanKey?: number;\r\n}\r\n\r\nexport interface IBeanAgent{\r\n    key: number;\r\n    action: Act;\r\n    actionData: IActivityData;\r\n    priorities: IPrioritizedActivityData[]\r\n}\r\nexport interface StateFunctions {\r\n    enter: (agent: IBean) => AnyAction|undefined;\r\n    act: (agent: IBean, world: IWorldState, elapsed: number, deltaMS: number) => {action?: AnyAction|AnyAction[], newActivity?: IActivityData};\r\n    exit: (agent: IBean, seed: string) => AnyAction|undefined;\r\n}\r\nconst RelaxationDurationMS = 3000;\r\nconst CrimeDurationMS = 1500;\r\nconst TransactMaximumDurationMS = 1100;\r\nconst ChatDurationMS = 1000;\r\nconst WorkDurationMS = 3000;\r\nconst SleepDurationMS = 3000;\r\n\r\nexport const BeanActions: {[act in Act]: StateFunctions} = {\r\n    'travel': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number, deltaMS: number) => {\r\n            const city = world.cities.byID[agent.cityKey];\r\n            const destinationTargetIndex = agent.actionData.destinationIndex || 0;\r\n            if (agent.actionData.destinations == null || \r\n                agent.actionData.destinations.length === 0 || \r\n                destinationTargetIndex >= agent.actionData.destinations.length){\r\n                if (agent.actionData.intent)\r\n                    return {\r\n                        newActivity: agent.actionData.intent\r\n                    }\r\n                else\r\n                    return {\r\n                        newActivity: {\r\n                            act: 'idle'\r\n                        }\r\n                    }\r\n            }\r\n            const target = agent.actionData.destinations[destinationTargetIndex];\r\n\r\n            if (isNaN(target.x) || isNaN(target.y)) {\r\n                //sanity check\r\n                console.warn('NaN destination, resetting to idle')\r\n                return {\r\n                    newActivity: {\r\n                        act: 'idle'\r\n                    }\r\n                };\r\n            }\r\n            const newAccelerator = {\r\n                ...(MoverStoreInstance.Get('bean', agent.key).current || OriginAccelerator)\r\n            };\r\n\r\n            const collide = accelerate_towards(\r\n                newAccelerator,\r\n                target,\r\n                BeanPhysics.AccelerateS * deltaMS/1000, \r\n                BeanPhysics.MaxSpeed, \r\n                BeanPhysics.CollisionDistance,\r\n                BeanPhysics.Brake);\r\n\r\n            MoverStoreInstance.Get('bean', agent.key).publish(newAccelerator);\r\n            \r\n            if (collide){\r\n                return {\r\n                    action: beanHitDestination({beanKey: agent.key})\r\n                };\r\n            }\r\n            \r\n            if (city) {\r\n                const nearbyBeanKeys = CityGetNearestNeighbors(city, agent);\r\n                if (nearbyBeanKeys.length && BeanMaybeChat(agent)){\r\n                    const targets = nearbyBeanKeys.filter((bKey) => BeanMaybeChat(world.beans.byID[bKey]));\r\n                    if (targets.length < 1)\r\n                        return {};\r\n                    const chat: IChatData = BeanGetRandomChat(agent, world.seed, () => {\r\n                        return targets.map(\r\n                                x => world.beans.byID[x]\r\n                            ).filter(\r\n                                x => x.cash <= agent.cash-1\r\n                            ).reduce(\r\n                                (least: IBean|undefined, bean) => {\r\n                                    if (least == null || (bean.cash < least.cash))\r\n                                        return bean;\r\n                                    return least;\r\n                        }, undefined);\r\n                    });\r\n                    return {\r\n                        newActivity: {\r\n                            act: 'chat',\r\n                            chat: chat,\r\n                            intent: agent.actionData \r\n                        },\r\n                        action: targets.map(t => changeState({beanKey: t, newState: {\r\n                            act: 'chat',\r\n                            chat: {\r\n                                ...chat,\r\n                                participation: 'listener'\r\n                            },\r\n                            intent: world.beans.byID[t].actionData\r\n                        }}))\r\n                    };\r\n                } else if (BeanBelievesIn(agent, 'Wanderlust') && Math.random() < WanderlustEmoteChance) {\r\n                    return {\r\n                        action: beanEmote({beanKey: agent.key, emote: 'happiness', source: 'Wanderlust'})\r\n                    };\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n            // if (agent instanceof Bean){\r\n            //     agent.velocity = {x: 0, y: 0};\r\n            // }\r\n        },\r\n    }, \r\n    'work': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number) => {\r\n            if (elapsed > WorkDurationMS && agent.actionData.good){\r\n                return {\r\n                    action: beanWork({beanKey: agent.key}),\r\n                    newActivity: {\r\n                        act: 'idle'\r\n                    }\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'sleep':{\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world, elapsed) => {\r\n            if (elapsed > SleepDurationMS){\r\n                return {\r\n                    newActivity: {\r\n                        act: 'idle'\r\n                    }\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'chat': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, state, elapsed: number) => {\r\n            if (elapsed > ChatDurationMS && agent.actionData.intent){\r\n                return {\r\n                    newActivity: {\r\n                        act: 'travel',\r\n                        intent: agent.actionData.intent\r\n                    }\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean, seed: string) => {\r\n            if (agent.actionData.chat){\r\n                if (agent.actionData.chat.participation === 'listener'){\r\n                    switch(agent.actionData.chat.type){\r\n                        case 'bully':\r\n                            return beanEmote({beanKey: agent.key, emote: 'unhappiness', source: 'Antagonism'});\r\n                        case 'praise':\r\n                            return beanEmote({beanKey: agent.key, emote: 'happiness', source: 'Enthusiasm'});\r\n                        case 'preach':\r\n                            if (agent.actionData.chat.preachBelief && \r\n                                agent.actionData.chat.persuasionStrength && \r\n                                BeanMaybePersuaded(agent, seed, agent.actionData.chat.preachBelief, agent.actionData.chat.persuasionStrength)){\r\n                                return beanBePersuaded({beanKey: agent.key, belief: agent.actionData.chat.preachBelief})\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n            return undefined;\r\n        },\r\n    }, \r\n    'soapbox': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean) => {\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'craze': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean) => {\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'idle': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number) => {\r\n            if (elapsed < 200)\r\n                return {};\r\n            \r\n            const priorities = agent.priorities.slice(0);\r\n            let top: IPrioritizedActivityData|undefined = priorities[0];\r\n            let travelState: IActivityData|undefined = undefined;\r\n            let sideEffect: AnyAction|undefined = undefined;\r\n\r\n            //loop through possible destinations\r\n            while (top && travelState == null){\r\n                const substitute = SubstituteIntent(agent, world, top);\r\n                if (substitute?.intent){\r\n                    travelState = CreateTravelFromIntent(agent, world.cities.byID[agent.cityKey], substitute.intent, world);\r\n                    if (travelState != null)\r\n                        return {\r\n                            newActivity: travelState,\r\n                            action: sideEffect\r\n                        };\r\n                } else if (substitute?.sideEffect){\r\n                    sideEffect = substitute.sideEffect;\r\n                }\r\n                top = priorities.shift();\r\n            }\r\n            return {\r\n                action: sideEffect\r\n            };\r\n        },\r\n        exit: (agent: IBean) => {\r\n            if (BeanMaybeParanoid(agent))\r\n                return beanEmote({beanKey: agent.key, emote: 'unhappiness', source:'Paranoia'});\r\n        },\r\n    }, \r\n    'buy': {\r\n        // static MaximumBuyDuration = 1100;\r\n        // private sinceLastAttemptMS: number = 0;\r\n        // tryBuy(agent: IAgent){\r\n        //     if (agent instanceof Bean && agent.actionData.good && agent.city?.economy)\r\n        //     {\r\n        //         this._bought = agent.buy[agent.actionData.good](agent.city.economy);\r\n        //     }\r\n        //     this.sinceLastAttemptMS = 0;\r\n        // }\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number) => {\r\n            if (agent.actionData.buyReceipt){\r\n                if (elapsed > 750)\r\n                    return {\r\n                        newActivity: {\r\n                            act: agent.actionData.good === 'shelter' ? 'sleep' : 'idle'\r\n                        }\r\n                    }\r\n            } else {\r\n                if (elapsed > TransactMaximumDurationMS){\r\n                    return {\r\n                        newActivity: {act:'idle'}\r\n                    }\r\n                }\r\n                if ((agent.actionData.buyAttempts || 0) >= 3){\r\n                    return {\r\n                        newActivity: {act:'idle'}\r\n                    }\r\n                }\r\n                if (elapsed > 100 && agent.actionData.good){\r\n                    return {\r\n                        action: beanBuy({beanKey: agent.key, good: agent.actionData.good})\r\n                    };\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'crime': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed) => {\r\n            if (elapsed > CrimeDurationMS){\r\n                return {\r\n                    newActivity: {act: 'idle'},\r\n                    action: beanCrime({beanKey: agent.key, good: agent.actionData.crimeGood || 'food'})\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'relax': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number) => {\r\n            let durationMS = RelaxationDurationMS;\r\n            if (BeanBelievesIn(agent, 'Naturalism'))\r\n                durationMS *= 3;\r\n            if (elapsed > durationMS){\r\n                return {\r\n                    newActivity: {\r\n                        act: 'idle'\r\n                    }\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return beanRelax({beanKey: agent.key});\r\n        },\r\n    }\r\n}\r\n\r\nfunction SubstituteIntent(bean: IBean, world: IWorldState, intent: IActivityData): {\r\n    intent?: IActivityData,\r\n    sideEffect?: AnyAction\r\n}|undefined{\r\n    if (intent.act === 'buy' && intent.good != null){\r\n        const desiredGoodState = EconomyCanBuy(world.economy, world.law, bean, intent.good);\r\n        if (desiredGoodState != 'yes' && intent.good === 'fun'){ //if you can't buy happiness, go somewhere to relax{\r\n            return {\r\n                intent: {\r\n                    act: 'relax'\r\n                }\r\n            }\r\n        } else if (desiredGoodState === 'pricedout') {\r\n            if ((intent.good == 'food' || intent.good == 'medicine') && BeanMaybeCrime(bean, intent.good)){\r\n                return {\r\n                    intent: {\r\n                        act: 'crime',\r\n                        crimeGood: intent.good\r\n                    }\r\n                }\r\n            } else {\r\n                const isPhysical = intent.good === 'food' || intent.good === 'medicine' || intent.good === 'shelter';\r\n                if (isPhysical){\r\n                    return {\r\n                        sideEffect: beanEmote({beanKey: bean.key, emote: 'unhappiness', source: GoodIcon[intent.good] + ' Poverty'})\r\n                    }\r\n                }\r\n                return undefined; //don't travel to buy something that you can't afford\r\n            }\r\n        } else if (desiredGoodState === 'nosupply'){\r\n            if (intent.good && BeanMaybeScarcity(bean, intent.good)){\r\n                return {\r\n                    sideEffect: beanEmote({beanKey: bean.key, emote: 'unhappiness', source:'Scarcity'}) \r\n                }\r\n            }\r\n            return undefined; //don't travel to buy something that doesn't exist\r\n        }\r\n        return {\r\n            intent: {\r\n                ...intent,\r\n                buyAttempts: 0\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        intent: intent\r\n    };\r\n}\r\n\r\nexport function IntentToDestination(agent: IBean, city: ICity, intent: IActivityData, world: IWorldState): Point[]|null{\r\n    switch(intent.act){\r\n        case 'buy':\r\n            if (intent.good)\r\n                return RouteRandom(city, world, agent, GoodToBuilding[intent.good]);\r\n        case 'work':\r\n            return RouteRandom(city, world, agent, JobToBuilding[agent.job]);\r\n        case 'relax': {\r\n            const buildingDest = CityGetRandomEntertainmentBuilding(city, world);\r\n            if (buildingDest){\r\n                return Route(world.seed, city, agent, buildingDest);\r\n            } else {\r\n                const nature = world.districts.allIDs.map(x => world.districts.byID[x]).find(y => y.kind === 'nature');\r\n                if (nature){\r\n                    return RouteToHexAndPoint(world.seed, city, agent, {q: nature.q,r: nature.r}, {\r\n                        x: nature.point.x + (Math.random() * 150) - 75,\r\n                        y: nature.point.y + (Math.random() * 150) - 75\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction CreateTravelFromIntent(agent: IBean, city: ICity, intent: IActivityData, world: IWorldState): IActivityData|undefined{\r\n    const destination = IntentToDestination(agent, city, intent, world);\r\n    \r\n    if (destination)\r\n        return {\r\n            act: 'travel',\r\n            destinations: destination,\r\n            destinationIndex: 0,\r\n            intent: intent\r\n        }\r\n    else\r\n        return undefined;\r\n}\r\n\r\nconst WanderlustEmoteChance = 0.002;\r\n\r\n/**\r\n * returns a priority. Higher is more important\r\n */\r\nexport const GetPriority = {\r\n    work: function(bean: IBean, seed: string, city: ICity): number{\r\n        if (bean.job == 'jobless'){\r\n            return 0;\r\n        }\r\n        else if (bean.cash === 0){\r\n            return SampleNormalDistribution(seed, StatsNormalMean + (StatsNormalDev * 2));\r\n        }\r\n        else if (city){\r\n            return SampleNormalDistribution(seed, StatsNormalMean + \r\n                (StatsNormalDev * Math.min(1, city.costOfLiving / bean.cash))\r\n            );\r\n        }\r\n        return SampleNormalDistribution(seed);\r\n    },\r\n    food: function(bean: IBean, seed: string, difficulty: IDifficulty): number{\r\n        return SampleNormalDistribution(seed, StatsNormalMean + (\r\n            StatsNormalDev * 6 * Math.min(1, difficulty.bean_life.vital_thresh.food.warning / bean.discrete_food)\r\n        ));\r\n    },\r\n    stamina: function(bean: IBean, seed: string, difficulty: IDifficulty): number{\r\n        return SampleNormalDistribution(seed, StatsNormalMean + (\r\n            StatsNormalDev * 4 * Math.min(1, difficulty.bean_life.vital_thresh.shelter.warning / bean.discrete_stamina)\r\n        ));\r\n    },\r\n    medicine:function(bean: IBean, seed: string, difficulty: IDifficulty): number{\r\n        return SampleNormalDistribution(seed, StatsNormalMean + (\r\n            StatsNormalDev * 2 * Math.min(1, difficulty.bean_life.vital_thresh.medicine.warning / bean.discrete_health)\r\n        ));\r\n    },\r\n    fun:function(bean: IBean, seed: string, difficulty: IDifficulty): number{\r\n        return SampleNormalDistribution(seed, StatsNormalMean + (\r\n            StatsNormalDev * Math.min(1, -bean.lastHappiness / 100)\r\n        ));\r\n    }\r\n}\r\n\r\nexport function GetPriorities(bean: IBean, seed: string, city: ICity, difficulty: IDifficulty): IPrioritizedActivityData[]{\r\n    const priors: IPrioritizedActivityData[] = [\r\n        {act: 'work', good: JobToGood(bean.job), priority: GetPriority.work(bean, seed, city)} as IPrioritizedActivityData,\r\n        {act: 'buy', good: 'shelter', priority: GetPriority.stamina(bean, seed, difficulty)} as IPrioritizedActivityData,\r\n        {act: 'buy', good: 'food', priority: GetPriority.food(bean, seed, difficulty)} as IPrioritizedActivityData,\r\n        {act: 'buy', good: 'medicine', priority: GetPriority.medicine(bean, seed, difficulty)} as IPrioritizedActivityData,\r\n        {act: 'buy', good: 'fun', priority: GetPriority.fun(bean, seed, difficulty)} as IPrioritizedActivityData,\r\n    ];\r\n    priors.sort((a, b) => b.priority - a.priority);\r\n    return priors;\r\n}\r\n\r\nexport function ActivityIcon(data: IActivityData): string{\r\n    switch(data.act){\r\n        case 'sleep':\r\n            return '😴';\r\n        case 'work':\r\n            if (data.good)\r\n                return '💪 '+ GoodIcon[data.good];\r\n            else\r\n                return '💪';\r\n        case 'buy':\r\n            if (data.good)\r\n                return '💸 '+ GoodIcon[data.good];\r\n            else\r\n                return '💸';\r\n    }\r\n    return '';\r\n}\r\nexport function ActivityDisplay(data: IActivityData): string{    \r\n    switch(data.act){\r\n        case 'chat':\r\n            return `chatting`;\r\n        case 'crime':\r\n            return `stealing ${data?.crimeGood}`;\r\n        case 'sleep':\r\n            return `sleeping 😴`;\r\n        case 'relax':\r\n            return `relaxing`;\r\n        case 'travel':\r\n            return `travelling to ` + data.intent?.act || '';\r\n        case 'work':\r\n            if (data.good)\r\n                return 'working to make '+ GoodIcon[data.good];\r\n            else\r\n                return 'working';\r\n        case 'buy':\r\n            if (data.good)\r\n                return 'buying '+ GoodIcon[data.good];\r\n            else\r\n                return 'buying';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean extends ISeller, IBeanAgent{    \r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith: TraitFaith;\r\n    stamina: TraitStamina;\r\n    health: TraitHealth;\r\n    food: TraitFood;\r\n    discrete_food: number;\r\n    discrete_health: number;\r\n    discrete_sanity: number;\r\n    discrete_stamina: number;\r\n    discrete_fun: number;\r\n    graceTicks: number;\r\n    cash: number;\r\n    dob: IDate;\r\n    sanity: TraitSanity;\r\n    beliefs: TraitBelief[];\r\n    lifecycle: 'alive'|'dead'|'abducted',\r\n    hedonHistory: HedonSourceToVal[],\r\n    job: TraitJob,\r\n    happiness: HedonReport,\r\n    lastHappiness: number,\r\n    hedonFiveDayRecord: HedonExtremes,\r\n    fairGoodPrice: number,\r\n    employerEnterpriseKey?: number,\r\n    activity_duration: {[act in Act]: number},\r\n    bornInPetri: boolean,\r\n    ticksSinceLastRelax: number,\r\n    lastChatMS: number,\r\n    lastPoint?: Point,\r\n    titleKey?: number,\r\n    badge?: string,\r\n    hat?: string\r\n}\r\n\r\n/**\r\n * fills out \"markers\" and \"destinationKey\" with random building of type\r\n * @param city \r\n * @param bean \r\n * @param buildingType \r\n */\r\nexport function RouteRandom(city: ICity, world: IWorldState, bean: IBean, buildingType: BuildingTypes): Point[]|null{\r\n    const destination: IBuilding|undefined = CityGetRandomBuildingOfType(city, world, buildingType);\r\n    if (destination === undefined) \r\n        return null;\r\n    return Route(world.seed, city, bean, destination);\r\n}\r\n\r\n/**\r\n * fills out \"markers\" property with points to walk to destination\r\n * @param city \r\n * @param bean \r\n * @param buildingType \r\n */\r\nexport function Route(seed: string, city: ICity, bean: IBean, destination: IBuilding): Point[]{\r\n    return RouteToHexAndPoint(seed, city, bean, destination.hex, destination.point);\r\n}\r\nexport function RouteToHexAndPoint(seed: string, city: ICity, bean: IBean, hex: HexPoint, point: Point): Point[]{\r\n    const start = MoverStoreInstance.Get('bean', bean.key).current || {...OriginAccelerator};\r\n    const nearestHex = pixel_to_hex(city.hex_size, city.petriOrigin, start.point);\r\n    return hex_linedraw(nearestHex, hex).map(\r\n        (h) => hex_to_pixel(city.hex_size, city.petriOrigin, h)\r\n        ).map((x, i, a) => {\r\n        if (i === a.length-1){\r\n            return {\r\n                x: point.x + GetRandomNumber(seed, -20, 20),\r\n                y: point.y + GetRandomNumber(seed, -20, 20)\r\n            }\r\n        } else {\r\n            return x;\r\n        }\r\n    });\r\n}","\r\nexport type AgentDurationType = 'bean'|'ufo';\r\nexport interface IAgentDuration {elapsed: number, duration: number};\r\ntype AgentDurationCache = {\r\n    [key in AgentDurationType]: {\r\n        [k2: number]: {elapsed: number, duration: number};\r\n    };\r\n};\r\n\r\nexport class AgentDurationStore{\r\n    private cache: AgentDurationCache = {\r\n        'bean': {},\r\n        'ufo': {}\r\n    }\r\n    public Get(type: AgentDurationType, key: number): IAgentDuration{\r\n        if (!this.cache[type][key])\r\n            this.cache[type][key] = {elapsed: 0, duration: 0};\r\n        return this.cache[type][key];\r\n    }\r\n}","import { AgentDurationStore } from \"./AgentDuration\";\r\n\r\nexport const AgentDurationStoreInstance = new AgentDurationStore();","import { IWorldState } from \"../state/features/world\";\r\nimport { TraitJob } from \"../World\";\r\nimport { IBean } from \"./Agent\";\r\nimport { BuildingToJob, IBuilding, JobToBuilding } from \"./Geography\";\r\nimport { IEnterprise } from \"./Institutions\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { BuildingOpenSlots } from \"./RealEstate\";\r\nimport { shuffle } from \"./Utils\";\r\n\r\nexport function BeanTryFindJob(world: IWorldState, bean: IBean): boolean{\r\n    const city = world.cities.byID[bean.cityKey];\r\n\r\n    const openSlotBuildings = shuffle(city.buildingKeys.map(\r\n        x => world.buildings.byID[x]\r\n        ).filter(\r\n        x => {\r\n            const canHire = ['farm', 'house', 'theater', 'hospital'].includes(x.type);\r\n            const isHiring = BuildingOpenSlots(x).length > 0;\r\n            return canHire && isHiring;\r\n        }));\r\n    \r\n    \r\n    for (let i = 0; i < openSlotBuildings.length; i++) {\r\n        const building = openSlotBuildings[i];\r\n        const slots = BuildingOpenSlots(building);\r\n        if (slots.length > 0){\r\n            BeanSetJob(bean, building, world.enterprises.byID[building.key]);\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function BeanTrySetJob(world: IWorldState, bean: IBean, job: TraitJob): boolean{\r\n    if (job === 'jobless') \r\n        return false;\r\n    const city = world.cities.byID[bean.cityKey];\r\n\r\n    const allOfType = city.buildingKeys.map(x => world.buildings.byID[x]).filter((x) => x.type === JobToBuilding[job]);\r\n    \r\n    for (let i = 0; i < allOfType.length; i++) {\r\n        const building = allOfType[i];\r\n        const slots = BuildingOpenSlots(building);\r\n        if (slots.length > 0){\r\n            BeanSetJob(bean, building, world.enterprises.byID[building.key]);\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function BeanSetJob(bean: IBean, building: IBuilding, enterprise: IEnterprise){\r\n    building.jobs.push(bean.key);\r\n    bean.employerEnterpriseKey = building.key;\r\n    if (enterprise && enterprise.ownerBeanKey == null){\r\n        enterprise.ownerBeanKey = bean.key;\r\n    }\r\n    bean.job = BuildingToJob[building.type];\r\n}","export type SFXFile = 'drop.mp3'|'ding_soft.mp3'|'ding_bad.wav'|'death_bell.wav'|'digital_beeping.mp3'|'squish_pop.mp3'|'squish_suck.mp3'|'baby_squeak.wav'|'mhmm.mp3'|'cow-moo.wav'|'pill-shake.wav'|'door-open.wav'|'teleport.wav'|'cash_ding.mp3'|'crazy_laugh.mp3';\r\nexport type SFX = 'drop'|'happiness'|'unhappiness'|'love'|'hate'|'death'|'scan'|'wash_in'|'wash_out'|'squeak'|'mhmm'|'moo'|'door'|'pills'|'teleport'|'cash'|'crazy_laugh';\r\n\r\nconst SFXToFile: {[sfx in SFX]: SFXFile} = {\r\n    drop: \"drop.mp3\",\r\n    love: \"ding_soft.mp3\",\r\n    happiness: \"ding_soft.mp3\",\r\n    unhappiness: \"ding_bad.wav\",\r\n    hate: \"ding_bad.wav\",\r\n    death: \"death_bell.wav\",\r\n    scan: 'digital_beeping.mp3',\r\n    wash_in: 'squish_pop.mp3',\r\n    wash_out: 'squish_suck.mp3',\r\n    squeak: 'baby_squeak.wav',\r\n    mhmm: 'mhmm.mp3',\r\n    pills: 'pill-shake.wav',\r\n    moo: 'cow-moo.wav',\r\n    door: 'door-open.wav',\r\n    teleport: 'teleport.wav',\r\n    cash: 'cash_ding.mp3',\r\n    crazy_laugh: 'crazy_laugh.mp3'\r\n};\r\n\r\ntype SFXMap = {[sfx in SFX]: SoundBuffer};\r\n\r\nclass SoundBuffer{\r\n    constructor(private file: SFXFile, private volume: number = 1){}\r\n\r\n    private buffer: HTMLAudioElement[] = [];\r\n    play(){\r\n        if (this.buffer.length > 0 && this.buffer[0].ended){\r\n            const audio = this.buffer.shift();\r\n            audio?.play();\r\n            if (audio)\r\n                this.buffer.push(audio);\r\n        } else {\r\n            const aud = new Audio(process.env.PUBLIC_URL+'/'+this.file);\r\n            aud.volume = this.volume;\r\n            aud.play();\r\n            this.buffer.push(aud);\r\n        }\r\n    }\r\n}\r\nexport class WorldSound{\r\n    private lib: SFXMap = {\r\n        'drop': new SoundBuffer(SFXToFile['drop'], 0.2),\r\n        'love': new SoundBuffer(SFXToFile['happiness']),\r\n        'happiness': new SoundBuffer(SFXToFile['happiness']),\r\n        'unhappiness': new SoundBuffer(SFXToFile['unhappiness']),\r\n        'hate': new SoundBuffer(SFXToFile['unhappiness']),\r\n        'death': new SoundBuffer(SFXToFile['death']),\r\n        'scan': new SoundBuffer(SFXToFile['scan'], 0.3),\r\n        'wash_in': new SoundBuffer(SFXToFile['wash_in']),\r\n        'wash_out': new SoundBuffer(SFXToFile['wash_out']),\r\n        'squeak': new SoundBuffer(SFXToFile['squeak'], 0.3),\r\n        'mhmm': new SoundBuffer(SFXToFile['mhmm'], 0.5),\r\n        'moo': new SoundBuffer(SFXToFile['moo'], 1),\r\n        'pills': new SoundBuffer(SFXToFile['pills'], 1),\r\n        'door': new SoundBuffer(SFXToFile['door'], 1),\r\n        'teleport': new SoundBuffer(SFXToFile['teleport'], 0.6),\r\n        'cash': new SoundBuffer(SFXToFile['cash'], 0.23),\r\n        'crazy_laugh': new SoundBuffer(SFXToFile['crazy_laugh'], 0.5),\r\n    }\r\n\r\n    public play(sfx: SFX){\r\n        this.lib[sfx].play();\r\n    }\r\n}\r\n\r\nexport const WorldSfxInstance = new WorldSound();","import { IWorldState } from \"../state/features/world\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\nexport const TicksPerHour = 2;\r\nexport const TicksPerDay = TicksPerHour * 4;\r\nexport enum PartOfDay {Midnight = 0, Morning = TicksPerHour, Noon = TicksPerHour*2, Evening = TicksPerHour*3}\r\n\r\nexport interface IDate{\r\n    day: number;\r\n    season: Season;\r\n    year: number;\r\n    /**\r\n     * analogous to ticks\r\n     * \r\n     * zero based, ranges from 0 to `HoursPerDay -1`\r\n     */\r\n    hour: number;\r\n}\r\n\r\nexport function Now(world: IWorldState): IDate{\r\n    return {year: world.date.year, season: world.date.season, day: world.date.day, hour: world.date.hour};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","import { PlayerResources } from \"../Game\";\r\nimport { GetRandom, GetRandomNumber } from \"../WorldGen\";\r\nimport { BeliefCommonality, RandomBeliefBucket, SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\n\r\nexport interface MarketTraitListing {\r\n    cost: PlayerResources;\r\n    trait: TraitBelief;\r\n}\r\nexport const CommonalityBaseCost: {[b in BeliefCommonality]: number} = {\r\n    'common': 3,\r\n    'uncommon': 5,\r\n    'rare': 7,\r\n    'unique': 99,\r\n};\r\nexport const CommonalityRandomMaxCost: {[b in BeliefCommonality]: number} = {\r\n    'common': 3,\r\n    'uncommon': 5,\r\n    'rare': 7,\r\n    'unique': 99,\r\n};\r\n\r\nexport function GetMarketTraits(seed: string): MarketTraitListing[]{\r\n    const newTraits: MarketTraitListing[] = [];\r\n    for (let i = 0; i < 3; i++) {\r\n        const b = GetRandom(seed, RandomBeliefBucket);\r\n        newTraits.push(getMarketTraitListing(seed, b));\r\n    }\r\n    return newTraits;\r\n}\r\n\r\nfunction getMarketTraitListing(seed: string, b: TraitBelief): MarketTraitListing{\r\n    const rare = SecondaryBeliefData[b].rarity;\r\n    return {\r\n        trait: b,\r\n        cost: {\r\n            hedons: CommonalityBaseCost[rare] + GetRandomNumber(seed, 0, CommonalityRandomMaxCost[rare])\r\n        }\r\n    }\r\n}","import { AnyAction } from \"redux\";\r\nimport { EventBufferLength, IEvent } from \"../events/Events\";\r\nimport { MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { SignalStoreInstance } from \"../SignalStore\";\r\nimport { EntityAddToSlice } from \"../state/entity.state\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { changeState, pickUpPickup, remove_ufo, selectBeansByCity } from \"../state/features/world.reducer\";\r\nimport { MaxHedonHistory, PickupPhysics, WorldInflate } from \"../World\";\r\nimport { GenerateBean } from \"../WorldGen\";\r\nimport { WorldSfxInstance } from \"../WorldSound\";\r\nimport { BeanActions, IBean } from \"./Agent\";\r\nimport { AgentDurationStoreInstance } from \"./AgentDurationInstance\";\r\nimport { BeanAge, BeanMaybeBaby, BeanCalculateBeliefs, BeanEmote } from \"./Bean\";\r\nimport { BeanTryFindJob } from \"./BeanAndCity\";\r\nimport { GetHedonReport } from \"./Beliefs\";\r\nimport { BeanLoseJob, CalculateCityComputed } from \"./City\";\r\nimport { GetCostOfLiving } from \"./Economy\";\r\nimport { accelerate_towards, accelerator_coast, OriginAccelerator } from \"./Geography\";\r\nimport { IsLaw, MaybeRebate, PollTaxWeeklyAmount } from \"./Government\";\r\nimport { GetMarketTraits } from \"./MarketTraits\";\r\nimport { GenerateEmoteFromBean } from \"./Pickup\";\r\nimport { CheckGoals, CheckReportCard, HasResearched, TechData } from \"./Player\";\r\nimport { TicksPerDay } from \"./Time\";\r\n\r\nconst OwnerProfitPercentage = 0.15;\r\n\r\nexport function simulate_world(world: IWorldState){\r\n    world.date.hour++\r\n    if (world.date.hour % 2 === 0){\r\n        simulate_every_other_tick(world);\r\n    }\r\n    if (world.date.hour >= TicksPerDay){\r\n        world.date.hour = 0;\r\n        world.date.day++;\r\n        simulate_every_day(world);\r\n        if (world.date.day % 7 === 0){\r\n            simulate_every_week(world);\r\n        }\r\n    }\r\n    if (world.date.day > 30){\r\n        world.date.day = 1;\r\n        simulate_every_month(world)\r\n        world.date.season++;\r\n    }\r\n    if (world.date.season > 3){\r\n        world.date.year++;\r\n        simulate_every_year(world);\r\n        world.date.season = 0;\r\n    }\r\n\r\n    world.alien.bots.amount += world.alien.bots.income;\r\n    world.alien.energy.amount += world.alien.energy.income;\r\n    if (HasResearched(world.alien.techProgress, 'fast_resources')){\r\n        world.alien.bots.amount += world.alien.bots.income*0.5;\r\n        world.alien.energy.amount += world.alien.energy.income*0.5;\r\n    }\r\n    if (world.alien.currentlyResearchingTech){\r\n        const tech = world.alien.currentlyResearchingTech;\r\n        if(world.alien.techProgress[tech] == null){\r\n            world.alien.techProgress[tech] = {\r\n                researchPoints: 0\r\n            }\r\n        }\r\n        const max = TechData[tech].techPoints;\r\n        const current = world.alien.techProgress[tech].researchPoints;\r\n        if (current < max)\r\n            world.alien.techProgress[tech].researchPoints += world.alien.abductedBeanKeys.length *  1/TicksPerDay;\r\n        if (current >= max){\r\n            if (world.alien.currentlyResearchingTech === 'neural_duplicator')\r\n                world.alien.beliefInventory.forEach((x) => x.gems += 1);\r\n            world.alien.currentlyResearchingTech = undefined;\r\n\r\n        }\r\n    }\r\n\r\n    const CoL = GetCostOfLiving(world.economy);\r\n    world.beans.allIDs.forEach((bKey: number, i: number) => {\r\n        const b = world.beans.byID[bKey];\r\n        if (b.lifecycle != 'alive')\r\n            return;\r\n        \r\n        const ageResult = BeanAge(b, world.seed, world.alien.difficulty);\r\n        if (ageResult?.emotes){\r\n            ageResult.emotes.map(x => EntityAddToSlice(world.pickups, x));\r\n        }\r\n        if (ageResult?.death){\r\n            EntityAddToSlice(world.events, ageResult.death);\r\n            BeanLoseJob(b, world);\r\n            WorldSfxInstance.play('death');\r\n        }\r\n        // todo: on bean death\r\n        const e = BeanMaybeBaby(b, world.seed, CoL);\r\n        if (e) {\r\n            const newBean = GenerateBean(world, world.cities.byID[b.cityKey], b);\r\n            if (b.lastPoint){\r\n                newBean.lastPoint = b.lastPoint;\r\n                MoverStoreInstance.Get('bean', newBean.key).publish({point: {x: b.lastPoint.x, y: b.lastPoint.y}, velocity: {x: 0, y: 0}});\r\n            }\r\n            world.beans.byID[newBean.key] = newBean;\r\n            world.beans.allIDs.push(newBean.key);\r\n            world.cities.byID[b.cityKey].beanKeys.push(newBean.key);\r\n            WorldAddEvent(world, e);\r\n            WorldSfxInstance.play('squeak');\r\n        }\r\n        if (b.job === 'jobless'){\r\n            const gotJob = BeanTryFindJob(world, b);\r\n            if (!gotJob){\r\n                WorldAddEvent(world, {icon: '🏚️', trigger: 'nojobslots', message: `A subject cannot find a job; build or upgrade more buildings.`, key: 0});\r\n            }\r\n        }\r\n        \r\n        b.happiness = GetHedonReport(b.hedonHistory);\r\n    });\r\n    world.cities.allIDs.forEach(cityID => {\r\n        const c = world.cities.byID[cityID];\r\n        CalculateCityComputed(c, world.economy);\r\n    });\r\n    world.beans.allIDs.forEach((k: number) => {\r\n        const b = world.beans.byID[k];\r\n        if (!b || b.lifecycle != 'alive')\r\n            return;\r\n        BeanCalculateBeliefs(b, world.economy, world.alien.difficulty, world.law);\r\n    });\r\n    CheckGoals(world, world.alien);\r\n    CheckReportCard(world, world.alien);\r\n    return world;\r\n}\r\nexport function simulate_every_year(world: IWorldState){\r\n    WorldInflate(world);\r\n}\r\nexport function simulate_every_month(world: IWorldState){\r\n    //resetMonthlyDemand\r\n    world.economy.unfulfilledMonthlyDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    world.economy.monthlyDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    world.economy.monthlySupply = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n}\r\nexport function simulate_every_week(world: IWorldState){\r\n    world.marketTraitsForSale = GetMarketTraits(world.seed);\r\n    WorldAddEvent(world, {key: 0, message: 'New traits in the Emotion Market!', icon: '🛍️', trigger: 'marketrefresh'});\r\n    if (IsLaw(world.law, 'poll_tax')){\r\n        let collected = 0;\r\n        world.cities.allIDs.forEach((cityID: number) => {\r\n            selectBeansByCity(world, cityID).forEach((y: IBean) => {\r\n                if (y.cash >= PollTaxWeeklyAmount){\r\n                    y.cash -= PollTaxWeeklyAmount;\r\n                    collected += PollTaxWeeklyAmount;\r\n                }\r\n            });\r\n        });\r\n        world.law.cash = (world.law.cash + collected);\r\n    }\r\n    MaybeRebate(world.law, Object.values(world.beans.byID));\r\n}\r\nexport function simulate_every_day(world: IWorldState){\r\n    world.beans.allIDs.forEach((beanKey) => {\r\n        const x = world.beans.byID[beanKey];\r\n        if (x.hedonHistory.length >= MaxHedonHistory) {\r\n            x.hedonHistory.pop();\r\n        }\r\n        x.hedonHistory.unshift({});\r\n    });\r\n}\r\nexport function simulate_every_other_tick(world: IWorldState){\r\n    //pay beans\r\n    world.enterprises.allIDs.forEach((eKey) => {\r\n        const enterprise = world.enterprises.byID[eKey];\r\n        const building = world.buildings.byID[eKey];\r\n        const workers = building.jobs.map(x => world.beans.byID[x]);\r\n        //distribute cash\r\n        switch(enterprise.enterpriseType){\r\n            case 'company':\r\n                if (workers.length < 1) {\r\n                    //noop;\r\n                } else if (workers.length === 1){\r\n                    workers[0].cash += enterprise.cash;\r\n                    if (enterprise.cash > 0)\r\n                        workers[0].ticksSinceLastSale = 0;\r\n                    enterprise.cash = 0;\r\n                }\r\n                else {\r\n                    const share = enterprise.cash / (workers.length + OwnerProfitPercentage);\r\n                    enterprise.cash = 0;\r\n                    let owner = workers.find(x => x.key === enterprise.ownerBeanKey);\r\n                    if (owner == null){\r\n                        owner = workers[0];\r\n                        enterprise.ownerBeanKey = owner.key;\r\n                    }\r\n                    workers.forEach(bean => {\r\n                        const pay = (bean === owner) ? share * (1+OwnerProfitPercentage) : share;\r\n                        bean.cash += pay;\r\n                        if (pay > 0)\r\n                            bean.ticksSinceLastSale = 0;\r\n                    });\r\n                }\r\n                break;\r\n            case 'co-op':\r\n                const share = enterprise.cash / workers.length;\r\n                enterprise.cash = 0;\r\n                workers.forEach(bean => {\r\n                    bean.cash += share;\r\n                    if (share > 0)\r\n                        bean.ticksSinceLastSale = 0;\r\n                });\r\n                break;\r\n            case 'commune':\r\n                const commShare = enterprise.cash / workers.length;\r\n                enterprise.cash = 0;\r\n                workers.forEach(bean => {\r\n                    bean.cash += commShare;\r\n                    if (commShare > 0)\r\n                        bean.ticksSinceLastSale = 0;\r\n                });\r\n                break;\r\n        }\r\n    })\r\n}\r\nexport function WorldAddEvent(world: IWorldState, e: IEvent){\r\n    e.key = world.events.nextID++;\r\n    world.events.byID[e.key] = e;\r\n    world.events.allIDs.push(e.key);\r\n    SignalStoreInstance.events.publish(e);\r\n    while (world.events.allIDs.length > EventBufferLength){\r\n        const removedID = world.events.allIDs[0];\r\n        if (removedID != null) {\r\n            world.events.allIDs = world.events.allIDs.slice(1);\r\n            world.events.byID = {\r\n                removedID,\r\n                ...world.events.byID\r\n            } as any;\r\n        }\r\n    }\r\n}\r\nexport function animate_ufos(world: IWorldState, deltaMS: number): Array<AnyAction>{\r\n    const actions: AnyAction[] = [];\r\n    world.ufos.allIDs.forEach((ufoKey) => {\r\n        const ufo = world.ufos.byID[ufoKey];\r\n        AgentDurationStoreInstance.Get('ufo', ufoKey).elapsed += deltaMS;\r\n\r\n        if (AgentDurationStoreInstance.Get('ufo', ufoKey).elapsed > 4000)\r\n        {\r\n            actions.push(remove_ufo({ufoKey}))\r\n        }\r\n    });\r\n    return actions;\r\n}\r\nexport function animate_beans(world: IWorldState, deltaMS: number): Array<AnyAction>{\r\n    const actions: AnyAction[] = [];\r\n    world.beans.allIDs.forEach((beanKey) => {\r\n        const bean = world.beans.byID[beanKey];\r\n\r\n        if (bean.lifecycle != 'alive')\r\n            return;\r\n        \r\n        const ADS = AgentDurationStoreInstance.Get('bean', bean.key); \r\n        ADS.elapsed += deltaMS;\r\n        const actResult = BeanActions[bean.action].act(bean, world, ADS.elapsed, deltaMS);\r\n        if (Array.isArray(actResult.action)){\r\n            actions.push(...actResult.action);\r\n        } else if (actResult.action){\r\n            actions.push(actResult.action);\r\n        }\r\n        if (actResult.newActivity){\r\n            const exitAction = BeanActions[bean.action].exit(bean, world.seed);\r\n            if (exitAction)\r\n                actions.push(exitAction);\r\n            actions.push(changeState({beanKey: beanKey, newState: actResult.newActivity}));\r\n            const enterAction = BeanActions[actResult.newActivity.act].enter(bean);\r\n            if (enterAction)\r\n                actions.push(enterAction);\r\n        }\r\n        //TODO: fix on chat\r\n        // if (result.data.act === 'chat' && result.data.chat?.participation === 'speaker'){\r\n        //     listener.onChat(agent as Bean, result.data.chat);\r\n        // }\r\n    });\r\n    return actions;\r\n}\r\nexport function animate_pickups(world: IWorldState, deltaMS: number): Array<AnyAction>{\r\n    const pickupIDs = world.pickups.allIDs;\r\n    const city = world.cities.byID[0];\r\n    const actions: AnyAction[] = [];\r\n    //go backwards because we'll modify the array as we go\r\n    for(let i = pickupIDs.length - 1; i >= 0; i--) {\r\n        const pickupID = pickupIDs[i];\r\n        let collide = false;\r\n        const magnet = city.pickupMagnetPoint;\r\n        const newAccelerator = {\r\n            ...(MoverStoreInstance.Get('pickup', pickupID).current || OriginAccelerator)\r\n        };\r\n        if (magnet){\r\n            const collide = accelerate_towards(\r\n                newAccelerator,\r\n                magnet,\r\n                PickupPhysics.AccelerateS * deltaMS/1000, \r\n                PickupPhysics.MaxSpeed, \r\n                PickupPhysics.CollisionDistance,\r\n                PickupPhysics.Brake);\r\n            if (collide){\r\n                actions.push(pickUpPickup({cityKey: city.key, pickupKey: pickupID}));\r\n            }\r\n        } else {\r\n            accelerator_coast(newAccelerator, PickupPhysics.Brake);\r\n        }\r\n        if (!collide)\r\n            MoverStoreInstance.Get('pickup', pickupID).publish(newAccelerator);\r\n    }\r\n    return actions;\r\n}","import { BeliefCommonality } from \"./simulation/Beliefs\";\r\nimport { BuildingTypes } from \"./simulation/Geography\";\r\nimport { RubricKeys } from \"./simulation/Player\";\r\nimport { TicksPerDay } from \"./simulation/Time\";\r\nimport { IThreshold, TraitGood } from \"./World\";\r\n\r\nexport type PlayerEmptyHexAction = 'build';\r\nexport type PlayerHexAction = 'beam'|'upgrade'|'fallow_2_rural'|'rural_2_urban';\r\nexport type PlayerBeanAction = 'scan'|'abduct'|'vaporize'|'siphon'|'empower'|'gift';\r\nexport type PlayerBeanBrainAction = 'brainwash_ideal'|'brainimplant_secondary'|'brainwash_secondary';\r\nexport type PlayerMarketAction = 'energy'|'bots';\r\nexport type PlayerGovernmentAction = '';\r\nexport type PlayerAction = PlayerHexAction|PlayerBeanAction;\r\n\r\nexport interface PlayerResources{\r\n    energy?: number;\r\n    bots?: number;\r\n    hedons?: number;\r\n    tortrons?: number;\r\n}\r\nexport interface BeanResources{\r\n    sanity?: number;\r\n}\r\nexport type BeanDeathCause = 'vaporization'|'exposure'|'starvation'|'sickness';\r\nexport function triadToString(cost: PlayerResources, sign: '+'|''|'-', qty: number = 1){\r\n    const costs = [];\r\n    if (cost.energy){\r\n        costs.push(sign+(cost.energy*qty)+' Energy');\r\n    }\r\n    if (cost.bots){\r\n        costs.push(sign+(cost.bots*qty)+' Bots');\r\n    }\r\n    if (cost.hedons){\r\n        costs.push(sign+(cost.hedons*qty)+' Hedons');\r\n    }\r\n    if (cost.tortrons){\r\n        costs.push(sign+(cost.tortrons*qty)+' Antihedons');\r\n    }\r\n    return costs.join(' ');\r\n}\r\nexport interface SecondaryResources{\r\n    research?: number;\r\n    leadership?: number;\r\n}\r\nexport interface IDifficulty{\r\n    cost: {\r\n        emptyHex: {[key in PlayerEmptyHexAction]: {\r\n            [key in BuildingTypes]: PlayerResources}\r\n        },\r\n        hex: {[key in PlayerHexAction]: PlayerResources} \r\n        bean: {[key in PlayerBeanAction]: PlayerResources},\r\n        bean_brain: {[key in PlayerBeanBrainAction]: BeanResources}\r\n        market: {\r\n            scrubHedons: PlayerResources,\r\n            resource: {[key in PlayerMarketAction]: PlayerResources},\r\n            beliefs: {[key in BeliefCommonality]: PlayerResources}\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {[key in TraitGood]: IThreshold},\r\n        degrade_per_tick: {\r\n            food: number,\r\n            health: number,\r\n            stamina: number,\r\n            fun: number\r\n        },\r\n        penalty: {\r\n            homeless_health: number,\r\n            starving_health: number\r\n        },\r\n        death_chance: {\r\n            [cause in BeanDeathCause]: number\r\n        }\r\n    },\r\n    report_card_progression: RubricKeys[]\r\n}\r\nexport const DefaultDifficulty: IDifficulty = {\r\n    cost: {\r\n        emptyHex: {\r\n            build: {\r\n                house: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                farm: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                theater: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                hospital: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                church: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                courthouse: {\r\n                    energy: 999,\r\n                    bots: 999\r\n                },\r\n                park: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                nature: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                }\r\n            }\r\n        },\r\n        hex: {\r\n            beam: {\r\n                energy: 3\r\n            },\r\n            upgrade: {\r\n                energy: 1,\r\n                bots: 4,\r\n            },\r\n            fallow_2_rural: {\r\n                bots: 1,\r\n            },\r\n            rural_2_urban: {\r\n                bots: 2,\r\n            }\r\n        },\r\n        bean_brain: {\r\n            brainwash_ideal: { sanity: 4},\r\n            brainimplant_secondary: { sanity: 1},\r\n            brainwash_secondary: {sanity: 2},\r\n        },\r\n        bean: {\r\n            scan: {\r\n                energy: 1\r\n            },\r\n            abduct: {\r\n                bots: 3\r\n            },\r\n            gift: {},\r\n            empower: {},\r\n            vaporize: {\r\n                energy: 2,\r\n                bots: 4\r\n            },\r\n            siphon: {},\r\n        },\r\n        market: {\r\n            scrubHedons: {\r\n                energy: 5\r\n            },\r\n            resource: {\r\n                bots: {\r\n                    hedons: 6\r\n                },\r\n                energy: {\r\n                    hedons: 5\r\n                }\r\n            },\r\n            beliefs: {\r\n                common: {},\r\n                uncommon: {},\r\n                rare: {},\r\n                unique: {}\r\n            },\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {\r\n            'food': {warning: 0.6, sufficient: 1, abundant: 3},\r\n            'shelter': {warning: 2, sufficient: 3, abundant: 7},\r\n            'medicine': {warning: 0.6, sufficient: 1, abundant: 3},\r\n            'fun': {warning: 0.1, sufficient: 1, abundant: 3},\r\n        },\r\n        degrade_per_tick: {\r\n            food: 1/(TicksPerDay*3),\r\n            health: 1/(TicksPerDay*5),\r\n            stamina: 1/TicksPerDay,\r\n            fun: 1/(TicksPerDay*5)\r\n        },\r\n        penalty: {\r\n            homeless_health: 1/(TicksPerDay*7),\r\n            starving_health: 1/(TicksPerDay*7)\r\n        },\r\n        death_chance: {\r\n            starvation: 1/8,\r\n            sickness: 1/8,\r\n            exposure: 1/8,\r\n            vaporization: 1\r\n        }\r\n    },\r\n    report_card_progression: []\r\n};","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { PlayerResources } from '../../Game'\r\nimport { GameStorageInstance } from '../../GameStorage'\r\nimport { MoverStoreInstance } from '../../MoverStoreSingleton'\r\nimport { SignalStoreInstance } from '../../SignalStore'\r\nimport { Act, GetPriorities, IActivityData, IBean } from '../../simulation/Agent'\r\nimport { AgentDurationStoreInstance } from '../../simulation/AgentDurationInstance'\r\nimport { BeanBelievesIn, BeanCalculateSanity, BeanCanPurchase, BeanDie, BeanLoseSanity, BeanMaybeGetInsanity, CosmopolitanHappyChance, DiligenceHappyChance, GermophobiaHospitalWorkChance, HedonismExtraChance, HedonismHateWorkChance, LibertarianTaxUnhappyChance, ParochialHappyChance, ProgressivismTaxHappyChance } from '../../simulation/Bean'\r\nimport { BeanTrySetJob } from '../../simulation/BeanAndCity'\r\nimport { BeliefsAll, SecondaryBeliefData, TraitBelief } from '../../simulation/Beliefs'\r\nimport { BeanLoseJob, BuildingUnsetJob } from '../../simulation/City'\r\nimport { EconomyEmployAndPrice, EconomyMostInDemandJob, EconomyProduceAndPrice, EconomyTryTransact, IListing, IMarketReceipt, MarketListingSubtract } from '../../simulation/Economy'\r\nimport { BuildingTypes, HexPoint, hex_to_pixel, IBuilding, OriginAccelerator, Point } from '../../simulation/Geography'\r\nimport { LawData, LawKey } from '../../simulation/Government'\r\nimport { EnterpriseType } from '../../simulation/Institutions'\r\nimport { MarketTraitListing } from '../../simulation/MarketTraits'\r\nimport { IPickup } from '../../simulation/Pickup'\r\nimport { HasResearched, PlayerCanAfford, PlayerPurchase, PlayerTryPurchase, PlayerUseTraitGem, Tech } from '../../simulation/Player'\r\nimport { BuildingTryFreeBean, GenerateIBuilding } from '../../simulation/RealEstate'\r\nimport { GetSeedName } from '../../simulation/SeedGen'\r\nimport { ITitle } from '../../simulation/Titles'\r\nimport { IUFO } from '../../simulation/Ufo'\r\nimport { MathClamp } from '../../simulation/Utils'\r\nimport { simulate_world, WorldAddEvent } from '../../simulation/WorldSim'\r\nimport { EmotionSanity, EmotionWorth, GoodToThreshold, JobToGood, TraitEmote, TraitFaith, TraitGood } from '../../World'\r\nimport { DistrictAddLots, GenerateBean, GenerateDistrictsAndLots, GetRandom, GetRandomCityName, GetRandomFloat, GetRandomNumber } from '../../WorldGen'\r\nimport { WorldSfxInstance } from '../../WorldSound'\r\nimport { EntityAddToSlice } from '../entity.state'\r\nimport { GetBlankWorldState, IWorldState } from './world'\r\n\r\nconst ChargePerMarket = 3;\r\nconst ChargePerExtract = 1;\r\n\r\nconst UnderemploymentThresholdTicks = 8\r\nexport const worldSlice = createSlice({\r\n    name: 'world',\r\n    initialState: GetBlankWorldState(),\r\n    reducers: {\r\n      refreshMarket: state => {\r\n          \r\n      },\r\n      magnetChange: (state, action: PayloadAction<{cityKey: number, px?: Point}>) => {\r\n        state.cities.byID[action.payload.cityKey].pickupMagnetPoint = action.payload.px;\r\n      },\r\n      worldTick: state => {\r\n        simulate_world(state);\r\n      },\r\n      newGame: (state, action: PayloadAction<{seed: string}>) => {\r\n        const city = state.cities.byID[0];\r\n        state.seed = action.payload.seed;\r\n        city.name = GetRandomCityName(state.seed);\r\n        const dls = GenerateDistrictsAndLots(city);\r\n        state.districts = dls.ds;\r\n        state.lots = dls.lots;\r\n        const natureID = GetRandom(state.seed, state.districts.allIDs.slice(1));\r\n        state.districts.byID[natureID].kind = 'nature';\r\n        // GenerateIBuilding(state, city, 'courthouse', {q: 0, r: 0}, state.economy);\r\n        // GenerateIBuilding(state, city, 'nature', city.hexes[GetRandomNumber(state.seed, 15, 20)], state.economy);\r\n        // GenerateIBuilding(state, city, 'nature', city.hexes[GetRandomNumber(state.seed, 21, 25)], state.economy);\r\n        // GenerateIBuilding(state, city, 'nature', city.hexes[GetRandomNumber(state.seed, 26, 60)], state.economy);\r\n      },\r\n      loadGame: (state, action:PayloadAction<{newState: IWorldState}>) => {\r\n        action.payload.newState.beans.allIDs.map(k => {\r\n          const bean = action.payload.newState.beans.byID[k];\r\n          if (bean){\r\n            MoverStoreInstance.Get('bean', k).publish({\r\n              point: {\r\n                x: bean.lastPoint?.x || 0,\r\n                y: bean.lastPoint?.y || 0\r\n              }, velocity: {x: 0, y: 0}\r\n            })\r\n          }\r\n        })\r\n        return action.payload.newState\r\n      },\r\n      build: (state, action: PayloadAction<{city: number, lot: number, what: BuildingTypes}>) => {\r\n        const cost: PlayerResources = state.alien.difficulty.cost.emptyHex.build[action.payload.what];\r\n        if (PlayerTryPurchase(state.alien, cost)) {\r\n          const lot = state.lots.byID[action.payload.lot];\r\n          const district = state.districts.byID[lot.districtKey];\r\n          GenerateIBuilding(state, state.cities.byID[action.payload.city], action.payload.what, district, lot.point, lot.key, state.economy);\r\n          switch(action.payload.what){\r\n            case 'farm':\r\n              WorldSfxInstance.play('moo');\r\n              break;\r\n            case 'hospital':\r\n              WorldSfxInstance.play('pills');\r\n              break;\r\n            case 'house':\r\n              WorldSfxInstance.play('door');\r\n              break;\r\n          }\r\n        }\r\n      },\r\n      upgradeDistrict: (state, action: PayloadAction<{city: number, district: number}>) => {\r\n        const district = state.districts.byID[action.payload.district];\r\n        if (!district)\r\n          return;\r\n        const newKind = district.kind === 'rural' ? 'urban' : 'rural';\r\n        if (newKind === 'rural'){\r\n          const cost: PlayerResources = state.alien.difficulty.cost.hex.fallow_2_rural;\r\n          if (PlayerTryPurchase(state.alien, cost)) {\r\n            DistrictAddLots(district, state.lots, 'rural');\r\n            district.kind = 'rural';\r\n            // WorldSfxInstance.play('moo');\r\n          }\r\n        } else {\r\n          const cost: PlayerResources = state.alien.difficulty.cost.hex.rural_2_urban;\r\n          if (PlayerTryPurchase(state.alien, cost)) {\r\n            DistrictAddLots(district, state.lots, 'urban');\r\n            district.kind = 'urban';\r\n            // WorldSfxInstance.play('moo');\r\n          }\r\n        }\r\n      },\r\n      changeEnterprise: (state, action: PayloadAction<{enterpriseKey: number, newType: EnterpriseType}>) => {\r\n        state.enterprises.byID[action.payload.enterpriseKey].enterpriseType = action.payload.newType;\r\n      },\r\n      fireBean: (state, action: PayloadAction<{cityKey: number, beanKey: number}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        BeanLoseJob(bean, state);\r\n      },\r\n      upgrade: (state, action: PayloadAction<{buildingKey: number}>) => {\r\n        const cost = state.alien.difficulty.cost.hex.upgrade;\r\n        const what = state.buildings.byID[action.payload.buildingKey];\r\n        if (PlayerTryPurchase(state.alien, cost)) {\r\n          what.upgraded = true;\r\n        }\r\n      },\r\n      beam: (state, action: PayloadAction<{cityKey: number, where: HexPoint}>) => {\r\n        const cost = state.alien.difficulty.cost.hex.beam;\r\n        if (PlayerCanAfford(state.alien, cost)) {\r\n          PlayerPurchase(state.alien, cost);\r\n          const ufo: IUFO = {\r\n            key: state.ufos.nextID++,\r\n            action: 'beam-in',\r\n            duration: 0,\r\n            point: {...action.payload.where},\r\n            cityKey: action.payload.cityKey\r\n          };\r\n          state.ufos.allIDs.push(ufo.key);\r\n          state.ufos.byID[ufo.key] = ufo;\r\n          state.cities.byID[action.payload.cityKey].ufoKeys.push(ufo.key);\r\n        }\r\n      },\r\n      remove_ufo: (state, action: PayloadAction<{ufoKey: number}>) => {\r\n        const ufo = state.ufos.byID[action.payload.ufoKey];\r\n        const newBean = GenerateBean(state, state.cities.byID[0], undefined, ufo.point);\r\n        newBean.priorities = GetPriorities(newBean, state.seed, state.cities.byID[newBean.cityKey], state.alien.difficulty);\r\n        delete state.ufos.byID[action.payload.ufoKey];\r\n        state.ufos.allIDs = state.ufos.allIDs.filter(x => x != action.payload.ufoKey);\r\n        state.cities.byID[ufo.cityKey].ufoKeys = state.cities.byID[ufo.cityKey].ufoKeys.filter(x => x != action.payload.ufoKey);\r\n        \r\n        state.beans.byID[newBean.key] = newBean;\r\n        state.beans.allIDs.push(newBean.key);\r\n        state.cities.byID[ufo.cityKey].beanKeys.push(newBean.key);\r\n        MoverStoreInstance.Get('bean', newBean.key).current = {\r\n          point: hex_to_pixel(state.cities.byID[ufo.cityKey].hex_size, state.cities.byID[ufo.cityKey].petriOrigin, ufo.point), \r\n          velocity: {x: 0, y: 0}\r\n        };\r\n      },\r\n      abduct: (state, action: PayloadAction<{beanKey: number}>) => {\r\n        if (PlayerTryPurchase(state.alien, state.alien.difficulty.cost.bean.abduct)) {\r\n          const bean = state.beans.byID[action.payload.beanKey];\r\n          if (bean.lifecycle === 'alive'){\r\n            bean.lifecycle = 'abducted';\r\n            if (bean.employerEnterpriseKey){\r\n              const building = state.buildings.byID[bean.employerEnterpriseKey];\r\n              BuildingUnsetJob(building, bean);\r\n            }\r\n            state.cities.byID[bean.cityKey].beanKeys = state.cities.byID[bean.cityKey].beanKeys.filter(x => x != bean.key);\r\n            state.alien.abductedBeanKeys.push(bean.key);\r\n          }\r\n        }\r\n      },\r\n      cheatAdd: (state) => {\r\n        state.alien.energy.amount += 10;\r\n        state.alien.bots.amount += 10;\r\n        state.alien.hedons.amount += 10;\r\n      },\r\n      release: (state) => {\r\n        if (state.alien.abductedBeanKeys.length > 0) {\r\n          const lucky_bean_key = state.alien.abductedBeanKeys.shift();\r\n          if (lucky_bean_key != null){\r\n            const luckyBean = state.beans.byID[lucky_bean_key];\r\n            luckyBean.lifecycle = 'alive';\r\n            state.cities.byID[luckyBean.cityKey].beanKeys.push(lucky_bean_key);\r\n          }\r\n        }\r\n\r\n      },\r\n      washCommunity: (state, action: PayloadAction<{beanKey: number, faith: TraitFaith}>) => {\r\n        // if (bean.canPurchase(state.alien.difficulty.cost.bean_brain.brainwash_ideal, 0)) {\r\n        //   bean.loseSanity(state.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n        //   if (bean.community === 'ego')\r\n        //     bean.community = 'state';\r\n        //   else bean.community = 'ego';\r\n        //   return true;\r\n        // }\r\n      },\r\n      washMotive: () => {\r\n\r\n        // if (bean.canPurchase(state.alien.difficulty.cost.bean_brain.brainwash_ideal, 0)) {\r\n        //   bean.loseSanity(state.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n        //   if (bean.ideals === 'prog')\r\n        //     bean.ideals = 'trad';\r\n        //   else bean.ideals = 'prog';\r\n        //   this.setState({ world: state });\r\n        //   return true;\r\n        // }\r\n      },\r\n      washNarrative: (state, action: PayloadAction<{beanKey: number, faith: TraitFaith}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        if (BeanCanPurchase(bean, state.alien.difficulty.cost.bean_brain.brainwash_ideal, 0)) {\r\n          BeanLoseSanity(bean, state.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n          const oldFaith = bean.faith;\r\n          while (bean.faith === oldFaith){\r\n            bean.faith = GetRandom(state.seed, ['rocket', 'dragon', 'music', 'noFaith']);\r\n          }\r\n        }\r\n      },\r\n      washBelief: (state, action: PayloadAction<{beanKey: number, trait: TraitBelief}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        const sanityCostBonus = HasResearched(state.alien.techProgress, 'sanity_bonus') ? -1 : 0;\r\n        if (BeanCanPurchase(bean, state.alien.difficulty.cost.bean_brain.brainwash_secondary, sanityCostBonus)) {\r\n          BeanLoseSanity(bean, state.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0);\r\n          bean.sanity = BeanCalculateSanity(bean, state.alien.difficulty);\r\n          bean.beliefs.splice(\r\n            bean.beliefs.indexOf(action.payload.trait), 1\r\n          );\r\n          const insanityEvent = BeanMaybeGetInsanity(state.seed, bean);\r\n          if (insanityEvent){\r\n            bean.beliefs = [...bean.beliefs, insanityEvent.newInsanity];\r\n            WorldSfxInstance.play('crazy_laugh');\r\n          } else {\r\n            WorldSfxInstance.play('wash_out');\r\n          }\r\n        }\r\n      },\r\n      extractBelief: (state, action: PayloadAction<{beanKey: number, trait: TraitBelief}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        const sanityCostBonus = HasResearched(state.alien.techProgress, 'sanity_bonus') ? -1 : 0;\r\n        if (BeanCanPurchase(bean, state.alien.difficulty.cost.bean_brain.brainwash_secondary, sanityCostBonus)) {\r\n          BeanLoseSanity(bean, state.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0);\r\n          bean.sanity = BeanCalculateSanity(bean, state.alien.difficulty);\r\n          const existing = state.alien.beliefInventory.find((x) => x.trait === action.payload.trait);\r\n          const chargeBonus = HasResearched(state.alien.techProgress, 'neural_duplicator') ? 1 : 0;\r\n          if (existing) {\r\n            existing.gems += ChargePerExtract + chargeBonus;\r\n          } else {\r\n            state.alien.beliefInventory.push({trait: action.payload.trait, gems: ChargePerExtract + chargeBonus});\r\n          }\r\n          const insanityEvent = BeanMaybeGetInsanity(state.seed, bean);\r\n          if (insanityEvent){\r\n            bean.beliefs = [...bean.beliefs, insanityEvent.newInsanity];\r\n            WorldSfxInstance.play('crazy_laugh');\r\n          } else {\r\n            WorldSfxInstance.play('wash_out');\r\n          }\r\n        }\r\n      },\r\n      acknowledgeNewInsanity: (state) =>{\r\n        state.insanityEvent = undefined;\r\n      },\r\n      setResearch: (state, action: PayloadAction<{t: Tech}>) => {\r\n        state.alien.currentlyResearchingTech = action.payload.t;\r\n      },\r\n      implant: (state, action: PayloadAction<{beanKey: number, trait: TraitBelief}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        const sanityCostBonus = HasResearched(state.alien.techProgress, 'sanity_bonus') ? -1 : 0;\r\n        if (BeanCanPurchase(bean, state.alien.difficulty.cost.bean_brain.brainimplant_secondary, sanityCostBonus) && \r\n          state.alien.beliefInventory.filter(x => x.trait == action.payload.trait && x.gems > 0)) {\r\n          bean.beliefs.push(action.payload.trait);\r\n          PlayerUseTraitGem(state.alien, action.payload.trait);\r\n          BeanLoseSanity(bean, state.alien.difficulty.cost.bean_brain.brainimplant_secondary.sanity || 0); \r\n          bean.sanity = BeanCalculateSanity(bean, state.alien.difficulty);\r\n          const insanityEvent = BeanMaybeGetInsanity(state.seed, bean);\r\n          if (insanityEvent){\r\n            bean.beliefs = [...bean.beliefs, insanityEvent.newInsanity];\r\n            WorldSfxInstance.play('crazy_laugh');\r\n          } else {\r\n            WorldSfxInstance.play('wash_in');\r\n          }\r\n        }\r\n      },\r\n      scan: (state, action: PayloadAction<{beanKey: number}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        if (PlayerTryPurchase(state.alien, state.alien.difficulty.cost.bean.scan)) {\r\n          state.alien.scanned_bean[bean.key] = true;\r\n          bean.beliefs.forEach((b) => {\r\n            if (!state.alien.seenBeliefs[b]){\r\n              state.alien.seenBeliefs[b] = true;\r\n              SignalStoreInstance.newTraitSeen.publish({k: SecondaryBeliefData[b].noun, v: true});\r\n            }\r\n          });\r\n          WorldSfxInstance.play('scan');\r\n        }\r\n      },\r\n      vaporize: (state, action: PayloadAction<{beanKey: number}>) => {\r\n        if (PlayerTryPurchase(state.alien, state.alien.difficulty.cost.bean.vaporize)) {\r\n          const d = BeanDie(state.beans.byID[action.payload.beanKey], state.seed, 'vaporization');\r\n          EntityAddToSlice(state.events, d.death);\r\n          d.emotes.map(e => EntityAddToSlice(state.pickups, e));\r\n        }\r\n      },\r\n      pickUpPickup: (state, action: PayloadAction<{cityKey: number, pickupKey: number}>) => {\r\n        const pickup = state.pickups.byID[action.payload.pickupKey];\r\n\r\n        const amt = EmotionWorth[pickup.type];\r\n        state.alien.hedons.amount += amt;\r\n        state.cities.byID[action.payload.cityKey].pickupKeys = state.cities.byID[action.payload.cityKey].pickupKeys.filter(x => x != action.payload.pickupKey);\r\n        state.pickups.allIDs = state.pickups.allIDs.filter(x => x != action.payload.pickupKey);\r\n        delete state.pickups.byID[action.payload.pickupKey];\r\n        \r\n        SignalStoreInstance.alienHedons.publish({change: amt});\r\n        WorldSfxInstance.play(pickup.type);\r\n      },\r\n      changeState: (state, action: PayloadAction<{beanKey: number, newState: IActivityData}>) => {\r\n        const oldAct = state.beans.byID[action.payload.beanKey].action;\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        const ADS = AgentDurationStoreInstance.Get('bean', bean.key);\r\n        if (oldAct === 'chat')\r\n          bean.lastChatMS = Date.now();\r\n        if (action.payload.newState.act === 'idle'){\r\n          bean.priorities = GetPriorities(bean, state.seed, state.cities.byID[bean.cityKey], state.alien.difficulty);\r\n        }\r\n        bean.activity_duration[oldAct] += ADS.elapsed;\r\n        bean.action = action.payload.newState.act;\r\n        bean.actionData = action.payload.newState;\r\n        const p = MoverStoreInstance.Get('bean', bean.key).current?.point;\r\n        if (p) {\r\n          bean.lastPoint = {\r\n            ...p\r\n          };\r\n        }\r\n        ADS.elapsed = 0;\r\n      },\r\n      beanHitDestination: (state, action: PayloadAction<{beanKey: number}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        if (bean.actionData.destinationIndex != null){\r\n          bean.actionData.destinationIndex++;\r\n        }\r\n      },\r\n      beanBePersuaded: (state, action: PayloadAction<{beanKey: number, belief: TraitBelief}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        \r\n        bean.beliefs.push(action.payload.belief);\r\n        WorldAddEvent(state, {\r\n            key: 0,\r\n            icon: '🗣️', \r\n            trigger: 'persuasion', \r\n            message: `${bean.name} now believes in ${SecondaryBeliefData[action.payload.belief].icon} ${SecondaryBeliefData[action.payload.belief].noun}!`, \r\n            beanKey: bean.key, cityKey: bean.cityKey,\r\n            point: bean.lastPoint\r\n        });\r\n        WorldSfxInstance.play('mhmm')\r\n      },\r\n      beanGiveCharity: (state, action: PayloadAction<{senderBeanKey: number, needyBeanKey: number}>) => {\r\n        const bean = state.beans.byID[action.payload.senderBeanKey];\r\n        bean.cash -= 0.5;\r\n        _emote(bean, state, {emote: 'happiness', source: 'Charity'});\r\n        const needy = state.beans.byID[action.payload.needyBeanKey];\r\n        needy.cash += 0.5;\r\n        _emote(needy, state, {emote: 'happiness', source: 'Charity'});\r\n      },\r\n      beanWork: (state, action: PayloadAction<{beanKey: number}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        if (bean.job === 'jobless'){\r\n        } else {\r\n            switch(bean.job){\r\n                case 'farmer':\r\n                    bean.discrete_food = Math.min(bean.discrete_food+1, GoodToThreshold.food.sufficient*2);\r\n                    _ifBelievesInMaybeEmote(state, bean, 'Parochialism', 'happiness', ParochialHappyChance);\r\n                    break;\r\n                case 'doc':\r\n                    bean.discrete_health = Math.min(bean.discrete_health+1, GoodToThreshold.medicine.sufficient*2);\r\n                    _ifBelievesInMaybeEmote(state, bean, 'Germophobia', 'unhappiness', GermophobiaHospitalWorkChance);\r\n                    break;\r\n                case 'builder': \r\n                    bean.stamina = 'awake';\r\n                    bean.discrete_stamina = 7;\r\n                    break;\r\n                case 'entertainer':\r\n                    _ifBelievesInMaybeEmote(state, bean, 'Cosmopolitanism', 'happiness', CosmopolitanHappyChance);\r\n                break;\r\n            }\r\n            _ifBelievesInMaybeEmote(state, bean, 'Diligence', 'happiness', DiligenceHappyChance);\r\n            _ifBelievesInMaybeEmote(state, bean, 'Hedonism', 'unhappiness', HedonismHateWorkChance);\r\n            bean.ticksSinceLastSale++;\r\n            if (bean.ticksSinceLastSale > UnderemploymentThresholdTicks && bean.employerEnterpriseKey != null){\r\n                // const cityHasOtherWorkers = state.cities.byID[bean.cityKey].beans.get.filter(x => x.job === bean.job).length > 1 : false;\r\n                // cityHasOtherWorkers &&\r\n                const employer = state.enterprises.byID[bean.employerEnterpriseKey];\r\n                // underemployment\r\n                if (employer.ownerBeanKey != bean.key && Math.random() > 0.5) {\r\n                    const newJob = EconomyMostInDemandJob(state.economy);\r\n                    if (newJob){\r\n                      BuildingUnsetJob(state.buildings.byID[bean.employerEnterpriseKey], bean);\r\n                      BeanTrySetJob(state, bean, newJob);\r\n                    }\r\n                }\r\n            }\r\n            let workedForEmployer = false;\r\n            if (bean.employerEnterpriseKey){\r\n                const employer = state.enterprises.byID[bean.employerEnterpriseKey];\r\n                if (employer){\r\n                    EconomyEmployAndPrice(state.economy, employer, JobToGood(bean.job), 4, bean.fairGoodPrice);\r\n                    workedForEmployer = true;\r\n                    switch(employer.enterpriseType){\r\n                        case 'company':\r\n                            _ifBelievesInMaybeEmote(state, bean, 'Communism', 'unhappiness', 0.1);\r\n                            if (employer.ownerBeanKey === bean.key)\r\n                              _ifBelievesInMaybeEmote(state, bean, 'Capitalism', 'happiness', 0.1);\r\n                            break;\r\n                        case 'co-op':                            \r\n                            _ifBelievesInMaybeEmote(state, bean, 'Capitalism', 'unhappiness', 0.1);\r\n                                \r\n                            _ifBelievesInMaybeEmote(state, bean, 'Socialism', 'happiness', 0.1);\r\n                            break;\r\n                        case 'commune':                            \r\n                          _ifBelievesInMaybeEmote(state, bean, 'Capitalism', 'unhappiness', 0.1);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (!workedForEmployer)\r\n              EconomyProduceAndPrice(state.economy, bean, JobToGood(bean.job), 4, bean.fairGoodPrice);\r\n        }\r\n      },\r\n      beanEmote: (state, action: PayloadAction<{beanKey: number, emote: TraitEmote, source: string}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        \r\n        _emote(bean, state, action.payload);\r\n        if (BeanBelievesIn(bean, 'Hedonism') && (\r\n          action.payload.emote === 'happiness' || action.payload.emote === 'love'\r\n          ) && Math.random() < HedonismExtraChance){\r\n            _emote(bean, state, {emote: 'happiness', source: 'Hedonism'});\r\n        }\r\n      },\r\n      beanCrime: (state, action: PayloadAction<{beanKey: number, good: 'food'|'medicine'}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        \r\n        const listing = GetRandom(state.seed, state.economy.market.listings[action.payload.good]);\r\n        if (listing == null){\r\n        } else {\r\n          const stolen = Math.min(listing.quantity, 3);\r\n          MarketListingSubtract(state.economy.market, listing, action.payload.good, stolen);\r\n          if (stolen != null){\r\n              switch(action.payload.good){\r\n                  case 'food':\r\n                      bean.discrete_food += stolen;\r\n                      break;\r\n                  case 'medicine':\r\n                      bean.discrete_health += stolen;\r\n                      break;\r\n              }\r\n          }\r\n        }\r\n      },\r\n      beanRelax: (state, action: PayloadAction<{beanKey: number}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        bean.discrete_fun += 1;\r\n        _emote(bean, state, {emote: 'happiness', source: 'Relaxation'});\r\n        if (BeanBelievesIn(bean, 'Naturalism'))\r\n          _emote(bean, state, {emote: 'happiness', source: 'Naturalism'});\r\n      },\r\n      enactLaw: (state, action: PayloadAction<{lawKey: LawKey}>) => {\r\n        const data = LawData[action.payload.lawKey];\r\n        state.law.lawTree[data.axis] = data;\r\n      },\r\n      repealLaw: (state, action: PayloadAction<{lawKey: LawKey}>) => {\r\n        const data = LawData[action.payload.lawKey];\r\n        delete state.law.lawTree[data.axis];\r\n      },\r\n      \r\n    buyBots: (state, action: PayloadAction<{amount: number}>) => {\r\n      const cost = state.alien.difficulty.cost.market.resource.bots;\r\n      if (PlayerTryPurchase(state.alien, cost, action.payload.amount)) {\r\n        state.alien.bots.amount += action.payload.amount;\r\n      }\r\n    },\r\n    buyEnergy: (state, action: PayloadAction<{amount: number}>) => {\r\n      const cost = state.alien.difficulty.cost.market.resource.bots;\r\n      if (PlayerTryPurchase(state.alien, cost, action.payload.amount)) {\r\n        state.alien.energy.amount += action.payload.amount;\r\n      }\r\n    },\r\n    scrubHedons: (state) => {\r\n      const cost = state.alien.difficulty.cost.market.scrubHedons;\r\n      if (PlayerTryPurchase(state.alien, cost)) {\r\n        const old = state.alien.hedons.amount;\r\n        state.alien.hedons.amount = 0;\r\n      }\r\n    },\r\n    buyTrait: (state, action: PayloadAction<{l: MarketTraitListing}>) => {\r\n      if (PlayerTryPurchase(state.alien, action.payload.l.cost)) {\r\n        const existing = state.alien.beliefInventory.find((x) => x.trait === action.payload.l.trait);\r\n        if (existing) {\r\n          existing.gems += ChargePerMarket;\r\n        } else\r\n          state.alien.beliefInventory.push({trait: action.payload.l.trait, gems: ChargePerMarket});\r\n      }\r\n    },\r\n      beanBuy: (state, action: PayloadAction<{beanKey: number, good: TraitGood}>) =>{\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        const getSeller = (l: IListing) => {\r\n          if (l.sellerEnterpriseKey != null)\r\n            return state.enterprises.byID[l.sellerEnterpriseKey];\r\n          else if (l.sellerBeanKey)\r\n            return state.beans.byID[l.sellerBeanKey];\r\n          else\r\n            return state.law;\r\n        }\r\n        let receipt: IMarketReceipt|undefined;\r\n        switch(action.payload.good){\r\n          case 'food':\r\n            receipt = EconomyTryTransact(state.economy, state.law, bean, 'food', getSeller, 0.5, 3);\r\n            if (receipt?.bought) {\r\n                bean.discrete_food += receipt.bought;\r\n                if (bean.food === 'stuffed'){\r\n                    _emote(bean, state, {emote:'happiness', source: 'Stuffed'});\r\n                    _ifBelievesInMaybeEmote(state, bean, 'Gluttony', 'happiness', 1);\r\n                }\r\n            }\r\n            break;\r\n          case 'shelter':\r\n            receipt = EconomyTryTransact(state.economy, state.law, bean, 'shelter', getSeller);\r\n            if (receipt?.bought) {\r\n                bean.discrete_stamina = 10;\r\n                bean.stamina = 'awake';\r\n            } else if (bean.discrete_stamina <= 0){\r\n                bean.stamina = 'homeless';\r\n            }\r\n            break;\r\n          case 'medicine':\r\n            receipt = EconomyTryTransact(state.economy, state.law, bean, 'medicine', getSeller, 0.5, 3);\r\n            if (receipt?.bought){\r\n                bean.discrete_health += receipt.bought;\r\n                if (bean.health === 'fresh')\r\n                    _emote(bean, state, {emote:'happiness', source: 'Robust'});\r\n            }\r\n            break;\r\n          case 'fun':\r\n            receipt = EconomyTryTransact(state.economy, state.law, bean, 'fun', getSeller);\r\n            if (receipt?.bought) {\r\n                bean.discrete_fun = 1;\r\n                _emote(bean, state, {emote:'happiness', source:'Entertainment'});\r\n                _emote(bean, state, {emote:'happiness', source:'Entertainment'});\r\n            }\r\n            break;\r\n        }\r\n        bean.actionData.buyAttempts = (bean.actionData.buyAttempts || 0) + 1;\r\n        if (receipt){\r\n          WorldSfxInstance.play('cash');\r\n          if (receipt.tax){\r\n            _ifBelievesInMaybeEmote(state, bean, 'Libertarianism', 'unhappiness', LibertarianTaxUnhappyChance);\r\n            _ifBelievesInMaybeEmote(state, bean, 'Progressivism', 'happiness', ProgressivismTaxHappyChance);\r\n          }\r\n          bean.actionData.buyReceipt = receipt;\r\n        }\r\n      },\r\n      addTitle: (state, action: PayloadAction<{}>) => {\r\n        EntityAddToSlice(state.titles, {\r\n          key: 0,\r\n          name: 'Title',\r\n          privileges: []\r\n        })\r\n      },\r\n      editTitle: (state, action: PayloadAction<{newT: ITitle}>) => {\r\n        const oldTitle = state.titles.byID[action.payload.newT.key];\r\n        state.titles.byID[action.payload.newT.key] = action.payload.newT;\r\n        if (oldTitle && oldTitle.badge != action.payload.newT.badge){\r\n          state.beans.allIDs.forEach((x) => {\r\n            if (state.beans.byID[x].titleKey === oldTitle.key)\r\n              state.beans.byID[x].badge = action.payload.newT.badge;\r\n          });\r\n        }\r\n        if (oldTitle && oldTitle.headwear != action.payload.newT.headwear){\r\n          state.beans.allIDs.forEach((x) => {\r\n            if (state.beans.byID[x].titleKey === oldTitle.key)\r\n              state.beans.byID[x].hat = action.payload.newT.headwear;\r\n          });\r\n        }\r\n      },\r\n      manualSave: (state) => {\r\n        GameStorageInstance.SaveGame(state);\r\n      },\r\n      beanSetTitle: (state, action: PayloadAction<{beanKey: number, titleKey: number}>) => {\r\n        const bean = state.beans.byID[action.payload.beanKey];\r\n        bean.titleKey = action.payload.titleKey;\r\n        const title = state.titles.byID[action.payload.titleKey];\r\n        bean.badge = title.badge;\r\n        bean.hat = title.headwear;\r\n      }\r\n    }\r\n  });\r\n\r\n  function _ifBelievesInMaybeEmote(state: IWorldState, bean: IBean, source: TraitBelief, emote: TraitEmote, chance: number){\r\n    if (BeanBelievesIn(bean, source) && Math.random() < chance){\r\n      _emote(bean, state, {emote: emote, source: source});\r\n    }\r\n  }\r\n  function _emote(bean: IBean, state: IWorldState, payload: {emote: TraitEmote, source: string}){\r\n    bean.discrete_sanity = MathClamp(bean.discrete_sanity + EmotionSanity[payload.emote], 0, 10);\r\n    bean.hedonHistory[0][payload.source] = (bean.hedonHistory[0][payload.source] || 0) + EmotionWorth[payload.emote];\r\n    \r\n    const beanPosition = MoverStoreInstance.Get('bean', bean.key).current || OriginAccelerator;\r\n\r\n    const pickup: IPickup = {\r\n        key: state.pickups.nextID++,\r\n        point: {\r\n          x: beanPosition.point.x,\r\n          y: beanPosition.point.y\r\n        },\r\n        type: payload.emote,\r\n        velocity: {x: 0, y: 0}\r\n    };\r\n    state.cities.byID[bean.cityKey].pickupKeys.push(pickup.key);\r\n    state.pickups.byID[pickup.key] = pickup; \r\n    state.pickups.allIDs.push(pickup.key);\r\n    MoverStoreInstance.Get('pickup', pickup.key).publish({\r\n      point: {\r\n        x: beanPosition.point.x,\r\n        y: beanPosition.point.y\r\n      },\r\n      velocity: {x: 0, y: 0}\r\n    });\r\n  }\r\n  \r\n  export const { \r\n    refreshMarket, magnetChange, worldTick, \r\n    remove_ufo, upgradeDistrict,\r\n    newGame, loadGame, build, changeEnterprise, fireBean, upgrade, beam,\r\n    abduct, release, scan, vaporize, pickUpPickup,\r\n    implant, washBelief, washNarrative, washCommunity, washMotive,extractBelief,\r\n    changeState, beanEmote, beanGiveCharity, beanHitDestination, beanWork, beanRelax, beanBuy, beanCrime,\r\n    beanBePersuaded, cheatAdd, manualSave,\r\n    addTitle, editTitle, beanSetTitle,\r\n    enactLaw, repealLaw, setResearch, buyBots, buyEnergy, buyTrait, scrubHedons\r\n  } = worldSlice.actions\r\n  \r\n  export const selectCityBeanIDs = (state: IWorldState, cityKey: number) => state.cities.byID[cityKey].beanKeys;\r\n  export const selectBeans = (state: IWorldState) => state.beans.byID;\r\n  export const selectBeansByCity = createSelector(\r\n    selectCityBeanIDs,\r\n    selectBeans,\r\n    (cityBeanIDs, beansByID) => cityBeanIDs.reduce((all, cityBeanKey) => {\r\n      all.push(beansByID[cityBeanKey])\r\n      return all;\r\n    }, [] as IBean[])\r\n  );\r\n  export const selectCity = (state: IWorldState, cityKey: number) => state.cities.byID[cityKey];\r\n  export const selectBuilding = (state: IWorldState, buildingKey: number) => state.buildings.byID[buildingKey];\r\n  export const selectCityBuildingByHex = (state: IWorldState, cityKey: number, hexKey: string) => {\r\n    const buildingKey = state.cities.byID[cityKey].buildingMap[hexKey];\r\n    if (buildingKey != null)\r\n      return selectBuilding(state, buildingKey);\r\n    else\r\n      return undefined;\r\n  }\r\n  export const selectBuildingKeysByCity = (state: IWorldState, cityKey: number) => {\r\n    return state.cities.byID[cityKey].buildingKeys;\r\n  }\r\n  export const selectBuildingsByCity = (state: IWorldState, cityKey: number) => {\r\n    return selectBuildingKeysByCity(state, cityKey).reduce((x: IBuilding[], id) => {\r\n      x.push(state.buildings.byID[id]);\r\n      return x;\r\n    }, [] as IBuilding[]);\r\n  }\r\n  \r\n  export const selectMajorityEthnicity = createSelector(selectBeansByCity, (cityBeans) => {\r\n    const c = cityBeans.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\r\n        switch(bean.ethnicity){\r\n            case 'circle': count.circle++;break;\r\n            case 'square': count.square++;break;\r\n            case 'triangle': count.triangle++;break;\r\n        }\r\n        return count;\r\n    }, {circle: 0, square: 0, triangle: 0});\r\n    if (c.circle > c.square && c.circle > c.triangle){\r\n      return 'circle';\r\n    } else if (c.square > c.circle && c.square > c.triangle){\r\n      return 'square';\r\n    } else {\r\n      return 'triangle';\r\n    }\r\n  });\r\n  \r\n  export default worldSlice.reducer;\r\n  ","import { IEvent } from '../../events/Events'\r\nimport { DefaultDifficulty } from '../../Game'\r\nimport { IBean } from '../../simulation/Agent'\r\nimport { InsanityTraits } from '../../simulation/Beliefs'\r\nimport { ICity } from '../../simulation/City'\r\nimport { IEconomy } from '../../simulation/Economy'\r\nimport { IBuilding, IDistrict, ILot } from '../../simulation/Geography'\r\nimport { IGovernment, ILaw, LawAxis } from '../../simulation/Government'\r\nimport { IEnterprise } from '../../simulation/Institutions'\r\nimport { MarketTraitListing } from '../../simulation/MarketTraits'\r\nimport { IPickup } from '../../simulation/Pickup'\r\nimport { IPlayerData } from '../../simulation/Player'\r\nimport { IDate, Season } from '../../simulation/Time'\r\nimport { ITitle } from '../../simulation/Titles'\r\nimport { IUFO } from '../../simulation/Ufo'\r\nimport { GenerateCity } from '../../WorldGen'\r\nimport { CreateEmptyEntitySlice, CreateEntitySlice, IEntitySlice } from '../entity.state'\r\n\r\nexport interface IWorldState {\r\n  buildings: IEntitySlice<IBuilding>,\r\n  enterprises: IEntitySlice<IEnterprise>,\r\n  cities: IEntitySlice<ICity>,\r\n  beans: IEntitySlice<IBean>,\r\n  ufos: IEntitySlice<IUFO>,\r\n  events: IEntitySlice<IEvent>,\r\n  pickups: IEntitySlice<IPickup>,\r\n  districts: IEntitySlice<IDistrict>,\r\n  lots: IEntitySlice<ILot>,\r\n  titles: IEntitySlice<ITitle>,\r\n  economy: IEconomy,\r\n  law: IGovernment,\r\n  marketTraitsForSale: MarketTraitListing[],\r\n  date: IDate,\r\n  alien: IPlayerData,\r\n  spotlightEvent: IEvent | undefined,\r\n  insanityEvent: {beanKey: number, newInsanity: InsanityTraits}|undefined,\r\n  /**\r\n   * 1-based ID of save slot (1-3)\r\n   */\r\n  saveSlot: number,\r\n  seed: string\r\n}\r\n\r\nexport function GetBlankWorldState(seed: string = 'abcdef'): IWorldState{\r\n  return {\r\n    buildings: CreateEmptyEntitySlice<IBuilding>(),\r\n    enterprises: CreateEmptyEntitySlice<IEnterprise>(),\r\n    cities: CreateEntitySlice<ICity>([\r\n      GenerateCity()\r\n    ]),\r\n    beans: CreateEmptyEntitySlice<IBean>(),\r\n    ufos: CreateEmptyEntitySlice<IUFO>(),\r\n    events: CreateEmptyEntitySlice<IEvent>(),\r\n    pickups: CreateEmptyEntitySlice<IPickup>(),\r\n    lots: CreateEmptyEntitySlice<ILot>(),\r\n    districts: CreateEmptyEntitySlice<IDistrict>(),\r\n    titles: CreateEmptyEntitySlice<ITitle>(),\r\n    economy: {\r\n      unfulfilledMonthlyDemand: { food: 0, shelter: 0, medicine: 0, fun: 0, },\r\n      monthlyDemand: { food: 0, shelter: 0, medicine: 0, fun: 0, },\r\n      monthlySupply: { food: 0, shelter: 0, medicine: 0, fun: 0, },\r\n      market: {\r\n        listings: {food: [], fun: [], medicine: [], shelter: []}\r\n      }\r\n    },\r\n    law: {\r\n      cash: 0,\r\n      lawTree: {} as {[key in LawAxis]: ILaw|undefined},\r\n      laws: [] as ILaw[],\r\n      ticksSinceLastSale: 0\r\n    },\r\n    date: {year: 1, season: Season.Spring, day: 1, hour: 1},\r\n    marketTraitsForSale: [],\r\n    alien: {\r\n      scanned_bean: {},\r\n      seenBeliefs: {},\r\n      beliefInventory: [],\r\n      speechcrimes: {},\r\n      abductedBeanKeys: [],\r\n      energy: { amount: 16, income: 2/30},\r\n      bots: { amount: 10, income: 2/30},\r\n      hedons: { amount: 0, income: 0},\r\n      // tortrons: { amount: 0, income: 0},\r\n      next_grade: { year: 1, season: 3, day: 1, hour: 0 },\r\n      difficulty: {...DefaultDifficulty},\r\n      goals: ['found_utopia', 'build_house_n_farm',  'beam_3', 'scan', 'brainwash', 'set_policy', 'c+_grade'],\r\n      goalProgress: {},\r\n      pastReportCards: [],\r\n      workingReportCard: {\r\n          Happiness: 'D',\r\n          Prosperity: 'D',\r\n          Stability: 'D',\r\n          Dogma: 'D',\r\n      },\r\n      techProgress: {},\r\n      currentlyResearchingTech: undefined\r\n    },\r\n    spotlightEvent: undefined,\r\n    insanityEvent: undefined,\r\n    saveSlot: 1,\r\n    seed: seed\r\n  }\r\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './state'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { HexPoint } from \"../../simulation/Geography\"\r\n\r\nexport interface ISelectedSlice{\r\n    selectedCityKey: number|undefined;\r\n    selectedBeanKey: number|undefined;\r\n    selectedDistrictKey: number|undefined;\r\n    selectedLotKey: number|undefined;\r\n    selectedBuildingKey: number|undefined;\r\n}\r\nexport const selectedSlice = createSlice({\r\n    name: 'selected',\r\n    initialState: {\r\n        selectedCityKey: undefined,\r\n        selectedBeanKey: undefined\r\n    } as ISelectedSlice,\r\n    reducers: {\r\n      doSelectCity: (state, action: PayloadAction<{cityKey: number}>) => {\r\n        return {\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: undefined,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: undefined,\r\n            selectedLotKey: undefined\r\n        }\r\n      },\r\n      doSelectDistrict: (state, action: PayloadAction<{cityKey: number, district: number}>) => {\r\n        return {\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: undefined,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: action.payload.district,\r\n            selectedLotKey: undefined\r\n        }\r\n      },\r\n      doSelectLot: (state, action: PayloadAction<{cityKey: number, district: number, lot: number}>) => {\r\n        return {\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: undefined,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: action.payload.district,\r\n            selectedLotKey: action.payload.lot\r\n        }\r\n      },\r\n      doSelectBuilding: (state, action: PayloadAction<{cityKey: number, buildingKey: number}>) => {\r\n        return {\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: undefined,\r\n            selectedBuildingKey: action.payload.buildingKey,\r\n            selectedLotKey: undefined,\r\n            selectedDistrictKey: undefined\r\n        }\r\n      },\r\n      doSelectBean: (state, action: PayloadAction<{cityKey: number, beanKey: number}>) => {\r\n        return {\r\n            selectedHexKey: undefined,\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: action.payload.beanKey,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: undefined,\r\n            selectedLotKey: undefined\r\n        }\r\n      },\r\n      doSelectNone: (state) => {\r\n        return {\r\n            selectedBeanKey: undefined, \r\n            selectedCityKey: undefined,\r\n            selectedHexKey: undefined,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: undefined,\r\n            selectedLotKey: undefined\r\n        }\r\n      },\r\n    }\r\n  })\r\n  \r\n  export const { doSelectDistrict, doSelectNone, doSelectBean, doSelectCity, doSelectBuilding, doSelectLot  } = selectedSlice.actions;","import { combineReducers, configureStore, createSelector, getDefaultMiddleware, Middleware } from '@reduxjs/toolkit';\r\nimport { GameStorageInstance } from '../GameStorage';\r\nimport { ISelectedSlice, selectedSlice } from './features/selected.reducer';\r\nimport { IWorldState } from './features/world';\r\nimport { selectBeans, worldSlice } from './features/world.reducer';\r\n\r\n// export type RootState = ReturnType<typeof store.getState>;\r\nexport type RootState = {\r\n  world: IWorldState,\r\n  selected: ISelectedSlice\r\n};\r\nexport const autosaveSignalMiddleware: Middleware<\r\n  {}, // Most middleware do not modify the dispatch return value\r\n  RootState\r\n> = storeApi => next => action => {\r\n  \r\n  switch (action.type){\r\n    case 'world/magnetChange':\r\n      break;\r\n    default:\r\n      if (!action.type.startsWith('selected')){\r\n        GameStorageInstance.Dirty.publish(true);\r\n      }\r\n  }\r\n  \r\n  return next(action)\r\n}\r\nexport const store = configureStore({\r\n  reducer: {\r\n    world: worldSlice.reducer,\r\n    selected: selectedSlice.reducer\r\n  },\r\n  middleware: getDefaultMiddleware().concat([autosaveSignalMiddleware])\r\n})\r\n\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const selectBeanById = (state: RootState, beanKey: number) => state.world.beans.byID[beanKey];\r\nexport const selectCityById = (state: RootState, cityKey: number) => state.world.cities.byID[cityKey];\r\nexport const selectSelectedCity = (state: RootState) => {\r\n  return state.selected.selectedCityKey != null ? state.world.cities.byID[state.selected.selectedCityKey] : undefined;\r\n}\r\nexport const selectSelectedBean = (state: RootState) => {\r\n  return state.selected.selectedBeanKey != null ? state.world.beans.byID[state.selected.selectedBeanKey] : undefined;\r\n}\r\nexport const selectSelectedBuilding = (state: RootState) => {\r\n  const city = state.selected.selectedCityKey != null && state.world.cities.byID[state.selected.selectedCityKey];\r\n  if (city && state.selected.selectedLotKey != null)\r\n  {\r\n    const buildingID = state.world.lots.byID[state.selected.selectedLotKey].buildingKey;\r\n    if (buildingID != null)\r\n      return state.world.buildings.byID[buildingID];\r\n  }\r\n  return undefined;\r\n}\r\nexport const selectEventIDs = (state: RootState) => {\r\n  return state.world.events.allIDs;\r\n};","import React from \"react\";\r\n\r\nexport class ConfirmButton extends React.Component<{\r\n    confirmText: string,\r\n    onConfirm: () => void,\r\n    disabled?: boolean,\r\n    className?: string\r\n}, {\r\n    confirming: boolean\r\n}> {\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {\r\n            confirming: false\r\n        }\r\n    }\r\n    click(){\r\n        if (this.state.confirming){\r\n            this.props.onConfirm();\r\n            this.setState({confirming: false});\r\n        } else {\r\n            this.setState({confirming: true});\r\n        }\r\n    }\r\n    render(){\r\n        return <button className={this.props.className} onClick={() => this.click()} disabled={this.props.disabled}>\r\n            { this.state.confirming ? this.props.confirmText : this.props.children}\r\n        </button>\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\n\r\nexport interface StringDropdownPS{\r\n    options: Array<string>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any,\r\n    titleCase?: boolean\r\n}\r\ninterface StringDropdownS{\r\n    key: any;\r\n}\r\n\r\nexport class StringDropdown extends React.Component<StringDropdownPS, StringDropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n        this.setState({key: e.target.value})\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    protected getTextForOption(data: string): string{\r\n        if (this.props.titleCase){\r\n            data = data[0].toUpperCase()+data.slice(1);\r\n        }\r\n        return data;\r\n    }\r\n    options(){\r\n        return this.props.options.map((str) => {\r\n            return <option value={str} key={str} title={this.getTitleForOption(str)}>\r\n                {this.getTextForOption(str)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: string): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\n","import React, { ReactElement } from \"react\";\r\nimport { BeliefsAll, IBeliefData, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { StringDropdown } from \"../widgets/StringDropdown\";\r\nimport { TraitIcon } from \"../World\";\r\nimport './beliefs.css';\r\n\r\n\r\n\r\nexport const BeliefWidget: React.FC<{\r\n    data: IBeliefData,\r\n    cost?: number,\r\n    leftButton?: ReactElement,\r\n    titleView: ReactElement,\r\n    bottomView: ReactElement\r\n}> = (props) => {\r\n    return <div className=\"belief\">\r\n        <div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {props.data.icon}\r\n                </div>\r\n                {\r\n                    props.leftButton\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    {\r\n                        props.titleView\r\n                    }\r\n                    {\r\n                        props.cost ? \r\n                        <span className=\"pull-r\">{props.cost}🧠</span>\r\n                        : null\r\n                    }\r\n                </div>\r\n                {\r\n                props.data.description ? props.data.description.split(';').map((x, i) => \r\n                    <small className=\"marg-b-6\" key={i}> {x}\r\n                    </small>\r\n                    ) : null\r\n                }\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                       props.bottomView\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const EditBeliefInput: React.FC<{\r\n    data: IBeliefData,\r\n    frozen?: boolean,\r\n    divergent?: boolean,\r\n    available: number,\r\n    cost: number,\r\n    wash: () => void,\r\n    extract: () => void,\r\n}> = (props) => {\r\n    return <div className=\"belief\">\r\n        <div className=\"horizontal edit badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {props.data.icon}\r\n                </div>\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    <strong title={props.data.description} className={props.divergent ? 'divergent marg-r-6': 'marg-r-6'}>\r\n                        {props.data.noun}\r\n                    </strong>\r\n                    <span className=\"pull-r\">{props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{props.data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"horizontal\">\r\n            {\r\n                props.frozen ? null : <ConfirmButton className=\"callout pad-4 marg-0\"\r\n                    confirmText={'-'+props.cost.toString()+'🧠?'} disabled={props.available < props.cost} onConfirm={props.wash}>\r\n                🚿 <small>Wash Out</small>\r\n                </ConfirmButton>\r\n            }\r\n            {\r\n                <ConfirmButton className=\"callout pad-4 marg-0\"\r\n                    confirmText={'-'+props.cost.toString()+'🧠?'} disabled={props.available < props.cost} onConfirm={props.extract}>\r\n                💎 <small>Copy to Gem</small>\r\n                </ConfirmButton>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst SortedBeliefs = BeliefsAll.slice().sort((a, b) => a.localeCompare(b));\r\nexport class AddBeliefInput extends React.Component<{\r\n    available: number,\r\n    cost: number,\r\n    add: (b: TraitBelief) => void\r\n}, {\r\n    belief: TraitBelief,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            belief: 'Neuroticism'\r\n        }\r\n    }\r\n    render(){\r\n        const data = SecondaryBeliefData[this.state.belief]\r\n        return <div className=\"belief\"><div className=\"horizontal badger add\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {data.icon}\r\n                </div>\r\n                <ConfirmButton className=\"callout grow-0 pad-4 marg-0\" disabled={this.props.available < this.props.cost} \r\n                    confirmText={'-'+this.props.cost.toString()+'🧠?'} onConfirm={() => this.props.add(this.state.belief)}>\r\n                    💉 <small>Implant</small>\r\n                </ConfirmButton>\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">                    \r\n                    <StringDropdown titleCase={true}\r\n                    options={SortedBeliefs} \r\n                    value={this.state.belief}\r\n                    onChange={(a: string) => {\r\n                        this.setState({belief: a as TraitBelief})\r\n                    }}\r\n                    ></StringDropdown>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        (data.idealPro || []).map((x) => <span className=\"pos badge align-mid\" key={x}>+{TraitIcon[x]}</span>)\r\n                    }\r\n                    {\r\n                        (data.idealCon || []).map((x) => <span className=\"neg badge align-mid\" key={x}>-{TraitIcon[x]}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}","import React from \"react\";\r\nimport { BeanBelievesIn, BeanGetFace } from \"../simulation/Bean\";\r\nimport { NarrativeBeliefData, SecondaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { HasResearched } from \"../simulation/Player\";\r\nimport { extractBelief, implant, washBelief, washNarrative } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { selectSelectedBean } from \"../state/state\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { EmoteIcon } from \"../World\";\r\nimport { BeliefWidget, EditBeliefInput } from \"./BeliefRow\";\r\nimport './modals.css';\r\n\r\nexport const TraitInventoryList: React.FC<{\r\n    dogmatic: boolean,\r\n    beanKey: number\r\n}> = (props) => {\r\n    const beliefInventory = useAppSelector(x => x.world.alien.beliefInventory);\r\n    const dispatch = useAppDispatch();\r\n    return <>\r\n        {beliefInventory.map((x) => <BeliefWidget \r\n        key={x.trait} data={SecondaryBeliefData[x.trait]} titleView={<strong>{SecondaryBeliefData[x.trait].noun}</strong>}\r\n        leftButton={\r\n            <ConfirmButton onConfirm={() => dispatch(implant({beanKey: props.beanKey, trait: x.trait}))} className=\"callout marg-0\" confirmText=\"-1 🧠?\" disabled={x.gems < 1 || props.dogmatic}>\r\n                Implant\r\n            </ConfirmButton>\r\n        }\r\n        bottomView={<span><span className=\"trait-gem\"></span>x{x.gems}</span>}>\r\n        </BeliefWidget>)}\r\n    </>\r\n};\r\n\r\nexport const BrainwashingContent: React.FC<{\r\n}> = () => {\r\n    const bean = useAppSelector(selectSelectedBean);\r\n    const isScanned = useAppSelector(s => bean?.key != null && s.world.alien.scanned_bean[bean.key]);\r\n    const difficulty = useAppSelector(s => s.world.alien.difficulty);\r\n    const techProgress = useAppSelector(s => s.world.alien.techProgress);\r\n    const dispatch = useAppDispatch();\r\n    const sanityCostBonus = HasResearched(techProgress, 'sanity_bonus') ? -1 : 0;\r\n    if (bean == null) return <div></div>;\r\n    const dogmatic = BeanBelievesIn(bean, 'Dogmatism');\r\n    const brains = [];\r\n    for (let i = 1; i < 11; i++) {\r\n        brains.push(bean.discrete_sanity >= i ? '🧠': '😵');\r\n    }\r\n    return <div>\r\n        <div className=\"horizontal fancy-header\">\r\n            <div>\r\n            🧠🚿 BRAINWASH\r\n            </div>\r\n            <div>\r\n                <strong>{BeanGetFace(bean)} {bean.name}</strong>\r\n            </div>\r\n            <div>\r\n                <table className=\"trait-measure\">\r\n                    <tbody>\r\n                    <tr>\r\n                        {\r\n                            brains.map((x, i) => <td key={i} className={x === '😵' ? 'grey' : ''}>{x}</td>)\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan={2} className=\"set-1\"><small>Psychotic</small></td>\r\n                        <td colSpan={2} className=\"set-2\"><small>Disturbed</small></td>\r\n                        <td colSpan={3} className=\"set-3\"><small>Stressed</small></td>\r\n                        <td colSpan={3} className=\"set-4\"><small>Sane</small></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <p className=\"pad-4p text-center\">\r\n            {\r\n                bean.sanity != 'sane' ?\r\n                    <small>Low sanity 🧠 causes {EmoteIcon['unhappiness']}! Negative sanity 🧠 causes extremely negative traits!</small>\r\n                : null\r\n            }\r\n        </p>\r\n        <div style={{clear: 'both'}}>\r\n            {\r\n                dogmatic ? <div className=\"text-center\">\r\n                    🐶 Dogmatic subjects cannot change their minds\r\n                </div> : null\r\n            }\r\n            { isScanned ? <div className=\"horizontal scroll\">\r\n                {/* <EditBeliefInput\r\n                    available={bean.discrete_sanity} frozen={dogmatic}\r\n                    wash={() => this.props.washCommunity(bean, bean.community)} \r\n                    cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                    data={PrimaryBeliefData[bean.community]}\r\n                ></EditBeliefInput>\r\n                <EditBeliefInput\r\n                    available={bean.discrete_sanity}  frozen={dogmatic}\r\n                    wash={() => this.props.washMotive(bean, bean.ideals)} \r\n                    cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                    data={PrimaryBeliefData[bean.ideals]}\r\n                ></EditBeliefInput> */}\r\n                <EditBeliefInput\r\n                    available={bean.discrete_sanity} frozen={dogmatic}\r\n                    wash={() => dispatch(washNarrative({beanKey: bean.key, faith:bean.faith}))} \r\n                    extract={() => {\r\n                        \r\n                    }} \r\n                    cost={difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                    data={NarrativeBeliefData[bean.faith]}\r\n                ></EditBeliefInput>\r\n                {/* IsBeliefDivergent(b, this.props.world.party.ideals, this.props.world.party.community) */}\r\n                {\r\n                    bean.beliefs.map((b) => <EditBeliefInput key={b}\r\n                    available={bean.discrete_sanity} frozen={dogmatic && b != 'Dogmatism'}\r\n                    divergent={false}\r\n                    wash={() => dispatch(washBelief({beanKey: bean.key, trait: b}))} \r\n                    extract={() => dispatch(extractBelief({beanKey: bean.key, trait: b}))} \r\n                        cost={(difficulty.cost.bean_brain.brainwash_secondary.sanity || 0) + sanityCostBonus}\r\n                        data={SecondaryBeliefData[b]}\r\n                    >\r\n                    </EditBeliefInput>)\r\n                }\r\n                {/* {\r\n                    dogmatic ? null : <AddBeliefInput\r\n                        available={bean.discrete_sanity}\r\n                        add={(b) => this.props.implantBelief(bean, b)} \r\n                        cost={this.props.world.alien.difficulty.cost.bean_brain.brainimplant_secondary.sanity || 0}\r\n                    ></AddBeliefInput>\r\n                } */}\r\n            </div> : <div className=\"text-center\">🛰️ Scan this subject to reveal its Traits! </div>}\r\n            <h3 className=\"pad-4p\">\r\n                <span className=\"trait-gem\"></span> Trait Gems\r\n            </h3>\r\n            <div className=\"horizontal scroll\">\r\n                <TraitInventoryList beanKey={bean.key}\r\n                    dogmatic={dogmatic}></TraitInventoryList>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\n\r\nexport const Subtabs: React.FC<{\r\n    additionalClasses?: string,\r\n    active: string,\r\n    options: {icon: string, value: string, text: string, onClick: () => void}[]    \r\n}> = (props) => {\r\n\r\n    return <div className={'horizontal blue-orange cylinder f-size-125em marg-t-20'+(props.additionalClasses||'')}>\r\n        {\r\n            props.options.map((x) => <button type=\"button\" key={x.value} onClick={() => x.onClick()}  className={props.active === x.value ? 'active': ''}>\r\n                {x.icon} {x.text}\r\n            </button>)\r\n        }\r\n    </div>\r\n}","\r\nexport type TitleHeadwear = '👑'|'👒'|'🎩'|'🎓'|'🧢';\r\nexport type TitleBadge = '⭐'|'🛡️'|'⚖️'|'📋'|'🏅'|'🎀'|'🌸';\r\nexport type TitlePrivilege = 'social_deference'|'criminal_immunity'|'tax_exemption'|'hereditary'|'gentility';\r\nexport const PrivilegeData = {\r\n    social_deference: {\r\n        description: '🎲 that nearby subjects emit 💢; 🎲 that this subject gains 👍'\r\n    },\r\n    criminal_immunity: {\r\n        description: 'This subject will never be penalized due to crime.'\r\n    }, \r\n    tax_exemption: {\r\n        description: 'This subject will never pay taxes.'\r\n    }, \r\n    hereditary: {\r\n        description: 'Children of this subject automatically gain this title.'\r\n    }, \r\n    gentility: {\r\n        description: 'This subject will not work but will still be paid.'\r\n    }\r\n};\r\n\r\nexport interface ITitle{\r\n    key: number;\r\n    name: string;\r\n    headwear?: TitleHeadwear;\r\n    badge?: TitleBadge;\r\n    privileges: Array<TitlePrivilege|undefined>;\r\n}","import React, { useState } from \"react\";\r\nimport { Subtabs } from \"../chrome/Subtab\";\r\nimport { ITitle, TitleBadge, TitleHeadwear, TitlePrivilege, PrivilegeData } from \"../simulation/Titles\";\r\nimport { addTitle, editTitle } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\n\r\nexport const SocietyPanel: React.FC<{\r\n\r\n}> = (props) => {\r\n    const titles = useAppSelector(s => s.world.titles.allIDs.reduce( (all, id)=>{all.push(s.world.titles.byID[id]); return all;}, [] as ITitle[]));\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"pad-4p\">\r\n        <Subtabs active={'titles'} options={[{icon: '👑',text:'Titles',value:'titles',onClick:() => {}},{icon:'🔖',text:'Names',value:'names',onClick:() => {}}]}></Subtabs>\r\n        {/* <div className=\"subheader\">\r\n            <h3>Other</h3>\r\n        </div>\r\n        <div>\r\n\r\n        </div> */}\r\n        <div className=\"subheader\">\r\n            <h2>\r\n                Titles\r\n                <button \r\n                    className=\"callout marg-0 pull-r\"\r\n                    onClick={() => {\r\n                        dispatch(addTitle({}));\r\n                    }}\r\n                >➕ Title</button>\r\n            </h2>\r\n        </div>\r\n        <div className=\"title-row\">\r\n            {\r\n                titles.map(y => <TitleEdit key={y.key} title={y} onEdit={(t) => {\r\n                    dispatch(editTitle({newT: t}))\r\n                }}></TitleEdit>)\r\n            }\r\n        </div>\r\n      </div>\r\n}\r\n\r\n\r\nexport const TitleEdit: React.FC<{\r\n    title: ITitle,\r\n    onEdit: (newT: ITitle) => void\r\n}> = (props) => {\r\n    return <div className=\"title-box\">\r\n        <div>\r\n            <label>\r\n                Title:&nbsp;\r\n                <input type=\"text\" value={props.title.name} onChange={(ev) => props.onEdit({...props.title, name: ev.target.value})} />\r\n            </label>\r\n        </div>\r\n        <div>\r\n            <label>\r\n                Headwear:&nbsp;\r\n                <select value={props.title.headwear} onChange={(e) => props.onEdit({\r\n                    ...props.title,\r\n                    headwear: e.target.value as TitleHeadwear\r\n                })}>\r\n                    <option value={undefined}>None</option>\r\n                    <option value='👑'>👑</option>\r\n                    <option value='👒'>👒</option>\r\n                    <option value='🎩'>🎩</option>\r\n                    <option value='🎓'>🎓</option>\r\n                    <option value='🧢'>🧢</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                &nbsp;Badge:&nbsp;\r\n                <select value={props.title.badge} onChange={(e) => props.onEdit({\r\n                    ...props.title,\r\n                    badge: e.target.value as TitleBadge\r\n                })}>\r\n                    <option value={undefined}>None</option>\r\n                    <option value='⭐'>⭐</option>\r\n                    <option value='🛡️'>🛡️</option>\r\n                    <option value='⚖️'>⚖️</option>\r\n                    <option value='📋'>📋</option>\r\n                    <option value='🏅'>🏅</option>\r\n                    <option value='🎀'>🎀</option>\r\n                    <option value='🌸'>🌸</option>\r\n                </select>\r\n            </label>\r\n        </div>\r\n        <h3>\r\n            Privileges\r\n            <button \r\n                className=\"callout marg-0 pull-r\"\r\n                onClick={() => {\r\n                    const c = props.title.privileges.slice();\r\n                    c.push(undefined);\r\n                    props.onEdit({...props.title, privileges: c})\r\n                }}\r\n            >➕ Privilege</button>\r\n        </h3>\r\n        {\r\n            props.title.privileges.map((p,i) => <div key={p}>\r\n                <select key={i} value={p} onChange={(ev) => {\r\n                    const newArray = props.title.privileges.slice();\r\n                    if (ev.target.value === 'None'){\r\n                        newArray.splice(i, 1);\r\n                    } else {\r\n                        newArray.splice(i, 1, ev.target.value as TitlePrivilege);\r\n                    }\r\n                    props.onEdit({...props.title, privileges: newArray})\r\n                }}>\r\n                    <option value={undefined}>None</option>\r\n                    <option value={'social_deference'}>Social Deference</option>\r\n                    <option value={'criminal_immunity'}>Criminal Immunity</option>\r\n                    <option value={'tax_exemption'}>Tax Exemption</option>\r\n                    <option value={'hereditary'}>Hereditary</option>\r\n                    <option value={'gentility'}>Gentility</option>\r\n                </select>\r\n                {\r\n                    (p != null && PrivilegeData[p]) ? <div>{PrivilegeData[p].description}</div> : null\r\n                }\r\n            </div>)\r\n        }\r\n    </div>\r\n}","import { BuildingTypes } from \"../simulation/Geography\";\r\nimport { Trait } from \"../World\";\r\n\r\nexport const keyToName: { [key in Trait | BuildingTypes]: string } = {\r\n    state: 'Collectivist', ego: 'Independent',\r\n    trad: 'Elitist', prog: 'Progressive',\r\n    circle: 'Brunette', square: 'Blonde', triangle: 'Redhead',\r\n    rocket: 'Futuristic', dragon: 'Mythical', music: 'Dramatic', noFaith: 'Nihilistic',\r\n    starving: 'Starving', hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\r\n    homeless: 'Homeless', sleepy: 'Sleepy', awake: 'Awake', rested: 'Rested',\r\n    sick: 'Sick', sickly: 'Sickly', bruised: 'Bruised', fresh: 'Robust',\r\n    sane: 'Sane', stressed: 'Confused', disturbed: 'Disturbed', 'psychotic': 'Psychotic',\r\n    house: 'House', hospital: 'Hospital', farm: 'Farm', theater: 'Theater', church: 'Church', courthouse: 'Courthouse', park: 'Park', nature: 'Elysian Scenery'\r\n  };","import React from \"react\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../i18n/text\";\r\nimport { IBean } from \"../simulation/Agent\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: IBean[], \r\n    need: (b: IBean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport { TraitJob } from \"../World\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { GetCostOfLiving, IListing } from \"../simulation/Economy\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { selectBeansByCity } from \"../state/features/world.reducer\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport const EconomyReport: React.FC<{}> = () => {\r\n    const beans = useAppSelector(s => selectBeansByCity(s.world, 0));\r\n    const economy = useAppSelector(s => s.world.economy);\r\n    const food_median = median(beans.map(x => x.discrete_food));\r\n    const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n    const shelter_median = median(beans.map(x => x.discrete_stamina)).toFixed(1);\r\n    const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n    const wealth_avg = wealth_total / (beans.length || 1);\r\n    const wealth_median = median(beans.map(x => x.cash));\r\n    const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n    const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n    const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n    const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n    const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n    const jobs = beans.reduce((obj, b) => {\r\n      obj[b.job] = (obj[b.job] || 0)+1;\r\n      return obj;\r\n    }, {} as {[key in TraitJob]: number});\r\n    const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n    function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: IListing){\r\n      obj.supply += l.quantity;\r\n      obj.price += l.price;\r\n      obj.count++;\r\n      obj.avg = obj.price / obj.count;\r\n      return obj;\r\n    }\r\n    const food = economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n    const meds = economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n    const houses = economy.market.listings['shelter'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n    return (\r\n      <div>\r\n        <div className=\"pad-4p\">\r\n          <h2>State of the Utopia</h2>\r\n        </div>\r\n        {/* <div className=\"pad-4p\">\r\n          <h3>Subject's Health</h3>\r\n        </div> */}\r\n        <div className=\"col-2\">\r\n          <div>\r\n            <strong>🍞 Food Security</strong>\r\n            <NeedReadout beans={beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n            <table className=\"width-100p\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Median {food_median.toFixed(1)} 🍞</td>\r\n                  <td className=\"text-center\">\r\n                    Supply: {food.supply} 🍞 @ ${food.avg.toFixed(2)}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    Deficit: {economy.unfulfilledMonthlyDemand.food} 🍞\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div>\r\n            <strong>🩺 Healthcare</strong>\r\n            <NeedReadout beans={beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n            <table className=\"width-100p\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Median {health_median} 🩺</td>\r\n                  <td className=\"text-center\">\r\n                    Supply: {meds.supply} 🩺 @ ${meds.avg.toFixed(2)}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    Deficit: {economy.unfulfilledMonthlyDemand.medicine} 🩺\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <div>\r\n            <strong>🏡 Housing</strong> <br/>\r\n            <NeedReadout beans={beans} need={(b) => b.stamina} dire=\"homeless\" abundant=\"rested\" className=\"big\"></NeedReadout>\r\n            <table className=\"width-100p\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Median {shelter_median} 🏡</td>\r\n                  <td className=\"text-center\">\r\n                    Supply: {houses.supply} 🏡 @ ${houses.avg.toFixed(2)}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    Deficit: {economy.unfulfilledMonthlyDemand.shelter} 🏡\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"pad-4p\">\r\n          <h3>Economic Health</h3>\r\n        </div> */}\r\n        <div className=\"col-2\">\r\n          <div>\r\n            <strong>💰 Wealth</strong> <br/>\r\n            {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${GetCostOfLiving(economy).toFixed(2)} <br/>\r\n            <table className=\"width-100p\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Total ${wealth_total.toFixed(2)}</td>\r\n                  <td className=\"text-center\">\r\n                    Median: ${wealth_median.toFixed(2)} \r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    Avg: ${wealth_avg.toFixed(2)}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            Top {wealthy_percentage.toFixed(1)}% of subjects own {wealthy_ownership.toFixed(1)}% of the wealth\r\n          </div>\r\n          <span>\r\n            <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n            <ul className=\"boxes\">\r\n              <li>{jobs.farmer || 0} farmers</li>\r\n              <li>{jobs.builder || 0} builders</li>\r\n              <li>{jobs.doc || 0} doctors</li>\r\n              <li>{jobs.entertainer || 0} entertainers</li>\r\n            </ul>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }","import React from 'react';\r\n\r\nexport const EscapeMenu: React.FC<{}> = (props) => {\r\n    return <div>\r\n        \r\n    </div>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\n\r\n\r\nexport const TreasuryReport: React.FC<{\r\n\r\n}> = (props) => {\r\n    const coin = useAppSelector(s => s.world.law.cash);\r\n\r\n    return <div className=\"pad-4p\">\r\n        <div>\r\n            <strong>💰 Treasury: {coin.toFixed(2)}</strong>\r\n        </div>\r\n    </div>\r\n}","import React, { useState } from \"react\";\r\nimport { SecondaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { IsLaw, LawData, LawGroup, LawKey, PlayerCanSeePrereqs, PlayerKnowsPrereq, PlayerMeetsPrereqs, PrereqKey, PrereqString } from \"../simulation/Government\";\r\nimport { BeliefInventory } from \"../simulation/Player\";\r\nimport { enactLaw, repealLaw } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { TreasuryReport } from \"../widgets/TreasuryReport\";\r\n\r\nexport const GovernmentPanel: React.FC<{\r\n}> = (props) => {\r\n    const [view, setView] = useState<LawGroup|'funds'>('Welfare');\r\n    return <div>\r\n        <div className=\"col-2\">\r\n            <h2 className=\"marg-b-0\">Utopia Government</h2>\r\n            <div>\r\n                <div className=\"horizontal blue-orange cylinder f-size-125em marg-t-20\">\r\n                    <button type=\"button\" onClick={() => setView('Welfare')} className={view === 'Welfare' ? 'active' : ''}>\r\n                        🤲 Welfare\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setView('Crime')} className={view === 'Crime' ? 'active' : ''}>\r\n                        🚨 Crime\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setView('Taxation')} className={view === 'Taxation' ? 'active' : ''}>\r\n                        💰 Taxes\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setView('funds')} className={view === 'funds' ? 'active' : ''}>\r\n                        💸 Funds\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {\r\n            view === 'funds' ? <div className=\"col-2\">\r\n                <div>\r\n                    <TreasuryReport></TreasuryReport>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </div> : <LawDetailList \r\n                group={view}\r\n            ></LawDetailList>\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport const LawDetailList: React.FC<{\r\n    group: LawGroup\r\n}> = (props) => {\r\n    const laws = Object.values(LawData).filter(x => x.group === props.group);\r\n    const seenBeliefs = useAppSelector(s => s.world.alien.seenBeliefs);\r\n    const beliefs = useAppSelector(s => s.world.alien.beliefInventory);\r\n    const law = useAppSelector(s => s.world.law);\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"pad-4p\">\r\n        <strong>{props.group} Laws</strong>\r\n        <div className=\"horizontal scroll\">\r\n        {\r\n            laws.map((x) => <LawFormula seenBeliefs={seenBeliefs} id={x.key} beliefs={beliefs} key={x.key} enacted={IsLaw(law, x.key)}\r\n                enactLaw={(lKey) => dispatch(enactLaw({lawKey: lKey}))} revokeLaw={(l) => dispatch(repealLaw({lawKey: l}))}>\r\n            </LawFormula>)\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport const LawFormula: React.FC<{\r\n    id: LawKey,\r\n    seenBeliefs: {[belief: string]: boolean},\r\n    beliefs: BeliefInventory[],\r\n    enacted: boolean,\r\n    enactLaw: (l: LawKey) => void\r\n    revokeLaw: (l: LawKey) => void\r\n}> = (props) => {\r\n    const law = LawData[props.id];\r\n    const canSeeName = PlayerCanSeePrereqs(law.prereqs, props.seenBeliefs);\r\n    const unlocked = PlayerMeetsPrereqs(law.prereqs, props.seenBeliefs);\r\n    return <div className=\"vertical law-formula\">\r\n        <div className=\"horizontal\">\r\n            <div className=\"circular\">\r\n                {canSeeName ? law.icon : '❔'}\r\n            </div>\r\n            <div>\r\n                <strong>\r\n                    {canSeeName ? law.name : 'Unknown'}\r\n                </strong>\r\n                <div>\r\n                    {\r\n                        canSeeName ? <small> {law.description} </small> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"vertical\">\r\n            {\r\n                law.prereqs.map((x) => {\r\n                    const has = PlayerKnowsPrereq(x, props.seenBeliefs);\r\n                    const key = PrereqKey(x);\r\n                    return !has ? <span className=\"law-formula-ingredient unknown\" key={key}>\r\n                        ❔ Unknown\r\n                    </span> : <span className=\"law-formula-ingredient\" key={key}>\r\n                        {PrereqString(x)}\r\n                    </span>\r\n                })\r\n            }\r\n        </div>\r\n        {\r\n            props.enacted ? <button className=\"callout\"  onClick={() => props.revokeLaw(props.id)}>\r\n                🗑️&nbsp;Revoke Active Law\r\n            </button> : <button className=\"callout\" disabled={!unlocked} onClick={() => props.enactLaw(props.id)}>\r\n                {\r\n                    unlocked ? '✒️' : <span className=\"grey\">🔒</span>\r\n                }\r\n                &nbsp;Enact\r\n            </button>\r\n        }\r\n        {props.children}\r\n    </div>;\r\n}","import React from 'react';\r\nimport { EmoteIcon } from '../World';\r\n\r\nexport const GreetingPanel: React.FC<{\r\n    seed: string,\r\n    changeSeed: (s: string) => void\r\n}> = (props) => {\r\n    return <div>\r\n        <div className=\"col-2\">\r\n            <div>\r\n                <h3>Welcome to the</h3>\r\n                <h2>👽 Alien 🌍 Utopia 🔬 Laboratory</h2>\r\n                <div>\r\n                    Thank you for joining the <select><option>Human</option></select> Cultivation Division of the <strong>🌌&nbsp;Galactic Xenosensation Federation!</strong> Interdimensional petri dish <span style={{whiteSpace:'nowrap'}}>#<input type=\"text\" value={props.seed} onChange={(e) => props.changeSeed(e.currentTarget.value)} maxLength={19} style={{width:'115px', fontFamily:'monospace', fontSize:'11px'}} /></span> is ready for farming.\r\n                </div>\r\n                <p>\r\n                    As a <select><option>Human Emotion Farmer</option></select>, you are required to execute the following duties:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        Construct <strong>🏠 Buildings</strong> for your <select><option>Human</option></select> subjects.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🛸 Beam In</strong> <select><option>Human</option></select> subjects for cultivation.\r\n                    </li>\r\n                    <li>\r\n                        Harvest your subject's positive <strong>{EmoteIcon['happiness']} Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Sell the Hedons on the <br/><strong>🌌 Galactic 😨 Emotion 💰 Market</strong>.\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p>\r\n                    The GXF's records indicate <select><option>Humans</option></select> are a<br/><u>mentally malleable</u> and <u>physically fragile</u> species. Try the following cultivation methods:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <strong>🛰️ Scan</strong> your subject's primitive minds for information on what pleases them.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🚿 Brainwash</strong> subjects to change their <strong>🧠&nbsp;Traits</strong>. Try to add Traits that emit more <strong>{EmoteIcon['happiness']}&nbsp;Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Avoid letting your subjects die or endure pain; this makes <strong>{EmoteIcon['unhappiness']}&nbsp;Antihedons</strong> which are less profitable.\r\n                    </li>\r\n                    <li>\r\n                        Use your knowledge of Traits to modify the farm's <strong>🗳️&nbsp;Government</strong> to maximize Hedon generation.\r\n                    </li>\r\n                    <li>\r\n                        Use the GXF's <strong>🧪 Research Lab</strong> to upgrade your farm, when stocked with <strong>👾 Abducted</strong> subjects.\r\n                    </li>\r\n                </ul>\r\n                <h3>\r\n                    🌌 Galactic Xenosensation Federation <br/>\r\n                    <div className=\"text-right\">\r\n                        <small>\r\n                        {/* <i>THE market leader in corporeal sensations.</i> */}\r\n                        <i>1 trillion sensations. 100% organic. 100% gourmet.</i>\r\n                        </small>\r\n                    </div>\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\n\r\nexport const LoadGameMenu: React.FC<{}> = (props) => {\r\n    return <div>\r\n        \r\n    </div>\r\n}","import React, { useState } from 'react';\r\nimport { GameStorageInstance } from '../GameStorage';\r\n\r\nexport const MainMenu: React.FC<{\r\n    startGame: () => void,\r\n    loadGame: (slot:number) => void\r\n}> = (props) => {\r\n    const [view, setView] = useState<'main'|'showslots'>('main');\r\n    const continueID = GameStorageInstance.HasContinueGame();\r\n    const slots = GameStorageInstance.GetGameSlots();\r\n    return <div>\r\n        <h1 className=\"text-center\">👽 Alien 🌍 Utopia 🔬 Lab</h1>\r\n        {\r\n            (view === 'main') ? <div>\r\n                {\r\n                    continueID != null ? <div className=\"text-center\">\r\n                        <button className=\"callout button f-size-15em\" onClick={() => props.loadGame(continueID)}>\r\n                        🧫 Continue Game\r\n                        </button>\r\n                    </div>: null\r\n                }\r\n                <div className=\"text-center\">\r\n                    <button className=\"callout button f-size-15em\" onClick={() => props.startGame()}>\r\n                    🛸 Start New Game\r\n                    </button>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"callout button f-size-15em\" onClick={() => setView('showslots')} disabled={slots.every(x => x.brief == null)}>\r\n                    🗂️ Load Game\r\n                    </button>\r\n                </div>\r\n            </div> : <div className=\"card-parent vertical load-menu pad-4p\">\r\n                {\r\n                    slots.map(x => <div key={x.id} className=\"card marg-b-20\">\r\n                        <button disabled={x.brief == null} className=\"\" onClick={() => {\r\n                            if (x.brief)\r\n                                props.loadGame(x.id);\r\n                        }}>\r\n                        {\r\n                            x.brief ? <span className=\"f-size-125em\">\r\n                                <strong>{x.brief.Name}</strong>\r\n                                &nbsp;<span>Year {x.brief.Age.year}</span>\r\n                                &nbsp;<span>{x.brief.Population} 😐</span>\r\n                            </span> : <span className=\"f-size-125em\">\r\n                                Slot {x.id}\r\n                            </span> \r\n                        }\r\n                        </button>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nexport class RobotArm extends React.Component<{\r\n    tool: string,\r\n    classN: string\r\n}, {\r\n\r\n}> {\r\n    render(){\r\n        const style = {};\r\n        return <svg width=\"100\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\" style={style} className={this.props.classN+\" robot-arm\"}>\r\n        <g>\r\n         <title>robotarm</title>\r\n         <rect fill=\"transparent\" id=\"canvas_background\" height=\"302\" width=\"102\" y=\"-1\" x=\"-1\"/>\r\n         <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\r\n          <rect fill=\"url(#gridpattern)\" strokeWidth=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\"/>\r\n         </g>\r\n        </g>\r\n        <g>\r\n         <title>Layer 1</title>\r\n         <rect id=\"svg_2\" height=\"200\" width=\"48\" y=\"91.63545\" x=\"25\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#BBBBBB\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_1\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n         <ellipse ry=\"20\" rx=\"20\" id=\"svg_3\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_4\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n        <ellipse ry=\"20\" rx=\"20\" id=\"svg_5\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\">{this.props.tool}</ellipse>\r\n            \r\n        </g><text y=\"250\" x=\"-20\" fontSize=\"4em\">{this.props.tool}</text>\r\n       </svg>\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { IPlayerData, IPlayerTechProgress, ITechInfo, Tech, TechData, TechProgress } from \"../simulation/Player\";\r\nimport { release, setResearch } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { RobotArm } from \"../widgets/RobotArm\";\r\nimport './research.css';\r\n\r\nfunction renderTech(tech: ITechInfo, techProgress: TechProgress, currentlyResearchingTech: Tech|undefined, setResearch: (t: Tech) => void){\r\n  const unstarted = techProgress[tech.tech] == null;\r\n  const progress = unstarted ? 0 : techProgress[tech.tech].researchPoints;\r\n  const total = tech.techPoints;\r\n  const style = {width: (Math.min(progress/total*100, 100))+'%'};\r\n  const complete = progress >= total;\r\n  const isCurrent = currentlyResearchingTech === tech.tech;\r\n  const state: '⭕️'|'✅'|'🔬' = complete ? '✅' : isCurrent ? '🔬' : '⭕️';\r\n  const rootClassName = isCurrent ? 'active': 'inactive';\r\n  return <div className={\"card-parent \"+rootClassName} key={tech.tech}>\r\n    <button className=\"card button\" onClick={() => setResearch(tech.tech)}>\r\n      <strong>{tech.name}</strong>\r\n      <strong className=\"pull-r f-size-125em\">{state}</strong>\r\n      <div>\r\n        {tech.description}\r\n      </div>      \r\n      <div className=\"bar f-size-12 h-12\">\r\n          <div className=\"bar-inner text-center\" style={style}>\r\n          </div>\r\n          {progress}/{total} tech\r\n      </div>\r\n    </button>\r\n  </div>\r\n}\r\n\r\nconst tools = [\r\n'📡',\r\n'🗜️',\r\n'🔬',\r\n'💉',\r\n'🔎',\r\n'🧼',\r\n'🧲',\r\n'🎥',\r\n'🔧',\r\n];\r\nfunction loop(lastI: number){\r\n  let i = lastI + 1;\r\n  if (i === tools.length)\r\n    i = 0;\r\n  return i;\r\n}\r\nexport const ResearchPanel: React.FC<{}> = () => {\r\n  const abductedBeanKeys = useAppSelector(x => x.world.alien.abductedBeanKeys);\r\n  const techProgress = useAppSelector(x => x.world.alien.techProgress);\r\n  const currentTech = useAppSelector(x => x.world.alien.currentlyResearchingTech);\r\n  const dispatch = useAppDispatch();\r\n  const [tool1, setTool1] = useState(0);\r\n  const [tool2, setTool2] = useState(3);\r\n  const [tool3, setTool3] = useState(2);\r\n  const [tool4, setTool4] = useState(1);\r\n  useEffect(() => {\r\n    const interval = window.setInterval(() => {\r\n      if (Math.random() < .51)\r\n        setTool1(loop(tool1));\r\n      if (Math.random() < .51)\r\n        setTool2(loop(tool2));\r\n      if (Math.random() < .51)\r\n        setTool3(loop(tool3));\r\n      if (Math.random() < .51)\r\n        setTool4(loop(tool4));\r\n    }, 1000);\r\n    return () => {\r\n      window.clearInterval(interval);\r\n    }\r\n  });\r\n  const techs = Object.values(TechData);\r\n  return <div>\r\n      <div className=\"col-2\">\r\n        <div>\r\n          <h2>Research 🧪 Lab</h2>\r\n          <div className=\"vertical\">\r\n            {\r\n              techs.map((t) => renderTech(t, techProgress, currentTech, (t) => dispatch(setResearch({t: t}))))\r\n            }\r\n          </div>\r\n        </div>\r\n      <div className=\"vertical\">\r\n        <div>\r\n          <div className=\"robot\">\r\n            🤖\r\n            <RobotArm classN=\"far-left\" tool={tools[tool1]}></RobotArm>\r\n            <RobotArm classN=\"left\" tool={tools[tool2]}></RobotArm>\r\n            <RobotArm classN=\"near-right\" tool={tools[tool3]}></RobotArm>\r\n            <RobotArm classN=\"far-right\" tool={tools[tool4]}></RobotArm>\r\n          </div>\r\n        </div>\r\n        <div className=\"h-42em\">\r\n          {\r\n            abductedBeanKeys.map((b) => {\r\n              return <span key={b} className=\"victim bean triangle shake\">😨</span>\r\n            })\r\n          }\r\n        </div>\r\n\r\n        <div className=\"text-center\">\r\n          Currently probing {abductedBeanKeys.length} beings for {abductedBeanKeys.length} tech a day\r\n          <p>\r\n            <small>1 tech per research subject per day</small>\r\n          </p>\r\n        </div>\r\n        {\r\n          abductedBeanKeys.length > 0 ? <div className=\"text-right\">\r\n            <ConfirmButton className=\"callout\" onConfirm={() => {dispatch(release())}} confirmText=\"-1 Research Subject?\">\r\n            🎈 Release Research Subject\r\n            </ConfirmButton>\r\n          </div> : null\r\n        }\r\n      </div>\r\n    </div>\r\n    <div>\r\n\r\n    </div>\r\n  </div>\r\n}","import React, { ReactElement, useState } from \"react\";\r\nimport { BeliefsAll, IBeliefData, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { BeliefWidget } from \"./BeliefRow\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\n\r\nexport const TraitsReport: React.FC = () => {\r\n  const beliefInventory = useAppSelector(x => x.world.alien.beliefInventory);\r\n  const seenBeliefs = useAppSelector(x => x.world.alien.seenBeliefs);\r\n  const [hoveredBelief, setHoveredBelief] = useState<TraitBelief>();\r\n  const beliefs: IBeliefData[] = [];\r\n  Object.keys(seenBeliefs).forEach((key) => {\r\n    if (SecondaryBeliefData[key as TraitBelief] != null){\r\n      beliefs.push(SecondaryBeliefData[key as TraitBelief]);\r\n    }\r\n  });\r\n  beliefs.sort((a, b) => a.noun.localeCompare(b.noun));\r\n  return (\r\n    <div className=\"vertical\">\r\n      <div className=\"pad-4p\">\r\n        <h2>Subject 🧠 Traits</h2>\r\n      </div>\r\n      <div className=\"col-2-30-60\">\r\n        <div>\r\n          <div className=\"scroll\">\r\n            <div className=\"scoll-sticky-h\">\r\n              <strong>\r\n                <span className=\"trait-gem\"></span>\r\n                Trait Gems\r\n              </strong>\r\n            </div>\r\n            {\r\n              beliefInventory.length < 1 ? <div>\r\n                No Trait Gems! <br/>\r\n                😵 Brainwash your subjects  <br/>\r\n                or buy from the 🛍️ Market\r\n                </div> : beliefInventory.map((x) => <div key={x.trait}>\r\n                      <div>\r\n                        <strong>\r\n                          {SecondaryBeliefData[x.trait].icon} {SecondaryBeliefData[x.trait].noun}\r\n                        </strong>\r\n                      </div>\r\n                      <div>\r\n                        This can be implanted {x.gems} more times\r\n                      </div>\r\n                    </div>)\r\n            }\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"modal-scroll-v\">\r\n            <div className=\"sticky-t-0\">\r\n              <strong>Discovered {beliefs.length} of {BeliefsAll.length} Traits</strong>\r\n            </div>\r\n            {\r\n              beliefs.length < 1 ? <div>\r\n                No Traits Scanned! <br/>\r\n                🛰️ Scan some of your subjects.\r\n              </div> : beliefs.map((x) => <BeliefWidget key={x.noun} data={x} cost={0}\r\n              titleView={<strong>{x.noun}</strong>}\r\n              bottomView={<span></span>}\r\n            ></BeliefWidget>)\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { UFO } from \"../simulation/City\";\r\nimport { hex_to_pixel, origin_point, transformPoint } from \"../simulation/Geography\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { WorldSfxInstance } from \"../WorldSound\";\r\n\r\n\r\nexport const AnimatedUFO2:  React.FC<{\r\n    ufoKey: number,\r\n    cityKey: number\r\n}> = (props) => {\r\n    const [showBeam, setShowBeam] = useState(false);\r\n    const city = useAppSelector(state => state.world.cities.byID[props.cityKey]);\r\n    const ufo = useAppSelector(state => state.world.ufos.byID[props.ufoKey]);\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setShowBeam(true);\r\n            WorldSfxInstance.play('teleport');\r\n            setTimeout(() => {\r\n                setShowBeam(false)\r\n            }, 1800);\r\n        }, 1800);\r\n    }, []);\r\n    let style = {\r\n        ...transformPoint(hex_to_pixel(city.hex_size, city.petriOrigin, ufo.point))\r\n    };\r\n    return <span style={style} className=\"ufo\">\r\n        🛸\r\n        {showBeam ? <span className=\"beam\"></span> : null}\r\n    </span>\r\n}","import { ISeller } from \"./Economy\";\r\nimport { TraitGood, GoodToJob } from \"../World\";\r\nimport { Policy } from \"./Politics\";\r\nimport { Government } from \"./Government\";\r\n\r\nexport type EnterpriseType = 'company'|'co-op'|'commune';\r\nexport const EnterpriseTypes: EnterpriseType[] = ['company','co-op','commune'];\r\nexport const EnterpriseTypeIcon: {[e in EnterpriseType]: string} = {\r\n    'company': '🎩', \r\n    'co-op': '🤝', \r\n    'commune': '⚒️'\r\n};\r\n\r\nexport interface IEnterprise extends ISeller{\r\n    key: number;\r\n    cityKey: number;\r\n    enterpriseType: EnterpriseType;\r\n    ownerBeanKey?: number;\r\n}","import React from \"react\";\r\nimport { PlayerResources, triadToString } from \"../Game\";\r\n\r\nexport class CostSmall extends React.Component<{\r\n    cost: PlayerResources,\r\n    rider?: string,\r\n    qty?: number\r\n}>{\r\n\r\n    render(){\r\n        return <small>\r\n            {triadToString(this.props.cost, '-', this.props.qty)} {this.props.rider}\r\n        </small>\r\n    }\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../i18n/text\";\r\nimport { Subtabs } from \"../chrome/Subtab\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { BuildingIcon, BuildingJobIcon, BuildingToGood, BuildingTypes, HexPoint, IBuilding, IDistrict } from \"../simulation/Geography\";\r\nimport { EnterpriseType, EnterpriseTypeIcon, EnterpriseTypes, IEnterprise } from \"../simulation/Institutions\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\nimport { BuildingOpenSlots, BuildingUsedSlots } from \"../simulation/RealEstate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState, selectSelectedBuilding, selectSelectedCity } from \"../state/state\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { beam, build, changeEnterprise, fireBean, selectCity, upgrade, upgradeDistrict } from \"../state/features/world.reducer\";\r\nimport { doSelectCity, doSelectDistrict, doSelectNone } from \"../state/features/selected.reducer\";\r\nimport { BuildingJobSlot } from \"../simulation/Occupation\";\r\nimport { GoodIcon, TraitGood } from \"../World\";\r\n\r\nexport const BeamButton: React.FC<{\r\n    city: number,\r\n    hex: HexPoint,\r\n    difficulty: IDifficulty\r\n}> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"card-parent\">\r\n    <button className=\"card button\" type=\"button\" onClick={() => dispatch(beam({cityKey: props.city, where: props.hex}))}>\r\n        🛸 Beam In New Subject\r\n        <CostSmall cost={props.difficulty.cost.hex.beam} rider=\"+Subject\"></CostSmall>\r\n    </button>\r\n</div>\r\n}\r\nexport const BuildPanel: React.FC<{\r\n    cityKey: number,\r\n    selectedLotKey: number|undefined,\r\n    district: IDistrict,\r\n    difficulty: IDifficulty,\r\n}> = (props) => {\r\n    const districtLots = useAppSelector(x => props.district.lots.map(y => x.world.lots.byID[y]));\r\n    const targetLot = props.selectedLotKey ?? districtLots.find(z => z.buildingKey == null)?.key;\r\n    const dispatch = useAppDispatch();\r\n    const eHex = props.difficulty.cost.emptyHex;\r\n    if (targetLot != null){\r\n        return <div>\r\n\r\n        <h3>Build:</h3>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'house'}))}>\r\n                {BuildingIcon['house']} House\r\n                <CostSmall cost={eHex.build.house}></CostSmall>\r\n            </button>\r\n        </div>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'farm'}))}>\r\n                {BuildingIcon['farm']} Farm\r\n                <CostSmall cost={eHex.build.farm}></CostSmall>\r\n            </button>\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'hospital'}))}>\r\n                {BuildingIcon['hospital']} Hospital\r\n                <CostSmall cost={eHex.build.hospital}></CostSmall>\r\n            </button>\r\n        </div>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'theater'}))}>\r\n                {BuildingIcon['theater']} Theater\r\n                <CostSmall cost={eHex.build.theater}></CostSmall>\r\n            </button>\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'park'}))}>\r\n                {BuildingIcon['park']} Park\r\n                <CostSmall cost={eHex.build.park}></CostSmall>\r\n            </button>\r\n        </div>\r\n        </div>\r\n    } else {\r\n        return <div></div>\r\n    }\r\n}\r\n\r\nexport const DistrictTypeIcon = {\r\n    urban: '⛲',\r\n    rural: '📪',\r\n    fallow: '🌳',\r\n    nature: '🏔️'\r\n}\r\nconst DistrictTypeText = {\r\n    urban: 'Urban',\r\n    rural: 'Rural',\r\n    fallow: 'Empty',\r\n    nature: 'Nature'\r\n}\r\n\r\nexport const HexPanel: React.FC<{\r\n    difficulty: IDifficulty\r\n}> = (props) => {\r\n    const districtKey = useSelector((state: RootState) => state.selected.selectedDistrictKey);\r\n    const district = useAppSelector((x) => districtKey != null ? x.world.districts.byID[districtKey]: undefined);\r\n    const lotKey = useAppSelector((x) => x.selected.selectedLotKey);\r\n    const building = useSelector(selectSelectedBuilding);\r\n    const city = useSelector(selectSelectedCity);\r\n    const dispatch = useAppDispatch();\r\n    if (city && district == null){\r\n        return <div></div>\r\n    }\r\n    else if (city && building && district){\r\n        return <HexBuildingPanel building={building} city={city} hex={district} difficulty={props.difficulty}></HexBuildingPanel>\r\n    } else if (city && district){\r\n        return <div>\r\n        <div>\r\n            <strong>{DistrictTypeIcon[district.kind]} {DistrictTypeText[district.kind]} District</strong> in <strong>{city.name}</strong>\r\n            <button type=\"button\" className=\"pull-r\" onClick={() => dispatch(doSelectCity({cityKey: city.key}))} >❌</button>\r\n        </div>\r\n        {\r\n            lotKey != null ? <span>Lot #{lotKey+1}</span> : <br/>\r\n        }\r\n        {\r\n            district.kind === 'fallow' ? <div><div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={\r\n                    () => dispatch(upgradeDistrict({city: city.key, district: district.key}))}>\r\n                    🚧 Develop\r\n                    <CostSmall cost={props.difficulty.cost.hex.fallow_2_rural}></CostSmall>\r\n                </button>\r\n            </div></div> : district.kind === 'rural' ? <div><div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={\r\n                    () => dispatch(upgradeDistrict({city: city.key, district: district.key}))}>\r\n                    🏗️ Urbanize\r\n                    <CostSmall cost={props.difficulty.cost.hex.rural_2_urban}></CostSmall>\r\n                </button>\r\n            </div></div> : null\r\n        }\r\n\r\n        <BuildPanel cityKey={city.key} district={district} selectedLotKey={lotKey} difficulty={props.difficulty}></BuildPanel>\r\n\r\n        <h3>Beings:</h3>\r\n        <BeamButton difficulty={props.difficulty} hex={district} city={city.key}></BeamButton>\r\n    </div>\r\n    } else {\r\n        return <div></div>\r\n    }\r\n}\r\n\r\nexport const HexBuildingPanel: React.FC<{\r\n    building: IBuilding,\r\n    difficulty: IDifficulty,\r\n    city: ICity,\r\n    hex: HexPoint\r\n}> = (props) => {\r\n    const b = props.building;\r\n    const e = useAppSelector(s => b.enterpriseKey != null ? s.world.enterprises.byID[b.enterpriseKey]: undefined);\r\n    const dispatch = useAppDispatch();\r\n    const free = BuildingOpenSlots(b);\r\n    const hasJobs = b.type != 'park' && b.type != 'nature';\r\n    return <div>\r\n        <div>\r\n            <strong>{b.upgraded && hasJobs ? 'Dense ': 'Small '}{keyToName[b.type]}</strong>\r\n            <button type=\"button\" className=\"pull-r\" onClick={() => dispatch(doSelectNone())}>❌</button>\r\n        </div>\r\n        <div className=\"text-right\">\r\n            <small>\r\n            in&nbsp;<strong>{props.city.name}</strong>\r\n            </small>\r\n        </div>\r\n    {\r\n        e != null ? <div>\r\n            <small>\r\n                ${e.cash?.toFixed(2)} from sales today\r\n            </small>\r\n            <EnterpriseListings enterpriseKey={e.key} good={BuildingToGood[b.type]}></EnterpriseListings>\r\n        </div> : null\r\n    }\r\n    {\r\n        b.upgraded && hasJobs ? <div>\r\n            {renderDensityWarning(b.type)}\r\n        </div> : null\r\n    }\r\n    {\r\n        e != null ?  <EnterpriseTypePicker \r\n            enter={e} \r\n            changeEnterprise={(t) => dispatch(changeEnterprise({enterpriseKey: b.key, newType: t}))}>\r\n            </EnterpriseTypePicker> : null\r\n    }\r\n    {\r\n        <WorkerList cityKey={props.city.key} building={b}></WorkerList>\r\n    }\r\n    {\r\n        !hasJobs ? null : <div>\r\n            This {keyToName[b.type]} can support {free.length} more jobs.\r\n            {\r\n                b.upgraded ? null : <span><br/>Upgrade it to add 3 more job slots.</span>\r\n            }\r\n        </div>\r\n    }\r\n    {\r\n        b.upgraded || !hasJobs ? null : <div><div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => dispatch(upgrade({buildingKey: b.key}))}>\r\n                    🛠️ Upgrade\r\n                    <CostSmall cost={props.difficulty.cost.hex.upgrade}></CostSmall>\r\n                </button>\r\n            </div>\r\n            {renderDensityWarning(b.type)}\r\n        </div>\r\n    }\r\n    <BeamButton city={props.city.key} difficulty={props.difficulty} hex={props.hex}></BeamButton>\r\n    </div>\r\n}\r\n\r\nconst renderDensityWarning = (typ: BuildingTypes) => {\r\n    if (typ === 'house')\r\n    return <>\r\n        <div className=\"text-center\">\r\n        <small>\r\n        🐮 Parochial subjects may emit 👎<br/>when living in dense buildings\r\n        </small>\r\n    </div> \r\n    <div className=\"text-center\">\r\n        <small>\r\n        🍸 Cosmopolitan subjects may emit 👎<br/>when living in small buildings\r\n        </small>\r\n    </div>\r\n    </>;\r\n    else return <div>\r\n\r\n    </div>\r\n}\r\n\r\nexport const WorkerList: React.FC<{\r\n    cityKey: number,\r\n    building: IBuilding\r\n}> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const beans = useAppSelector(x => props.building.jobs.map((k) => x.world.beans.byID[k]));\r\n    const enterprise = useAppSelector(s => s.world.enterprises.byID[props.building.key]);\r\n    if (beans.length < 0) {\r\n        return <div>No Workers</div>\r\n    }\r\n    return <div>\r\n    <strong>Workers:</strong>\r\n    {\r\n        beans.map((x) => <div key={x.key}>\r\n            {BuildingJobIcon[props.building.type]} {x.name} {enterprise && enterprise.enterpriseType === 'company' && x.key === enterprise.ownerBeanKey ? '🎩' : ''}\r\n            <button title=\"Fire\" className=\"callout marg-0\" onClick={() => x ? dispatch(fireBean({cityKey: props.cityKey, beanKey: x.key})) : null}>\r\n                🔥\r\n            </button>\r\n        </div>)\r\n    }\r\n</div>\r\n}\r\nexport const EnterpriseTypePicker: React.FC<{\r\n    enter: IEnterprise,\r\n    changeEnterprise: (newType: EnterpriseType) => void,\r\n}> = (props) => {\r\n    const options = EnterpriseTypes.map((x) => {\r\n        return {\r\n            icon: EnterpriseTypeIcon[x],\r\n            text: x[0].toUpperCase()+x.substring(1),\r\n            value: x,\r\n            onClick: () => {\r\n                props.changeEnterprise(x);\r\n            }\r\n        }\r\n    }); \r\n    return <Subtabs active={props.enter.enterpriseType} options={options}></Subtabs>\r\n}\r\n\r\nexport const EnterpriseListings: React.FC<{\r\n    enterpriseKey: number,\r\n    good: TraitGood\r\n}> = (props) => {\r\n    const listings = useAppSelector(s => s.world.economy.market.listings[props.good])\r\n    return <div>\r\n        {\r\n            listings.filter(y => y.sellerEnterpriseKey === props.enterpriseKey).map((x,i) => <div key={i}>\r\n                {x.quantity} {GoodIcon[props.good]} @ ${x.price.toFixed(2)}\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nfunction HexStringToHex(hex: string): HexPoint {\r\n    const split = hex.split(',');\r\n    return {\r\n        q: +split[0],\r\n        r: +split[1]\r\n    }\r\n}\r\n","\r\nimport React, { ReactElement } from \"react\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { IBuilding, BuildingIcon, hex_directions, transformPoint, hex_to_pixel, origin_point, HexPoint, BuildingJobIcon, UpgradedBuildingIcon, ILot, BuildingTypes, BuildingToGood } from \"../simulation/Geography\";\r\nimport { BuildingJobSlot } from \"../simulation/Occupation\";\r\nimport { build } from \"../state/features/world.reducer\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { GoodIcon, TraitGood } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport './Building.css';\r\n\r\nconst slot_size = {\r\n    x: 25,\r\n    y: 25\r\n}\r\nexport function getSlotOffset(direction: HexPoint){\r\n    return hex_to_pixel(slot_size, origin_point, direction);\r\n}\r\nexport function getRandomSlotOffset(seed: string){\r\n    return getSlotOffset(GetRandom(seed, hex_directions));\r\n}\r\nconst hexDirectionToJobSlot: {[key: number]: number} = {\r\n    2: 0,\r\n    0: 1,\r\n    4: 2,\r\n    1: 3,\r\n    5: 4,\r\n    3: 5,\r\n}\r\n\r\nexport const BuildingToJobIcon: {[type in BuildingTypes]: string} = {\r\n    'farm':'🪕',\r\n    'house':'🧹',\r\n    'hospital':'🩺',\r\n    'church':'',\r\n    'theater':'👘',\r\n    'courthouse':'💼',\r\n    'park':'🎒',\r\n    'nature': '🎒'\r\n};\r\n\r\nexport const PetriGoods: React.FC<{\r\n    goodType: TraitGood,\r\n    enterpriseKey: number\r\n}> = (props) => {\r\n    const quantity = useAppSelector(state => state.world.economy.market.listings[props.goodType].filter(\r\n        x => x.sellerEnterpriseKey === props.enterpriseKey).reduce(\r\n        (sum, l) => sum + l.quantity, 0)\r\n    );\r\n    if (quantity < 1)\r\n        return null;\r\n    else {\r\n        const is: {row: number, col: number}[] = [];\r\n        for (let i = 0; i < quantity; i++) {\r\n            is.push({\r\n                row: Math.floor(i/2),\r\n                col: i % 2\r\n            });\r\n        }\r\n        return <>\r\n            {\r\n                is.map((i, ii) => <text x={270+(i.col*-12)+\"px\"} y={(85+(i.row*-12))+\"px\"} style={{fontSize:'11px'}} key={ii}>{GoodIcon[props.goodType]}</text>)\r\n            }\r\n        </>;\r\n    }\r\n}\r\nexport const PetriBuilding: React.FC<{\r\n    lotKey: number\r\n}> = (props) => {\r\n    const lot: ILot = useAppSelector(state => state.world.lots.byID[props.lotKey]);\r\n    const building: IBuilding|undefined = useAppSelector(state => lot.buildingKey != null ? state.world.buildings.byID[lot.buildingKey]: undefined);\r\n    if (building)\r\n        return <>\r\n            <text x=\"280px\" y=\"77.859px\" style={{fontSize:'36px'}}>{building.upgraded ? UpgradedBuildingIcon[building.type] : BuildingIcon[building.type]}</text>\r\n            {\r\n                building.jobs.filter(x => x != null).map((y,i) => <text x=\"325px\" y={(85+(i*-14))+\"px\"} style={{fontSize:'11px'}} key={y}>{BuildingToJobIcon[building.type]}</text>)\r\n            }\r\n            {(building.enterpriseKey != null) ? <PetriGoods enterpriseKey={building.enterpriseKey} goodType={BuildingToGood[building.type]}></PetriGoods> : null}\r\n        </>\r\n    else \r\n        return <text x=\"280.931px\" y=\"77.859px\" style={{fontSize:'36px'}}>{lot.kind === 'rural' ? '🌼' : '🚏'}</text>\r\n}\r\n\r\nexport const UIBuilding: React.FC<{\r\n    building: IBuilding,\r\n    style: React.CSSProperties,\r\n    getStyle: (h: HexPoint) => React.CSSProperties\r\n}> = (props) => {\r\n    return <div key={props.building.type+props.building.key} style={props.style} \r\n    className={\"building \"+props.building.type}>\r\n    {props.building.upgraded ? UpgradedBuildingIcon[props.building.type] : BuildingIcon[props.building.type]}\r\n    <UIBuildingSlots building={props.building} getStyle={props.getStyle}></UIBuildingSlots>\r\n    {props.children}\r\n    </div>\r\n}\r\nexport const UIBuildingSlots: React.FC<{\r\n    building: IBuilding,\r\n    getStyle: (h: HexPoint) => React.CSSProperties\r\n}> = (props) => {\r\n    return <>{hex_directions.map((d, i: number) => {\r\n        const jobSlot: BuildingJobSlot = hexDirectionToJobSlot[i];\r\n        const hasJob = props.building.jobs[jobSlot] != null;\r\n        return <span key={i} className=\"slot\" style={props.getStyle(d)}>\r\n            {hasJob ? BuildingJobIcon[props.building.type] : null}\r\n        </span>\r\n    })}</>\r\n}","import React, { useRef } from \"react\";\r\nimport { DistrictTypeIcon } from \"../right-panel/HexPanel\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { IBuilding, transformPoint } from \"../simulation/Geography\";\r\nimport { doSelectDistrict, doSelectLot } from \"../state/features/selected.reducer\";\r\nimport { magnetChange, selectBuildingsByCity } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { PetriBuilding, UIBuilding } from \"./Building\";\r\nimport { hex_style } from \"./WorldTile\";\r\n\r\nexport const PetriLot: React.FC<{\r\n    cityKey: number,\r\n    districtKey: number,\r\n    lotKey: number,\r\n    lotDrawn: string,\r\n    className: string\r\n}> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const selected = useAppSelector(state => state.selected.selectedLotKey === props.lotKey);\r\n\r\n    return <g className={\"lot \"+ props.className + (selected ? \" selected\": \"\")} transform=\"matrix(1.21104,0,0,0.901051,-221.832,-145.114)\" onClick={(e) => {dispatch(doSelectLot({cityKey: props.cityKey, district: props.districtKey, lot: props.lotKey})); e.preventDefault();return false;}}>\r\n        <path d={props.lotDrawn} />\r\n    </g>\r\n}\r\n\r\nexport const PetriHex: React.FC<{\r\n    cityKey: number,\r\n    districtKey: number\r\n}> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const district = useAppSelector(state => state.world.districts.byID[props.districtKey]);\r\n    const selected = useAppSelector(state => state.selected.selectedDistrictKey === props.districtKey);\r\n    const extraClasses = selected ? 'hex-selected' : ''; \r\n    return <div className={\"hex \"+extraClasses}\r\n        key={props.districtKey}\r\n        style={{ ...hex_style, ...transformPoint(district.point) }}\r\n        onMouseEnter={(e) => { dispatch(magnetChange({cityKey: props.cityKey, px: district.point})) }}\r\n        onClick={(e) => {\r\n            if (!e.isDefaultPrevented()){\r\n                dispatch(doSelectDistrict({cityKey: props.cityKey, district: props.districtKey})); \r\n                e.stopPropagation(); \r\n                return false;\r\n            }\r\n        }\r\n        }>\r\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 104 120\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" style={{position:'absolute',left:'0%',top:'0%',opacity:0.5}} className=\"svg-hex\">\r\n            <g transform=\"matrix(1,0,0,1,-233.288,0)\">\r\n            {\r\n            (district.kind === 'fallow') ? <g id=\"rural-circle-120\" transform=\"matrix(0.990588,0,0,1.33139,453.063,64.7779)\">\r\n                    <g id=\"circle\" transform=\"matrix(1.0095,0,0,0.751097,-457.368,-48.6545)\">\r\n                        <circle className=\"district-circle\"  cx=\"285.248\" cy=\"60.588\" r=\"17.271\"/>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"265.931px\" y=\"77.859px\" style={{fontSize:'46.631px'}}>🌳</text>\r\n                    </g>\r\n                </g>: (district.kind === 'rural') ? <g id=\"rural-circle-120\" transform=\"matrix(0.990588,0,0,1.33139,453.063,64.7779)\">\r\n                    <g transform=\"matrix(1.0095,0,0,0.751097,-457.368,-48.6545)\">\r\n                        <path className=\"district-circle\" d=\"M285.25,0L285.251,43.341M300.181,69.173L337.211,89.968L300.181,69.173ZM270.408,69.173L233.288,90.21M285.248,43.317C294.78,43.317 302.519,51.056 302.519,60.588C302.519,70.12 294.78,77.859 285.248,77.859C275.716,77.859 267.977,70.12 267.977,60.588C267.977,51.056 275.716,43.317 285.248,43.317Z\" />\r\n                    </g>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"rural_3\" lotKey={district.lots[2]} lotDrawn=\"M43.3,112.51L43.301,142.954L43.3,142.954C35.334,142.954 28.868,149.421 28.868,157.387C28.868,160.061 29.596,162.566 30.866,164.714L6.474,178.584C2.37,171.965 0,164.162 0,155.81C0,131.912 19.402,112.51 43.3,112.51L43.3,112.51Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"rural_2\" lotKey={district.lots[1]} lotDrawn=\"M55.735,164.713L80.126,178.583C72.489,190.9 58.846,199.11 43.3,199.11C27.754,199.11 14.111,190.9 6.474,178.584L30.866,164.714C33.378,168.965 38.009,171.819 43.3,171.819C48.592,171.819 53.223,168.964 55.735,164.713ZM0,155.81C0,155.81 0,155.81 0,155.81Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"rural_1\" lotKey={district.lots[0]} lotDrawn=\"M43.3,112.51C67.198,112.51 86.6,131.912 86.6,155.81C86.6,164.162 84.23,171.965 80.126,178.583L55.735,164.713C57.004,162.564 57.732,160.06 57.732,157.387C57.732,149.421 51.266,142.954 43.301,142.954L43.3,112.51Z\"></PetriLot>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-271.444,-46.211)\">\r\n                        <PetriBuilding lotKey={district.lots[0]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-271.444,1.20645)\">\r\n                        <PetriBuilding lotKey={district.lots[1]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-323.46,-21.9919)\">\r\n                        <PetriBuilding lotKey={district.lots[2]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"265.931px\" y=\"77.859px\" style={{fontSize:'36.631px'}}>\r\n                            📪\r\n                        </text>\r\n                    </g>\r\n                </g> : (district.kind === 'urban') ? <g id=\"rural-circle-120\" transform=\"matrix(0.990588,0,0,1.33139,453.063,64.7779)\">\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-271.444,-46.211)\">\r\n                        <PetriBuilding lotKey={district.lots[0]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-253.016,-21.9919)\">\r\n                        <PetriBuilding lotKey={district.lots[1]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-271.444,1.20645)\">\r\n                        <PetriBuilding lotKey={district.lots[2]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-306.821,1.20645)\">\r\n                        <PetriBuilding lotKey={district.lots[3]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-323.46,-21.9919)\">\r\n                        <PetriBuilding lotKey={district.lots[4]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-306.821,-46.211)\">\r\n                        <PetriBuilding lotKey={district.lots[5]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(1.0095,0,0,0.751097,-457.368,-48.6545)\">\r\n                        <path className=\"district-circle\" d=\"M285.25,0L285.251,43.341M300.181,69.173L337.211,89.968L300.181,69.173ZM270.408,69.173L233.288,90.21M285.248,43.317C294.78,43.317 302.519,51.056 302.519,60.588C302.519,70.12 294.78,77.859 285.248,77.859C275.716,77.859 267.977,70.12 267.977,60.588C267.977,51.056 275.716,43.317 285.248,43.317Z\"/>\r\n                    </g>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_9\" lotKey={district.lots[5]} lotDrawn=\"M5.135,135.352C12.441,121.76 26.798,112.51 43.3,112.51L43.3,112.51L43.301,142.954L43.3,142.954C37.962,142.954 33.298,145.858 30.801,150.17L5.135,135.352Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_8\" lotKey={district.lots[4]} lotDrawn=\"M5.158,135.317L30.861,150.068C29.594,152.215 28.868,154.717 28.868,157.387C28.868,160.061 29.596,162.566 30.866,164.714L6.474,178.584C2.37,171.965 0,164.162 0,155.81C0,148.284 1.774,141.487 5.158,135.317Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_7\" lotKey={district.lots[3]} lotDrawn=\"M43.3,171.819L43.3,199.11C27.754,199.11 14.111,190.9 6.474,178.584L30.866,164.714C33.378,168.965 38.009,171.819 43.3,171.819ZM0,155.81C0,155.81 0,155.81 0,155.81Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_6\" lotKey={district.lots[2]} lotDrawn=\"M43.3,171.819C48.592,171.819 53.223,168.964 55.735,164.713L80.126,178.583C72.489,190.9 58.846,199.11 43.3,199.11L43.3,171.819Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_5\" lotKey={district.lots[1]} lotDrawn=\"M81.453,135.317C84.837,141.487 86.6,148.284 86.6,155.81C86.6,164.162 84.23,171.965 80.126,178.583L55.735,164.713C57.004,162.564 57.732,160.06 57.732,157.387C57.732,154.717 57.006,152.215 55.739,150.068L81.453,135.317Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_4\" lotKey={district.lots[0]} lotDrawn=\"M55.725,150.044C53.211,145.801 48.585,142.954 43.301,142.954L43.3,112.51C59.792,112.51 74.143,121.75 81.453,135.331L55.725,150.044Z\"></PetriLot>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"265.931px\" y=\"77.859px\" style={{fontSize:'46.631px'}}>\r\n                            {(district.q === 0 && district.r === 0) ? '🏫' : '⛲'}\r\n                        </text>\r\n                    </g>\r\n                </g>: <g transform=\"matrix(0.990588,0,0,1.33139,453.063,64.7779)\">\r\n                    <g id=\"circle\" transform=\"matrix(1.0095,0,0,0.751097,-457.368,-48.6545)\">\r\n                        <circle className=\"district-circle\" cx=\"285.248\" cy=\"60.588\" r=\"17.271\"/>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"265.931px\" y=\"77.859px\" style={{fontSize:'46.631px'}}>{DistrictTypeIcon['nature']}</text>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"270px\" y=\"-20px\" style={{fontSize:'36.631px'}}>🏕️</text>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"180.931px\" y=\"147.859px\" style={{fontSize:'36.631px'}}>🏕️</text>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"365.931px\" y=\"147.859px\" style={{fontSize:'36.631px'}}>🏕️</text>\r\n                    </g>\r\n                </g>}\r\n            </g>\r\n        </svg> \r\n        {props.children}\r\n    </div>\r\n\r\n}\r\n\r\nexport const PetriHexes2: React.FC<{\r\n    cityKey: number\r\n}> = (props) => {\r\n    const city = useAppSelector(state => state.world.cities.byID[props.cityKey]);\r\n    const districtKeys = useAppSelector(state => state.world.cities.byID[props.cityKey]?.districtKeys);\r\n    return <>{districtKeys.map((dKey, i) => {\r\n        return <PetriHex cityKey={props.cityKey }key={dKey} districtKey={dKey}>\r\n        </PetriHex>\r\n    })}</>\r\n}\r\nexport const SocialBuildings: React.FC<{\r\n    city: ICity,\r\n    onClickBuilding: (b: IBuilding) => void;\r\n}> = (props) => {\r\n    const buildings = useAppSelector(state => selectBuildingsByCity(state.world, props.city.key));\r\n    return <>\r\n        {\r\n            buildings.map((x) => <div key={x.key} className=\"building-node\" onClick={() => props.onClickBuilding(x)}>\r\n                <UIBuilding building={x} style={{}} getStyle={() => {return{}}}></UIBuilding>\r\n            </div> )\r\n        }\r\n    </>\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\n\r\n\r\nexport const Magnet2: React.FC<{\r\n    cityKey: number\r\n}> = (props) => {\r\n    const el = useRef<HTMLDivElement|null>(null);\r\n    const magnetPoint = useAppSelector(state => state.world.cities.byID[props.cityKey].pickupMagnetPoint);\r\n\r\n    if (magnetPoint){\r\n        return <div className=\"magnet\" style={{transform: `translate(${magnetPoint.x}px, ${magnetPoint.y}px)`}}>🧲</div>\r\n    } else {\r\n        return null;\r\n    }\r\n}","import React from \"react\";\r\nimport { IBean } from \"../simulation/Agent\";\r\nimport { BeanGetFace, BeanGetSpeech } from \"../simulation/Bean\";\r\nimport { doSelectBean } from \"../state/features/selected.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { RootState } from \"../state/state\";\r\nimport { GoodIcon } from \"../World\";\r\n\r\ninterface AnimatedBeanP {\r\n  cityKey: number;\r\n  beanKey: number;\r\n  sitStill?: boolean;\r\n  static?: boolean;\r\n}\r\n\r\nfunction BeanIsBuying(bean: IBean){\r\n  return bean.actionData.act == 'buy';\r\n}\r\n\r\nexport const selectBeanAnimation = (state: RootState, beanKey: number) => {\r\n  const bean = state.world.beans.byID[beanKey];\r\n  const working = bean.actionData.act === 'work';\r\n  return {\r\n    speech: BeanGetSpeech(bean),\r\n    face: BeanGetFace(bean),\r\n    good: BeanIsBuying(bean) ? GoodIcon[bean.actionData.good || 'food'] : undefined,\r\n    classes: [bean.job, bean.ethnicity, bean.actionData.act != 'travel' || bean.lifecycle === 'dead' ? 'paused' : '', ].join(' '),\r\n    animationClasses: ['bean-walker', working ? 'spin' : '', ].join(' '),\r\n    badge: bean.badge,\r\n    hat: bean.hat\r\n  }\r\n}\r\n\r\nexport const AnimatedBean: React.FC<AnimatedBeanP> = (props) => {\r\n  const state = useAppSelector(st => selectBeanAnimation(st, props.beanKey));\r\n  const isSelected = useAppSelector(st => st.selected.selectedBeanKey === props.beanKey);\r\n  const classes = ['bean interactable', state.classes, props.sitStill ? '' : state.animationClasses, isSelected ? 'selected' : ''].join(' ');\r\n\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <span className={classes}\r\n      onClick={(e) => {e.stopPropagation(); dispatch(doSelectBean({cityKey: props.cityKey, beanKey: props.beanKey})) }}\r\n    >\r\n      {state.badge ? <span className={\"badge \"+state.badge}>{state.badge}</span>: null}{state.face} {state.good ? <span className=\"purchase\">\r\n        <span className=\"money\">💸</span>\r\n        <span className=\"purchase-good\">{state.good}</span>\r\n      </span>: null} {state.speech ? <span className=\"speech\">\r\n        <span className=\"\">{state.speech}</span>\r\n      </span>: null}{state.hat?<span className={\"hat \"+state.hat}>{state.hat}</span>:null}\r\n    </span>\r\n  )\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { SfxContext } from \"../App\";\r\nimport { UFO, Pickup } from \"../simulation/City\";\r\nimport { transformPoint, hex_to_pixel } from \"../simulation/Geography\";\r\nimport { IPickup } from \"../simulation/Pickup\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { EmoteIcon } from \"../World\";\r\n\r\nexport const AnimatedPickup: React.FC<{\r\n    pickupKey: number\r\n}> = (props) => {\r\n    const [played, setPlayed] = useState(false);\r\n    const pickup = useAppSelector(state => state.world.pickups.byID[props.pickupKey]);\r\n    const sfx = React.useContext(SfxContext);\r\n    useEffect(() => {\r\n        if (!played && sfx){\r\n            sfx.play('drop');\r\n            setPlayed(true);\r\n        }\r\n    })\r\n    return <span className=\"pickup bob\">\r\n        {EmoteIcon[pickup.type]}\r\n    </span>\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { MoverContext } from \"../App\";\r\nimport { IAccelerator } from \"../simulation/Geography\";\r\nimport { MoverType } from \"../simulation/MoverBus\";\r\nimport { selectCityBeanIDs } from \"../state/features/world.reducer\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport { AnimatedPickup } from \"./AnimatedPickup\";\r\n\r\nexport const Mover: React.FC<{\r\n    moverType: MoverType,\r\n    moverKey: number,\r\n}> = (props) => {\r\n    const mover = React.useContext(MoverContext);\r\n    const el = useRef<HTMLDivElement|null>(null);\r\n    const onMove = (p: IAccelerator) => {\r\n        if (el.current && p)\r\n            el.current.style.transform = `translate(${p.point.x}px, ${p.point.y}px)`;\r\n    }\r\n    useEffect(() => {\r\n        const pubsub = mover.Get(props.moverType, props.moverKey);\r\n        pubsub.subscribe(onMove);\r\n        if (pubsub.current)\r\n            onMove(pubsub.current);\r\n        return () => mover.Get(props.moverType, props.moverKey).unsubscribe(onMove)\r\n    }, []);\r\n    return <div ref={el}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport const PetriBeanList: React.FC<{\r\n    cityKey: number\r\n}> = (props) => {\r\n    const beanKeys = useAppSelector(state => selectCityBeanIDs(state.world, props.cityKey));\r\n    return <>\r\n        {\r\n            beanKeys.map((beanKey: number) => {\r\n                return <Mover moverKey={beanKey} key={beanKey} moverType='bean'>\r\n                    <AnimatedBean cityKey={props.cityKey} beanKey={beanKey}></AnimatedBean>\r\n                </Mover>\r\n            })\r\n        }\r\n    </>;\r\n}\r\n\r\n\r\nexport const PickupList2: React.FC<{\r\n    cityKey: number\r\n}> = (props) => {\r\n    const list = useAppSelector(state => state.world.cities.byID[props.cityKey].pickupKeys);\r\n    return <>\r\n        {\r\n            list.map((pKey: number) => {\r\n                return <Mover moverKey={pKey} key={pKey} moverType='pickup'>\r\n                    <AnimatedPickup pickupKey={pKey}></AnimatedPickup>\r\n                </Mover>\r\n            })\r\n        }\r\n    </>;\r\n}","import React from \"react\";\r\nimport { HexSizeR, polarToPoint, transformPoint } from \"../simulation/Geography\";\r\nimport { magnetChange } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { AnimatedUFO2 } from \"./AnimatedUFO2\";\r\nimport { PetriHexes2 } from \"./PetriHexes\";\r\nimport { Magnet2 } from \"./Magnet\";\r\nimport { PetriBeanList, PickupList2 } from \"./Mover\";\r\n\r\nexport const hex_style = {\r\n  width: HexSizeR + 'px', \r\n  height: HexSizeR + 'px', \r\n  top: (-HexSizeR/2)+'px',\r\n  left: (-HexSizeR/2)+'px'\r\n}\r\n\r\ninterface WorldTilePs {\r\n  // tileKey: number;\r\n  cityKey: number;\r\n  onClick: () => void;\r\n}\r\nexport const WorldTile2: React.FC<WorldTilePs> = (props) => {\r\n\r\n  // const tile = useAppSelector(state => state.world.tiles.byID[props.tileKey]);\r\n  const city = useAppSelector(state => state.world.cities.byID[props.cityKey]);\r\n  const ufos = useAppSelector(state => state.world.cities.byID[props.cityKey].ufoKeys);\r\n  const spotlight = useAppSelector(state => state.world.spotlightEvent);\r\n  const spotlightBean = useAppSelector(state => {\r\n    if (state.world.spotlightEvent && state.world.spotlightEvent.beanKey)\r\n      return state.world.beans.byID[state.world.spotlightEvent.beanKey];\r\n    return undefined;\r\n  });\r\n\r\n  const dispatch = useAppDispatch()\r\n  const mtn_transforms: { transform: string }[] = [];\r\n\r\n  const mtnRadius = city.petriRadius - 20;\r\n  for (let i = 0; i < 360 / 5; i++) {\r\n    const az = i * 5 * Math.PI / 180;\r\n    const pt = polarToPoint({ r: mtnRadius, az: az });\r\n    pt.x += city.petriRadius; pt.y += city.petriRadius;\r\n    mtn_transforms.push(transformPoint(pt));\r\n  }\r\n  const deaths = city.deadBeanKeys.map((bk: number, i) => {\r\n    return (\r\n      <span key={i} className=\"dead\" style={{ left: (i * 10) + 'px' }}>⚰️</span>\r\n    )\r\n  });\r\n  const style = {\r\n    height: (city.petriRadius * 2) + 'px',\r\n    width: (city.petriRadius * 2) + 'px',\r\n  }\r\n  return (\r\n    <div className=\"tile\" onClick={() => props.onClick()} onMouseLeave={() => { dispatch(magnetChange({ cityKey: city.key })) }} style={style}>\r\n      <svg style={{ width: '100%', height: '100%' }} className=\"petri-base\">\r\n        <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 1)\" />\r\n      </svg>\r\n      <PetriHexes2 cityKey={city.key}></PetriHexes2>\r\n      {mtn_transforms.map((x, i) => {\r\n        return <span key={i} style={x} className=\"mtn\">⛰️</span>\r\n      })}\r\n      <PickupList2 cityKey={props.cityKey}></PickupList2>\r\n      <PetriBeanList cityKey={props.cityKey}></PetriBeanList>\r\n      {ufos.map((uK: number, i: number) => {\r\n        return <AnimatedUFO2 ufoKey={uK} key={uK} cityKey={city.key}></AnimatedUFO2>\r\n      })}\r\n      <Magnet2 cityKey={props.cityKey}></Magnet2>\r\n      <svg style={{ width: '100%', height: '100%' }} className=\"petri-lid\">\r\n        <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 0.2)\" />\r\n      </svg>\r\n      {/* {\r\n        (spotlight && spotlightBean && spotlight.point) ? <AnimatedSpotlight event={spotlight} bean={bean}></AnimatedSpotlight>: null\r\n      } */}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../i18n/text\";\r\nimport { IBean } from \"../simulation/Agent\";\r\nimport { NarrativeBeliefData, PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { Trait, TraitIcon } from \"../World\";\r\n\r\nexport class CardButton extends React.Component<{\r\n    icon: string,\r\n    name: string,\r\n    onClick?: () => void,\r\n    title?: string,\r\n    subtext?: string,\r\n    thin?: boolean,\r\n    singleLine?: boolean,\r\n    disabled?: boolean\r\n}>{\r\n    render(){\r\n        let classes = \"card button\";\r\n        if (this.props.thin) classes += ' thin';\r\n        if (this.props.singleLine) classes += ' single';\r\n        return <button className={classes} title={this.props.title} onClick={() => {\r\n            if (this.props.onClick) this.props.onClick()\r\n        }} type=\"button\" disabled={this.props.disabled}>\r\n            {this.props.icon} {this.props.name}\r\n            {\r\n                (this.props.subtext != null) ? <small>{this.props.subtext}</small> : null\r\n            }\r\n        </button>\r\n    }\r\n}\r\n\r\nexport function TraitToCard(bean: IBean, trait: Trait, onClick?: () => void){\r\n    switch(trait){\r\n        case 'trad':\r\n        case 'prog':\r\n        case 'ego':\r\n        case 'state':\r\n            return <CardButton icon={TraitIcon[trait]} title={PrimaryBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'fresh':\r\n        case 'sick':\r\n        case 'hungry':\r\n        case 'starving':\r\n        case 'stuffed':\r\n        case 'homeless':\r\n        case 'rested':\r\n        case 'circle':\r\n        case 'square':\r\n        case 'triangle':\r\n        case 'sane':\r\n        case 'disturbed':\r\n        case 'stressed':\r\n            return <CardButton icon={TraitIcon[trait]} title={keyToName[trait]} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'noFaith':\r\n        case 'rocket':\r\n        case 'dragon':\r\n        case 'music':\r\n            return <CardButton icon={TraitIcon[trait]} title={NarrativeBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        default:\r\n            return null;\r\n    }\r\n} ","import React, { useState } from \"react\";\r\nimport { Act, ActivityDisplay, ActivityIcon, GetPriorities, IBean } from \"../simulation/Agent\";\r\nimport { BeanGetFace } from \"../simulation/Bean\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { IPlayerData, PlayerCanAfford } from \"../simulation/Player\";\r\nimport { ITitle } from \"../simulation/Titles\";\r\nimport { doSelectCity, doSelectNone } from \"../state/features/selected.reducer\";\r\nimport { abduct, beanSetTitle, scan, vaporize } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { selectSelectedBean, selectSelectedCity } from \"../state/state\";\r\nimport { CardButton, TraitToCard } from \"../widgets/CardButton\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\nimport { EmoteIcon, IHappinessModifier, TraitIcon } from \"../World\";\r\nimport './BeanPanel.css';\r\n\r\n\r\ninterface BeanPanelP{\r\n    city: ICity,\r\n    bean: IBean,\r\n    alien: IPlayerData;\r\n    brainwash: () => void;\r\n    entitle: () => void;\r\n}\r\nfunction happyTable(mods: IHappinessModifier[]){\r\n    return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n        return <tr key={i}>\r\n            <td className=\"small text-right\">{x.reason}</td>\r\n            <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n        </tr>\r\n    });\r\n}\r\nfunction hedonTable(bean: IBean){\r\n    return Object.keys(bean.happiness.all).map((x, i) => {\r\n        return <tr key={i}>\r\n            <td className=\"small text-right\">{bean.happiness.all[x]} {bean.happiness.all[x] >= 0 ? EmoteIcon['happiness'] : EmoteIcon['unhappiness']} from </td>\r\n            <td className=\"small\">{x}</td>\r\n        </tr>\r\n    });\r\n}\r\nfunction actDurations(bean: IBean){\r\n    const acts = Object.keys(bean.activity_duration).map((x) => x as Act);\r\n    acts.sort((a, b) => bean.activity_duration[b] - bean.activity_duration[a]);\r\n    return acts;\r\n}\r\nfunction beliefTable(beliefs: TraitBelief[]): React.ReactNode {\r\n    return beliefs.map((b, i) => {\r\n        const classes = 'belief-name shadow text-left '+SecondaryBeliefData[b].rarity;\r\n        return <table className=\"width-100p\" key={b+i}><tbody><tr>\r\n        <th className={classes}>\r\n            {SecondaryBeliefData[b].icon} {SecondaryBeliefData[b].adj}\r\n        </th>\r\n        <td className=\"text-right\">\r\n            {(SecondaryBeliefData[b].idealPro || []).map(y => <span key={y}>+{TraitIcon[y]}</span>)}\r\n            {(SecondaryBeliefData[b].idealCon || []).map(y => <span key={y}>-{TraitIcon[y]}</span>)}\r\n        </td>\r\n    </tr><tr><td className=\"small text-center\" colSpan={2}>{\r\n        SecondaryBeliefData[b].description ? SecondaryBeliefData[b].description?.split(';').map((x, i) => <div key={i}>{x}</div>) : null\r\n    }</td></tr></tbody></table>});\r\n}\r\nfunction renderInner(scanned: boolean, innerView: string, bean: IBean, city: ICity, alien: IPlayerData){\r\n    if (!scanned){\r\n        return <div className=\"width-100p text-center\">\r\n            <small>\r\n                Subject needs a Scan to reveal their thoughts\r\n            </small>\r\n        </div>\r\n    }\r\n    switch(innerView){\r\n        case 'beliefs':\r\n            return scanned ? beliefTable(bean.beliefs) : null\r\n        case 'feelings':\r\n            return <table className=\"width-100p\"><tbody>\r\n                {scanned ? hedonTable(bean) : null}\r\n                </tbody>\r\n            </table>\r\n        default:\r\n        case 'priorities':\r\n            return <table className=\"width-100p\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            Currently {ActivityDisplay(bean.actionData)}\r\n                        </td>\r\n                    </tr>\r\n                    {\r\n                        bean.priorities.map((x) => {\r\n                            return <tr key={`p-${x.act}-${x.good}`}>\r\n                                <td>\r\n                                {x.priority.toFixed(2)} {ActivityIcon(x)}\r\n                                </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                    {\r\n                        actDurations(bean).filter((x) => bean.activity_duration[x] > 0).map((x) => {\r\n                            const act = x as Act;\r\n                            return <tr key={act}>\r\n                                <td>{x}</td>\r\n                                <td>\r\n                                    {\r\n                                        (bean.activity_duration[act] / 1000).toFixed(1)\r\n                                    }s\r\n                                </td>\r\n                            </tr>\r\n                            \r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n    }\r\n}\r\nfunction renderTraits(scanned: boolean, bean: IBean, alien: IPlayerData, brainwash: () => void, scan: () => void){\r\n    if (scanned){\r\n        return <div>\r\n            <div className=\"card-parent\">\r\n                {TraitToCard(bean, bean.ethnicity, undefined)}\r\n                {TraitToCard(bean, bean.faith, brainwash)}\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                {\r\n                    bean.beliefs.map((b) => <CardButton key={b} icon={SecondaryBeliefData[b].icon} title={SecondaryBeliefData[b].adj} name='' thin={true} singleLine={true} onClick={() => {brainwash()}}></CardButton>)\r\n                }\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                {TraitToCard(bean, bean.food, undefined)}\r\n                {TraitToCard(bean, bean.stamina, undefined)}\r\n                {TraitToCard(bean, bean.health, undefined)}\r\n            </div>\r\n        </div>\r\n    } else {\r\n        return <div className=\"card-parent\">\r\n            <CardButton icon=\"🛰️\" name=\"Scan\" subtext=\"-Energy +Info\" onClick={scan} disabled={!PlayerCanAfford(alien, alien.difficulty.cost.bean.scan)}></CardButton>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport const BeanPanel: React.FC<BeanPanelP> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const [faceOverride, setFaceOverride] = useState<string|undefined>(undefined);\r\n    const [innerView, setInnerView] = useState<'priorities'|'feelings'|'beliefs'>('beliefs');\r\n    const alien = useAppSelector(state => state.world.alien);\r\n    const bean = useAppSelector(selectSelectedBean);\r\n    const city = useAppSelector(selectSelectedCity);\r\n    function _resetFace(){\r\n        setTimeout(() => {\r\n            setFaceOverride(undefined);\r\n        }, 5000);\r\n    }\r\n    if (!bean || !city) \r\n        return null;\r\n    const classes = bean.job + ' ' + bean.ethnicity;\r\n    return (                \r\n    <div className=\"vertical bean-panel\">\r\n        <div className=\"bean-panel-header\">\r\n            <div>\r\n                <b>{bean.name}&nbsp;\r\n                {\r\n                    city ? <small> of {city.name} </small>\r\n                    : null\r\n                }\r\n                </b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => {\r\n                    dispatch(doSelectCity({cityKey:bean.cityKey}))\r\n                }} >❌</button>\r\n            </div>\r\n            <div className=\"bean-view\">                \r\n                <span className={classes+\" bean\"}>\r\n                    {\r\n                        faceOverride === undefined ? BeanGetFace(bean) : faceOverride\r\n                    }\r\n                </span>\r\n            </div>\r\n            {\r\n                bean.titleKey != null ? <TitleView titleKey={bean.titleKey}></TitleView> : null\r\n            }\r\n            <div className=\"horizontal\">\r\n                <span className=\"text-center\">\r\n                    💰 ${bean.cash.toFixed(2)}\r\n                </span>\r\n                <span className=\"text-center\">\r\n                    🙂 {Math.round(bean.lastHappiness)}%\r\n                </span>\r\n                <span className=\"text-center\">\r\n                    {Math.round(bean.happiness.flatAverage)} {EmoteIcon['happiness']} /day\r\n                </span>\r\n            </div>\r\n            {renderTraits(alien.scanned_bean[bean.key], bean, alien, () => {\r\n                props.brainwash();\r\n            }, () => {\r\n                dispatch(scan({beanKey: bean.key}));\r\n                setFaceOverride('😨');\r\n                _resetFace();\r\n            })}\r\n        </div>\r\n        <div className=\"grow-1 pad-4 bean-panel-content\">\r\n            <div className=\"cylinder blue-orange horizontal\">\r\n                <button type=\"button\" className={innerView=='beliefs'?'active':''} onClick={()=>setInnerView('beliefs')}>\r\n                    😇 Traits\r\n                </button>\r\n                <button type=\"button\" className={innerView=='feelings'?'active':''} onClick={()=>setInnerView('feelings')}>\r\n                    😐 Feelings\r\n                </button>\r\n                <button type=\"button\" className={innerView=='priorities'?'active':''} onClick={()=>setInnerView('priorities')}>\r\n                    💪 Priorities\r\n                </button>\r\n            </div>\r\n            {renderInner(alien.scanned_bean[bean.key], innerView, bean, city, alien)}\r\n        </div>\r\n        <div className=\"bean-action-card-parent\">\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\" onClick={() => {\r\n                    props.brainwash()\r\n                }}\r\n                    title=\"Rewrite one of this being's traits\"\r\n                >😵 Brainwash\r\n                    <small>-Sanity +-Trait</small>\r\n                </button>\r\n            </div>\r\n            {/* <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\"  onClick={() => brainwash()}  disabled={true}\r\n                    title=\"Give this being food or meds or cash\">\r\n                    🎁 Gift\r\n                    <small>-Energy +Things</small>\r\n                </button>\r\n            </div> */}\r\n            \r\n            <TitleButton beanKey={bean.key} entitle={props.entitle}></TitleButton>\r\n            <div className=\"card-parent\">\r\n                {/* <button type=\"button\" className=\"button card\" onClick={scan} disabled={true}\r\n                    title=\"Steal a bit of this being's mind\">\r\n                    🤪 Braindrain\r\n                    <small>-Energy -Sanity</small>\r\n                </button> */}\r\n                <button type=\"button\" className=\"button card\" onClick={() => {\r\n                    dispatch(vaporize({beanKey: bean.key}));\r\n                    setFaceOverride('😨');\r\n                    _resetFace();\r\n                }}\r\n                    disabled={!PlayerCanAfford(alien, alien.difficulty.cost.bean.vaporize)}\r\n                    title=\"Delete this being from the experiment\"\r\n                >\r\n                    ☠️ Vaporize\r\n                    <CostSmall cost={alien.difficulty.cost.bean.vaporize}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\"\r\n                    disabled={bean.lifecycle != 'alive' || !PlayerCanAfford(alien, alien.difficulty.cost.bean.abduct)}\r\n                    onClick={() => dispatch(abduct({beanKey: bean.key}))}\r\n                    title=\"Remove this being for study\"\r\n                >\r\n                    👾 Abduct for Research\r\n                    <CostSmall cost={alien.difficulty.cost.bean.abduct} rider=\"+Tech\"></CostSmall>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport const TitleButton: React.FC<{\r\n    beanKey: number,\r\n    entitle: () => void\r\n}> = (props) => {\r\n    const titles = useAppSelector(s => s.world.titles.allIDs);\r\n    if (titles.length > 0){\r\n        return <div className=\"card-parent\">\r\n            <button type=\"button\" className=\"button card\"\r\n                // disabled={bean.lifecycle != 'alive' || !PlayerCanAfford(alien, alien.difficulty.cost.bean.abduct)}\r\n                onClick={() => props.entitle()}\r\n                title=\"Give this bean a title\"\r\n            >\r\n                👑 Give Title\r\n                <CostSmall cost={{}} rider=\"+Title\"></CostSmall>\r\n            </button>\r\n        </div>\r\n    }\r\n    return null\r\n}\r\n\r\nexport const TitleView: React.FC<{\r\n    titleKey: number\r\n}> = (props) => {\r\n    const title = useAppSelector(s => s.world.titles.byID[props.titleKey]);\r\n    return <div className=\"text-center\">\r\n        <strong>\r\n        {title.headwear} {title.name} {title.badge} \r\n        </strong>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../i18n/text\";\r\nimport { CityGetPopulationTraitsList, ICity } from \"../simulation/City\";\r\nimport { IPlayerData } from \"../simulation/Player\";\r\nimport { selectBeansByCity } from \"../state/features/world.reducer\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { CardButton } from \"../widgets/CardButton\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { Trait } from \"../World\";\r\n\r\ninterface OverviewPanelP {\r\n    city: ICity,\r\n    alien: IPlayerData,\r\n    clearCity: () => void;\r\n}\r\n\r\nexport const OverviewPanel: React.FC<OverviewPanelP> = (props) => {\r\n    const beans = useAppSelector(x => selectBeansByCity(x.world, props.city.key));\r\n    let header = <div>\r\n        Human Emotion Farm\r\n        <div>\r\n            <small>Part of the 🌌 Galactic Xenosensation Federation</small>\r\n        </div>\r\n    </div>;\r\n    if (props.city) {\r\n        header = <div>\r\n            <div>\r\n                <b>{props.city.name}</b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => props.clearCity()} >❌</button>\r\n            </div>\r\n        </div>;\r\n    }\r\n    const avg_happy = beans.reduce((sum, x) => sum + x.lastHappiness, 0) / (beans.length || 1);\r\n    const avg_cash = beans.reduce((sum, x) => sum + x.cash, 0) / (beans.length || 1);\r\n    return (\r\n        <div>\r\n            {header}\r\n            {/* <div className=\"header\"><b>Demographics</b></div> */}\r\n            <div className=\"header\"><b>👥 Subjects</b></div>\r\n            <div>\r\n                <b>Population</b>&nbsp;\r\n                <span>{beans.length}</span>\r\n            </div>\r\n            {/* <AxisReadout report={reportEthno(beans)}>Ethnicity</AxisReadout> */}\r\n            <NeedReadout beans={beans} need={(b) => b.food} dire=\"starving\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n            <NeedReadout beans={beans} need={(b) => b.stamina} dire=\"homeless\" abundant=\"rested\">Housing</NeedReadout>\r\n            <NeedReadout beans={beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n            <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n            <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n            {\r\n                beans && beans.length ? <>\r\n                    <div className=\"header\"><b>🧠 Traits</b></div>\r\n                    <div className=\"max-w-300\">\r\n                        { \r\n                            CityGetPopulationTraitsList(props.alien.scanned_bean, beans).map((v) => \r\n                                <span key={v.noun} className=\"overview-belief\">\r\n                                    {v.icon}&nbsp;{v.noun}&nbsp;x{v.count}\r\n                                </span>)\r\n                        }\r\n                    </div>\r\n                </> : null\r\n            }\r\n            {\r\n                beans.length || 0 > 7 ? <div className=\"card-parent\">\r\n                    <CardButton icon=\"🛰️\" name=\"Scan All\" disabled={true} subtext=\"-Energy +Info\" onClick={() => {}}></CardButton>\r\n                </div> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{ report: { avg: number, winner: Trait } }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent + '%'\r\n        }\r\n        return (\r\n            <div>\r\n                <b>\r\n                    {this.props.children}\r\n                </b>&nbsp;&nbsp;\r\n                <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n                <div className=\"bar\">\r\n                    <div className=\"bar-inner\" style={style}>\r\n                        {percent}%\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { doSelectNone } from \"../state/features/selected.reducer\";\r\nimport { abduct } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { selectSelectedBean, selectSelectedCity } from \"../state/state\";\r\nimport { BeanPanel } from \"./BeanPanel\";\r\nimport { HexPanel } from \"./HexPanel\";\r\nimport { OverviewPanel } from \"./OverviewPanel\";\r\n\r\nexport const DetailPanel: React.FC<{\r\n    openBrainwash: () => void,\r\n    openEntitle: () => void,\r\n}> = (props) => {\r\n    const city = useAppSelector(selectSelectedCity);\r\n    const districtKey = useAppSelector((x) => x.selected.selectedDistrictKey);\r\n    const district = useAppSelector((x) => districtKey != null ? x.world.districts.byID[districtKey]: undefined);\r\n    const bean = useAppSelector(selectSelectedBean);\r\n    const alien = useAppSelector((x) => x.world.alien);\r\n    const dispatch = useAppDispatch();\r\n    if (bean && city){\r\n        return <BeanPanel bean={bean} city={city} alien={alien}\r\n        brainwash={() => props.openBrainwash()}\r\n        entitle={() => props.openEntitle()}\r\n        ></BeanPanel>\r\n    }\r\n    if (district) {\r\n        return <HexPanel difficulty={alien.difficulty}></HexPanel>\r\n    }\r\n    if (city) {\r\n        return <OverviewPanel city={city} clearCity={() => dispatch(doSelectNone())} alien={alien}></OverviewPanel>\r\n    }\r\n    return <div></div>\r\n}","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\nimport { doSelectBean } from \"../state/features/selected.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { selectEventIDs } from \"../state/state\";\r\n\r\nfunction shouldEventJumpToBean(e: IEvent): boolean{\r\n    return e.beanKey != null && (\r\n        e.trigger === 'speechcrime' ||\r\n        e.trigger === 'birth');\r\n}\r\n\r\nexport const EventsPanel: React.FC<{\r\n    \r\n}> = (props) => {\r\n    const eventIDs = useAppSelector(selectEventIDs);\r\n    const events = useAppSelector(state => eventIDs.slice().reverse().map(id => state.world.events.byID[id]));\r\n    const dispatch = useAppDispatch();\r\n    let elements = events.map((e, i) => {\r\n        const alert = e.icon === '🚨';\r\n        const tallTrigger = e.trigger === 'nojobslots' || e.trigger === 'persuasion';\r\n        return <div key={i} className={alert||tallTrigger ? 'tall': ''}>\r\n            <span className={alert ? 'police-siren': ''}>{e.icon}</span>&nbsp;\r\n            {\r\n                shouldEventJumpToBean(e) ? <a onClick={() => {\r\n                    if (e.beanKey && e.cityKey) {\r\n                        dispatch(doSelectBean({beanKey: e.beanKey, cityKey: e.cityKey}));\r\n                    }\r\n            }} href=\"javascript:void(0)\">{e.message}</a> : <span>{e.message}</span>\r\n            }\r\n        </div>\r\n    });\r\n    if (events.length === 0){\r\n        elements = [<div key={0}>\r\n            <small>No events yet</small>\r\n        </div>]\r\n    }\r\n    return (                \r\n    <div className=\"events-panel\">\r\n        <div>\r\n            <b>Events</b>\r\n        </div>\r\n        {elements}\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { DefaultDifficulty, triadToString } from \"../Game\";\r\nimport { Curriculums, GetAverage, Goals, IGoal, IGoalProgress, IPlayerData, IProgressable } from \"../simulation/Player\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\n\r\n\r\nfunction renderReward(g: IGoal){\r\n  return <div>\r\n    <small>\r\n    🎁 {triadToString(g.reward || {}, '+')}\r\n    </small>\r\n  </div>\r\n}\r\nfunction renderGoal(progress: IGoalProgress|undefined, g: IGoal){\r\n  return <li>\r\n    {progress?.done ? '☑️': '⭕️'}\r\n    {g.text}\r\n    {g.tooltip != null ? <small title={g.tooltip}>❔</small> : null}\r\n    {progress?.done || g.reward == null ? null : renderReward(g)}\r\n  </li>\r\n}\r\nexport const GoalsPanel: React.FC = () => {\r\n  const progress = useAppSelector(x => x.world.alien.goalProgress);\r\n  const goals = useAppSelector(x => x.world.alien.goals);\r\n  const workingReportCard = useAppSelector(x => x.world.alien.workingReportCard);\r\n  return (<div className=\"goals\">\r\n    <div><b>Goals</b></div>\r\n    <ul>\r\n      {goals.map((key) => {\r\n        return renderGoal(progress[key], Goals[key]);\r\n      })}\r\n    </ul>\r\n    <div><b>Report Card</b></div>\r\n    <p className=\"horizontal\">\r\n      <span>\r\n        Last Grade: <b>D</b>\r\n      </span>\r\n      <span>\r\n        Next Grade in: <b>2 mo.</b>\r\n      </span>\r\n    </p>\r\n    <p>\r\n    </p>\r\n    <table style={{margin: 'auto'}}>\r\n      <tbody>\r\n        <tr>\r\n          <th>🎯 Happiness\r\n          </th>\r\n          <td>\r\n            {workingReportCard.Happiness}\r\n          </td>\r\n          <td>\r\n            <small title=\"Are your subjects happy?\">❔</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"text-left\" colSpan={3}>\r\n            <small>\r\n          {Curriculums.Default.RubricDescription.Happiness}\r\n            </small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>🎯 Prosperity</th>\r\n          <td>\r\n            {workingReportCard.Prosperity}\r\n          </td>\r\n          <td>\r\n            <small title=\"Are your subjects fed and healthy?\">❔</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"text-left\" colSpan={3}>\r\n          <small>{Curriculums.Default.RubricDescription.Prosperity}</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>🎯 Stability\r\n          </th>\r\n          <td>\r\n            {workingReportCard.Stability}\r\n          </td>\r\n          <td>\r\n            <small title=\"Are your subjects sane and civil?\">❔</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"text-left\" colSpan={3}>\r\n          <small>{Curriculums.Default.RubricDescription.Stability}</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>🎯 Dogma\r\n          </th>\r\n          <td>\r\n            {workingReportCard.Dogma}\r\n          </td>\r\n          <td>\r\n            <small title=\"Do your society's rules match your utopian ideals?\">❔</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"text-left\" colSpan={3}>\r\n          <small>{Curriculums.Default.RubricDescription.Dogma}</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td colSpan={3}>\r\n            <hr />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            Avg. Grade\r\n          </th>\r\n          <td>\r\n            {GetAverage(workingReportCard)}\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { PlayerCanAfford } from \"../simulation/Player\";\r\nimport { buyBots, buyEnergy, buyTrait, scrubHedons } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\nimport { EmoteIcon } from \"../World\";\r\n\r\n export const MarketPanel: React.FC<{\r\n }> = () => {\r\n     const player = useAppSelector(s => s.world.alien);\r\n     const dispatch = useAppDispatch();\r\n    return <div>\r\n        <div className=\"text-center\">\r\n            <strong>🌌 Galactic 😨 Emotion 💰 Market</strong>\r\n        </div>\r\n        <p>\r\n            <small>\r\n                The premier exchange for ⚡️, 🤖,  and {EmoteIcon['happiness']}!\r\n            </small>\r\n        </p>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" onClick={() => dispatch(buyEnergy({amount: 1}))}\r\n                disabled={!PlayerCanAfford(player, player.difficulty.cost.market.resource.energy)}>\r\n                +1 ⚡️ Energy\r\n                <CostSmall cost={player.difficulty.cost.market.resource.energy} qty={1} ></CostSmall>\r\n            </button>\r\n            <button className=\"card button\" onClick={() => dispatch(buyEnergy({amount: 5}))}\r\n                disabled={!PlayerCanAfford(player, player.difficulty.cost.market.resource.energy, 5)}>\r\n                +5 ⚡️ Energy\r\n                <CostSmall cost={player.difficulty.cost.market.resource.energy} qty={5} ></CostSmall>\r\n            </button>\r\n        </div>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" onClick={() => dispatch(buyBots({amount: 1}))}\r\n                disabled={!PlayerCanAfford(player, player.difficulty.cost.market.resource.bots)}>\r\n                +1 🤖 Bot\r\n                <CostSmall cost={player.difficulty.cost.market.resource.bots} qty={1} ></CostSmall>\r\n            </button>\r\n            <button className=\"card button\" onClick={() => dispatch(buyBots({amount: 5}))}\r\n                disabled={!PlayerCanAfford(player, player.difficulty.cost.market.resource.bots, 5)}>\r\n                +5 🤖 Bots\r\n                <CostSmall cost={player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n            </button>\r\n        </div>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" onClick={() => dispatch(scrubHedons())}\r\n                disabled={player.hedons.amount >= 0 || !PlayerCanAfford(player, player.difficulty.cost.market.scrubHedons)}>\r\n                Remove 💢 Negative Hedons\r\n                <CostSmall cost={player.difficulty.cost.market.scrubHedons} qty={1} ></CostSmall>\r\n            </button>\r\n            {/* <button className=\"card button\" onClick={() => buyBots(5)}\r\n                disabled={!PlayerCanAfford(player.difficulty.cost.market.resource.bots, 5)}>\r\n                +5 🤖 Bots\r\n                <CostSmall cost={player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n            </button> */}\r\n        </div>\r\n        <div>\r\n            \r\n            <small>\r\n                <i>Current <span className=\"trait-gem\"></span> Trait Gems for sale:</i>\r\n            </small>\r\n        </div>\r\n        <div className=\"short-scroll\">\r\n            {\r\n                <MarketTraits hedons={player.hedons.amount}></MarketTraits>\r\n            }\r\n        </div>\r\n    </div>\r\n }\r\n\r\n \r\nexport const MarketTraits: React.FC<{\r\n    hedons: number,\r\n}> = (props) => {\r\n    const list = useAppSelector(s => s.world.marketTraitsForSale);\r\n    const dispatch = useAppDispatch();\r\n    return <>\r\n    {\r\n    list.map((l, i) => {\r\n        const t = SecondaryBeliefData[l.trait];\r\n        const className = 'belief-name '+t.rarity;\r\n        return <div className=\"card-parent\" key={i}>\r\n            <button className=\"card button\" onClick={() => dispatch(buyTrait({l: l}))} disabled={props.hedons < (l.cost.hedons || 0)}>\r\n                <span className={className}>\r\n                    {t.icon} {t.noun}\r\n                </span>\r\n                <CostSmall cost={l.cost}></CostSmall>\r\n            </button>\r\n        </div>\r\n    })\r\n    }\r\n    </>\r\n}","const fourLetterWords = [\r\n'able','acid','aged','also','area','army','away','baby','back','ball','band','bank',\r\n'base','bath','bear','beat','been','beer','bell','belt','best','bill','bird','blow','blue','boat',\r\n'body','bomb','bond','bone','book','boom','born','boss','both','bowl','bulk','burn',\r\n'bush','busy','call','calm','came','camp','card','care','case','cash','cast','cell',\r\n'chat','chip','city','club','coal','coat','code','cold','come','cook','cool','cope',\r\n'copy','CORE','cost','crew','crop','dark','data','date','dawn','days','dead','deal',\r\n'dean','dear','debt','deep','deny','desk','dial','dick','diet','disc','disk','does',\r\n'done','door','dose','down','draw','drew','drop','drug','dual','duke','dust','duty',\r\n'each','earn','ease','east','easy','edge','else','even','ever','evil','exit','face',\r\n'fact','fail','fair','fall','farm','fast','fate','fear','feed','feel','feet','fell',\r\n'felt','file','fill','film','find','fine','fire','firm','fish','five','flat','flow',\r\n'food','foot','ford','form','fort','four','free','from','fuel','full','fund','gain',\r\n'game','gate','gave','gear','gene','gift','girl','give','glad','goal','goes','gold',\r\n'Golf','gone','good','gray','grew','grey','grow','gulf','hair','half','hall','hand',\r\n'hang','hard','harm','hate','have','head','hear','heat','held','hell','help','here',\r\n'hero','high','hill','hire','hold','hole','holy','home','hope','host','hour','huge',\r\n'hung','hunt','hurt','idea','inch','into','iron','item','jack','jane','jean','john',\r\n'join','jump','jury','just','keen','keep','kent','kept','kick','kill','kind','king',\r\n'knee','knew','know','lack','lady','laid','lake','land','lane','last','late','lead',\r\n'left','less','life','lift','like','line','link','list','live','load','loan','lock',\r\n'logo','long','look','lord','lose','loss','lost','love','luck','made','mail','main','make',\r\n'male','many','Mark','mass','matt','meal','mean','meat','meet','menu','mere','mike',\r\n'mile','milk','mill','mind','mine','miss','mode','mood','moon','more','most','move',\r\n'much','must','name','navy','near','neck','need','news','next','nice','nick','nine',\r\n'none','nose','note','okay','once','only','onto','open','oral','over','pace','pack',\r\n'page','paid','pain','pair','palm','park','part','pass','past','path','peak','pick',\r\n'pink','pipe','plan','play','plot','plug','plus','poll','pool','poor','port','post',\r\n'pull','pure','push','race','rail','rain','rank','rare','rate','read','real','rear',\r\n'rely','rent','rest','rice','rich','ride','ring','rise','risk','road','rock','role',\r\n'roll','roof','room','root','rose','rule','rush','ruth','safe','said','sake','sale',\r\n'salt','same','sand','save','seat','seed','seek','seem','seen','self','sell','send',\r\n'sent','sept','ship','shop','shot','show','shut','sick','side','sign','site','size',\r\n'skin','slip','slow','snow','soft','soil','sold','sole','some','song','soon','sort',\r\n'soul','spot','star','stay','step','stop','such','suit','sure','take','tale','talk',\r\n'tall','tank','tape','task','team','tech','tell','tend','term','test','text','than',\r\n'that','them','then','they','thin','this','thus','till','time','tiny','told','toll',\r\n'tone','tony','took','tool','tour','town','tree','trip','true','tune','turn','twin',\r\n'type','unit','upon','used','user','vary','vast','very','vice','view','vote','wage',\r\n'wait','wake','walk','wall','want','ward','warm','wash','wave','ways','weak','wear',\r\n'week','well','went','were','west','what','when','whom','wide','wife','wild','will',\r\n'wind','wine','wing','wire','wise','wish','with','wood','word','wore','work','yard',\r\n'yeah','year','your','zero','zone',\r\n];\r\n\r\nexport function GetSeedName(){\r\n    let seed = '';\r\n    for (let i = 0; i < 4; i++) {\r\n        if (i > 0)\r\n            seed += '-';\r\n        const rand = Math.random();\r\n        seed += fourLetterWords[Math.floor(rand * fourLetterWords.length)];\r\n    }\r\n    return seed;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { GameStorageInstance } from '../GameStorage';\r\nimport { manualSave } from '../state/features/world.reducer';\r\nimport { useAppDispatch } from '../state/hooks';\r\nexport const AutosaveWidget: React.FC<{}> = (props) => {\r\n    const [isDirty, setDirty] = useState(false);\r\n    const [isSaving, setSaving] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const onDirty = (dirty: boolean) => {\r\n        setDirty(dirty);\r\n    }\r\n    const onSaving = () => {\r\n        setSaving(true);\r\n        setTimeout(() => setSaving(false), 500);\r\n    }\r\n    const d = useEffect(() => {\r\n        GameStorageInstance.Dirty.subscribe(onDirty);\r\n        return () => GameStorageInstance.Dirty.unsubscribe(onDirty);\r\n    });\r\n    const s = useEffect(() => {\r\n        GameStorageInstance.Saving.subscribe(onSaving);\r\n        return () => GameStorageInstance.Saving.unsubscribe(onSaving);\r\n    });\r\n    return <button disabled={!isDirty || isSaving} onClick={() => {\r\n        dispatch(manualSave());\r\n    }}>\r\n            {\r\n                isSaving ? '💿' : isDirty ? '💾' : '✔️'\r\n            }\r\n        </button>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { ChangePubSub, PubSub } from \"../events/Events\";\r\n\r\ninterface Bubble {string: string, id: number, className?: string};\r\n\r\nfunction useBubbles<T>(sub: PubSub<T>, transform: (input: T) => {string: string, className: string}){\r\n    const [bubbles, setBubbles] = useState<Bubble[]>([]);\r\n    let bubbleSeed = 0;\r\n    const onEvent = (event: T) => {\r\n        const id = ++bubbleSeed;\r\n        setBubbles(bubbles.concat([{\r\n            id: id,\r\n            ...transform(event)\r\n        }]));\r\n        setTimeout(() => {\r\n            setBubbles(\r\n                bubbles.filter((b) => b.id != id)\r\n            )\r\n        }, 1500)\r\n    }\r\n    useEffect(() => {\r\n        sub.subscribe(onEvent);\r\n        return () => sub.unsubscribe(onEvent);\r\n    });\r\n    return bubbles;\r\n}\r\n\r\nexport class BubbleNumberText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<Bubble>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n    bubbleSeed = 0;\r\n    onChange = (ev: {change: number}) => {\r\n        const id = ++this.bubbleSeed;\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                string: (positive ? '+': '') + ev.change,\r\n                id: id,\r\n                className: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.id != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.id} className={[b.className, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.string}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}\r\n\r\nexport const BubbleSeenTraitsText: React.FC<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent: PubSub<{k: string, v: boolean}>\r\n}> = (props) => {\r\n    const bubbles = useBubbles(props.changeEvent, (input: {k: string, v: boolean}) => {\r\n        return {\r\n            string: `Discovered ${input.k}!`,\r\n            className: 'seen-belief'\r\n        }\r\n    })\r\n    return <span className=\"bubble-parent\">\r\n        {props.children}\r\n        {bubbles.map((b) => <span key={b.id} className={[b.className, props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {props.icon} {b.string}\r\n        </span>)}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\n\r\nexport class CapsuleLabel extends React.Component<{\r\n    icon?: string,\r\n    label?: string\r\n}, {\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const classN = 'capsule-label '+this.props.label||'';\r\n        return <span className={classN}>\r\n            <span className=\"capsule-icon\">\r\n                {this.props.icon}\r\n            </span>\r\n            <span className=\"capsule-text\">\r\n                {this.props.label}:\r\n            </span>\r\n            <span className=\"capsule-value\">\r\n                {this.props.children}\r\n            </span>\r\n        </span>\r\n    }\r\n}\r\n\r\nexport const EnergyAmount: React.FC = () => {\r\n    const amt = useAppSelector(x => x.world.alien.energy.amount);\r\n    return <span>{amt.toFixed(1)}</span>\r\n}\r\nexport const BotsAmount: React.FC = () => {\r\n    const amt = useAppSelector(x => x.world.alien.bots.amount);\r\n    return <span>{amt.toFixed(1)}</span>\r\n}\r\nexport const HedonAmount: React.FC = () => {\r\n    const amt = useAppSelector(x => x.world.alien.hedons.amount);\r\n    return <span>{amt.toFixed(0)}</span>\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick?: () => void;\r\n    closeButtonText?: string;\r\n    className?: string;\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (!this.props.onClick)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick && this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n        <div className={\"modal \" + (this.props.className || '')}>\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport { PartOfDay, Season } from \"../simulation/Time\"\r\nimport { useAppSelector } from \"../state/hooks\"\r\n\r\nfunction SeasonHour(hour: number){\r\n    if (hour < PartOfDay.Morning)\r\n        return '🌙';\r\n    if (hour < PartOfDay.Noon)\r\n        return '🌄';\r\n    if (hour < PartOfDay.Evening)\r\n        return '☀️';\r\n    return '🌇';\r\n}\r\nexport const SeasonWidget: React.FC = () => {\r\n    const date = useAppSelector(s => s.world.date)\r\n    return <span>\r\n        &nbsp;Year {date.year},&nbsp;{Season[date.season]} {date.day} {SeasonHour(date.hour)}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { AnimatedBean } from \"../petri-ui/AnimatedBean\";\r\nimport { SocialBuildings } from \"../petri-ui/PetriHexes\";\r\nimport { IBean } from \"../simulation/Agent\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { IBuilding } from \"../simulation/Geography\";\r\nimport { doSelectBean } from \"../state/features/selected.reducer\";\r\nimport { selectCityBeanIDs } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport \"./SocialGraph.css\";\r\n\r\ninterface SocialGraphP{\r\n    city: ICity,\r\n    onClick: (b: IBean) => void;\r\n    onClickBuilding: (b: IBuilding) => void;\r\n}\r\n\r\nexport const SocialGraph: React.FC<SocialGraphP> = (props) => {\r\n    const beanKeys = useAppSelector(state => selectCityBeanIDs(state.world, props.city.key));\r\n    const scannedBeans = useAppSelector(s => s.world.alien.scanned_bean)\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"social-graph\">\r\n        <div className=\"social-graph-row\">\r\n        {\r\n            beanKeys.map((b) => \r\n            <div key={b} className=\"bean-node\" onClick={() => dispatch(doSelectBean({cityKey:props.city.key, beanKey: b}))}>\r\n                <AnimatedBean beanKey={b} static={true} sitStill={true} cityKey={props.city.key}>\r\n                </AnimatedBean>\r\n                {\r\n                    scannedBeans[b] ? null : <span className=\"social-graph-unscanned prohibited-emoji\">🛰️</span>\r\n                }\r\n            </div>)\r\n        }\r\n        </div>\r\n        <div className=\"social-graph-row\">\r\n        {\r\n            <SocialBuildings city={props.city} onClickBuilding={props.onClickBuilding}></SocialBuildings>\r\n        }\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport \"./StopPlayFast.css\"\r\n\r\nexport class StopPlayFastButtons extends React.Component<{\r\n    timeScale: number,\r\n    setTimeScale: (s: number) => void\r\n}>{\r\n    render(){\r\n        return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n            ⌛️\r\n            <button type=\"button\" className={this.props.timeScale == 0 ? 'active': ''} onClick={() => this.props.setTimeScale(0)}>⏹</button>\r\n            <button type=\"button\" className={this.props.timeScale == 1 ? 'active': ''} onClick={() => this.props.setTimeScale(1)}>▶️</button>\r\n            <button type=\"button\" className={this.props.timeScale == 2 ? 'active': ''} onClick={() => this.props.setTimeScale(2)}>⏩</button>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport const GeoNetworkButtons: React.FC<{\r\n    activeMain: 'geo' | 'network';\r\n    setActiveMain: (v: 'geo' | 'network' ) => void\r\n}> = (props) => {\r\n    \r\n    return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n        👁️\r\n        <button type=\"button\" className={props.activeMain == 'geo' ? 'active': ''} onClick={() => props.setActiveMain('geo')}>🌎</button>\r\n        <button type=\"button\" className={props.activeMain == 'network' ? 'active': ''} onClick={() => props.setActiveMain('network')}>🌐</button>\r\n    </div>\r\n    \r\n}","import React from \"react\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\n\r\nexport class TimelyEventToggle extends React.Component<{\r\n    event: PubSub<IEvent>,\r\n    eventIcon: string,\r\n    eventClass: string\r\n}, {\r\n eventCount: number,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.props.event.subscribe(this.onEvent);\r\n        this.state = {\r\n            eventCount: 0\r\n        };\r\n    }\r\n    onEvent = (e: IEvent) => {\r\n        this.setState({eventCount: this.state.eventCount+1});\r\n        window.setTimeout(() => {\r\n            this.setState({\r\n                eventCount: this.state.eventCount-1\r\n            });\r\n        }, 3000);\r\n    }\r\n    render(){\r\n        return <span>\r\n            {this.state.eventCount < 1 ? this.props.children : <span className={this.props.eventClass}>{this.props.eventIcon}</span>}\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { ITitle } from \"../simulation/Titles\";\r\nimport { beanSetTitle } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\n\r\nexport const EntitleModalContent: React.FC<{\r\n    closeModal: () => void\r\n}> = (props) => {\r\n    const selectedBeanKey = useAppSelector(s => s.selected.selectedBeanKey);\r\n    const titles = useAppSelector(s => s.world.titles.allIDs.reduce( (all, id)=>{all.push(s.world.titles.byID[id]); return all;}, [] as ITitle[]));\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"pad-4p\">\r\n        <h1>Award Title</h1>\r\n        <div>\r\n        {\r\n            titles.map((x, i) => <div key={i} className=\"card-parent\">\r\n                <button className=\"button card\" onClick={() => {\r\n                    if (selectedBeanKey != null){\r\n                        dispatch(beanSetTitle({beanKey: selectedBeanKey, titleKey: x.key}))\r\n                        props.closeModal();\r\n                    }\r\n                }}>\r\n                    {x.headwear} {x.name} {x.badge}\r\n                </button>\r\n            </div>)\r\n        }\r\n        </div>\r\n    </div>\r\n};","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { TransformComponent, TransformWrapper } from \"react-zoom-pan-pinch\";\r\nimport './App.css';\r\nimport './chrome/chrome.css';\r\nimport { IEvent } from './events/Events';\r\nimport { GameStorageInstance, isGame } from './GameStorage';\r\nimport { BrainwashingContent } from './modal-content/Brainwashing';\r\nimport { SocietyPanel } from './modal-content/Society';\r\nimport { EconomyReport } from './modal-content/EconomyReport';\r\nimport { EscapeMenu } from './modal-content/EscapeMenu';\r\nimport { GovernmentPanel } from './modal-content/Gov';\r\nimport { GreetingPanel } from './modal-content/GreetingPanel';\r\nimport { LoadGameMenu } from './modal-content/LoadGameMenu';\r\nimport { MainMenu } from './modal-content/MainMenu';\r\nimport { ResearchPanel } from './modal-content/Research';\r\nimport { TraitsReport } from './modal-content/TraitsReport';\r\nimport { MoverStoreInstance } from './MoverStoreSingleton';\r\nimport { WorldTile2 } from './petri-ui/WorldTile';\r\nimport { DetailPanel } from './right-panel/DetailPanel';\r\nimport { EventsPanel } from './right-panel/Events';\r\nimport { GoalsPanel } from './right-panel/Goals';\r\nimport { MarketPanel } from './right-panel/MarketPanel';\r\nimport { SignalStoreInstance } from './SignalStore';\r\nimport { Point } from './simulation/Geography';\r\nimport { MoverStore } from './simulation/MoverBus';\r\nimport { GetSeedName } from './simulation/SeedGen';\r\nimport { animate_beans, animate_pickups, animate_ufos } from './simulation/WorldSim';\r\nimport { doSelectBean, doSelectBuilding, doSelectNone } from './state/features/selected.reducer';\r\nimport { cheatAdd, loadGame, newGame, worldTick } from './state/features/world.reducer';\r\nimport { RootState, store as StoreState } from './state/state';\r\nimport { AutosaveWidget } from './widgets/Autosave';\r\nimport { BubbleNumberText, BubbleSeenTraitsText } from './widgets/BubbleText';\r\nimport { BotsAmount, CapsuleLabel, EnergyAmount, HedonAmount } from './widgets/CapsuleLabel';\r\nimport { Modal } from './widgets/Modal';\r\nimport { SeasonWidget } from './widgets/Season';\r\nimport { SocialGraph } from './widgets/SocialGraph';\r\nimport { GeoNetworkButtons, StopPlayFastButtons } from './widgets/StopPlayFast';\r\nimport { TimelyEventToggle } from './widgets/TimelyEventToggle';\r\nimport { WorldSfxInstance, WorldSound } from './WorldSound';\r\nimport { EntitleModalContent } from './modal-content/Entitling';\r\n\r\nexport type ModalView = 'mainmenu'|'loadgame'|'escapemenu'|'greeting' | 'economy' | 'society' | 'gov' | 'polisci' | 'brainwash' | 'traits'|'entitle';\r\ninterface AppPs {\r\n}\r\ninterface AppState {\r\n  activeModal: ModalView | null;\r\n  activeMain: 'geo' | 'network';\r\n  activeRightPanel: 'events' | 'overview' | 'goals' | 'market';\r\n  timeScale: number;\r\n  spotlightEvent: IEvent | undefined;\r\n  cursor?: Point;\r\n  newGameSeed: string;\r\n}\r\nexport const SfxContext = React.createContext<WorldSound|undefined>(undefined);\r\nexport const MoverContext = React.createContext<MoverStore>(MoverStoreInstance);\r\n\r\nconst LogicTickMS = 2000;\r\nconst SpotlightDurationTimeMS = 5000;\r\nconst store = StoreState;\r\n\r\nconst AutosaveMilliseconds = 15 * 1000;\r\nclass App extends React.Component<AppPs, AppState>{\r\n  constructor(props: AppPs) {\r\n    super(props);\r\n    this.state = {\r\n      activeMain: 'geo',\r\n      activeModal: 'mainmenu',\r\n      activeRightPanel: 'overview',\r\n      timeScale: 0,\r\n      spotlightEvent: undefined,\r\n      newGameSeed: GetSeedName()\r\n    };\r\n  }\r\n  private previousTimeMS: DOMHighResTimeStamp = 0;\r\n  private logicTickAccumulatorMS: number = 0;\r\n  private millisecondsSinceLastSave: DOMHighResTimeStamp = 0;\r\n  private saveAccumulatorMS: number = 0;\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.keyupHandler, false);\r\n    window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n      this.previousTimeMS = time;\r\n      window.requestAnimationFrame(this.tick);\r\n    });\r\n    store.subscribe(() => {\r\n      const s = store.getState();\r\n      if ((s.selected.selectedBeanKey != null || s.selected.selectedBuildingKey != null || s.selected.selectedDistrictKey != null) && this.state.activeRightPanel != 'overview'){\r\n        this.setState({activeRightPanel: 'overview'});\r\n      }\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.keyupHandler);\r\n  }\r\n  tick = (timeMS: DOMHighResTimeStamp) => {\r\n    // Compute the delta-time against the previous time\r\n    const deltaTimeMS = (timeMS - this.previousTimeMS);\r\n    // Update the previous time\r\n    this.previousTimeMS = timeMS;\r\n\r\n    if (deltaTimeMS > 0) {\r\n      const gameDeltaTimeMS = deltaTimeMS * this.state.timeScale;\r\n\r\n      animate_ufos(store.getState().world, deltaTimeMS).map(x => store.dispatch(x));\r\n      if (gameDeltaTimeMS > 0){\r\n        this.logicTickAccumulatorMS += deltaTimeMS;\r\n        animate_pickups(store.getState().world, deltaTimeMS).map(x => store.dispatch(x));\r\n        animate_beans(store.getState().world, deltaTimeMS).map(x => store.dispatch(x));\r\n  \r\n        if (this.logicTickAccumulatorMS > LogicTickMS) {\r\n          store.dispatch(worldTick())\r\n          this.logicTickAccumulatorMS = 0;\r\n        }\r\n      }\r\n      this.millisecondsSinceLastSave += deltaTimeMS;\r\n      //save every 30 seconds\r\n      if(GameStorageInstance.Dirty.current && this.millisecondsSinceLastSave > AutosaveMilliseconds){\r\n        GameStorageInstance.SaveGame(store.getState().world);\r\n        this.millisecondsSinceLastSave = 0;\r\n      }\r\n    }\r\n    window.requestAnimationFrame(this.tick);\r\n  }\r\n  cheatMode: boolean = false;\r\n  keyupHandler = (event: KeyboardEvent) => {\r\n    if (event.key === ' ') {\r\n      if (this.state.timeScale > 0) {\r\n        this.setState({ timeScale: 0 });\r\n      } else {\r\n        this.setState({ timeScale: 1 });\r\n      }\r\n    } else if (event.key === 'Escape') {\r\n      if (this.state.activeModal === 'greeting')\r\n        store.dispatch(newGame({seed: this.state.newGameSeed}))\r\n      this.setState({activeModal: null});\r\n    } else if (this.cheatMode && event.key === 'A') {\r\n      store.dispatch(cheatAdd())\r\n    } else if (this.cheatMode && event.key === 'Q') {\r\n      // if (this.state.world.cities[0].book.getBuildings().filter(x => x.type === 'farm').length < 1){\r\n      //   this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.emptyHex.build.farm.energy || 0;\r\n      //   this.state.world.alien.bots.amount += this.state.world.alien.difficulty.cost.emptyHex.build.farm.bots || 0;\r\n      //   // this.build(this.state.world.cities[0], { q: 1, r: 1 }, 'farm');\r\n      //   this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.emptyHex.build.house.energy || 0;\r\n      //   this.state.world.alien.bots.amount += this.state.world.alien.difficulty.cost.emptyHex.build.house.bots || 0;\r\n      //   // this.build(this.state.world.cities[0], { q: 1, r: 0 }, 'house');\r\n      //   this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.emptyHex.build.hospital.energy || 0;\r\n      //   this.state.world.alien.bots.amount += this.state.world.alien.difficulty.cost.emptyHex.build.hospital.bots || 0;\r\n        // this.build(this.state.world.cities[0], { q: 0, r: 1 }, 'hospital');\r\n      // }\r\n      // this.state.world.alien.energy.amount += (this.state.world.alien.difficulty.cost.hex.beam.energy || 0) * 4;\r\n      // this.beam(this.state.world.cities[0], { q: 0, r: 0 });\r\n      // this.beam(this.state.world.cities[0], { q: 1, r: 0 });\r\n      // this.beam(this.state.world.cities[0], { q: 0, r: 1 });\r\n      // this.beam(this.state.world.cities[0], { q: 1, r: 1 });\r\n    } else if (this.cheatMode && event.key === 'S') {\r\n      // this.state.world.beans.get.forEach((b) => {\r\n      //   if (this.state.world.alien.difficulty.cost.bean.scan.energy){\r\n      //     if (this.state.world.alien.energy.amount < this.state.world.alien.difficulty.cost.bean.scan.energy)\r\n      //       this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.bean.scan.energy;\r\n      //   }\r\n      //   // this.scan(b);\r\n      // });\r\n    }\r\n    this.cheatMode = event.shiftKey && event.key === 'C';\r\n  }\r\n  onDeath = (event: IEvent) => {\r\n    WorldSfxInstance.play('death');\r\n    this.startSpotlight(event);\r\n  }\r\n  private timescaleBeforeSpotlight: number = 1;\r\n  startSpotlight(event: IEvent) {\r\n    this.timescaleBeforeSpotlight = this.state.timeScale;\r\n    this.setState({\r\n      spotlightEvent: event,\r\n      timeScale: 0\r\n    }, () => {\r\n      setTimeout(() => this.endSpotlight(), SpotlightDurationTimeMS);\r\n    });\r\n  }\r\n  endSpotlight() {\r\n    this.setState({\r\n      timeScale: this.timescaleBeforeSpotlight,\r\n      spotlightEvent: undefined\r\n    });\r\n  }\r\n  getPanel() {\r\n    switch (this.state.activeRightPanel) {\r\n      case 'overview':\r\n        return <DetailPanel \r\n          openBrainwash={() => this.setState({ activeModal: 'brainwash' })}\r\n          openEntitle={() => this.setState({activeModal: 'entitle'})}\r\n        ></DetailPanel>\r\n      case 'goals':\r\n        return <GoalsPanel></GoalsPanel>\r\n      case 'events':\r\n        return <EventsPanel></EventsPanel>\r\n      case 'market': \r\n        return <MarketPanel></MarketPanel>\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n      <SfxContext.Provider value={WorldSfxInstance}>\r\n      <MoverContext.Provider value={MoverStoreInstance}>\r\n        <div className=\"canvas\">\r\n          {\r\n            this.state.activeMain === 'network' ? <div className=\"canvas\">\r\n              <SocialGraph\r\n                city={store.getState().world.cities.byID[0]}\r\n                onClickBuilding={(b) => store.dispatch(doSelectBuilding({\r\n                  cityKey: store.getState().world.cities.allIDs[0], \r\n                  buildingKey: b.key,\r\n                 }))}\r\n                onClick={(b) => {\r\n                  store.dispatch(doSelectBean({cityKey: b.cityKey, beanKey: b.key }));\r\n                }} ></SocialGraph>\r\n            </div> : <TransformWrapper\r\n              minScale={.65}\r\n              centerZoomedOut={true}\r\n              centerOnInit={true}\r\n              initialPositionX={5000}\r\n              limitToBounds={false}\r\n              alignmentAnimation={{disabled:true}}\r\n              wheel={{ step: 0.05 }}>\r\n              <TransformComponent>\r\n                <div className=\"world\">\r\n                  {\r\n                  store.getState().world.cities.allIDs.map((t) => {\r\n                    return (\r\n                      <WorldTile2 cityKey={t} key={t}\r\n                        onClick={() => {\r\n                          \r\n                        }}\r\n                      ></WorldTile2>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </TransformComponent>\r\n            </TransformWrapper>\r\n          }\r\n          <div className=\"overlay\">\r\n            <Modal show={this.state.activeModal == 'mainmenu'}>\r\n              <MainMenu startGame={() => this.setState({activeModal: 'greeting'})} loadGame={(slot: number) => {\r\n                const game = GameStorageInstance.GetGame(slot);\r\n                if (isGame(game)){\r\n                  store.dispatch(loadGame({newState: game.game}));\r\n                  this.setState({activeModal: null});\r\n                }\r\n              }}></MainMenu>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'loadgame'} onClick={() => {\r\n              this.setState({ activeModal: null });\r\n              store.dispatch(newGame({seed: this.state.newGameSeed}));\r\n              }\r\n            }>\r\n              <LoadGameMenu></LoadGameMenu>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'escapemenu'} onClick={() => {\r\n              this.setState({ activeModal: null });\r\n              store.dispatch(newGame({seed: this.state.newGameSeed}));\r\n              }\r\n            }>\r\n              <EscapeMenu></EscapeMenu>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'greeting'} onClick={() => {\r\n              this.setState({ activeModal: null });\r\n              store.dispatch(newGame({seed: this.state.newGameSeed}));\r\n              }\r\n            }>\r\n              <GreetingPanel seed={this.state.newGameSeed} changeSeed={(s) => this.setState({newGameSeed: s})}></GreetingPanel>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'gov'} onClick={() => this.setState({ activeModal: null })}>\r\n              <GovernmentPanel></GovernmentPanel>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'polisci'} onClick={() => this.setState({ activeModal: null })}>\r\n              <ResearchPanel></ResearchPanel>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'society'} onClick={() => this.setState({ activeModal: null })}>\r\n              <SocietyPanel></SocietyPanel>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({ activeModal: null })}>\r\n              {(this.state.activeModal == 'economy' ? <EconomyReport></EconomyReport> : '')}\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'traits'} onClick={() => this.setState({ activeModal: null })}>\r\n              <TraitsReport></TraitsReport>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'brainwash'} onClick={() => this.setState({ activeModal: null })}>\r\n              <BrainwashingContent></BrainwashingContent>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'entitle'} onClick={() => this.setState({ activeModal: null })} className=\"modal-tiny\">\r\n              <EntitleModalContent closeModal={() => this.setState({activeModal: null})}></EntitleModalContent>\r\n            </Modal>\r\n            <div className=\"left\">\r\n              <div className=\"top\">\r\n                <span>👽 Alien 🌍 Utopia 🔬 Lab</span>\r\n                <SeasonWidget></SeasonWidget>\r\n                <StopPlayFastButtons timeScale={this.state.timeScale} setTimeScale={(n: number) => { this.setState({ timeScale: n }) }}></StopPlayFastButtons>\r\n                <GeoNetworkButtons setActiveMain={(v) => this.setState({ activeMain: v })} activeMain={this.state.activeMain} ></GeoNetworkButtons>\r\n                <AutosaveWidget></AutosaveWidget>\r\n              </div>\r\n              <div className=\"bottom\">\r\n                <BubbleNumberText changeEvent={SignalStoreInstance.alienEnergy} icon=\"⚡️\">\r\n                  <CapsuleLabel icon=\"⚡️\" label=\"Energy\">\r\n                    <EnergyAmount></EnergyAmount>\r\n                  </CapsuleLabel>\r\n                </BubbleNumberText>\r\n                <BubbleNumberText changeEvent={SignalStoreInstance.alienBots} icon=\"🤖\">\r\n                  <CapsuleLabel icon=\"🤖\" label=\"Bots\">\r\n                    <BotsAmount></BotsAmount>\r\n                  </CapsuleLabel>\r\n                </BubbleNumberText>\r\n                <BubbleNumberText changeEvent={SignalStoreInstance.alienHedons} icon=\"👍\">\r\n                  <CapsuleLabel icon=\"👍\" label=\"Hedons\">\r\n                    <HedonAmount></HedonAmount>\r\n                  </CapsuleLabel>\r\n                </BubbleNumberText>\r\n                {/* <BubbleText changeEvent={this.state.world.alien.tortrons.change} icon=\"💔\">\r\n                  <CapsuleLabel icon=\"💔\" label=\"Tortrons\">\r\n                    {this.state.world.alien.tortrons.amount.toFixed(0)}\r\n                  </CapsuleLabel>\r\n                </BubbleText> */}\r\n                <span>\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'economy' })}>📊 State of the Utopia</button>\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'gov' })}>🗳️ Gov</button>\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'polisci' })}>🧪 Research</button>\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'society' })}>👑 Society</button>\r\n                  <BubbleSeenTraitsText changeEvent={SignalStoreInstance.newTraitSeen} icon=\"🧠\">\r\n                    <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'traits' })}>🧠 Traits</button>\r\n                  </BubbleSeenTraitsText>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"right\">\r\n              <div className=\"full-width-tabs\">\r\n                <button onClick={() => {this.setState({ activeRightPanel: 'overview' });}}>📈 Info</button>\r\n                <button onClick={() => {this.setState({ activeRightPanel: 'market' }); store.dispatch(doSelectNone())}}>🛍️ Market</button>\r\n                <button onClick={() => {this.setState({ activeRightPanel: 'events' }); store.dispatch(doSelectNone())}}>\r\n                  <TimelyEventToggle event={SignalStoreInstance.events} eventIcon=\"🚨\" eventClass=\"police-siren\">📣</TimelyEventToggle> Events\r\n                </button>\r\n                <button onClick={() => {this.setState({ activeRightPanel: 'goals' }); store.dispatch(doSelectNone())}}>🏆 Goals</button>\r\n              </div>\r\n              <div className=\"right-panel\">\r\n                {this.getPanel()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n      </MoverContext.Provider>\r\n      </SfxContext.Provider>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}