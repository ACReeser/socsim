{"version":3,"sources":["events/Events.tsx","simulation/Institutions.tsx","simulation/Utils.tsx","simulation/Geography.tsx","simulation/Occupation.tsx","petri-ui/Building.tsx","simulation/Priorities.tsx","simulation/Agent.tsx","simulation/Beliefs.tsx","simulation/Bean.tsx","simulation/Time.tsx","WorldGen.tsx","simulation/Economy.tsx","World.tsx","simulation/Politics.tsx","simulation/Government.tsx","Game.tsx","simulation/Player.tsx","WorldSound.tsx","simulation/City.tsx","simulation/RealEstate.tsx","widgets/Modal.tsx","widgets/NeedReadout.tsx","right-panel/OverviewPanel.tsx","petri-ui/AnimatedUFO.tsx","widgets/particles.tsx","petri-ui/AnimatedSpotlight.tsx","petri-ui/AnimatedBean.tsx","petri-ui/AnimatedPickup.tsx","petri-ui/Mover.tsx","petri-ui/Buildings.tsx","petri-ui/Magnet.tsx","petri-ui/WorldTile.tsx","modal-content/EconomyReport.tsx","right-panel/Events.tsx","widgets/CardButton.tsx","widgets/CostSmall.tsx","right-panel/BeanPanel.tsx","modal-content/FoundParty.tsx","widgets/UniversalWidgets.tsx","modal-content/PartyOverview.tsx","widgets/BubbleText.tsx","widgets/SocialGraph.tsx","widgets/CapsuleLabel.tsx","right-panel/Goals.tsx","modal-content/Campaigns.tsx","modal-content/Gov.tsx","widgets/ConfirmButton.tsx","widgets/RobotArm.tsx","modal-content/Research.tsx","widgets/StopPlayFast.tsx","chrome/Subtab.tsx","right-panel/HexPanel.tsx","widgets/StringDropdown.tsx","modal-content/BeliefRow.tsx","modal-content/Brainwashing.tsx","widgets/TimelyEventToggle.tsx","right-panel/MarketPanel.tsx","modal-content/TraitsReport.tsx","modal-content/GreetingPanel.tsx","App.tsx","serviceWorker.js","index.js"],"names":["PubSub","onPublish","callbacks","args","this","forEach","c","callback","push","splice","indexOf","ChangePubSub","EventBus","buffer","sendToBuffer","event","length","pop","unshift","speechcrime","nojobslots","birth","death","Live","current","onChange","newValue","publish","LiveList","onPush","child","set","get","all","i","LiveMap","onAdd","newKey","copy","Map","k","v","key","delete","EnterpriseTypes","EnterpriseTypeIcon","isEnterprise","b","undefined","enterpriseType","Charity","name","institutionKey","cash","ticksSinceLastSale","seasonalBudget","good","parentInstitution","beansHelped","inventory","law","economy","tryTransact","MathClamp","input","min","max","Math","Hex","q","r","hex_directions","hex_direction","direction","hex_neighbor","hex","dir","hex_ring","center","radius","a","results","cube","hex_add","j","accelerate_towards","mover","target","acceleration","maxSpeed","colDistance","brake","delta","x","point","y","magnitude","sqrt","velocity","accelerator_coast","lerp","t","cube_lerp","z","cube_round","rx","round","ry","rz","x_diff","abs","y_diff","z_diff","cube_to_axial","axial_to_cube","cube_linedraw","N","cube_distance","layout_flat","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","origin_point","hex_to_pixel","size","origin","h","M","polarToPoint","p","cos","az","sin","transformPoint","transform","BuildingJobSlot","CityBook","_db","map","yellow","white","db","buildIndexes","keys","Array","from","ix","address","group","type","concat","add","remove","values","buildingType","GetRandom","at","BuildingIcon","UpgradedBuildingIcon","BuildingJobIcon","BuildingToGood","GoodToBuilding","JobToBuilding","Geography","book","numberOfRings","hexes","hex_spiral","hex_size","petriRadius","petriOrigin","building","addBuilding","where","removeBuilding","buildingKey","ent","slot_size","getSlotOffset","hexDirectionToJobSlot","2","first","0","second","4","third","1","fourth","5","fifth","3","sixth","PetriBuilding","d","jobSlot","hasJob","props","job_slots","className","style","buildingHex","sty","city","upgraded","slots","React","Component","PriorityNode","value","priority","DumbPriorityQueue","_values","sort","shift","PriorityQueue","index1","index2","temp","index","parentIndex","floor","swap","bubbleUp","elementPriority","leftChildIndex","rightChildIndex","leftChildPriority","rightChildPriority","indexToSwap","poppedNode","bubbleDown","ChangeState","agent","newState","state","exit","enter","AgentState","data","elapsed","deltaMS","difficulty","_act","Elapsed","Bean","activity_duration","act","intent","GoodIcon","ActivityDisplay","IdleState","priorities","GetPriorities","top","dequeue","travelState","substituteIntent","TravelState","createFromIntent","maybeParanoid","desiredGoodState","canBuy","maybeCrime","emote","maybeScarcity","destinations","isNaN","BeanPhysics","AccelerateS","MaxSpeed","CollisionDistance","Brake","location","onMove","ActToState","create","nearby","getNearestNeighbors","maybeChat","targets","filter","nn","chat","getRandomChat","ChatState","participation","believesIn","random","destination","RouteRandom","job","getRandomEntertainmentBuilding","destinationKey","Route","IntentToDestination","createFromDestination","WorkState","work","BuyState","sinceLastAttemptMS","_bought","buy","tryBuy","MaximumBuyDuration","tState","lastChatMS","Date","now","maybeAntagonised","maybeEnthused","RelaxState","durationMS","discrete_fun","CrimeState","steal","GetPriority","bean","inventory_priority","market","getStakeListings","employerEnterpriseKey","JobToGood","quantity","wealth_priority","costOfLiving","discrete_food","bean_life","vital_thresh","food","warning","sufficient","discrete_health","medicine","discrete_stamina","shelter","queue","node","enqueue","geo","getRandomBuildingOfType","start","nearestHex","pt","pixel_to_hex","offset","PrimaryBeliefData","prog","noun","adj","icon","description","trad","ego","NarrativeBeliefData","rocket","dragon","music","noFaith","SecondaryBeliefData","Diligence","Natalism","Progressivism","Libertarianism","Wanderlust","Germophobia","Parochialism","Cosmopolitanism","Capitalism","Socialism","Communism","Naturalism","Hedonism","Gluttony","Paranoia","Authority","Anarchism","Greed","Extroversion","Gossip","Antagonism","Enthusiasm","Neuroticism","idealCon","idealPro","Dogmatism","IsBeliefDivergent","belief","utopiaMotive","utopiaCommunity","reduce","isDivergent","con","IsIdealDivergent","BeliefsAll","Object","GetHedonReport","hedonHistory","flatAverage","weightedAverage","maxSource","minSource","allSum","day","daySum","sources","source","allSources","val","Season","Hour","cityKey","dob","year","season","hour","bornInPetri","discrete_sanity","lifecycle","activity_queue","speed","ethnicity","stamina","community","ideals","faith","beliefs","happiness","lastHappiness","lastSentiment","lastPartySentiment","ticksSinceLastRelax","fairGoodPrice","buyFood","buyMeds","fun","buyFun","buyHousing","jobQueue","onAct","amount","multiplier","econ","homeCity","mods","TraitToModifier","health","reason","mod","majorityEthnicity","MaslowHappinessScore","Deficient","getCostOfLiving","party","result","GetHappiness","getHappinessModifiers","sent","getSentimentModifiers","myGood","getFairGoodPrice","traits","policies","policy","fx","mag","bad","idea","canBaby","preachBelief","crimeReason","roll","chance","trySetJob","eventBus","trigger","message","tryGetJob","unsetJob","cost","sanity","ifBelievesInMaybeEmote","needy","least","targetBeanKey","GoodToThreshold","beans","newJob","mostInDemandJob","workedForEmployer","employer","getEnterprise","employAndPrice","ownerBeanKey","produceAndPrice","groceries","bought","stolen","housing","diff","alive","wasNotHungry","wasNotSick","maybeDie","meds","babyChance","breedBean","isInCrisis","EmotionSanity","EmotionWorth","addEmotePickup","cause","die","pains","GetRandomNumber","historicalBeans","beanKey","scarce","player","abductedBeans","abundant","base","AllGoods","Economy","OrderBook","charity","unfulfilledMonthlyDemand","monthlyDemand","monthlySupply","buyer","minDemand","maxDemand","listing","getLowestPriceListing","actualDemand","price","transact","listings","subtractFromListing","seller","existing","getBeansListings","addNewPersonalListing","getEnterpriseListings","addNewEnterpriseListing","last","GoodToJob","g","lucky","getRandomCitizen","sellerCityKey","sellerBeanKey","supply","demand","fullListings","l","numberOfSamePriceListings","lowPrice","bKey","enterpriseKey","find","sellerEnterpriseKey","cKey","sale","enterprise","BaseParty","playerKey","organizations","slogan","availablePolicies","proposedPolicy","availableCampaigns","activeCampaigns","leadership","activeHQs","platform","LawAxisData","crime_theo","LawData","axis","hint","Government","lawTree","laws","Taxation","Welfare","Economics","Crime","Culture","triadToString","sign","qty","costs","energy","bots","hedons","tortrons","join","DefaultDifficulty","emptyHex","build","house","farm","theater","hospital","church","courthouse","park","nature","beam","upgrade","bean_brain","brainwash_ideal","brainimplant_secondary","brainwash_secondary","scan","abduct","gift","empower","vaporize","siphon","scrubHedons","resource","common","uncommon","rare","degrade_per_tick","penalty","homeless_health","starving_health","death_chance","starvation","sickness","exposure","vaporization","report_card_progression","Goals","found_utopia","text","check","world","build_house_n_farm","cities","getCountOfType","reward","beam_3","Number_Starting_City_Pop","alien","scanned_bean","set_policy","brainwash","Curriculums","GradeWorld","Happiness","BooleanAverageGrader","o","Prosperity","Stability","Dogma","GradeUpToNumber","speechcrimes","date","RubricDescription","number","allowance","maximum","NormalizedScoreToGrade","array","grade","normNumber","GradeWeights","A","B","C","D","F","TechData","tech","techPoints","Player","seenBeliefs","beliefInventory","income","change","next_grade","goals","goalProgress","pastReportCards","workingReportCard","techProgress","currentlyResearchingTech","researchPoints","trait","charges","canAfford","purchase","goal","done","step","SFXToFile","SoundBuffer","file","volume","ended","audio","play","aud","Audio","process","WorldSound","lib","sfx","PickupPhysics","World","bus","institutions","Spring","onChat","publishEvent","onBeanDie","e","onCitizenDie","onEmote","subscribe","list","institute","calculate","calculateBeliefs","Evening","resetMonthlyDemand","inflate","resetYearlyCounters","hasResearched","org","age","maybeBaby","tryFindRandomJob","getTaxesAndDonations","calculateComputedState","checkGoals","checkReportCard","listener","Act","pickups","pickup","collide","magnet","pickupMagnetPoint","amt","percent","sum","yearlyInflationDollars","richest","obj","winner","yearsPartyDonations","budget","TraitIcon","hapMod","Sufficient","Abundant","EmoteIcon","reportIdeals","_report","reportCommunity","defWin","beanPropGet","avg","stash","UFO","action","Pickup","City","url","ufos","pickupSeed","beanSeed","houses","partyHQ","environment","allOfType","getBuildings","openSlots","slot","tryFreeBean","id","shuffled","counter","shuffle","deadBean","parent","GenerateBean","split","count","circle","square","triangle","squared","pow","Building","occupied_slots","empty_slots","bank","workers","getWorkerBeans","share","owner","commShare","getBeanKeys","ids","s","usedSlots","revenue","distributeCash","randomBuffer","Uint32Array","window","crypto","getRandomValues","randomNumber","ceil","choices","PI","GenerateBuilding","newBuilding","GenerateWorld","GenerateCity","previousCityCount","newCity","cityPopulation","hexPoint","newBean","beanBeliefCount","newBelief","includes","StartingCash","getStartingPoint","Modal","show","hideCloseButton","onClick","closeButtonText","children","getButton","NeedReadout","dire","need","dire_style","width","full","full_style","header","keyToName","OverviewPanel","clearCity","avg_happy","avg_cash","avg_approval","report","toFixed","AxisReadout","maj","AnimatedUFO","showBeam","setTimeout","setState","ufo","Particles","animations","finishedAnimationCount","parts","particleCount","createRef","active","animate","opacity","duration","easing","delay","onfinish","ref","spotlightAnimations","faceOV","beanClasses","particles","AnimatedSpotlight","lastTickMS","currentTime","tickHandle","tick","timeMS","deltaTimeMS","getSubtype","lastValid","anim","requestAnimationFrame","time","cancelAnimationFrame","msg","classes","getFace","replace","disabled","AnimatedBean","spin","face","speech","getSpeech","delaySeedSec","paused","sitStill","selected","animationDelay","title","stopPropagation","getPurchase","AnimatedPickup","useState","played","setPlayed","useContext","SfxContext","useEffect","Mover","el","useRef","startPoint","unsubscribe","PickupList","setList","BeanList","activeBeanID","onBeanClick","PetriBuildings","buildings","setBuildings","Magnet","setPoint","updatePoint","WorldTile","mtn_transforms","spotlightEvent","xy","onMouseEnter","onHexClick","left","u","mtns","onMouseLeave","height","cx","cy","stroke","fill","renderHexes","renderSpotlight","median","half","EconomyReport","food_median","health_median","shelter_median","wealth_total","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","jobs","unemployed","jobless","reducer","farmer","builder","doc","entertainer","EventsPanel","events","alert","shouldEventJumpToBean","selectBean","href","CardButton","thin","singleLine","subtext","TraitToCard","CostSmall","rider","BeanPanel","faceOverride","_resetFace","support","innerView","scanned","beliefTable","colSpan","hedonTable","display","ActivityIcon","actDurations","acts","divergent","bind","renderTraits","renderInner","FoundParty","onName","onSlogan","onCity","ideal","members","onBigFourChange","checked","onCommunity","currentTarget","onIdeal","onFound","RenderIdealBadges","comm","effect","str","output","RenderBadge","RenderIdealBadge","PartyOverview","overView","detailView","collapsedGroups","collapsedAxis","view","partOfGroup","ldata","incompatibilities","rowClassName","divs","keyGetter","item","collection","groupBy","isGroup","renderDetailLaw","detailGroup","toggleGroup","detailLaw","renderOver","renderLeadership","renderFinances","renderLaws","groups","getLawsByGroup","renderHeader","renderRows","renderLawDetail","renderDetailGroup","BubbleNumberText","bubbleSeed","ev","positive","bubbles","string","changeEvent","bubbleClass","BubbleSeenTraitsText","sub","setBubbles","onEvent","useBubbles","SocialGraph","static","CapsuleLabel","classN","label","GoalsPanel","progress","tooltip","renderReward","reportCard","renderGoal","margin","CampaignsPanel","GovernmentPanel","ConfirmButton","confirming","onConfirm","click","confirmText","RobotArm","xmlns","overflow","strokeWidth","tool","fontSize","ResearchPanel","tools","interval","toolI","toolI2","toolI3","toolI4","lastI","setInterval","loop","clearInterval","setResearch","total","complete","isCurrent","rootClassName","techs","renderTech","release","StopPlayFastButtons","timeScale","setTimeScale","Subtabs","additionalClasses","options","HexPanel","eHex","clearHex","renderBeamButton","free","hasJobs","renderDensityWarning","changeEnterprise","typ","findBuildingByCoordinate","buildingPanel","emptyPanel","EnterpriseTypePicker","toUpperCase","substring","StringDropdown","hidden","titleCase","slice","getTitleForOption","getTextForOption","required","BeliefWidget","leftButton","titleView","bottomView","EditBeliefInput","frozen","toString","available","wash","SortedBeliefs","localeCompare","TraitInventoryList","live","implant","dogmatic","BrainwashingContent","beanID","isScanned","washCommunity","washMotive","washNarrative","washBelief","implantBelief","TimelyEventToggle","eventCount","eventClass","eventIcon","MarketPanel","buyEnergy","buyBots","TraitsReport","GreetingPanel","starving","hungry","sated","stuffed","homeless","sleepy","awake","rested","sick","sickly","bruised","fresh","sane","stressed","disturbed","createContext","App","previousTimeMS","logicTickAccumulatorMS","simulate_beans","simulate_pickups","simulate_world","keyupHandler","activeModal","shiftKey","foundParty","what","tryPurchase","newUFO","removeUFO","old","foundCharity","addCharity","releaseBean","lucky_bean","has","canPurchase","loseSanity","oldFaith","useCharge","setPolicy","onDeath","startSpotlight","timescaleBeforeSpotlight","activeCityID","activeHex","activeMain","activeRightPanel","document","addEventListener","removeEventListener","myUFOI","findIndex","endSpotlight","utopia","beankey","COL","tile","renderNetwork","renderGeo","Provider","defaultScale","wheel","main","renderHour","n","getPanel","Morning","Midnight","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.d049ffc5.chunk.js","sourcesContent":["import { Point } from \"../simulation/Geography\";\r\n\r\nexport type EventTrigger = 'speechcrime'|'birth'|'death'|'nojobslots';\r\n\r\nexport interface IEvent{\r\n    icon: string;\r\n    message: string;\r\n    beanKey?: number;\r\n    cityKey?: number;\r\n    point?: Point;\r\n    trigger: EventTrigger;\r\n}\r\n\r\nexport class PubSub<T>{\r\n    constructor(private onPublish?: (args: T) => void){}\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public publish(args: T){\r\n        if (this.onPublish)\r\n            this.onPublish(args);\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    public unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\nexport type IEventBus = {[key in EventTrigger]: PubSub<IEvent>};\r\nexport interface IEventBuffer{\r\n    buffer: IEvent[]   \r\n}\r\nexport const EventBusBufferLength = 20; \r\nexport class EventBus implements IEventBus, IEventBuffer{\r\n    buffer: IEvent[] = [];\r\n    private sendToBuffer = (event: IEvent) => {\r\n        if (this.buffer.length > EventBusBufferLength){\r\n            this.buffer.pop();\r\n        }\r\n        this.buffer.unshift(event);\r\n    }\r\n    speechcrime = new PubSub<IEvent>(this.sendToBuffer);\r\n    nojobslots = new PubSub<IEvent>(this.sendToBuffer);\r\n    birth = new PubSub<IEvent>(this.sendToBuffer);\r\n    death = new PubSub<IEvent>(this.sendToBuffer);\r\n\r\n}\r\n\r\nexport class Live<T>{\r\n    public readonly onChange = new PubSub<T>();\r\n    constructor(protected current: T){}\r\n    public set(newValue: T){\r\n        this.current = newValue;\r\n        this.onChange.publish(newValue);\r\n    }\r\n    public get get(): T{\r\n        return this.current;\r\n    }\r\n}\r\nexport class LiveList<T> extends Live<Array<T>>{\r\n    public readonly onPush = new PubSub<T>();\r\n    public push(child: T): void{\r\n        this.set([...this.get, child]);\r\n        this.onPush.publish(child);\r\n    }\r\n    public remove(child: T): void{\r\n        const all = this.get;\r\n        const i = all.indexOf(child);\r\n        if (i > -1){\r\n            all.splice(i, 1);\r\n            this.set([...all]);\r\n        }\r\n    }\r\n}\r\nexport class LiveMap<K, V> extends Live<Map<K, V>>{\r\n    public readonly onAdd = new PubSub<{k: K, v: V}>();\r\n    public add(newKey: K, newValue: V){\r\n        const copy = new Map<K, V>(this.current);\r\n        copy.set(newKey, newValue);\r\n        this.set(copy);\r\n        this.onAdd.publish({k: newKey, v: newValue});\r\n    }\r\n    public remove(key: K){\r\n        const copy = new Map<K, V>(this.current);\r\n        copy.delete(key);\r\n        this.set(copy);\r\n    }\r\n    public at(key: K): V|undefined{\r\n        return this.current.get(key);\r\n    }\r\n}","import { ISeller, Economy } from \"./Economy\";\r\nimport { TraitGood, GoodToJob } from \"../World\";\r\nimport { Policy } from \"./Politics\";\r\nimport { Government } from \"./Government\";\r\n\r\nexport type EnterpriseType = 'company'|'cooperative'|'commune';\r\nexport const EnterpriseTypes: EnterpriseType[] = ['company','cooperative','commune'];\r\nexport const EnterpriseTypeIcon: {[e in EnterpriseType]: string} = {\r\n    'company': '🎩', \r\n    'cooperative': '🤝', \r\n    'commune': '⚒️'\r\n};\r\n\r\nexport interface IEnterprise extends ISeller{\r\n    key: number;\r\n    cityKey: number;\r\n    enterpriseType: EnterpriseType;\r\n    ownerBeanKey?: number;\r\n}\r\n\r\nexport function isEnterprise(b: any): b is IEnterprise{\r\n    return b.key != undefined && b.enterpriseType != undefined;\r\n}\r\n\r\nexport interface IInstitution{\r\n    key: number;\r\n    playerKey: number;\r\n    name: string;\r\n\r\n    organizations: IOrganization[];\r\n}\r\n\r\nexport interface IOrganization extends ISeller{\r\n    work(law: Government, economy: Economy): void;\r\n    key: number;\r\n    institutionKey: number;\r\n    seasonalBudget: number;\r\n    parentInstitution: IInstitution|null;\r\n    cash: number;\r\n}\r\n\r\nexport class Charity implements IOrganization, ISeller{\r\n    key = 0;\r\n    name: string = '';\r\n    institutionKey = 1;\r\n    cash = 0;\r\n    ticksSinceLastSale = 0;\r\n    seasonalBudget = 0;\r\n    good: TraitGood = 'food';\r\n    parentInstitution: IInstitution|null = null;\r\n    beansHelped: number = 0;\r\n    inventory: number = 0;\r\n    \r\n    work(law: Government, economy: Economy): void{\r\n        while(this.cash > 0 && this.inventory < 10) {\r\n            const groceries = economy.tryTransact(this, this.good);\r\n            if (groceries){\r\n                //economy.addCharity(this, this.good, groceries.bought);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n} ","\r\nexport function shuffle(array: Array<any>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function MathClamp(input: number, min: number, max: number): number{\r\n    return Math.max(Math.min(input, max), min)\r\n}\r\n\r\nexport function groupBy<T>(list: T[], keyGetter: (val: T) => string|number): Map<string|number, T[]> {\r\n    const map = new Map<string|number, T[]>();\r\n    list.forEach((item) => {\r\n         const key = keyGetter(item);\r\n         const collection = map.get(key);\r\n         if (!collection) {\r\n             map.set(key, [item]);\r\n         } else {\r\n             collection.push(item);\r\n         }\r\n    });\r\n    return map;\r\n}","import { LiveMap } from \"../events/Events\";\r\nimport { TraitGood, TraitJob } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IEnterprise, isEnterprise } from \"./Institutions\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nexport interface HexPoint{\r\n    q: number;\r\n    r: number;\r\n}\r\nexport class Hex implements HexPoint{\r\n    constructor(public q: number, public r: number){}\r\n}\r\nexport const hex_directions: HexPoint[] = [\r\n    new Hex(+1, 0), new Hex(+1, -1), new Hex(0, -1), \r\n    new Hex(-1, 0), new Hex(-1, +1), new Hex(0, +1), \r\n];\r\nexport function hex_direction(direction: number): HexPoint{\r\n    return hex_directions[direction]\r\n}\r\n\r\nexport function hex_neighbor(hex: HexPoint, direction: number): HexPoint{\r\n    var dir = hex_direction(direction)\r\n    return new Hex(hex.q + dir.q, hex.r + dir.r)\r\n}\r\nexport function hex_distance(a: HexPoint, b: HexPoint): number{\r\n    return (Math.abs(a.q - b.q) \r\n          + Math.abs(a.q + a.r - b.q - b.r)\r\n          + Math.abs(a.r - b.r)) / 2\r\n}\r\nexport function hex_add(a: HexPoint, b: HexPoint): HexPoint {\r\n    return new Hex(a.q + b.q, a.r + b.r);\r\n}\r\nexport function hex_scale(a: HexPoint, k: number): HexPoint {\r\n    return new Hex(a.q * k, a.r * k);\r\n}\r\nexport function hex_ring(center: HexPoint, radius: number): HexPoint[]{\r\n    var results: HexPoint[] = [];\r\n    // this code doesn't work for radius == 0; can you see why?\r\n    var cube = hex_add(center, \r\n                        hex_scale(hex_direction(4), radius));\r\n    for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < radius; j++) {\r\n            results.push(cube)\r\n            cube = hex_neighbor(cube, i);       \r\n        }\r\n    }\r\n    return results;\r\n}\r\nexport function hex_spiral(center: HexPoint, radius: number): HexPoint[]{\r\n    var results = [center];\r\n    for (let k = 0; k < radius; k++) {\r\n        results = results.concat(hex_ring(center, k));\r\n        //console.log(results);   \r\n    }\r\n    return results;\r\n}\r\n\r\nexport function move_towards(current: Point, target: Point, maxDistanceDelta: number)\r\n{\r\n    const a: Point = {x: target.x - current.x, y: target.y - current.y};\r\n    const magnitude = Math.sqrt(a.x * a.x + a.y * a.y);\r\n    if (magnitude <= maxDistanceDelta || magnitude == 0)\r\n    {\r\n        return target;\r\n    }\r\n    return {\r\n        x: current.x + a.x / magnitude * maxDistanceDelta,\r\n        y: current.y + a.y / magnitude * maxDistanceDelta,\r\n    };\r\n}\r\nexport interface IAccelerater {point:Point, velocity:Vector};\r\nexport function accelerate_towards(\r\n    mover: IAccelerater, \r\n    target: Point, \r\n    acceleration: number,\r\n    maxSpeed: number, \r\n    colDistance: number, \r\n    brake: Point): boolean\r\n{\r\n    const delta: Point = {\r\n        x: target.x - mover.point.x, \r\n        y: target.y - mover.point.y\r\n    };\r\n    const magnitude = Math.sqrt((delta.x * delta.x) + (delta.y * delta.y));\r\n    if (magnitude <= colDistance) return true;\r\n\r\n    delta.x /= magnitude;\r\n    delta.y /= magnitude;\r\n\r\n    mover.velocity.x += (delta.x * acceleration);\r\n    mover.velocity.y += (delta.y * acceleration);\r\n    mover.velocity.x = MathClamp(mover.velocity.x, -maxSpeed, maxSpeed);\r\n    mover.velocity.y = MathClamp(mover.velocity.y, -maxSpeed, maxSpeed);\r\n\r\n    accelerator_coast(mover, brake);\r\n    return false;\r\n}\r\nexport function accelerator_coast(\r\n    current: IAccelerater, \r\n    brake: Point): void\r\n{\r\n    current.velocity.x *= brake.x;\r\n    current.velocity.y *= brake.y;\r\n\r\n    current.point.x += current.velocity.x;\r\n    current.point.y += current.velocity.y;\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number{\r\n    return a + (b - a) * t\r\n}\r\n\r\nexport function vector_lerp(a: Point, b: Point, t: number): Point{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t)\r\n    };\r\n}\r\nfunction cube_lerp(a: CubicPoint, b: CubicPoint, t: number): CubicPoint{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t),\r\n        z: lerp(a.z, b.z, t)\r\n    };\r\n}\r\nfunction cube_distance(a: CubicPoint, b: CubicPoint): number{\r\n    return (Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z)) / 2\r\n}\r\nfunction cube_round(cube: CubicPoint): CubicPoint{\r\n    var rx = Math.round(cube.x);\r\n    var ry = Math.round(cube.y);\r\n    var rz = Math.round(cube.z);\r\n\r\n    var x_diff = Math.abs(rx - cube.x)\r\n    var y_diff = Math.abs(ry - cube.y)\r\n    var z_diff = Math.abs(rz - cube.z)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff)\r\n        rx = -ry-rz;\r\n    else if (y_diff > z_diff)\r\n        ry = -rx-rz;\r\n    else\r\n        rz = -rx-ry;\r\n\r\n    return {x: rx, y: ry, z: rz};\r\n}\r\nfunction round_point_to_hex(hex: HexPoint): HexPoint{\r\n    return cube_to_axial(cube_round(axial_to_cube(hex)))\r\n\r\n}\r\nfunction cube_to_axial(cube: CubicPoint){\r\n    var q = cube.x;\r\n    var r = cube.z;\r\n    return new Hex(q, r);\r\n}\r\nfunction axial_to_cube(hex: HexPoint): CubicPoint{\r\n    return {\r\n        x: hex.q,\r\n        z: hex.r,\r\n        y: -hex.q-hex.r\r\n    };\r\n}\r\nfunction cube_linedraw(a: CubicPoint, b: CubicPoint): HexPoint[]{\r\n    var N = cube_distance(a, b);\r\n    var results: HexPoint[] = [];\r\n    for (let i = 0; i <= N; i++) {\r\n        results.push(cube_to_axial(cube_round(cube_lerp(a, b, 1.0/N * i))))\r\n    }\r\n    return results;\r\n}\r\nexport function hex_linedraw(a: HexPoint, b: HexPoint): HexPoint[]{\r\n    return cube_linedraw(axial_to_cube(a), axial_to_cube(b));\r\n}\r\n\r\nclass Orientation {\r\n    // angle is in multiples of 60°\r\n    constructor(public f0: number, public f1: number, public  f2: number, public f3: number,\r\n        public b0: number, public b1: number,public b2: number,public b3: number,\r\n        public start_angle: number){}\r\n};\r\nexport const layout_flat: Orientation = new Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0),\r\n                2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0,\r\n                0.0);\r\nexport const origin_point: Point = {x: 0, y: 0};\r\nexport const hex_origin: HexPoint = {q: 0, r: 0};\r\nexport function hex_to_pixel(size: Point, origin: Point, h: HexPoint): Point {\r\n    const M: Orientation = layout_flat;\r\n    const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\r\n    const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\r\n    return {x: x + origin.x, y: y + origin.y};\r\n}\r\nexport function pixel_to_hex(size: Point, origin: Point, p: Point) {\r\n    const M = layout_flat;\r\n    const pt = {x: (p.x - origin.x) / size.x,\r\n                y: (p.y - origin.y) / size.y\r\n            };\r\n    const q = M.b0 * pt.x + M.b1 * pt.y;\r\n    const r = M.b2 * pt.x + M.b3 * pt.y;\r\n    return new Hex(q, r);\r\n}\r\n\r\n\r\nexport interface PolarPoint{\r\n    /**\r\n     * radius (in pixels)\r\n     */\r\n    r: number;\r\n    /**\r\n     * azimuth (radians)\r\n     */\r\n    az: number;\r\n}\r\n\r\nexport function polarToPoint(p: PolarPoint): Point{\r\n    return {\r\n        x: p.r * Math.cos(p.az),\r\n        y: p.r * Math.sin(p.az)\r\n    }\r\n}\r\n\r\nexport function distanceBetweenPolar(a: PolarPoint, b: PolarPoint): number{\r\n    const aCart = polarToPoint(a);\r\n    const bCart = polarToPoint(b)\r\n    return Math.sqrt(\r\n        Math.pow(aCart.x - aCart.x, 2) +\r\n        Math.pow(bCart.y - aCart.y, 2)\r\n    );\r\n}\r\n\r\nexport interface Point{\r\n    x: number; y: number;\r\n}\r\nexport interface Vector extends Point{\r\n}\r\nexport interface CubicPoint extends Point{\r\n    z: number;\r\n}\r\n\r\nexport function transformPoint(p: Point){\r\n    return {transform:`translate(${p.x}px, ${p.y}px)`};\r\n}\r\n\r\nexport interface IBuilding{\r\n    key: number;\r\n    address: HexPoint;\r\n    type: BuildingTypes;\r\n    job_slots: {[key in BuildingJobSlot]: number|null};\r\n    upgraded: boolean,\r\n    openSlots(): BuildingJobSlot[];\r\n    usedSlots(): BuildingJobSlot[];\r\n    /**\r\n     * returns true when bean is found in slot and freed\r\n     * @param beanKey \r\n     */\r\n    tryFreeBean(beanKey: number): boolean;\r\n}\r\n\r\n/**\r\n * address books allow lookups from entity \"name\" to location\r\n */\r\nexport interface AddressBookHex{\r\n    [entityKey: number]: HexPoint\r\n}\r\nexport interface AddressBookPoint{\r\n    [entityKey: number]: Point\r\n}\r\n/**\r\n * address grids allow lookups from location to entity\r\n * \r\n * note: coordinates are of form \"X,Y\"\r\n * and the map cannot distinguish between hex and cartesian points\r\n */\r\nexport interface AddressGrid<T>{\r\n    [coordinate: string]: T|undefined\r\n}\r\nexport interface AddressBuildingGrid extends AddressGrid<IBuilding>{}\r\n\r\nexport interface BuildingMap{\r\n    coordByID: AddressBookHex;\r\n    all: IBuilding[];\r\n}\r\n\r\nexport class CityBook {\r\n    /**\r\n     * given \"q,r\", return the IBuilding.key\r\n     */\r\n    public readonly map = new LiveMap<string, number>(new Map());\r\n    /**\r\n     * given IBuilding.type return the IBuilding[]\r\n     */\r\n    public readonly yellow = new LiveMap<string, number[]>(new Map());\r\n    /**\r\n     * given IBuilding.key, return \"q,r\"\r\n     */\r\n    public readonly white = new LiveMap<number, string>(new Map());\r\n    /**\r\n     * given IBuilding.key, return IBuilding\r\n     */\r\n    public readonly db: LiveMap<number, IBuilding>;\r\n\r\n    constructor(_db: Map<number, IBuilding>){\r\n        this.db = new LiveMap<number, IBuilding>(_db);\r\n        this.buildIndexes();\r\n    }\r\n\r\n    private buildIndexes(){\r\n        const keys = Array.from(this.db.get.keys());\r\n        const ix = { \r\n            map: new Map<string, number>(),\r\n            yellow: new Map<string, number[]>(),\r\n            white: new Map<number, string>()\r\n        }\r\n        keys.forEach((key: number) => {\r\n            const b = this.db.get.get(key);\r\n            if (b){\r\n                const address = b.address.q+','+b.address.r;\r\n                ix.map.set(address, b.key);\r\n                ix.white.set(b.key, address);\r\n                const group = ix.yellow.get(b.type) || []\r\n                ix.yellow.set(b.type, group.concat([b.key]));\r\n            }\r\n\r\n        });\r\n        this.white.set(ix.white);\r\n        this.map.set(ix.map);\r\n        this.yellow.set(ix.yellow);\r\n    }\r\n\r\n    public addBuilding(b: IBuilding){\r\n        this.db.add(b.key, b);\r\n        this.buildIndexes();\r\n    }\r\n    public removeBuilding(b: IBuilding){\r\n        this.db.remove(b.key);\r\n        this.buildIndexes();\r\n    }\r\n\r\n    public getBuildings(): IBuilding[]{\r\n        return Array.from(this.db.get.values());\r\n    }\r\n    public findBuildingByCoordinate(h: HexPoint){\r\n        const address = h.q+','+h.r;\r\n        const key = this.map.get.get(address);\r\n        if (key) \r\n            return this.db.get.get(key);\r\n        return undefined;\r\n    }\r\n    public getRandomBuildingOfType(buildingType: BuildingTypes): IBuilding|undefined{\r\n        const keysOfType: number[] = this.yellow.get.get(buildingType) || [];\r\n        const r = GetRandom(keysOfType);\r\n        return this.db.at(r);\r\n    }\r\n\r\n    public getRandomEntertainmentBuilding(): IBuilding|undefined{\r\n        const keysOfType: number[] = (this.yellow.get.get('park') || []).concat(this.yellow.get.get('nature') || []);\r\n        const r = GetRandom(keysOfType);\r\n        return this.db.at(r);\r\n    }\r\n\r\n    public getCountOfType(buildingType: BuildingTypes): number{\r\n        return Array.from(this.yellow.get.get(buildingType) || []).length;\r\n    }\r\n}\r\n\r\nexport type BuildingTypes = 'farm'|'house'|'hospital'|'church'|'theater'|'courthouse'|'park'|'nature';\r\nexport type TopiaBuildingTypes = 'utopia_fields'|'utopia_pump'|'dystopia_refinery'|'dystopia_crypt';\r\n//utopian fields = free relax\r\n//utopia pump = slowly sucks up happiness/unhappiness?\r\n//dystopia refinery = slowly converts negative emotions to energy/bots\r\n//dystopia crypt = skips death notifications (limited use?)\r\nexport type MoverTypes = 'bean'|'ufo'|'pickup';\r\nexport type MatterTypes = MoverTypes|BuildingTypes;\r\n\r\nexport const BuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🐄',\r\n    'house': '🏡', 'hospital': '🏥', 'church': '⛪', 'theater': '🎪', 'courthouse':'🏫',\r\n    'park': '⛲️', 'nature': '🏞️'\r\n};\r\nexport const UpgradedBuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🚜',\r\n    'house': '🏘️', 'hospital': '🏙️', 'church': '⛪', 'theater': '🏟️', 'courthouse':'🏫',\r\n    'park': '🎡', 'nature': '🏞️'\r\n};\r\nexport const BuildingJobIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🌾',\r\n    'house': '📪', 'hospital': '🛏️', 'church': '⛪', 'theater': '🪑', 'courthouse':'🏫',\r\n    'park': '💐', 'nature': '♨️'\r\n};\r\nexport const BuildingToGood: {[key in BuildingTypes]: TraitGood} = {\r\n    'farm': 'food',\r\n    'house': 'shelter', \r\n    'hospital': 'medicine', \r\n    'church': 'fun', \r\n    'theater': 'fun', \r\n    'courthouse': 'fun',\r\n    'park': 'fun', \r\n    'nature': 'fun'\r\n};\r\nexport const GoodToBuilding: {[key in TraitGood]: BuildingTypes} = {\r\n    'food': 'farm',\r\n    'shelter': 'house',\r\n    'medicine':'hospital',\r\n    'fun': 'theater'\r\n};\r\nexport const JobToBuilding: {[key in TraitJob]: BuildingTypes} = {\r\n    'farmer': 'farm',\r\n    'builder': 'house', \r\n    'doc':'hospital', \r\n    'entertainer': 'theater',\r\n    'cleric': 'church', \r\n    'jobless': 'house', \r\n    'polit': 'house'\r\n};\r\n\r\nexport class Geography{\r\n    public book: CityBook = new CityBook(new Map());\r\n\r\n    addBuilding(building: IBuilding) {\r\n        this.book.addBuilding(building);\r\n        return null;\r\n    }\r\n    removeBuilding(where: HexPoint, building: IBuilding) {\r\n        this.book.removeBuilding(building);\r\n        return null;\r\n    }\r\n    getEnterprise(buildingKey: number): IEnterprise|undefined{\r\n        const ent = this.book.db.get.get(buildingKey);\r\n        if (isEnterprise(ent))\r\n            return ent;\r\n        return undefined;\r\n    }\r\n    public numberOfRings = 5;\r\n    public hexes: HexPoint[] = hex_spiral({q:0, r:0}, this.numberOfRings);\r\n    public hex_size: Point = {x: 70, y: 70};\r\n    public readonly petriRadius = 550;\r\n    public readonly petriOrigin = {x: this.petriRadius, y: this.petriRadius};\r\n}","export enum BuildingJobSlot{\r\n    first = 0,\r\n    second = 1,\r\n    third = 2,\r\n    fourth = 3,\r\n    fifth = 4,\r\n    sixth = 5\r\n}","\r\nimport React from \"react\";\r\nimport { City } from \"../simulation/City\";\r\nimport { IBuilding, BuildingIcon, hex_directions, transformPoint, hex_to_pixel, origin_point, HexPoint, BuildingJobIcon, UpgradedBuildingIcon } from \"../simulation/Geography\";\r\nimport { BuildingJobSlot } from \"../simulation/Occupation\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport './Building.css';\r\n\r\nconst slot_size = {\r\n    x: 25,\r\n    y: 25\r\n}\r\nexport function getSlotOffset(direction: HexPoint){\r\n    return hex_to_pixel(slot_size, origin_point, direction);\r\n}\r\nexport function getRandomSlotOffset(){\r\n    return getSlotOffset(GetRandom(hex_directions));\r\n}\r\nconst hexDirectionToJobSlot: {[key: number]: BuildingJobSlot} = {\r\n    2: BuildingJobSlot.first,\r\n    0: BuildingJobSlot.second,\r\n    4: BuildingJobSlot.third,\r\n    1: BuildingJobSlot.fourth,\r\n    5: BuildingJobSlot.fifth,\r\n    3: BuildingJobSlot.sixth,\r\n}\r\n\r\nexport class PetriBuilding extends React.Component<{\r\n    city: City,\r\n    building: IBuilding\r\n}> {\r\n    slots() {\r\n        return hex_directions.map((d, i: number) => {\r\n            const jobSlot: BuildingJobSlot = hexDirectionToJobSlot[i];\r\n            const hasJob = this.props.building.job_slots[jobSlot] != null;\r\n            return <span key={i} className=\"slot\" style={transformPoint(getSlotOffset(d))}>\r\n                {hasJob ? BuildingJobIcon[this.props.building.type] : null}\r\n            </span>\r\n        });\r\n    }\r\n    render() {\r\n        const buildingHex = this.props.building.address;\r\n        const p = hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, buildingHex);\r\n        const sty = transformPoint(p);\r\n        return <div key={this.props.building.type+this.props.building.key} style={sty} \r\n        className={\"building \"+this.props.building.type}>\r\n        {this.props.building.upgraded ? UpgradedBuildingIcon[this.props.building.type] : BuildingIcon[this.props.building.type]}\r\n        {this.slots()}\r\n        {this.props.building.type === 'courthouse' ? <span className=\"tile-label\">{this.props.city.name}</span> : null}\r\n        </div>\r\n    }\r\n}","export class PriorityNode<T>{\r\n    constructor(public value: T, public priority: number){}\r\n}\r\nexport interface IPriorityQueue<T>{\r\n    enqueue(value: PriorityNode<T>): void;\r\n    values: PriorityNode<T>[];\r\n    dequeue(): PriorityNode<T>|undefined;\r\n}\r\nexport class DumbPriorityQueue<T> implements IPriorityQueue<T>{\r\n    \r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n    \r\n    enqueue(value: PriorityNode<T>): void{\r\n        this.values.push(value);\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n\r\n    enqueueMany(values: PriorityNode<T>[]){\r\n        this.values = values;\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n    \r\n    dequeue(): PriorityNode<T>|undefined{\r\n        return this.values.shift();\r\n    }\r\n}\r\n\r\nexport class PriorityQueue<T> implements IPriorityQueue<T>{\r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n\r\n    //helper method that swaps the values and two indexes of an array\r\n    swap(index1: number, index2: number){\r\n        let temp = this.values[index1];\r\n        this.values[index1] = this.values[index2];\r\n        this.values[index2] = temp;\r\n        return this.values;\r\n    }\r\n    //helper methods that bubbles up values from end\r\n    bubbleUp(){\r\n        //get index of inserted element\r\n        let index = this.values.length - 1\r\n        //loop while index is not 0 or element no loger needs to bubble\r\n        while(index > 0){\r\n            //get parent index via formula\r\n            let parentIndex = Math.floor((index - 1)/2);\r\n            //if values is greater than parent, swap the two\r\n            if(this.values[parentIndex].priority > this.values[index].priority){\r\n                //swap with helper method\r\n                this.swap(index, parentIndex);\r\n                //change current index to parent index\r\n                index = parentIndex;\r\n            } else{\r\n                break;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    // method that pushes new value onto the end and calls the bubble helper\r\n    enqueue(value: PriorityNode<T>){\r\n        this.values.push(value)\r\n        //calculate parent, if parent is greater swap\r\n        //while loop or recurse\r\n        this.bubbleUp();\r\n        return this.values\r\n    }\r\n\r\n    bubbleDown(){\r\n        let parentIndex = 0;\r\n        const length = this.values.length;\r\n        const elementPriority = this.values[0].priority;\r\n        //loop breaks if no swaps are needed\r\n        while (true){\r\n            //get indexes of child elements by following formula\r\n            const leftChildIndex = (2 * parentIndex) + 1;\r\n            const rightChildIndex = (2 * parentIndex) + 2;\r\n            let leftChildPriority = 999;\r\n            let rightChildPriority;\r\n            let indexToSwap = null;\r\n            // if left child exists, and is greater than the element, plan to swap with the left child index\r\n            if(leftChildIndex < length){\r\n                leftChildPriority = this.values[leftChildIndex].priority\r\n                if(leftChildPriority < elementPriority){\r\n                    indexToSwap = leftChildIndex;\r\n                }\r\n            }\r\n            //if right child exists\r\n            if(rightChildIndex < length){\r\n                rightChildPriority = this.values[rightChildIndex].priority;\r\n\r\n                if(\r\n                    //if right child is greater than element and there are no plans to swap\r\n                    (rightChildPriority < elementPriority && indexToSwap === null) ||\r\n                    //OR if right child is greater than left child and there ARE plans to swap\r\n                    (rightChildPriority < leftChildPriority && indexToSwap !== null))\r\n                {\r\n                    //plan to swap with the right child\r\n                    indexToSwap = rightChildIndex\r\n                }\r\n            }\r\n            //if there are no plans to swap, break out of the loop\r\n            if(indexToSwap === null){\r\n                break;\r\n            } \r\n            //swap with planned element\r\n            this.swap(parentIndex, indexToSwap);\r\n            //starting index is now index that we swapped with\r\n            parentIndex = indexToSwap;\r\n        }  \r\n    }\r\n\r\n    dequeue(): PriorityNode<T>|undefined{\r\n        //swap first and last element\r\n        this.swap(0, this.values.length - 1);\r\n        //pop max value off of values\r\n        let poppedNode = this.values.pop();\r\n        //re-adjust heap if length is greater than 1\r\n        if(this.values.length > 1){\r\n            this.bubbleDown();\r\n        }\r\n        \r\n        return poppedNode;\r\n    }\r\n}","import { Agent } from \"https\";\r\nimport { Bean, DaysUntilSleepy } from \"./Bean\";\r\nimport { getRandomSlotOffset } from \"../petri-ui/Building\";\r\nimport { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitStamina, TraitHealth, TraitGood, GoodToThreshold, JobToGood, TraitSanity, GoodIcon, TraitEmote, BeanPhysics } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { accelerate_towards, BuildingTypes, Geography, GoodToBuilding, HexPoint, hex_linedraw, hex_origin, hex_ring, hex_to_pixel, IAccelerater, IBuilding, JobToBuilding, move_towards, pixel_to_hex, Point, Vector } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { PubSub } from \"../events/Events\";\r\nimport { DumbPriorityQueue, IPriorityQueue, PriorityNode, PriorityQueue } from \"./Priorities\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\nimport { ISeller } from \"./Economy\";\r\nimport { IterationStatement } from \"typescript\";\r\n\r\nexport type Act = 'travel'|'work'|'sleep'|'chat'|'soapbox'|'craze'|'idle'|'buy'|'crime'|'relax';\r\n\r\n/**\r\n * cruise == interruptible travel towards destination\r\n * \r\n * approach == uninterruptible travel into destination slot\r\n */\r\nexport type Travel = 'cruise'|'approach';\r\n\r\nexport interface IActListener{\r\n    onChat: (b: Bean, speech: IChatData) => void;\r\n    onEmote: (b: Bean, emote: TraitEmote) => void;\r\n}\r\n\r\nexport interface IActivityData {\r\n    act: Act;\r\n    elapsed?: number;\r\n    location?: Point, //FROM Point\r\n    destinations?: Point[]; //point to travel to??\r\n    intent?: IActivityData; //when travelling, what do you intend to do next\r\n    good?: TraitGood; //good to buy or work\r\n    timeSpent?: number; //time spent on this action\r\n    travel?: Travel;\r\n    chat?: IChatData;\r\n}\r\n\r\nexport interface IChatData{\r\n    participation: 'speaker'|'listener';\r\n    type: 'praise'|'bully'|'preach'|'gift';\r\n    preachBelief?: TraitBelief;\r\n    /**\r\n     * strength of the preacher's persuasion\r\n     */\r\n    persuasionStrength?: number;\r\n    /**\r\n     * target key of the bean who is targeted for praise or bully\r\n     */\r\n    targetBeanKey?: number;\r\n}\r\n\r\nexport interface IAgent {\r\n    state: AgentState;\r\n    onAct?: PubSub<number>;\r\n    jobQueue: PriorityQueue<AgentState>;\r\n}\r\nexport function ChangeState(agent: IAgent, newState: AgentState){\r\n    //if ((agent as any)['key'] === 0)\r\n    //console.log(`from ${agent.state.data.act} to ${newState.data.act} in ${agent.state.Elapsed}`);\r\n    agent.state.exit(agent);\r\n    agent.state = newState;\r\n    agent.state.enter(agent);\r\n}\r\nexport function Act(agent: IAgent, deltaMS: number, difficulty: IDifficulty, listener: IActListener): void{\r\n    const result = agent.state.act(agent, deltaMS, difficulty);\r\n    if (agent.onAct)\r\n        agent.onAct.publish(deltaMS);\r\n    if (result != agent.state){\r\n        ChangeState(agent, result);\r\n        if (result.data.act === 'chat' && result.data.chat?.participation === 'speaker'){\r\n            listener.onChat(agent as Bean, result.data.chat);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class AgentState{\r\n    constructor(public data: IActivityData){}\r\n    public get Elapsed(): number {return this.data.elapsed || 0;}\r\n    enter(agent: IAgent){\r\n        this.data.elapsed = 0;\r\n    }\r\n    act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        const newState = this._act(agent, deltaMS, difficulty);\r\n        this.data.elapsed = this.Elapsed + deltaMS;\r\n        return newState;\r\n    }\r\n    abstract _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState;\r\n    exit(agent: IAgent){\r\n        if (agent instanceof Bean){\r\n            agent.activity_duration[this.data.act] += this.Elapsed;\r\n        }\r\n    }\r\n    get display(): string {\r\n        return ActivityDisplay(this.data);\r\n    }\r\n}\r\nexport class IdleState extends AgentState{\r\n    static create(){ return new IdleState({act: 'idle'})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed < 200){\r\n            return this;\r\n        }\r\n        if (agent instanceof Bean && agent.city){\r\n            const priorities = GetPriorities(agent, difficulty);\r\n            let top = priorities.dequeue();\r\n            let travelState: TravelState|null = null;\r\n\r\n            //loop through possible destinations\r\n            while (top && travelState == null){\r\n                const activity = IdleState.substituteIntent(agent, top.value);\r\n                if (activity){\r\n                    travelState = TravelState.createFromIntent(agent, top.value);\r\n                    if (travelState != null)\r\n                        return travelState;\r\n                }\r\n                top = priorities.dequeue();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    static substituteIntent(agent: IAgent, intent: IActivityData): IActivityData|null{\r\n        if (intent.act === 'buy' && intent.good != null && agent instanceof Bean){\r\n            const desiredGoodState = agent.canBuy(intent.good);\r\n            if (desiredGoodState != 'yes' && intent.good === 'fun') //if you can't buy happiness, go somewhere to relax\r\n                intent.act = 'relax'; //relaxing is free!\r\n            else if (desiredGoodState === 'pricedout') {\r\n                if (agent.maybeCrime(intent.good)){\r\n                    intent.act = 'crime';\r\n                } else {\r\n                    const isPhysical = intent.good === 'food' || intent.good === 'medicine' || intent.good === 'shelter';\r\n                    if (isPhysical){\r\n                        agent.emote('unhappiness', 'Poverty');\r\n                    }\r\n                    return null; //don't travel to buy something that you can't afford\r\n                }\r\n            } else if (desiredGoodState === 'nosupply'){\r\n                if (intent.good){\r\n                    agent.maybeScarcity(intent.good);\r\n                }\r\n                return null; //don't travel to buy something that doesn't exist\r\n            }\r\n        }\r\n        return intent;\r\n    }\r\n    exit(agent: IAgent){\r\n        super.exit(agent);\r\n\r\n        if (agent instanceof Bean){\r\n            agent.maybeParanoid()\r\n        }\r\n    }\r\n}\r\n\r\nexport function IntentToDestination(agent: IAgent, intent: IActivityData): Point[]|null{\r\n    if (!(agent instanceof Bean))\r\n        return [];\r\n    else if (agent.city){\r\n        const city = agent.city;\r\n        switch(intent.act){\r\n            case 'buy':\r\n                if (intent.good)\r\n                    return RouteRandom(city, agent, GoodToBuilding[intent.good]);\r\n            case 'work':\r\n                return RouteRandom(city, agent, JobToBuilding[agent.job]);\r\n            case 'relax': {\r\n                const destination = city.book.getRandomEntertainmentBuilding();\r\n                if (destination){\r\n                    agent.destinationKey = destination.key;\r\n                    return Route(city, agent, destination);\r\n                } else {\r\n                    return [];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nconst WanderlustEmoteChance = 0.002;\r\nexport class TravelState extends AgentState{\r\n    static createFromIntent(agent: IAgent, intent: IActivityData): TravelState|null{\r\n        const destination = IntentToDestination(agent, intent);\r\n\r\n        if (destination)\r\n            return this.createFromDestination(destination, intent);\r\n        return null;\r\n    }\r\n    static createFromDestination(destinations: Point[], intent: IActivityData): TravelState{ \r\n        return new TravelState({act: 'travel', destinations: destinations, intent: intent});\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (agent instanceof Bean && agent.city && this.data.destinations && this.data.destinations.length){\r\n            const target = this.data.destinations[0];\r\n\r\n            if (isNaN(target.x) || isNaN(target.y)) {\r\n                //this is a sanity check\r\n                this.data.destinations.shift();\r\n                return this;\r\n            }\r\n\r\n            let collide = accelerate_towards(\r\n                agent,\r\n                target,\r\n                BeanPhysics.AccelerateS * deltaMS/1000, \r\n                BeanPhysics.MaxSpeed, \r\n                BeanPhysics.CollisionDistance,\r\n                BeanPhysics.Brake);\r\n            if (collide){\r\n                this.data.location = agent.point;\r\n                this.data.destinations.shift();\r\n            } else {\r\n            }\r\n            agent.onMove.publish(agent.point);\r\n        }\r\n\r\n        if (this.data.destinations == null || this.data.destinations.length === 0){\r\n            if (this.data.intent)\r\n                return ActToState[this.data.intent.act](this.data.intent);\r\n            else\r\n                return IdleState.create();\r\n        } else if (agent instanceof Bean && agent.city) {\r\n            const nearby = agent.city.getNearestNeighbors(agent);\r\n            if (nearby.length && agent.maybeChat()){\r\n                const targets = nearby.filter((nn) => nn.maybeChat());\r\n                if (targets.length < 1)\r\n                    return this;\r\n                const chat: IChatData = agent.getRandomChat(targets);\r\n                targets.forEach((z) => {\r\n                    ChangeState(z, ChatState.create(this.data.intent, {...chat, participation: 'listener'}));\r\n                });\r\n                return ChatState.create(this.data, chat);\r\n            } else if (agent.believesIn('Wanderlust') && Math.random() < WanderlustEmoteChance) {\r\n                agent.emote('happiness', 'Wanderlust');\r\n                return this;\r\n            } else {\r\n                return this;\r\n            }\r\n        } else {\r\n            return this;\r\n        }\r\n    }\r\n    exit(agent: IAgent){\r\n        super.exit(agent);\r\n        if (agent instanceof Bean){\r\n            agent.velocity = {x: 0, y: 0};\r\n        }\r\n    }\r\n}\r\nexport class WorkState extends AgentState{\r\n    static create(good: TraitGood){ return new WorkState({act: 'work', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 2000 && agent instanceof Bean && this.data.good && agent.city?.economy && agent.city?.law){\r\n            agent.work(agent.city.law, agent.city.economy);\r\n            return IdleState.create();\r\n        }\r\n        \r\n        return this;\r\n    }\r\n}\r\nexport class BuyState extends AgentState{\r\n    static create(good: TraitGood){ return new BuyState({act: 'buy', good: good})}\r\n    static MaximumBuyDuration = 1100;\r\n    private sinceLastAttemptMS: number = 0;\r\n    tryBuy(agent: IAgent){\r\n        if (agent instanceof Bean && this.data.good && agent.city?.economy)\r\n        {\r\n            this._bought = agent.buy[this.data.good](agent.city.economy);\r\n        }\r\n        this.sinceLastAttemptMS = 0;\r\n    }\r\n    enter(agent: IAgent){\r\n        this.tryBuy(agent);\r\n    }\r\n    private _bought: boolean = false;\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (!this._bought){\r\n            if (this.sinceLastAttemptMS > 250)\r\n            {\r\n                this.tryBuy(agent);\r\n                // if(this.attempts >= 3 && (this.data.good == 'food' || this.data.good == 'medicine') &&\r\n                //     agent instanceof Bean &&\r\n                //     agent.getCrimeDecision(this.data.good, 'desperation')){\r\n                //     return CrimeState.create(this.data.good);\r\n                // }\r\n            }\r\n        }\r\n        if (this.Elapsed > BuyState.MaximumBuyDuration)\r\n        {\r\n            if (agent instanceof Bean && this.data.good){\r\n                agent.maybeScarcity(this.data.good);\r\n            }\r\n            return IdleState.create();\r\n        }\r\n        else\r\n            return this;\r\n    }\r\n}\r\nexport class ChatState extends AgentState{\r\n    static create(intent: IActivityData|undefined, chat: IChatData){ \r\n        return new ChatState({act: 'chat', intent: intent, chat: chat})\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (this.Elapsed > 1000 && this.data.intent){\r\n            const tState = TravelState.createFromIntent(agent, this.data.intent);\r\n            if (tState)\r\n                return tState;\r\n        }\r\n        return this;\r\n    }\r\n    exit(agent: IAgent){\r\n        super.exit(agent);\r\n        if (agent instanceof Bean && this.data.chat){\r\n            agent.lastChatMS = Date.now();\r\n            if (this.data.chat.participation === 'listener'){\r\n                if (this.data.chat.type === 'bully'){\r\n                    agent.maybeAntagonised();\r\n                }\r\n                else if (this.data.chat.type === 'praise'){\r\n                    agent.maybeEnthused();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class RelaxState extends AgentState{\r\n    static create(intent: IActivityData|undefined, chat: IChatData){ \r\n        return new RelaxState({act: 'relax', intent: intent, chat: chat})\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        let durationMS = 1000;\r\n        if (agent instanceof Bean && agent.believesIn('Naturalism'))\r\n            durationMS *= 3;\r\n        if (this.Elapsed > durationMS){\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n    exit(agent: IAgent){\r\n        super.exit(agent);\r\n        if (agent instanceof Bean){\r\n            agent.discrete_fun += 1;\r\n            agent.emote('happiness', 'Relaxation');\r\n            if (agent.believesIn('Naturalism'))\r\n                agent.emote('happiness', 'Naturalism');\r\n        }\r\n    }\r\n}\r\nexport class CrimeState extends AgentState{\r\n    static create(good: 'food'|'medicine'){ return new CrimeState({act: 'crime', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 1500 && agent instanceof Bean && agent.city?.economy && \r\n            (this.data.good === 'food' ||\r\n            this.data.good === 'medicine')){\r\n            agent.steal(this.data.good, agent.city?.economy);\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nconst ActToState: {[key in Act]: (data: IActivityData) => AgentState} = {\r\n    'idle': (data) => new IdleState(data),\r\n    'work': (data) => new WorkState(data),\r\n    'chat': (data) => new ChatState(data),\r\n    'travel': (data) => new TravelState(data),\r\n    'craze': (data) => new BuyState(data),\r\n    'buy': (data) => new BuyState(data),\r\n    'sleep': (data) => new BuyState(data),\r\n    'soapbox': (data) => new BuyState(data),\r\n    'crime': (data) => new CrimeState(data),\r\n    'relax': (data) => new RelaxState(data)\r\n}\r\n\r\nexport const GetPriority = {\r\n    work: function(bean:Bean): number{\r\n        if (bean.job == 'jobless' && bean.city){\r\n            return 9;\r\n        }\r\n        else if (bean.city){\r\n            //beans with no inventory prioritize work higher\r\n            let inventory_priority = 99;\r\n            if (bean.city.economy){\r\n                const quant = bean.city.economy.market.getStakeListings(bean.key, bean.employerEnterpriseKey, JobToGood(bean.job))?.quantity || 0;\r\n                inventory_priority = quant;\r\n            }\r\n            //beans with lots of cash prioritize work higher\r\n            const wealth_priority = bean.cash / bean.city.costOfLiving / 2;\r\n            return Math.min(inventory_priority, wealth_priority);\r\n        } else {\r\n            return 0;\r\n        }\r\n    },\r\n    food: function(bean:Bean, difficulty: IDifficulty): number{\r\n        if ((bean.discrete_food <= difficulty.bean_life.vital_thresh.food.warning ))\r\n            return bean.discrete_food;\r\n        return 0.5 + (bean.discrete_food / difficulty.bean_life.vital_thresh.food.sufficient )\r\n    },\r\n    medicine:function(bean:Bean, difficulty: IDifficulty): number{\r\n        if ((bean.discrete_health <= difficulty.bean_life.vital_thresh.medicine.warning ))\r\n            return 0.25 + bean.discrete_health;\r\n        return 0.75 + (bean.discrete_health / difficulty.bean_life.vital_thresh.medicine.sufficient )\r\n    },\r\n    stamina: function(bean:Bean, difficulty: IDifficulty): number{\r\n        if ((bean.discrete_stamina <= difficulty.bean_life.vital_thresh.shelter.warning ))\r\n            return 0.50 + bean.discrete_stamina;\r\n        return 1 + (bean.discrete_stamina / difficulty.bean_life.vital_thresh.shelter.sufficient )\r\n    },\r\n    fun:function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 3\r\n    }\r\n}\r\n\r\nexport function GetPriorities(bean: Bean, difficulty: IDifficulty): IPriorityQueue<IActivityData>{\r\n    const queue = new DumbPriorityQueue<IActivityData>([]);\r\n    let node = new PriorityNode<IActivityData>({act: 'work', good: JobToGood(bean.job)} as IActivityData, GetPriority.work(bean));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'food'} as IActivityData, GetPriority.food(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'shelter'} as IActivityData, GetPriority.stamina(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'medicine'} as IActivityData, GetPriority.medicine(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'fun'} as IActivityData, GetPriority.fun(bean, difficulty));\r\n    queue.enqueue(node);\r\n    return queue;\r\n}\r\n\r\nexport function ActivityIcon(data: IActivityData): string{\r\n    switch(data.act){\r\n        case 'work':\r\n            if (data.good)\r\n                return '💪 '+ GoodIcon[data.good];\r\n            else\r\n                return '💪';\r\n        case 'buy':\r\n            if (data.good == 'shelter')\r\n                return '😴';\r\n            if (data.good)\r\n                return '💸 '+ GoodIcon[data.good];\r\n            else\r\n                return '💸';\r\n    }\r\n    return '';\r\n}\r\nexport function ActivityDisplay(data: IActivityData): string{    \r\n    switch(data.act){\r\n        case 'chat':\r\n            return `chatting`;\r\n        case 'crime':\r\n            return `commiting crime`;\r\n        case 'relax':\r\n            return `relaxing`;\r\n        case 'travel':\r\n            return `travelling to ` + data.intent?.act || '';\r\n        case 'work':\r\n            if (data.good)\r\n                return 'working to make '+ GoodIcon[data.good];\r\n            else\r\n                return 'working';\r\n        case 'buy':\r\n            if (data.good == 'shelter')\r\n                return 'sleeping 😴';\r\n            if (data.good)\r\n                return 'buying '+ GoodIcon[data.good];\r\n            else\r\n                return 'buying';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean extends ISeller, IMover, IAgent{    \r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith: TraitFaith;\r\n    stamina: TraitStamina;\r\n    health: TraitHealth;\r\n    discrete_food: number;\r\n    discrete_sanity: number;\r\n    discrete_stamina: number;\r\n    cash: number;\r\n    dob: IDate;\r\n    sanity: TraitSanity;\r\n    lifecycle: 'alive'|'dead'|'abducted'\r\n}\r\n\r\nexport interface IMover extends IAccelerater{\r\n    key: number;\r\n    onMove: PubSub<Point>;\r\n    destinationKey: number;\r\n}\r\n\r\n/**\r\n * fills out \"markers\" and \"destinationKey\" with random building of type\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function RouteRandom(geo: Geography, mover: IMover, buildingType: BuildingTypes): Point[]|null{\r\n    const destination: IBuilding|undefined = geo.book.getRandomBuildingOfType(buildingType);\r\n    if (destination === undefined) return null;\r\n    mover.destinationKey = destination.key;\r\n    return Route(geo, mover, destination);\r\n}\r\n\r\n/**\r\n * fills out \"markers\" property with points to walk to destination\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function Route(geo: Geography, mover: IMover, destination: IBuilding){\r\n    const start = mover.point;\r\n    const nearestHex = pixel_to_hex(geo.hex_size, geo.petriOrigin, start);\r\n    return hex_linedraw(nearestHex, destination.address).map((h) => hex_to_pixel(geo.hex_size, geo.petriOrigin, h)).map((x, i, a) => {\r\n        if (i === a.length-1){\r\n            const offset = getRandomSlotOffset();\r\n            return {\r\n                x: x.x + offset.x,\r\n                y: x.y + offset.y\r\n            }\r\n        } else {\r\n            return x;\r\n        }\r\n    });\r\n}\r\nexport function Approach(geo: Geography, mover: IMover){\r\n\r\n}","import { TraitCommunity, TraitFaith, TraitIdeals } from \"../World\";\r\n\r\nexport type BeliefCommonality = 'common'|'uncommon'|'rare';\r\n\r\nexport type TraitBelief = 'Diligence'| // happy from work\r\n'Natalism'| // increased % of having kids\r\n'Naturalism'|\r\n'Hedonism'| //more entertainment\r\n'Progressivism'|\r\n'Libertarianism'|\r\n'Parochialism'|\r\n'Cosmopolitanism'|\r\n'Capitalism'|\r\n'Socialism'|\r\n'Communism'|\r\n// 'Tribalism'| \r\n// 'Globalism'| \r\n// 'Pacifism'| \r\n'Neuroticism'| // takes extra sanity damage\r\n'Dogmatism'| \r\n// 'Mysticism'| \r\n 'Paranoia'| \r\n// 'Evangelism'| \r\n// 'Fanaticism'| // doesn't like beings that don't share narrative \r\n'Authority'| //less crime, more crime reports\r\n'Anarchism'| // breaks rules easily\r\n//'Sadism'| \r\n'Antagonism'|\r\n'Enthusiasm'|\r\n'Gossip'|'Extroversion'|\r\n'Charity'| // % to donate\r\n'Gluttony'|\r\n'Wanderlust'|\r\n'Germophobia'|\r\n'Greed'; // steal easier\r\n\r\n\r\n// 'friendly'| // likes all beings more\r\n// 'realistic'| // lower happiness\r\n// 'athletic'| // takes less health damage\r\n// 'open-minded'| // beliefs are easily changed\r\n\r\nexport type BeliefSubject = 'self'|'other';\r\nexport type BeliefVerb = 'are'|'arenot';\r\nexport interface IBeliefData {\r\n    noun: string,\r\n    adj: string,\r\n    icon: string,\r\n    description?: string,\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>\r\n}\r\nexport const PrimaryBeliefData: {[key in TraitIdeals|TraitCommunity]: IBeliefData} = {\r\n    prog: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️',\r\n        description: \"Strives to help others\"\r\n    },\r\n    trad: {\r\n        noun: 'Elitism', adj: 'Elitist', icon: '👑',\r\n        description: \"Strives for individual power\"\r\n    },\r\n    state: {\r\n        noun: 'Collectivism', adj: 'Collectivist', icon: '🕊️',\r\n        description: \"Trusts in the social group\"\r\n    },\r\n    ego: {\r\n        noun: 'Independence', adj: 'Independent', icon: '🦅',\r\n        description: \"Trusts only in oneself\"\r\n    },\r\n}\r\nexport const NarrativeBeliefData: {[key in TraitFaith]: IBeliefData} = {\r\n    rocket: {\r\n        noun: 'Futurism', adj: 'Futuristic', icon: '🚀',\r\n        description: \"Loves stories of the far future\"\r\n    },\r\n    dragon: {\r\n        noun: 'Mythology', adj: 'Mythical', icon: '🐲',\r\n        description: \"Loves stories of the legendary past\"\r\n    },\r\n    music: {\r\n        noun: 'Drama', adj: 'Dramatic', icon: '🎵',\r\n        description: \"Loves stories of emotional bonding\"\r\n    },\r\n    noFaith: {\r\n        noun: 'Nihilism', adj: 'Nihilist', icon: '⚫️',\r\n        description: \"Hates fairy tales\"\r\n    },\r\n}\r\nexport const SecondaryBeliefData: {[key in TraitBelief]: IBeliefData} = {\r\n    // misc 🎲 traits\r\n    Diligence: {\r\n        noun: 'Diligence', adj: 'Diligence', icon: '💪',\r\n        description: \"🎲 to 👍 while working\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['state', 'ego']\r\n    },\r\n    Natalism: {\r\n        noun: 'Natalism', adj: 'Natalist', icon: '👶',\r\n        description: \"Extra 🎲 for 👶\" //implemented\r\n    },\r\n    Charity: {\r\n        noun: 'Charity', adj: 'Charitable', icon: '😇',\r\n        description: \"🎲 to gift 💰 to the penniless; and spread 👍\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Progressivism: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️',\r\n        description: \"🎲 to 👍 when paying taxes\"\r\n    },\r\n    Libertarianism: {\r\n        noun: 'Libertarianism', adj: 'Libertarian', icon: '🔫',\r\n        description: \"🎲 to 👎 when paying taxes\",\r\n        //idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Wanderlust: {\r\n        noun: 'Wanderlust', adj: 'Wanderer', icon: '🔭',\r\n        description: \"🎲 to 👍 when travelling\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Germophobia: {\r\n        noun: 'Germophobia', adj: 'Germophobic', icon: '🤧',\r\n        description: \"👎 when sick or working in hospital\",\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n\r\n    // work traits\r\n    Parochialism: {\r\n        noun: 'Parochialism', adj: 'Parochial', icon: '🐮',\r\n        description: \"Extra 👍 working 🌾; 👎 from dense houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Cosmopolitanism: {\r\n        noun: 'Cosmopolitanism', adj: 'Cosmopolitan', icon: '🍸',\r\n        description: \"Extra 👍 working 🎻; 👎 from rural houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Capitalism: {\r\n        noun: 'Capitalism', adj: 'Capitalist', icon: '🎩',\r\n        description: \"👎 working in co-ops and communes; Extra 👍 when owner\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Socialism: {\r\n        noun: 'Socialism', adj: 'Socialist', icon: '🤝',\r\n        description: \"Extra 👍 working in co-ops\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Communism: {\r\n        noun: 'Communism', adj: 'Communist', icon: '⚒️',\r\n        description: \"👎 working in companies\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n\r\n    // Fraud: {\r\n    //     noun: 'Fraud', adj: 'Fraudulent', icon: '🤥',\r\n    //     description: \"??\",\r\n    //     idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    // },\r\n\r\n    // 👍 traits\r\n    Naturalism: {\r\n        noun: 'Naturalism', adj: 'Naturalist', icon: '🛶',\r\n        description: \"Extra 👍 from 😎; 😎 3x longer\" //implemented\r\n    },\r\n    Hedonism: {\r\n        noun: 'Hedonism', adj: 'Hedonistic', icon: '💋',\r\n        description: \"🎲 to emote extra 👍;🎲 to 👎 when working;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Gluttony: {\r\n        noun: 'Gluttony', adj: 'Glutton', icon: '🎃',\r\n        description: \"Extra 👍 when stuffed; Extra 👎 when hungry;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Paranoia: {\r\n        noun: 'Paranoia', adj: 'Paranoid', icon: '👽',\r\n        description: \"🎲 to 👎 at any time\",  //implemented\r\n        //idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n\r\n    // 😈 Crime traits\r\n    Authority: {\r\n        noun: 'Authority', adj: 'Authoritarian', icon: '👢',\r\n        description: \"Less 🎲 for all 😈 Crime\", //implemented\r\n        //idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    Anarchism: {\r\n        noun: 'Anarchism', adj: 'Anarchist', icon: '🖕',\r\n        description: \"Extra 🎲 for all 😈 Crime\", //implemented\r\n        //idealCon: ['state', 'prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Greed: {\r\n        noun: 'Greed', adj: 'Greedy', icon: '🤑',\r\n        description: \"Extra 🎲 for theft 😈 Crime; Extra 👍 when rich\",\r\n        //idealCon: ['prog'], idealPro: ['trad']\r\n    },\r\n    // Bloodthirst: {\r\n    //     noun: 'Bloodthirst', adj: 'Bloodthirsty', icon: '🩸',\r\n    //     description: \"🎲 for assault 😈 Crime in a 🗣️\"\r\n    // },\r\n    // Pacifism: {\r\n    //     noun: 'Pacifism', adj: 'Pacifist', icon: '😘',\r\n    //     description: \"will never punish others\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n    // Mysticism: {\r\n    //     noun: 'Mysticism', adj: 'Mystical', icon: '🔮',\r\n    //     description: \"🎲 to 👏 in any conversation\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n\r\n    // 🗣️ traits\r\n    Extroversion: {\r\n        noun: 'Extroversion', adj: 'Extrovert', icon: '🤩',\r\n        description: \"Extra 🎲 to start a 🗣️\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Gossip: {\r\n        noun: 'Gossip', adj: 'Gossipy', icon: '📞',\r\n        description: \"🎲 to spread 👎 in a 🗣️\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Antagonism: {\r\n        noun: 'Antagonism', adj: 'Antagonistic', icon: '🤬',\r\n        description: \"🎲 to spread 👎 in a 🗣️\" //implemented\r\n    },\r\n    Enthusiasm: {\r\n        noun: 'Enthusiasm', adj: 'Enthusiastic', icon: '🥳',\r\n        description: \"🎲 to spread 👍 in a 🗣️\" //implemented\r\n    },\r\n    // Globalism: {\r\n    //     noun: 'Globalism', adj: 'Globalist', icon: '🌍',\r\n    //     description: \"🎲 to 👍 other hair colors in a 🗣️\",\r\n    //     idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    // },\r\n    // Tribalism: {\r\n    //     noun: 'Tribalism', adj: 'Tribal', icon: '🏰',\r\n    //     description: \"🎲 to 👎 other hair colors in a 🗣️\",\r\n    //     idealCon: ['prog'], idealPro: ['state', 'ego']\r\n    // },\r\n\r\n    // Evangelism: {\r\n    //     noun: 'Evangelism', adj: 'Evangelist', icon: '📣',\r\n    //     description: \"+50% persuasion of 🎭\",\r\n    //     idealCon: ['ego'], idealPro: ['state']\r\n    // },\r\n    // Fanaticism: {\r\n    //     noun: 'Fanaticism', adj: 'Fanatical', icon: '👺',\r\n    //     description: \"🎲 to 👎 other 🎭\",\r\n    //     idealCon: ['prog'], idealPro: []\r\n    // },\r\n\r\n    // Depression: {\r\n    //     noun: 'Depression', adj: 'Depressive', icon: '😓',\r\n    //     description: \"🎲 to 👎 when unhappy\",\r\n    // },\r\n    // Optimism: {\r\n    //     noun: 'Optimism', adj: 'Optimistic', icon: '😺',\r\n    //     description: \"🎲 to 👍 when unhappy\",\r\n    // },\r\n    // Xenophobia: {\r\n    //     noun: 'Xenophobia', adj: 'Xenophobic', icon: '🛑',\r\n    //     description: \"🎲 to 👎 when living with other hair colors\",\r\n    // },\r\n\r\n    // super bad traits\r\n    // Sadism: {\r\n    //     noun: 'Sadism', adj: 'Sadistic', icon: '😈',\r\n    //     description: \"🎲 to ☠️ other after a 🗣️\"\r\n    // },\r\n    // Vandalism: {\r\n    //     noun: 'Vandalism', adj: 'Vandal', icon: '💩',\r\n    //     description: \"🎲 to destroy goods\"\r\n    // },\r\n    // Delirium: {\r\n    //     noun: 'Delirium', adj: 'Delirious', icon: '😪',\r\n    //     description: \"Chooses actions at random\"\r\n    // },\r\n    // DelusionalMania: {\r\n    //     noun: 'Delusional Mania', adj: 'Delusional Maniac', icon: '😵',\r\n    //     description: \"🎲 to ☠️ nearby subjects\"\r\n    // },\r\n    // Catatonia: {\r\n    //     noun: 'Catatonia', adj: 'Catatonic', icon: '😶',\r\n    //     description: \"-50% walk speed. Cannot work.\"\r\n    // },\r\n\r\n    // meta-traits\r\n    Neuroticism: {\r\n        noun: 'Neuroticism', adj: 'Neurotic', icon: '😱',\r\n        description: \"+100% 🧠 damage\", //implemented\r\n        idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n    Dogmatism: {\r\n        noun: 'Dogmatism', adj: 'Dogmatic', icon: '🐶',\r\n        description: \"Cannot change beliefs\", //implemented\r\n        idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n};\r\n\r\nexport function IsIdealDivergent(con: TraitCommunity|TraitIdeals, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    switch(con){\r\n        case 'trad':\r\n        case 'prog':\r\n            return con == utopiaMotive;\r\n        case 'state':\r\n        case 'ego':\r\n            return con == utopiaCommunity;\r\n    }\r\n}\r\n\r\nexport function IsBeliefDivergent(belief: TraitBelief, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    const data = SecondaryBeliefData[belief];\r\n    return data.idealCon != null && data.idealCon.reduce((isDivergent: boolean, con) => {\r\n        return isDivergent || IsIdealDivergent(con, utopiaMotive, utopiaCommunity);\r\n    }, false);\r\n}\r\n\r\nexport interface BeliefSubjectOption {key: BeliefSubject};\r\nexport interface BeliefVerbOption {key: BeliefVerb};\r\nexport interface BeliefAdjOption {key: TraitBelief};\r\n\r\nexport const BeliefSubjectAll: BeliefSubject[] = ['self', 'other'];\r\nexport const BeliefVerbAll: BeliefVerb[] = ['are', 'arenot'];\r\nexport const BeliefsAll = Object.keys(SecondaryBeliefData).map((x) => x as TraitBelief);\r\n\r\nexport interface Belief{\r\n    subject: BeliefSubject;\r\n    verb: BeliefVerb;\r\n    adj: TraitBelief;\r\n}\r\n\r\nexport type HedonSourceToVal = {[source: string]: number};\r\nexport interface HedonReport {\r\n    flatAverage: number,\r\n    weightedAverage: number,\r\n    maxSource: string,\r\n    minSource: string,\r\n    all: HedonSourceToVal\r\n}\r\n\r\nexport function GetHedonReport(hedonHistory: HedonSourceToVal[]): HedonReport {\r\n    if (hedonHistory.length === 0){\r\n        return {\r\n            all: {},\r\n            flatAverage: 0,\r\n            weightedAverage: 0,\r\n            maxSource: '',\r\n            minSource: ''\r\n        }\r\n    }\r\n    const all: {[source: string]: number} = {};\r\n    let weightedAverage: number = 0;\r\n    let allSum: number = 0;\r\n    for (let i = 0; i < hedonHistory.length; i++) {\r\n        const day = hedonHistory[i];\r\n        let daySum = 0;\r\n        const sources = Object.keys(day);\r\n        for (let j = 0; j < sources.length; j++) {\r\n            const source = sources[j];\r\n            daySum += day[source];\r\n            if (!all[source]) all[source] = 0;\r\n            all[source] += day[source];\r\n        }\r\n        weightedAverage += daySum / (i + 1);\r\n        allSum += daySum;\r\n    }\r\n\r\n    const allSources = Object.keys(all);\r\n    return {\r\n        flatAverage: allSum / hedonHistory.length,\r\n        weightedAverage: weightedAverage,\r\n        maxSource: allSources.reduce((max, source) => {\r\n            if (all[source] > max.val)\r\n                return {source: source, val: all[source]};\r\n            else return max;\r\n        }, {source: '', val: 0}).source,\r\n        minSource: allSources.reduce((max, source) => {\r\n            if (all[source] < max.val)\r\n                return {source: source, val: all[source]};\r\n            else return max;\r\n        }, {source: '', val: 0}).source,\r\n        all: all\r\n    }\r\n}","import { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitStamina, TraitHealth, TraitFood, TraitJob, JobToGood, IHappinessModifier, TraitToModifier, MaslowHappinessScore, GetHappiness, GoodToThreshold, TraitGood, TraitSanity, TraitEmote, EmotionSanity, EmotionWorth } from \"../World\";\r\nimport { RandomEthno, GetRandom, GetRandomNumber } from \"../WorldGen\";\r\nimport { Economy, ISeller } from \"./Economy\";\r\nimport { Policy, Party } from \"./Politics\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\nimport { IDate, withinLastYear } from \"./Time\";\r\nimport { Government } from \"./Government\";\r\nimport { Act, AgentState, IActivityData, IAgent, IBean, IChatData, IdleState, IMover } from \"./Agent\";\r\nimport { JobToBuilding, Point, Vector } from \"./Geography\";\r\nimport { City } from \"./City\";\r\nimport { PriorityQueue } from \"./Priorities\";\r\nimport { GetHedonReport, HedonReport, HedonSourceToVal, SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { IPlayerData } from \"./Player\";\r\nimport { BeanDeathCause, BeanResources, IDifficulty } from \"../Game\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nconst BabyChance = 0.01;\r\nconst EmoteCrisisChance = .10;\r\nexport const DaysUntilSleepy = 7;\r\nconst ChatCooldownMS = 4000;\r\n\r\nconst HedonismExtraChance = 0.1;\r\nconst ParanoidUnhappyChance = 0.05;\r\nconst HedonismHateWorkChance = 0.15;\r\nconst DiligenceHappyChance = 0.25;\r\nconst ParochialHappyChance = 0.25;\r\nconst CosmopolitanHappyChance = 0.25;\r\nconst ExtrovertChatExtraChance = 0.25;\r\nconst AntagonismBullyChance = 0.45;\r\nconst GossipBullyChance = 0.35;\r\nconst EnthusiasmPraiseChance = 0.45;\r\nconst GermophobiaHospitalWorkChance = 0.25;\r\nexport class Bean implements IBean{\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public dob: IDate = {year: 0, season: 0, day: 1, hour: 0};\r\n    public bornInPetri: boolean = false;\r\n    public name: string = 'Human Bean';\r\n    public get sanity(): TraitSanity {\r\n        if (this.discrete_sanity >= 8)\r\n            return 'sane';\r\n        else if (this.discrete_sanity >= 5)\r\n            return 'stressed'\r\n        else if (this.discrete_sanity >= 3)\r\n            return 'disturbed'\r\n        else\r\n            return 'psychotic';\r\n    }\r\n    public discrete_sanity: number = 10;\r\n    /**\r\n     * 0-1\r\n     */\r\n    public discrete_fun: number = 0;\r\n    public lifecycle: 'alive'|'dead'|'abducted' = 'alive';\r\n    public get alive(): boolean{\r\n        return this.lifecycle === 'alive';\r\n    }\r\n    public set alive(val: boolean){\r\n        this.lifecycle = val === true ? 'alive' : 'dead';\r\n    }\r\n\r\n    public activity_queue: IActivityData[] = [];\r\n    public activity_duration: {[act in Act]: number} = {'buy': 0, 'chat': 0, 'craze': 0, 'crime': 0, 'idle': 0, 'relax': 0, 'sleep': 0, 'soapbox': 0, 'travel': 0, 'work': 0};\r\n\r\n    public speed = 60;\r\n    public point: Point = {x: 0, y: 0};\r\n    public velocity: Vector = {x: 0, y: 0};\r\n    public onMove = new PubSub<Point>();\r\n    public destinationKey = 0;\r\n\r\n    public city: City|null = null;\r\n\r\n    public ethnicity: TraitEthno = RandomEthno();\r\n\r\n    //maslow\r\n    public discrete_food: number = 1;\r\n    public get food(): TraitFood {\r\n        if (this.discrete_food >= GoodToThreshold['food'].abundant)\r\n        return 'stuffed';\r\n        else if (this.discrete_food >= GoodToThreshold['food'].sufficient)\r\n        return 'sated'\r\n        else if (this.discrete_food >= GoodToThreshold['food'].warning)\r\n        return 'hungry'\r\n        else\r\n        return 'starving';\r\n    }\r\n    public stamina: TraitStamina = 'awake';\r\n    public discrete_health: number = 2;\r\n    public get health(): TraitHealth {\r\n        if (this.discrete_health >= GoodToThreshold['medicine'].abundant)\r\n        return 'fresh';\r\n        else if (this.discrete_health >= GoodToThreshold['medicine'].sufficient)\r\n        return 'bruised'\r\n        else if (this.discrete_health >= GoodToThreshold['medicine'].warning)\r\n        return 'sickly'\r\n        else\r\n        return 'sick';\r\n    }\r\n    //values\r\n    public community: TraitCommunity = 'ego';\r\n    public ideals: TraitIdeals = 'trad';\r\n    //other\r\n    public job: TraitJob = 'jobless';\r\n    public employerEnterpriseKey?: number;\r\n    public faith: TraitFaith = 'noFaith';\r\n    public beliefs: TraitBelief[] = [];\r\n    public cash: number = 3;\r\n    /**\r\n     * current hedons on index 0, plus last len-1 days of hedon history\r\n     * \r\n     * do not modify - World.tsx simulate_world will handle it\r\n     */\r\n    public hedonHistory: HedonSourceToVal[] = [{}];\r\n    /**\r\n     * latest happiness report\r\n     */\r\n    public happiness: HedonReport = GetHedonReport(this.hedonHistory);\r\n    /**\r\n     * -100 to 100\r\n     */\r\n    public lastHappiness: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastSentiment: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastPartySentiment: number = 0;\r\n    public ticksSinceLastSale: number = 0;\r\n    public ticksSinceLastRelax: number = 0;\r\n    /**\r\n     * days until needs sleep\r\n     */\r\n    public discrete_stamina: number = 7;\r\n    public fairGoodPrice: number = 1;\r\n    public lastChatMS: number = Date.now();\r\n    get isInCrisis(): boolean{\r\n        return this.food === 'starving' ||\r\n        this.stamina === 'homeless' ||\r\n        this.health === 'sick';\r\n    }\r\n    believesIn(belief: TraitBelief): boolean{\r\n        return this.beliefs.indexOf(belief) !== -1;\r\n    }\r\n    loseSanity(amount: number){\r\n        const multiplier = this.believesIn('Neuroticism') ? 2 : 1;\r\n        this.discrete_sanity -= multiplier * amount;\r\n    }\r\n    getHappinessModifiers(econ: Economy, homeCity: City, law: Government): IHappinessModifier[]{\r\n        const mods: IHappinessModifier[] = [\r\n            TraitToModifier[this.food],\r\n            TraitToModifier[this.stamina],\r\n            TraitToModifier[this.health],\r\n            {\r\n                reason: 'Entertainment', mod: this.discrete_fun*.4\r\n            }\r\n        ];\r\n        if (this.ideals === 'trad' && this.ethnicity != homeCity.majorityEthnicity) {\r\n            mods.push({reason: 'Xenophobic', mod: -.1});\r\n        }\r\n        if (this.community === 'ego' && this.job != 'jobless' && this.employerEnterpriseKey &&\r\n            homeCity.book.db.get.get(this.employerEnterpriseKey)?.upgraded) {\r\n            mods.push({reason: 'Hates Building Density', mod: -.1});\r\n        }\r\n        if (this.cash < 1) {\r\n            mods.push({reason: 'Penniless', mod: MaslowHappinessScore.Deficient});\r\n        } else if (this.cash > econ.getCostOfLiving() * 3){\r\n            mods.push({reason: 'Upper Class', mod: 0.3});\r\n        } else if (this.cash > econ.getCostOfLiving() * 2){\r\n            mods.push({reason: 'Middle Class', mod: 0.15});\r\n        }\r\n        if (this.job === 'jobless') {\r\n            mods.push({reason: 'Unemployed', mod: MaslowHappinessScore.Deficient});\r\n        }\r\n\r\n        return mods;\r\n    }\r\n    getSentimentModifiers(econ: Economy, homeCity: City, law: Government, party: Party): {\r\n        party: IHappinessModifier[],\r\n        law: IHappinessModifier[]\r\n    }{\r\n        const result = {party: [] as IHappinessModifier[], law: [] as IHappinessModifier[]};\r\n\r\n        if (this.community === party.community){\r\n            result.party.push({reason: 'Same Community', mod: 0.15});\r\n        }\r\n        if (this.ideals === party.ideals){\r\n            result.party.push({reason: 'Same Ideals', mod: 0.15});\r\n        } else if (this.community != party.community){\r\n            result.party.push({reason: 'Incompatible Values', mod: -0.15});\r\n        }\r\n        return result;\r\n    }\r\n    calculateBeliefs(econ: Economy, homeCity: City, law: Government, party: Party): void{\r\n        this.lastHappiness = GetHappiness(this.getHappinessModifiers(econ, homeCity, law));\r\n        const sent = this.getSentimentModifiers(econ, homeCity, law, party);\r\n        this.lastSentiment = GetHappiness(sent.law);\r\n        this.lastPartySentiment = GetHappiness(sent.party);\r\n\r\n        if (this.job === 'jobless'){\r\n            this.fairGoodPrice = 1;\r\n        } else {\r\n            const myGood = JobToGood(this.job);\r\n            this.fairGoodPrice = econ.getFairGoodPrice(myGood);\r\n        }\r\n    }\r\n    /**\r\n     * non-normalized multiplier\r\n     */\r\n    getSentimentPolicies(traits: {[x:string]:boolean}, policies: Policy[]){\r\n        let multiplier = 100;\r\n        policies.forEach((policy) => {\r\n            policy.fx.forEach((fx) => {\r\n                if (traits[fx.key])\r\n                multiplier += fx.mag * 10; //-30 to +30\r\n            });\r\n        });\r\n        return multiplier / 100;\r\n    }\r\n    _getTraitMap(){\r\n        let traits = {[this.community]: true, [this.ideals]:  true, [this.ethnicity]: true};\r\n        if (this.faith != 'noFaith')\r\n            traits[this.faith] = true;\r\n        return traits;\r\n    }\r\n    getFace(): string{\r\n        // if (!this.alive)\r\n        //     return '💀';\r\n        if (this.state.data.act === 'buy' && this.state.data.good === 'shelter'){\r\n            return '😴';\r\n        }\r\n        if (this.state.data.act === 'crime'){\r\n            return '😈';\r\n        }\r\n        if (this.state.data.act === 'relax'){\r\n            return '😎';\r\n        }\r\n        if (this.state.data.act === 'chat'){\r\n            if (this.state.data.chat?.participation === 'speaker'){\r\n                switch(this.state.data?.chat?.type){\r\n                    default: return '😃';\r\n                    case 'gift': return '😇';\r\n                    case 'praise': return '🥳';\r\n                    case 'bully': return '😈';\r\n                }\r\n            }\r\n            return '🤨';\r\n        }\r\n        if (this.food === 'starving')\r\n            return '😫';\r\n        if (this.health === 'sick')\r\n            return '🤢';\r\n        if (this.stamina === 'homeless')\r\n            return '🥶';\r\n        if (this.job === 'jobless')\r\n            return '😧';\r\n        if (this.lastHappiness < 0)\r\n            return '☹️';\r\n        if (this.lastHappiness >= 50)\r\n            return '🙂';\r\n        return '😐';\r\n    }\r\n    getIdea(costOfLiving: number): {bad: boolean, idea: string}|null {\r\n        if (this.food === 'hungry')\r\n            return {bad: true, idea: '🍗'};\r\n        if (this.health === 'sickly')\r\n            return {bad: true, idea: '💊'};\r\n        if (this.stamina === 'homeless')\r\n            return {bad: true, idea: '🏠'};\r\n        if (this.canBaby(costOfLiving))\r\n            return {bad: false, idea: '👶'};\r\n        return null;        \r\n    }\r\n    getSpeech(): string | undefined {\r\n        if (this.state.data.act === 'chat'){\r\n            if (this.state.data.chat?.participation === 'speaker' && this.state.data.chat.preachBelief){\r\n                return '💬'+SecondaryBeliefData[this.state.data.chat.preachBelief].icon;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getCrimeDecision(\r\n        good: TraitGood,\r\n        crimeReason: 'desperation'|'greed',\r\n    ){\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community === 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (crimeReason === 'desperation' && this.health === 'sick' || this.food === 'starving'){\r\n            chance += .15;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    tryFindRandomJob(law: Government) {\r\n        const job: TraitJob = GetRandom(['builder', 'doc', 'farmer', 'entertainer']);\r\n        if (!this.trySetJob(job)){\r\n            \r\n            this.city?.eventBus?.nojobslots.publish({icon: '🏚️', trigger: 'nojobslots', message: `A subject cannot find a job; build or upgrade more buildings.`});\r\n        }\r\n    }\r\n    trySetJob(job: TraitJob): boolean{\r\n        if (this.city?.tryGetJob(this, job)){\r\n            this.city.unsetJob(this);\r\n            this.job = job;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    canPurchase(cost: BeanResources) {\r\n        return (cost.sanity === undefined || this.discrete_sanity >= cost.sanity);\r\n    }\r\n    public maybeParanoid() {\r\n        this.ifBelievesInMaybeEmote('Paranoia', 'unhappiness', ParanoidUnhappyChance)\r\n    }\r\n    public maybeAntagonised(){\r\n        this.emote('unhappiness', 'Antagonism');\r\n    }\r\n    public maybeEnthused(){\r\n        this.emote('happiness', 'Enthusiasm');\r\n    }\r\n    /**\r\n     * chats or conversations use 🗣️ in descriptions\r\n     * @returns \r\n     */\r\n    public maybeChat(): boolean {\r\n        if (this.lastChatMS + ChatCooldownMS > Date.now()) \r\n            return false;\r\n        if (this.state.data.act === 'chat')\r\n            return false;\r\n        const roll = Math.random();\r\n        let chance = (this.community === 'state') ? 0.2 : 0.1;\r\n        if (this.believesIn('Extroversion')) \r\n            chance += ExtrovertChatExtraChance;\r\n        return roll < chance;\r\n    }\r\n    public getRandomChat(nearby: Bean[]): IChatData {\r\n        const canPreach = this.beliefs.length;\r\n        if (canPreach){\r\n            if (this.believesIn('Charity') && this.cash >= 2){\r\n                //find a bean with less money than self, poorest in sight\r\n                const needy = nearby.filter(x => x.cash <= this.cash-1).reduce((least: Bean|null, bean) => {\r\n                    if (least == null || (bean.cash < least.cash))\r\n                        return bean;\r\n                    return least;\r\n                }, null);\r\n                if (needy) {\r\n                    this.cash -= 0.5;\r\n                    this.emote('happiness', 'Charity');\r\n                    needy.cash += 0.5;\r\n                    needy.emote('happiness', 'Charity');\r\n                    return {\r\n                        participation: 'speaker',\r\n                        type: 'gift',\r\n                        targetBeanKey: needy.key\r\n                    }\r\n                }\r\n            } else if(this.believesIn('Enthusiasm') && Math.random() < EnthusiasmPraiseChance){\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'praise',\r\n                    preachBelief: 'Enthusiasm'\r\n                }\r\n            } else if(this.believesIn('Antagonism') && Math.random() < AntagonismBullyChance){\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'bully',\r\n                    preachBelief: 'Antagonism'\r\n                }\r\n            } else if(this.believesIn('Gossip') && Math.random() < GossipBullyChance){\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'bully',\r\n                    preachBelief: 'Gossip'\r\n                }\r\n            }\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'preach',\r\n                preachBelief: GetRandom(this.beliefs)\r\n            }\r\n        } else {\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'praise'\r\n            }\r\n        }\r\n    }\r\n    work(law: Government, econ: Economy) {\r\n        if (this.job === 'jobless'){\r\n        } else {\r\n            switch(this.job){\r\n                case 'farmer':\r\n                    this.discrete_food = Math.min(this.discrete_food+1, GoodToThreshold.food.sufficient*2);\r\n                    this.ifBelievesInMaybeEmote('Parochialism', 'happiness', ParochialHappyChance);\r\n                    break;\r\n                case 'doc':\r\n                    this.discrete_health = Math.min(this.discrete_health+1, GoodToThreshold.medicine.sufficient*2);\r\n                    this.ifBelievesInMaybeEmote('Germophobia', 'unhappiness', GermophobiaHospitalWorkChance);\r\n                    break;\r\n                case 'builder': \r\n                    this.stamina = 'awake';\r\n                    this.discrete_stamina = 7;\r\n                    break;\r\n                case 'entertainer':\r\n                    this.ifBelievesInMaybeEmote('Cosmopolitanism', 'happiness', CosmopolitanHappyChance);\r\n                break;\r\n            }\r\n            this.ifBelievesInMaybeEmote('Diligence', 'happiness', DiligenceHappyChance);\r\n            this.ifBelievesInMaybeEmote('Hedonism', 'unhappiness', HedonismHateWorkChance);\r\n            this.ticksSinceLastSale++;\r\n            if (this.ticksSinceLastSale > 7){\r\n                const cityHasOtherWorkers = this.city ? this.city.beans.get.filter(x => x.job === this.job).length > 1 : false;\r\n                //underemployment\r\n                if (cityHasOtherWorkers && Math.random() > 0.5) {\r\n                    const newJob = econ.mostInDemandJob();\r\n                    if (newJob)\r\n                        this.trySetJob(newJob);\r\n                }\r\n            }\r\n            let workedForEmployer = false;\r\n            if (this.city && this.employerEnterpriseKey){\r\n                const employer = this.city.getEnterprise(this.employerEnterpriseKey);\r\n                if (employer){\r\n                    econ.employAndPrice(employer, JobToGood(this.job), 4, this.fairGoodPrice);\r\n                    workedForEmployer = true;\r\n                    switch(employer.enterpriseType){\r\n                        case 'company':\r\n                            this.ifBelievesInMaybeEmote('Communism', 'unhappiness', 0.1);\r\n                            if (employer.ownerBeanKey === this.key)\r\n                                this.ifBelievesInMaybeEmote('Capitalism', 'happiness', 0.1);\r\n                            break;\r\n                        case 'cooperative':                            \r\n                            this.ifBelievesInMaybeEmote('Capitalism', 'unhappiness', 0.1);\r\n                                \r\n                            this.ifBelievesInMaybeEmote('Socialism', 'happiness', 0.1);\r\n                            break;\r\n                        case 'commune':                            \r\n                            this.ifBelievesInMaybeEmote('Capitalism', 'unhappiness', 0.1);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (!workedForEmployer)\r\n                econ.produceAndPrice(this, JobToGood(this.job), 4, this.fairGoodPrice);\r\n        }\r\n    }\r\n    private buyFood(economy: Economy) {\r\n        const groceries = economy.tryTransact(this, 'food', 0.5, 3);\r\n        if (groceries) {\r\n            this.discrete_food += groceries.bought;\r\n            if (this.food === 'stuffed'){\r\n                this.emote('happiness', 'Stuffed');\r\n                this.ifBelievesInMaybeEmote('Gluttony', 'happiness', 1);\r\n            }\r\n        }\r\n        return groceries;\r\n    }\r\n    public buy: {[key in TraitGood]: (econ: Economy)=> boolean} = {\r\n        food: (economy: Economy) =>{\r\n            return this.buyFood(economy) != null;\r\n        },\r\n        medicine:  (economy: Economy) =>{\r\n            return this.buyMeds(economy) != null;\r\n        },\r\n        fun:  (economy: Economy) =>{\r\n            return this.buyFun(economy);\r\n        },\r\n        shelter: (economy: Economy) => {\r\n            return this.buyHousing(economy);\r\n        }\r\n    }\r\n    public steal(good: 'food'|'medicine', econ: Economy){\r\n        const stolen = econ.steal(good, 3);\r\n        if (stolen != null){\r\n            switch(good){\r\n                case 'food':\r\n                    this.discrete_food += stolen;\r\n                    break;\r\n                case 'medicine':\r\n                    this.discrete_health += stolen;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    private buyHousing(economy: Economy): boolean {\r\n        const housing = economy.tryTransact(this, 'shelter');\r\n        if (housing) {\r\n            this.discrete_stamina = 10;\r\n            this.stamina = 'awake';\r\n        } else if (this.discrete_stamina <= 0){\r\n            this.stamina = 'homeless';\r\n        }\r\n        return housing != null;\r\n    }\r\n    private buyFun(economy: Economy): boolean {\r\n        const fun = economy.tryTransact(this, 'fun');\r\n        if (fun) {\r\n            this.discrete_fun = 1;\r\n            this.emote('happiness', 'Entertainment');\r\n            this.emote('happiness', 'Entertainment');\r\n        }\r\n        return fun != null;\r\n    }\r\n\r\n    age(economy: Economy, diff: IDifficulty): IEvent|null {\r\n        if (!this.alive) return null;\r\n\r\n        const wasNotHungry = this.food !== 'starving';\r\n        const wasNotSick = this.health !== 'sick';\r\n\r\n        this.discrete_food -= 1/7;\r\n        if (this.discrete_food < 0)\r\n            this.discrete_health -= 0.2;\r\n\r\n        const starve = this.maybeDie('starvation', 0.6);\r\n        if (starve)\r\n            return null;\r\n        else if (this.food === 'starving' && wasNotHungry){\r\n            this.emote('unhappiness', 'Starving');\r\n            if (this.believesIn('Gluttony')){\r\n                this.emote('unhappiness', 'Gluttony');\r\n                this.emote('unhappiness', 'Gluttony');\r\n            }\r\n        }\r\n            \r\n        if (this.stamina === 'homeless')\r\n            this.discrete_health -= 1/14;\r\n        \r\n        this.discrete_stamina--;\r\n    \r\n        const exposure = this.maybeDie('exposure', 0.2);\r\n        if (exposure)\r\n            return null;\r\n\r\n        this.discrete_health -= 1/20;\r\n        this.discrete_health = Math.min(this.discrete_health, 3);\r\n        const sick = this.maybeDie('sickness', 0.4);\r\n        if (sick)\r\n            return null;\r\n        else if (this.health === 'sick' && wasNotSick){\r\n            this.emote('unhappiness', 'sick');\r\n            if (this.believesIn('Germophobia')){\r\n                this.emote('unhappiness', 'Germophobia');\r\n            }\r\n        }\r\n\r\n        this.discrete_fun -= 1/10;\r\n        this.discrete_fun = Math.max(0, this.discrete_fun);\r\n        return null;\r\n    }\r\n    private buyMeds(economy: Economy) {\r\n        const meds = economy.tryTransact(this, 'medicine', 0.5, 3);\r\n        if (meds){\r\n            this.discrete_health += meds.bought;\r\n            if (this.health === 'fresh')\r\n                this.emote('happiness', 'Robust');\r\n        }\r\n        return meds;\r\n    }\r\n    get babyChance(): number{\r\n        let base = BabyChance;\r\n        if (this.believesIn('Natalism'))\r\n            return base + .15;\r\n        else\r\n            return base;\r\n    }\r\n    maybeBaby(economy: Economy): IEvent | null {\r\n        if (this.canBaby(economy.getCostOfLiving()) &&\r\n            Math.random() <= this.babyChance) {\r\n            if (this.city)\r\n                this.city.breedBean(this);\r\n            else\r\n                throw 'bean does not have city object';\r\n            return {icon: '🎉', trigger: 'birth', message: `${this.name} has a baby!`}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    canBaby(costOfLiving: number): boolean{\r\n        return this.alive && this.cash > costOfLiving * 3 &&\r\n            !this.isInCrisis;\r\n    }\r\n    maybeCrime(good: TraitGood): boolean {\r\n        if (good === 'shelter') return false;\r\n        if (good === 'fun') return false;\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community === 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (this.isInCrisis){\r\n            chance += .1;\r\n        }\r\n        if (this.believesIn('Greed')){\r\n            chance += .25;\r\n        }\r\n        if (this.believesIn('Anarchism')){\r\n            chance += .33;\r\n        }\r\n        if (this.believesIn('Authority')){\r\n            chance += -.25;\r\n        }\r\n        if (good === 'food' && this.food === 'starving'){\r\n            chance += .25;\r\n        }\r\n        else if (good === 'medicine' && this.health === 'sick'){\r\n            chance += .25;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    ifBelievesInMaybeEmote(belief: TraitBelief, emote: TraitEmote, chance: number){\r\n        if (this.believesIn(belief) && Math.random() < chance){\r\n            this.emote(emote, belief);\r\n        }\r\n    }\r\n    emote(emote: TraitEmote, source: string){\r\n        this.discrete_sanity = MathClamp(this.discrete_sanity + EmotionSanity[emote], 0, 10);\r\n        this.hedonHistory[0][source] = (this.hedonHistory[0][source] || 0) + EmotionWorth[emote];\r\n        this.city?.addEmotePickup(this.point, emote);\r\n        if (this.believesIn('Hedonism') && (emote === 'happiness' || emote === 'love') && Math.random() < HedonismExtraChance){\r\n            this.city?.addEmotePickup(this.point, emote);\r\n        }\r\n    }\r\n    canBuy(good: TraitGood): 'yes'|'nosupply'|'pricedout' {\r\n        return this.city?.economy?.canBuy(this, good) || 'nosupply';\r\n    }\r\n    maybeDie(cause: BeanDeathCause, chance = 0.5): boolean{\r\n        if (this.discrete_health < 0 && Math.random() <= chance) {\r\n            this.die(cause);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    die(cause: BeanDeathCause){\r\n        this.alive = false;\r\n        const pains = GetRandomNumber(2, 3);\r\n        for (let i = 0; i < pains; i++) {\r\n            this.emote('hate', 'death');\r\n        }\r\n        this.city?.beans.remove(this);\r\n        this.city?.historicalBeans.push(this);\r\n        this.city?.eventBus?.death.publish({\r\n            icon: '☠️', trigger: 'death', message: `${this.name} died of ${cause}!`, \r\n            beanKey: this.key, cityKey: this.cityKey,\r\n            point: this.point\r\n        });\r\n    }\r\n    maybeScarcity(good: TraitGood){\r\n        let scarce = false;\r\n        if (good === 'food' && (this.food === 'starving' || this.food === 'hungry'))\r\n            scarce = true;\r\n        else if (good === 'shelter' && (this.stamina === 'homeless' || this.stamina === 'sleepy'))\r\n            scarce = true;\r\n        else if (good === 'medicine' && (this.health === 'sick' || this.health === 'sickly'))\r\n            scarce = true;\r\n        if (scarce)\r\n            this.emote('unhappiness', 'Scarcity');\r\n    }\r\n    abduct(player: IPlayerData){\r\n        this.lifecycle = 'abducted';\r\n        player.abductedBeans.push(this);\r\n    }\r\n\r\n    state: AgentState = IdleState.create();\r\n    jobQueue: PriorityQueue<AgentState> = new PriorityQueue<AgentState>([]);\r\n    onAct = new PubSub<number>();\r\n}","import { World } from \"../World\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\nexport enum Hour {Midnight, Morning, Noon, Evening}\r\n\r\nexport interface IDate{\r\n    day: number;\r\n    season: Season;\r\n    year: number;\r\n    hour: Hour;\r\n}\r\n\r\nexport function Now(world: World): IDate{\r\n    return {year: world.date.year, season: world.date.season, day: world.date.day, hour: world.date.hour};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","import { TraitIdeals, TraitCommunity, TraitEthno, TraitFaith, World, TraitJob } from './World';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Policy, BaseParty, CityPartyHQ, Party } from './simulation/Politics';\r\nimport { IBuilding, BuildingTypes, Geography, PolarPoint, polarToPoint, hex_to_pixel, HexPoint, BuildingToGood } from './simulation/Geography';\r\nimport { City } from './simulation/City';\r\nimport { BeliefsAll } from './simulation/Beliefs';\r\nimport { WorldSound } from './WorldSound';\r\nimport { Building } from './simulation/RealEstate';\r\nimport { Economy } from './simulation/Economy';\r\n\r\nconst EnterpriseStartingListing = 1;\r\nconst MaxNumBeanTraitsOnGenerate = 4;\r\n\r\nexport function GetRandomNumber(min: number, max: number): number{\r\n    const randomBuffer = new Uint32Array(1);\r\n    window.crypto.getRandomValues(randomBuffer);\r\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\nexport function GetRandomIndex(length: number): number{\r\n    return GetRandomNumber(0, length-1)\r\n}\r\nexport function GetRandom<S>(choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(choices.length);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(): TraitIdeals{\r\n    return GetRandom(['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(): TraitCommunity{\r\n    return GetRandom(['state', 'ego']);\r\n}\r\nexport function RandomEthno(): TraitEthno{\r\n    return GetRandom(['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(): TraitFaith{\r\n    return GetRandom(['rocket','music','dragon', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\nexport const MAX_PETRI_RADIUS = 200;\r\nexport const PI2 = Math.PI*2;\r\nexport function RandomPolar(r?: number): PolarPoint{\r\n    return {\r\n        r: r || GetRandomNumber(0, MAX_PETRI_RADIUS),\r\n        az: GetRandomNumber(0, PI2)\r\n    };\r\n}\r\nexport function GetBuildingR(type: BuildingTypes): number{\r\n    switch(type){\r\n        case 'farm':\r\n            return GetRandomNumber(200, 300);\r\n        default: \r\n            return GetRandomNumber(80, 200);\r\n    }\r\n}\r\nexport function GenerateBuilding(geo: Geography, type: BuildingTypes, hex: HexPoint, econ: Economy){\r\n    const newBuilding = new Building();\r\n    newBuilding.type = type;\r\n    newBuilding.key = geo.book.getBuildings().length;\r\n    newBuilding.address = hex;\r\n    if (geo instanceof City)\r\n        newBuilding.city = geo;\r\n    geo.addBuilding(newBuilding);\r\n    const good = BuildingToGood[type];\r\n    if (good != 'fun')\r\n        econ.employAndPrice(newBuilding, good, EnterpriseStartingListing, econ.getFairGoodPrice(good))\r\n}\r\n\r\nconst Number_Starting_Cities = 1;\r\nexport function GenerateWorld(): World{\r\n    const world = new World();\r\n \r\n    world.law.laws = [\r\n        {group: 'Welfare', key: 'eat_cake', axis: 'wel_food'},\r\n        {group: 'Welfare', key: 'outside', axis: 'wel_house'},\r\n        {group: 'Welfare', key: 'stay_healthy', axis: 'wel_health'},\r\n        {group: 'Culture', key: 'secularism', axis: 'cul_rel'}\r\n    ];\r\n    world.party = new BaseParty();\r\n    world.institutions.push(world.party);\r\n    for (let i = 0; i < Number_Starting_Cities; i++) {\r\n        world.cities.push(GenerateCity(world.cities.length, world.sfx, world.economy));\r\n        world.cities[i].eventBus = world.bus;\r\n        world.cities[i].environment = world.date;\r\n        world.cities[i].law = world.law;\r\n        for (let j = 0; j < world.cities[i].beans.get.length; j++) {\r\n            const bean = world.cities[i].beans.get[j];\r\n            bean.work(world.law, world.economy);\r\n            if (bean.job == 'farmer')\r\n                bean.work(world.law, world.economy);\r\n        }\r\n    }\r\n    world.economy.monthlyDemand.food = world.beans.get.length;\r\n    world.economy.monthlyDemand.shelter = world.beans.get.length;\r\n    world.economy.monthlyDemand.medicine = world.beans.get.length;\r\n\r\n    return world;\r\n}\r\n\r\nexport function GeneratePartyHQ(city: City, party: Party) {\r\n    \r\n}\r\n\r\nexport const Number_Starting_City_Pop = 0;\r\nexport function GenerateCity(previousCityCount: number, sfx: WorldSound, econ: Economy): City{\r\n    let newCity = new City(sfx, econ);\r\n    newCity.key = previousCityCount;\r\n    newCity.name = GetRandom(['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', '']);\r\n    newCity.name += GetRandom(['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash']);\r\n    newCity.name += GetRandom(['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest']);\r\n    \r\n    GenerateBuilding(newCity, 'courthouse', newCity.hexes[0], newCity.economy); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(15, 20)], newCity.economy); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(21, 25)], newCity.economy); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(26, 60)], newCity.economy);\r\n    // GenerateBuilding(newCity, 'house', newCity.hexes[1]); \r\n    // GenerateBuilding(newCity, 'hospital', newCity.hexes[5]);\r\n    \r\n    // GenerateBuilding(newCity, 'farm', newCity.hexes[7]);\r\n\r\n    const cityPopulation = Number_Starting_City_Pop;\r\n    while(newCity.beans.get.length < cityPopulation){\r\n        newCity.beans.push(\r\n            GenerateBean(newCity)\r\n        );\r\n    }\r\n\r\n    return newCity;\r\n}\r\nfunction getStartingPoint(city: City): HexPoint{\r\n    const house = city.book.getRandomBuildingOfType('house');\r\n    if (house){\r\n        return house.address;\r\n    } else {\r\n        return {\r\n            q: 0, r: 0\r\n        }\r\n    }\r\n}\r\nexport function GenerateBean(city: City, hexPoint?: HexPoint, job?: TraitJob): Bean{\r\n    let newBean = new Bean();\r\n    \r\n    newBean.key = ++city.beanSeed;\r\n    newBean.cityKey = city.key;\r\n    newBean.city = city;\r\n    newBean.name = GetRandom(['Joe', 'Frank', 'Jill', 'Jose',\r\n    'Johnny', 'Isabelle', 'Carmen', 'Ace', 'Carl', 'Zander', 'Jean',\r\n    'Anne', 'Leslie', 'Ben', 'Ron', \r\n    'Ellen', 'Dallas', 'Kane', 'Ash', \r\n    'Jim', 'James', 'Leonard', 'Nyota', 'Christine', 'Scotty', 'Tasha', 'Geordi', 'Beverly', 'Deanna', 'Wesley', 'Majel',\r\n    'Malcolm','River',  \r\n    'Luke', 'Han', 'Owen', 'Rey', 'Mace', 'Cody',\r\n    'Dana', 'Walter',  \r\n    'Rick', 'Holden', 'Roy', 'Pris', 'Eldon', 'Rachael',\r\n    'Rose', 'Donna', 'Jack', 'Amy', 'Rory', 'Martha', 'Clara', \r\n    'Arnold', 'Dave', 'Holly', \r\n    'Kara', 'Gaius','William', 'Lee', 'Laura', 'Saul',\r\n    'Max', 'Edison', 'Theora', 'Bryce', 'Murray', 'Ned',\r\n    'Daniel', 'Samantha', \r\n    'Logan', 'Francis', 'Jessica',\r\n    'Thomas',\r\n    'Benny', 'James', 'John Henry', 'Sarah', 'Piper', 'Nick', 'Shaun', 'Preston'\r\n    ]) + ' ';\r\n    newBean.name += GetRandom([\r\n        'Ripley', 'Bishop', 'Hicks', 'Vasquez', 'Hudson', \r\n        'Rico', 'Flores', 'Ibanez', 'Levy', 'Jenkins', 'Barlow', 'Zim', 'Rasczak',\r\n        'Kirk', 'McCoy', 'Sulu', 'Uhura', 'Chekov', 'Chapel', 'Rand','Riker', 'Crusher', 'Barret', \"O'Brien\",\r\n        'Reynolds', 'Tam', \r\n        'Scully', 'Mulder','Skinner', \r\n        'Connor', \r\n        'Rex',\r\n        'Thrace', 'Baltar', 'Smith','Adama', 'Roslin', 'Tigh', 'Song', 'Oswald', \r\n        'Deckard', 'Bryant', 'Tyrell', 'Sebastian', 'Voight', 'Kampff',\r\n        'Tyler', 'Harkness', 'Jones', 'Noble', 'Pond', 'Williams',\r\n        'Rimmer', 'Lister', \r\n        'Head', 'Carter', 'Lynch', 'McKenzie', 'Grossberg',\r\n        \"O'Neil\", 'Jackson', 'Carter',\r\n        'Whitmore',\r\n        'House', 'Mitchell', 'Eden', 'Lyons', 'Valentine', 'Garvey'\r\n         ]);\r\n    newBean.community = RandomCommunity();\r\n    newBean.ideals = RandomIdeal();\r\n    newBean.faith = RandomFaith();\r\n    const beanBeliefCount = Math.ceil(Math.random() * MaxNumBeanTraitsOnGenerate);\r\n    while (newBean.beliefs.length < beanBeliefCount) {\r\n        const newBelief = GetRandom(BeliefsAll);\r\n        const hasAlready = newBean.beliefs.includes(newBelief);\r\n        if (!hasAlready)\r\n            newBean.beliefs.push(newBelief);\r\n    }\r\n    \r\n    if (job == null){\r\n        switch (city.beanSeed){\r\n            case 1:\r\n                job = 'farmer'; break;\r\n            case 2:\r\n                job = 'builder'; break;\r\n            case 3:\r\n                job = 'doc'; break;\r\n            default:\r\n                job = GetRandom(['farmer', 'builder', 'doc', 'entertainer']); break;\r\n        }\r\n    }\r\n    newBean.trySetJob(job);\r\n\r\n    newBean.cash = StartingCash(newBean.job);\r\n    newBean.discrete_food = 3;\r\n\r\n    newBean.point = hex_to_pixel(city.hex_size, city.petriOrigin, hexPoint || getStartingPoint(city));\r\n    \r\n    return newBean;\r\n}","import { TraitGood, TraitJob, GoodToJob, Trait } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { IOrganization, Charity, IEnterprise } from \"./Institutions\";\r\nimport { City } from \"./City\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IEvent, IEventBus } from \"../events/Events\";\r\n\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    ticksSinceLastSale: number;\r\n}\r\nexport interface Listing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerEnterpriseKey?: number;\r\n    price: number;\r\n    seller: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'shelter', 'medicine', 'fun'];\r\n\r\nexport class Economy {\r\n    market = new OrderBook();\r\n    charity = new OrderBook();\r\n    unfulfilledMonthlyDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    monthlyDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    monthlySupply: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    constructor(public eventBus: IEventBus){\r\n    }\r\n    public resetMonthlyDemand(){\r\n        this.unfulfilledMonthlyDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.monthlyDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.monthlySupply = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    }\r\n    tryTransact(\r\n        buyer: IEconomicAgent, \r\n        good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1\r\n        ): {bought: number, price: number}|null {\r\n        this.monthlyDemand[good] += maxDemand;\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            //console.log('agent could not find '+good);\r\n            this.unfulfilledMonthlyDemand[good] += maxDemand;\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if (listing.price <= buyer.cash * actualDemand){\r\n            return this.market.transact(listing, good, actualDemand, buyer);\r\n        } else if (buyer instanceof Bean) {\r\n            // console.log('bean couldnot afford '+good+\" @ $\"+listing?.price);\r\n            // const charityTicket = this.charity.getLowestPriceListing(good, minDemand);\r\n            // if (charityTicket && charityTicket.seller instanceof Charity) {\r\n            //     // console.log('bean got '+good+\" from charity\");\r\n            //     const actualDemand = Math.min(charityTicket.quantity, maxDemand);\r\n            //     buyer.partyLoyalty += PartyLoyaltyPerCharityUse;\r\n            //     charityTicket.seller.beansHelped++;\r\n            //     charityTicket.seller.inventory -= actualDemand;\r\n            //     return this.charity.transact(charityTicket, good, actualDemand, buyer);\r\n            // }\r\n        }\r\n        this.unfulfilledMonthlyDemand[good] += actualDemand;\r\n        return null;\r\n    }\r\n    canBuy(buyer: IEconomicAgent, good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1): 'yes'|'nosupply'|'pricedout'{\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            return 'nosupply';\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if (listing.price <= buyer.cash * actualDemand)\r\n            return 'yes';\r\n        return 'pricedout';\r\n    }\r\n    steal(\r\n        good: TraitGood,\r\n        maxDemand: number = 1\r\n        ): number|null {\r\n        const listing = GetRandom(this.market.listings[good]);\r\n        if (listing == null){\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        this.market.subtractFromListing(listing, good, actualDemand);\r\n        \r\n        return actualDemand;\r\n    }\r\n    produceAndPrice(seller: Bean, good: TraitGood, quantity: number, price: number) {\r\n        this.monthlySupply[good] += quantity;\r\n        const existing = this.market.getBeansListings(seller.cityKey, seller.key, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewPersonalListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    employAndPrice(seller: IEnterprise, good: TraitGood, quantity: number, price: number) {\r\n        this.monthlySupply[good] += quantity;\r\n        const existing = this.market.getEnterpriseListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewEnterpriseListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    public mostInDemandJob(): TraitJob|null{\r\n        const goods: TraitGood[] = AllGoods;\r\n        const max = goods.reduce((last, good) => {\r\n            if (this.unfulfilledMonthlyDemand[good] > last.max){\r\n                last.max = this.unfulfilledMonthlyDemand[good];\r\n                last.job = GoodToJob(good);\r\n            }\r\n            return last;\r\n        }, {max: 0, job: null as TraitJob|null})\r\n\r\n        return max.job;\r\n    }\r\n    public onBeanDie(bean: Bean){\r\n        AllGoods.forEach((g) => {\r\n            const existing = this.market.getBeansListings(bean.cityKey, bean.key, g);\r\n            if (existing){\r\n                const lucky = bean.city?.getRandomCitizen();\r\n                if (lucky) {\r\n                    existing.sellerCityKey = lucky.cityKey;\r\n                    existing.sellerBeanKey = lucky.key;\r\n                    existing.seller = lucky;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public getFairGoodPrice(good: TraitGood){\r\n        const supply = this.monthlySupply[good] || 1;\r\n        const demand = this.monthlyDemand[good];\r\n        return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n    }\r\n    public getCostOfLiving(){\r\n        return this.getFairGoodPrice('food')+this.getFairGoodPrice('shelter')+this.getFairGoodPrice('medicine');\r\n    }\r\n}\r\n\r\nexport class OrderBook{\r\n    public readonly listings: {[key in TraitGood]: Listing[]} = {\r\n        food: [] as Listing[],\r\n        shelter: [] as Listing[],\r\n        medicine: [] as Listing[],\r\n        fun: [] as Listing[],\r\n    };\r\n    public getLowestPriceListing(good: TraitGood, demand: number): Listing|null{\r\n        const fullListings =  this.listings[good].filter((l) => {\r\n            return l.quantity >= demand;\r\n        });\r\n        if (fullListings.length > 0){\r\n            let numberOfSamePriceListings = 1;\r\n            const lowPrice = fullListings[0].price;\r\n            for (let i = 1; i < fullListings.length; i++) {\r\n                const list = fullListings[i];\r\n                if (list.price > lowPrice)\r\n                    break;\r\n                numberOfSamePriceListings++;\r\n            }\r\n            const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n            if (i >= fullListings.length)\r\n                throw \"invalid index\";\r\n            return fullListings[i];\r\n        }\r\n        return null;\r\n    }\r\n    public getStakeListings(bKey: number, enterpriseKey: number|undefined, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == bKey || x.sellerEnterpriseKey == enterpriseKey);\r\n    }\r\n    public getBeansListings(cKey: number, bKey: number, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == bKey && x.sellerCityKey == cKey);\r\n    }\r\n    public getEnterpriseListings(b: IEnterprise, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerEnterpriseKey == b.key);\r\n    }\r\n    public transact(listing: Listing, good: TraitGood, demand: number, buyer: IEconomicAgent){    \r\n        this.subtractFromListing(listing, good, demand);\r\n        const sale = listing.price * demand;\r\n        buyer.cash -= sale;\r\n        listing.seller.cash += sale;\r\n        listing.seller.ticksSinceLastSale = 0;\r\n        return {\r\n            bought: demand,\r\n            price: sale\r\n        }\r\n    }\r\n    public subtractFromListing(listing: Listing, good: TraitGood, demand: number){     \r\n        listing.quantity -= demand;\r\n        if (listing.quantity <= 0){\r\n            this.listings[good].splice(0, 1);\r\n        }\r\n    }\r\n    public addNewPersonalListing(good: TraitGood, quantity: number, price: number, bean: Bean){\r\n        this.listings[good].push({\r\n            sellerCityKey: bean.cityKey,\r\n            sellerBeanKey: bean.key,\r\n            price: price,\r\n            seller: bean,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public addNewEnterpriseListing(good: TraitGood, quantity: number, price: number, enterprise: IEnterprise){\r\n        this.listings[good].push({\r\n            sellerEnterpriseKey: enterprise.key,\r\n            price: price,\r\n            seller: enterprise,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public sort(good: TraitGood){        \r\n        this.listings[good].sort((a, b) => a.price - b.price);\r\n    }\r\n}","import * as React from 'react';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Economy } from './simulation/Economy';\r\nimport { Policy, Party, BaseParty, ICityPartyHQ } from './simulation/Politics';\r\nimport { IInstitution, IOrganization, Charity } from './simulation/Institutions';\r\nimport { IEvent, EventBus, LiveList } from './events/Events';\r\nimport { Season, IDate, Hour } from './simulation/Time';\r\nimport { Government } from './simulation/Government';\r\nimport { Player, TechData } from './simulation/Player';\r\nimport { accelerate_towards, accelerator_coast, Geography, move_towards } from './simulation/Geography';\r\nimport { City, Pickup } from './simulation/City';\r\nimport { shuffle } from './simulation/Utils';\r\nimport { Act, IActListener, IChatData } from './simulation/Agent';\r\nimport { IDifficulty } from './Game';\r\nimport { type } from 'os';\r\nimport { GetHedonReport, IsBeliefDivergent, SecondaryBeliefData } from './simulation/Beliefs';\r\nimport { WorldSound } from './WorldSound';\r\n\r\nexport interface IBeanContainer{\r\n    /**\r\n     * all beans ever, including dead ones\r\n     */\r\n    historicalBeans: LiveList<Bean>;\r\n    /**\r\n     * current non-dead beans\r\n     */\r\n    beans: LiveList<Bean>;\r\n}\r\n\r\nexport interface IWorld{\r\n    cities: City[];\r\n    law: Government;\r\n    party: Party;\r\n\r\n    institutions: IInstitution[];\r\n    bus: EventBus;\r\n    date: IDate;\r\n    alien: Player;\r\n}\r\nconst PickupPhysics = {\r\n    Brake: { x: .94, y: .94},\r\n    AccelerateS: 60,\r\n    MaxSpeed: 9,\r\n    CollisionDistance: 10\r\n}\r\nexport const BeanPhysics = {\r\n    Brake: { x: .94, y: .94},\r\n    AccelerateS: 10,\r\n    MaxSpeed: 4,\r\n    CollisionDistance: 10\r\n}\r\nconst MaxHedonHistory = 5;\r\nexport class World implements IWorld, IBeanContainer, IActListener{\r\n    public readonly bus = new EventBus();\r\n    public readonly economy: Economy = new Economy(this.bus);\r\n    public cities: City[] = [];\r\n    public law: Government = new Government();\r\n    public institutions: IInstitution[] = [];\r\n    public party: Party = new BaseParty();\r\n    public date: IDate = {year: 1, season: Season.Spring, day: 1, hour: 1};\r\n\r\n    public alien: Player = new Player();\r\n    public sfx = new WorldSound();\r\n\r\n    public get beans(): LiveList<Bean>{\r\n        return new LiveList(this.cities.reduce((list, c) => {\r\n            return list.concat(c.beans.get);\r\n        }, [] as Bean[]));\r\n    }\r\n    public get historicalBeans(): LiveList<Bean>{\r\n        return new LiveList(this.cities.reduce((list, c) => {\r\n            return list.concat(c.historicalBeans.get);\r\n        }, [] as Bean[]));\r\n    }\r\n    public get organizations(): IOrganization[]{\r\n        return this.institutions.reduce((list, institute) => {\r\n            return list.concat(institute.organizations);\r\n        }, [] as IOrganization[]);\r\n    }\r\n\r\n    constructor(){\r\n        this.bus.death.subscribe(this.onBeanDie);\r\n    }\r\n\r\n    /**\r\n     * update 'pushed' state\r\n     */\r\n    public calculateComputedState(){\r\n        this.cities.forEach(c => {\r\n            c.calculate(this.economy, this.law);\r\n            c.beans.get.forEach(b => b.calculateBeliefs(this.economy, c, this.law, this.party));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * simulates a season passing, setting a lot of state\r\n     */\r\n    public simulate_world(){\r\n        this.date.hour++\r\n        if (this.date.hour > Hour.Evening){\r\n            this.date.hour = 0;\r\n            this.date.day++;\r\n            this.beans.get.forEach((x) => {\r\n                if (x.hedonHistory.length >= MaxHedonHistory) {\r\n                    x.hedonHistory.pop();\r\n                }\r\n                x.hedonHistory.unshift({});\r\n            });\r\n        }\r\n        if (this.date.day > 30){\r\n            this.date.day = 1;\r\n            this.economy.resetMonthlyDemand();\r\n            this.date.season++;\r\n        }\r\n        if (this.date.season > 3){\r\n            this.date.year++;\r\n            this.inflate();\r\n            this.resetYearlyCounters();\r\n            this.date.season = 0;\r\n        }\r\n\r\n        this.alien.bots.amount += this.alien.bots.income;\r\n        this.alien.energy.amount += this.alien.energy.income;\r\n        if (this.alien.hasResearched('fast_resources')){\r\n            this.alien.bots.amount += this.alien.bots.income*0.5;\r\n            this.alien.energy.amount += this.alien.energy.income*0.5;\r\n        }\r\n        if (this.alien.currentlyResearchingTech){\r\n            const tech = this.alien.currentlyResearchingTech;\r\n            if(this.alien.techProgress[tech] == null){\r\n                this.alien.techProgress[tech] = {\r\n                    researchPoints: 0\r\n                }\r\n            }\r\n            const max = TechData[tech].techPoints;\r\n            const current = this.alien.techProgress[tech].researchPoints;\r\n            if (current < max)\r\n                this.alien.techProgress[tech].researchPoints += this.alien.abductedBeans.length;\r\n            if (current >= max)\r\n                this.alien.currentlyResearchingTech = undefined;\r\n        }\r\n        \r\n\r\n        this.organizations.forEach((org) => org.work(this.law, this.economy));\r\n        \r\n        this.beans.get.forEach((b: Bean, i: number) => {\r\n            b.age(this.economy, this.alien.difficulty);\r\n            const e = b.maybeBaby(this.economy);\r\n            if (e) this.publishEvent(e);\r\n            if (b.job === 'jobless')\r\n                b.tryFindRandomJob(this.law);\r\n            \r\n            b.happiness = GetHedonReport(b.hedonHistory);\r\n        });\r\n        this.cities.forEach((c) => c.getTaxesAndDonations(this.party, this.economy));\r\n        this.calculateComputedState();\r\n        this.alien.checkGoals(this);\r\n        this.alien.checkReportCard(this);\r\n    }\r\n    simulate_beans(deltaMS: number){\r\n        this.beans.get.forEach((b) => {\r\n            Act(b, deltaMS, this.alien.difficulty, this);\r\n        });\r\n    }\r\n    simulate_pickups(deltaMS: number){\r\n        const city = this.cities[0];\r\n        const pickups = city.pickups.get;\r\n        //go backwards because we'll modify the array as we go\r\n        for(let i = pickups.length - 1; i >= 0; i--) {\r\n            const pickup = pickups[i];\r\n            let collide = false;\r\n            const magnet = city.pickupMagnetPoint.get;\r\n            if (magnet){\r\n                collide = accelerate_towards(\r\n                    pickup, \r\n                    magnet, \r\n                    PickupPhysics.AccelerateS * deltaMS/1000, \r\n                    PickupPhysics.MaxSpeed, \r\n                    PickupPhysics.CollisionDistance,\r\n                    PickupPhysics.Brake);\r\n            } else {\r\n                accelerator_coast(pickup, PickupPhysics.Brake);\r\n            }\r\n            if (collide){\r\n                const amt = EmotionWorth[pickup.type];\r\n                this.alien.hedons.amount += amt;\r\n                this.alien.hedons.change.publish({change: amt});\r\n                city.pickups.remove(pickup);\r\n                this.sfx.play(pickup.type);\r\n            } else {\r\n                pickup.onMove.publish(pickup.point);\r\n            }\r\n        }\r\n    }\r\n    onChat = (b: Bean, chat: IChatData) => {\r\n        if (this.party && chat.preachBelief){\r\n            if (IsBeliefDivergent(chat.preachBelief, this.party.ideals, this.party.community)){\r\n                this.publishEvent({\r\n                    icon: '🚨', trigger: 'speechcrime',\r\n                    message: `Speechcrime! ${b.name} is talking about ${SecondaryBeliefData[chat.preachBelief].noun}`,\r\n                    beanKey: b.key\r\n                });\r\n                if (this.alien.speechcrimes[this.date.year] == null)\r\n                    this.alien.speechcrimes[this.date.year] = 1;\r\n                else\r\n                    this.alien.speechcrimes[this.date.year]++;\r\n            }\r\n        }\r\n    }\r\n    onBeanDie = (e: IEvent) => {\r\n        const city = this.cities.find((x) => x.key === e.cityKey);\r\n        if (city){\r\n            const bean = city.historicalBeans.get.find((x) => x.key === e.beanKey);\r\n            if (bean){\r\n                city.onCitizenDie(bean);\r\n                this.economy.onBeanDie(bean);\r\n            }\r\n        }\r\n    }\r\n    onEmote = (b: Bean, emote: TraitEmote) => {\r\n    }\r\n    publishEvent(e: IEvent){\r\n        this.bus[e.trigger].publish(e);\r\n    }\r\n    inflate() {\r\n        const allMoney = this.beans.get.reduce((sum, b) => sum+b.cash, 0) + this.organizations.reduce((sum, o) => sum + o.cash, 0);\r\n        const percent = allMoney / 100;\r\n        const yearlyInflationDollars = Math.round(percent * 1);\r\n        if (yearlyInflationDollars > 0){\r\n            const richest = this.beans.get.reduce((obj: {winner?: Bean, max: number}, b) => {\r\n                if (b.cash > obj.max){\r\n                    obj.winner = b;\r\n                    obj.max = b.cash;\r\n                }\r\n                return obj;\r\n            }, {max: 0});\r\n            if (richest.winner){\r\n                richest.winner.cash += yearlyInflationDollars;\r\n            }\r\n        }\r\n    }\r\n    resetYearlyCounters() {\r\n        this.cities.forEach((c) => {\r\n            c.yearsPartyDonations = 0;\r\n        })\r\n    }\r\n    addCharity(good: TraitGood, name: string, budget: number) {\r\n        const charity = new Charity();\r\n        charity.name = name;\r\n        charity.good = good;\r\n        charity.seasonalBudget = budget;\r\n        this.party.organizations.push(charity);\r\n    }\r\n}\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface Tile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'rocket'|'music'|'dragon'|'noFaith';\r\nexport type TraitFood = 'starving'|'hungry'|'sated'|'stuffed';\r\nexport type TraitStamina = 'homeless'|'sleepy'|'awake'|'rested';\r\nexport type TraitHealth = 'sick'|'sickly'|'bruised'|'fresh';\r\nexport type TraitSanity = 'psychotic'|'disturbed'|'stressed'|'sane';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitStamina|TraitHealth|TraitSanity;\r\n\r\nexport const TraitIcon: {[key in Trait]: string} = {\r\n    'state': '🕊️', 'ego': '🦅',\r\n    'prog': '⚖️', 'trad': '👑',\r\n    'circle': '🤎', 'square': '💛', 'triangle': '🧡',\r\n    'rocket': '🚀', 'music': '🎵', 'dragon': '🐲',\r\n    'noFaith': '⚫️',\r\n    'starving': '🍴', 'hungry': '🍽️', 'sated': '🥜', 'stuffed': '🥩',\r\n    'homeless': '🌨️', 'sleepy': '🌙', 'awake': '☀️', 'rested': '🌞',\r\n    'sick': '🤢', 'sickly': '😷', 'bruised': '🩹', 'fresh': '💪',\r\n    'psychotic': '🤪', 'disturbed': '🤤', 'stressed':'', 'sane': '🧠',\r\n}\r\nexport enum MaslowHappinessScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport const TraitToModifier: {[key in TraitFood|TraitStamina|TraitHealth]: IHappinessModifier} = {\r\n    'homeless': {reason: 'Homeless', mod: MaslowHappinessScore.Deficient},\r\n    'sleepy': {reason: 'Renting', mod: MaslowHappinessScore.Sufficient},\r\n    'awake': {reason: 'Homeowner', mod: MaslowHappinessScore.Sufficient},\r\n    'rested': {reason: 'Homeowner', mod: MaslowHappinessScore.Abundant},\r\n    'sick': {reason: 'Sick', mod: MaslowHappinessScore.Deficient},\r\n    'sickly': {reason: 'Sick', mod: MaslowHappinessScore.Sufficient},\r\n    'bruised': {reason: 'Bruised', mod: MaslowHappinessScore.Sufficient},\r\n    'fresh': {reason: 'Healthy', mod: MaslowHappinessScore.Abundant},\r\n    'starving': {reason: 'Hungry', mod: MaslowHappinessScore.Deficient},\r\n    'hungry': {reason: 'Hungry', mod: MaslowHappinessScore.Sufficient},\r\n    'sated': {reason: 'Sated', mod: MaslowHappinessScore.Sufficient},\r\n    'stuffed': {reason: 'Stuffed', mod: MaslowHappinessScore.Abundant},\r\n}\r\nexport interface IThreshold {warning: number, sufficient: number, abundant: number}\r\nexport const GoodToThreshold: {[key in TraitGood]: IThreshold} = {\r\n    'food': {warning: 0.5, sufficient: 1, abundant: 3},\r\n    'shelter': {warning: 0.5, sufficient: 1, abundant: 7},\r\n    'medicine': {warning: 0.5, sufficient: 1, abundant: 3},\r\n    'fun': {warning: 0.1, sufficient: 1, abundant: 3},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'builder': return 'shelter';\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'shelter': return 'builder';\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'shelter'|'medicine'|'fun';\r\nexport const GoodIcon: {[key in TraitGood]: string} ={\r\n    'food': '🥪',\r\n    'shelter': '🏠', \r\n    'medicine': '💊', \r\n    'fun': '👏'\r\n};\r\n\r\nexport type TraitEmote = 'happiness'|'unhappiness'|'love'|'hate';\r\nexport const EmoteIcon: {[key in TraitEmote]: string} ={\r\n    'love': '💛',\r\n    'happiness': '👍',\r\n    'unhappiness': '💢',\r\n    'hate': '💔'\r\n};\r\nexport const EmotionWorth: {[key in TraitEmote]: number} ={\r\n    'love': 5,\r\n    'happiness': 1,\r\n    'unhappiness': -1,\r\n    'hate': -5\r\n};\r\nexport const EmotionSanity: {[key in TraitEmote]: number} ={\r\n    'love': 1,\r\n    'happiness': 0.2,\r\n    'unhappiness': 0,\r\n    'hate': -1\r\n};","import { Trait, TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { IInstitution, IOrganization } from \"./Institutions\";\r\nimport { Government, LawAxis } from \"./Government\";\r\n\r\n\r\nexport interface Party extends IInstitution{\r\n    slogan: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    \r\n    availablePolicies: Policy[]; \r\n    proposedPolicy?: Policy;\r\n    availableCampaigns: Campaign[];\r\n    activeCampaigns: Campaign[];\r\n\r\n    platform: {[key in LawAxis]: IPolicy};\r\n\r\n    leadership: number;\r\n}\r\n\r\nexport class BaseParty implements Party{\r\n    key = 1;\r\n    playerKey = 1;\r\n    organizations: IOrganization[] = [];\r\n    public name: string = \"Citizen's Party\";\r\n    public slogan: string = \"Vote for us!\";\r\n    public community: TraitCommunity = 'state';\r\n    public ideals: TraitIdeals = 'trad';\r\n    public availablePolicies: Policy[] = [];\r\n    public proposedPolicy?: Policy;\r\n    public availableCampaigns: Campaign[] = [];\r\n    public activeCampaigns: Campaign[] = [];\r\n    public leadership: number = 10;\r\n    public activeHQs: number[] = [];\r\n    public platform: {[key in LawAxis]: IPolicy} = {} as {[key in LawAxis]: IPolicy};\r\n\r\n    constructor(){\r\n    }\r\n    // differingPolicies(law: Government): IPolicy[]{\r\n    //     return Object.keys(this.platform).filter((key: string) => {\r\n    //         const ax = key as LawAxis;\r\n    //         return this.platform[ax] != law.laws[ax];\r\n    //     }).map((key) => this.platform[key as LawAxis]);\r\n    // }\r\n}\r\n\r\nexport interface ICityPartyHQ{\r\n    cityKey: number;\r\n}\r\nexport class CityPartyHQ implements ICityPartyHQ{\r\n    cityKey: number = 0;\r\n}\r\n\r\nexport interface PoliticalEffect {\r\n    key: Trait;\r\n    /**\r\n     * magnitude (-3 to +3)\r\n     */\r\n    mag: number;\r\n}\r\nexport interface Policy {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    axis?: LawAxis;\r\n}\r\nexport interface Campaign {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    cityKey?: number;\r\n\r\n    seasonalCost: number;\r\n}\r\nexport interface IPolicy{\r\n    key: string, \r\n    name: string, \r\n    community?: TraitCommunity, \r\n    ideals?: TraitIdeals, \r\n    axis: LawAxis,\r\n    hint?: string\r\n}","import { TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { IPolicy } from \"./Politics\";\r\n\r\nexport type LawGroup = 'Taxation'|'Welfare'|'Economics'|'Crime'|'Culture';\r\nexport type LawAxis = 'wel_food'|'wel_house'|'wel_health'|'tax_basic'|'tax_second'|'econ_sub'|'cul_rel'|'cul_theo'|'crime_theo';\r\n\r\nexport type LawKey = 'eat_cake'\r\n|'food_bank'\r\n|'food_stamps'\r\n|'univ_rations'\r\n|'outside'\r\n|'homeless_shelters'\r\n|'housing_subsidy'\r\n|'state_apartments'\r\n|'stay_healthy'\r\n|'clinics'\r\n|'medical_aid'\r\n|'univ_health'\r\n|'hands_off'\r\n|'grain_sub'\r\n|'arts'\r\n|'theocracy'\r\n|'secularism'\r\n|'atheism'\r\n|'mythology'\r\n|'futurism'\r\n|'drama'\r\n|'poll_tax'\r\n|'sales_tax'\r\n|'wealth_tax'\r\n|'vice_tax'\r\n|'prop_tax'\r\n|'death_tax';\r\n\r\nexport type LawPunishment = 'fine'|'imprison'|'death';\r\n\r\nexport interface ILaw{\r\n    /**\r\n     * convenience grouping property\r\n     */\r\n    group: LawGroup;\r\n    /**\r\n     * \"slot\" for law\r\n     */\r\n    axis: LawAxis;\r\n    /**\r\n     * specific law selected\r\n     */\r\n    key: LawKey;\r\n}\r\nexport interface IGovernment{\r\n    laws: ILaw[];\r\n    lawTree: {[key in LawAxis]: ILaw};\r\n}\r\nexport interface ILawData extends ILaw{\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>,\r\n    name: string;\r\n    hint?: string;\r\n    description?: string;\r\n}\r\nexport const LawAxisData: {[key in LawAxis]: {name: string}} = {\r\n    'wel_food': {name: 'Food Welfare'},\r\n    'wel_house': {name: 'Housing Welfare'},\r\n    'wel_health': {name: 'Healthcare'},\r\n    'tax_basic': {name: 'Taxation'},\r\n    'tax_second': {name: 'Advanced Taxation'},\r\n    'econ_sub': {name: 'Subsidies'},\r\n    'cul_rel': {name: 'Culture'},\r\n    'cul_theo': {name: 'State Narrative'},\r\n    crime_theo: {name: 'Persecution'}\r\n}\r\nexport const LawData: {[key in LawKey]: ILawData} = {\r\n    'eat_cake':{\r\n        key: 'eat_cake', group: 'Welfare', name: 'Let Them Eat Cake', idealPro: [ 'trad', 'ego' ], axis: 'wel_food',\r\n        description: 'Hungry Subjects must go without any relief.', hint: 'No state solution for hunger'},\r\n    'food_bank':{\r\n        key: 'food_bank', group: 'Welfare', name: 'Food Bank', idealPro: [ 'prog', 'ego'], axis: 'wel_food',\r\n        description: 'Hungry Subjects are provided food purchased by the government.'\r\n    },\r\n    'food_stamps':{\r\n        key: 'food_stamps', group: 'Welfare', name: 'Food Stamps', idealPro: [ 'trad', 'state'], axis: 'wel_food',\r\n        description: 'Hungry Subjects are provided money by the government to purchase food.'},\r\n    'univ_rations':{\r\n        key: 'univ_rations', group: 'Welfare', name: 'Universal Rations', idealPro: [ 'prog', 'state'], axis: 'wel_food',\r\n        description: 'All Subjects are provided small amounts of food from the government.'},\r\n    'outside':{\r\n        key: 'outside', group: 'Welfare', name: 'Sleep Outside', idealPro: [ 'trad','ego'], axis: 'wel_house',\r\n        description: 'Homeless Subjects must sleep in the cold.'},\r\n    'homeless_shelters':{\r\n        key: 'homeless_shelters', group: 'Welfare', name: 'Homeless Shelters', idealPro: [ 'prog','ego'], axis: 'wel_house',\r\n        description: 'Homeless Subjects are provided shelter purchased by the government.'},\r\n    'housing_subsidy':{\r\n        key: 'housing_subsidy', group: 'Welfare', name: 'Housing Subsidy', idealPro: [ 'trad','state'], axis: 'wel_house',\r\n        description: 'Homeless Subjects are provided money by the government to purchase shelter.'},\r\n    'state_apartments':{\r\n        key: 'state_apartments', group: 'Welfare', name: 'State Apartments', idealPro: [ 'prog','state'], axis: 'wel_house'},\r\n    'stay_healthy':{\r\n        key: 'stay_healthy', group: 'Welfare', name: 'Stay Healthy', idealPro: [ 'trad','ego'], axis: 'wel_health',\r\n        description: 'Sick Subjects must pay for their own medical care.'},\r\n    'clinics':{\r\n        key: 'clinics', group: 'Welfare', name: 'Charity Clinics', idealPro: [ 'prog','ego'], axis: 'wel_health',\r\n        description: 'Sick Subjects are provided medicine purchased by the government.'},\r\n    'medical_aid':{\r\n        key: 'medical_aid', group: 'Welfare', name: 'Medical Aid', idealPro: [ 'trad','state'], axis: 'wel_health',\r\n        description: 'Sick Subjects are provided money by the government to pay for medical care.'},\r\n    'univ_health':{\r\n        key: 'univ_health', group: 'Welfare', name: 'Universal Healthcare', idealPro: [ 'prog','state'], axis: 'wel_health',\r\n        description: 'All Subjects are provided medical care by the government.'},\r\n    'hands_off':{\r\n        key: 'hands_off', group: 'Economics', name: 'Laissez-faire', idealPro: ['ego', 'trad'], axis: 'econ_sub',\r\n        description: 'No industries receive subsidies.'},\r\n    'grain_sub':{\r\n        key: 'grain_sub', group: 'Economics', name: 'Grain Subsidy', idealPro: ['state'], axis: 'econ_sub',\r\n        description: 'Farmers are provided money.'},\r\n    'arts':{\r\n        key: 'arts', group: 'Economics', name: 'Arts Patronage', idealPro: [ 'prog', 'ego' ], axis: 'econ_sub'},\r\n    'theocracy':{\r\n        key: 'theocracy', group: 'Crime', name: 'Illegal Narratives', idealPro: [ 'trad', 'state' ], axis: 'crime_theo',\r\n        description: \"It is illegal for subjects to speak about other universal narratives.\"},\r\n    'secularism':{\r\n        key: 'secularism', group: 'Culture', name: 'Secularism', idealPro: ['ego'], axis: 'cul_theo',\r\n        description: \"The government does not endorse a particular universal narrative.\"},\r\n    'atheism':{\r\n        key: 'atheism', group: 'Culture', name: 'State Nihilism', axis: 'cul_theo'},\r\n    'mythology':{\r\n        key: 'mythology', group: 'Culture', name: 'State Mythology 🐲', idealPro: [ 'trad' ], axis: 'cul_theo'},\r\n    'futurism':{\r\n        key: 'futurism', group: 'Culture', name: 'State Futurism 🚀', idealPro: [ 'prog' ], axis: 'cul_theo'},\r\n    'drama':{\r\n        key: 'drama', group: 'Culture', name: 'State Drama 🎵', idealPro: [ 'state' ], axis: 'cul_theo'},\r\n    // '':{key: // , group: '', name: 'Religious Schooling', 'state', idealPro: [ 'trad', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'University Grants', 'ego', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'College For All', 'state', idealPro: [ 'prog', axis: 'cul_ed'},\r\n    'poll_tax':{\r\n        key: 'poll_tax', group: 'Taxation', name: 'Poll Tax', idealPro: [ 'trad', 'state' ], axis: 'tax_basic',\r\n        description: 'Subjects must pay a flat tax every month.'},\r\n    'sales_tax':{\r\n        key: 'sales_tax', group: 'Taxation', name: 'Sales Tax', idealPro: [ 'ego' ], axis: 'tax_basic',\r\n        description: 'Subjects must pay a percentage tax for every transaction.'},\r\n    'wealth_tax':{\r\n        key: 'wealth_tax', group: 'Taxation', name: 'Wealth Tax', idealPro: [ 'prog', 'state' ], axis: 'tax_basic',\r\n        description: 'Rich subjects must pay a percentage tax on their excess cash.'},\r\n    'vice_tax':{\r\n        key: 'vice_tax', group: 'Taxation', name: 'Vice Tax', idealPro: [ 'trad'], axis: 'tax_second',\r\n        description: 'Entertainment goods have a flat tax.'},\r\n    'prop_tax':{\r\n        key: 'prop_tax', group: 'Taxation', name: 'Property Tax', idealPro: [ 'prog'], axis: 'tax_second',\r\n        description: 'Subjects must pay a tax on housing.'},\r\n    'death_tax':{\r\n        key: 'death_tax', group: 'Taxation', name: 'Death Tax', idealPro: [ 'prog'], axis: 'tax_second',\r\n        description: 'Dead subjects pay a portion of their cash to the government.'},\r\n}\r\n\r\nexport type LawGroupToLaws = {\r\n    [key in LawGroup]: ILaw[]\r\n};\r\nexport class Government{\r\n    public get laws(): ILaw[] {\r\n        return Object.values(this.lawTree);\r\n    }\r\n    public set laws(val: ILaw[]) {\r\n        val.forEach((v) => {\r\n            this.lawTree[v.axis] = v;\r\n        });\r\n    }\r\n    public getLawsByGroup(): LawGroupToLaws {\r\n        return this.laws.reduce((d, x) => {\r\n            d[x.group].push(x);\r\n            return d;\r\n        }, {\r\n            Taxation: [] as ILaw[],\r\n            Welfare: [] as ILaw[],\r\n            Economics: [] as ILaw[],\r\n            Crime: [] as ILaw[],\r\n            Culture: [] as ILaw[]\r\n        });\r\n    }\r\n    public lawTree: {[key in LawAxis]: ILaw} = {} as {[key in LawAxis]: ILaw};\r\n}","import { BeliefCommonality } from \"./simulation/Beliefs\";\r\nimport { BuildingTypes } from \"./simulation/Geography\";\r\nimport { RubricKeys } from \"./simulation/Player\";\r\nimport { IThreshold, TraitGood } from \"./World\";\r\n\r\nexport type PlayerEmptyHexAction = 'build';\r\nexport type PlayerHexAction = 'beam'|'upgrade';\r\nexport type PlayerBeanAction = 'scan'|'abduct'|'vaporize'|'siphon'|'empower'|'gift';\r\nexport type PlayerBeanBrainAction = 'brainwash_ideal'|'brainimplant_secondary'|'brainwash_secondary';\r\nexport type PlayerMarketAction = 'energy'|'bots';\r\nexport type PlayerGovernmentAction = '';\r\nexport type PlayerAction = PlayerHexAction|PlayerBeanAction;\r\n\r\nexport interface PlayerResources{\r\n    energy?: number;\r\n    bots?: number;\r\n    hedons?: number;\r\n    tortrons?: number;\r\n}\r\nexport interface BeanResources{\r\n    sanity?: number;\r\n}\r\nexport type BeanDeathCause = 'vaporization'|'exposure'|'starvation'|'sickness';\r\nexport function triadToString(cost: PlayerResources, sign: '+'|''|'-', qty: number = 1){\r\n    const costs = [];\r\n    if (cost.energy){\r\n        costs.push(sign+(cost.energy*qty)+' Energy');\r\n    }\r\n    if (cost.bots){\r\n        costs.push(sign+(cost.bots*qty)+' Bots');\r\n    }\r\n    if (cost.hedons){\r\n        costs.push(sign+(cost.hedons*qty)+' Hedons');\r\n    }\r\n    if (cost.tortrons){\r\n        costs.push(sign+(cost.tortrons*qty)+' Antihedons');\r\n    }\r\n    return costs.join(' ');\r\n}\r\nexport interface SecondaryResources{\r\n    research?: number;\r\n    leadership?: number;\r\n}\r\nexport interface IDifficulty{\r\n    cost: {\r\n        emptyHex: {[key in PlayerEmptyHexAction]: {[key in BuildingTypes]: PlayerResources}},\r\n        hex: {[key in PlayerHexAction]: PlayerResources} \r\n        bean: {[key in PlayerBeanAction]: PlayerResources},\r\n        bean_brain: {[key in PlayerBeanBrainAction]: BeanResources}\r\n        market: {\r\n            scrubHedons: PlayerResources,\r\n            resource: {[key in PlayerMarketAction]: PlayerResources},\r\n            beliefs: {[key in BeliefCommonality]: PlayerResources}\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {[key in TraitGood]: IThreshold},\r\n        degrade_per_tick: {\r\n            food: number,\r\n            health: number,\r\n            stamina: number,\r\n            fun: number\r\n        },\r\n        penalty: {\r\n            homeless_health: number,\r\n            starving_health: number\r\n        },\r\n        death_chance: {\r\n            [cause in BeanDeathCause]: number\r\n        }\r\n    },\r\n    report_card_progression: RubricKeys[]\r\n}\r\nexport const DefaultDifficulty: IDifficulty = {\r\n    cost: {\r\n        emptyHex: {\r\n            build: {\r\n                house: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                farm: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                theater: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                hospital: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                church: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                courthouse: {\r\n                    energy: 999,\r\n                    bots: 999\r\n                },\r\n                park: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                nature: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                }\r\n            }\r\n        },\r\n        hex: {\r\n            beam: {\r\n                energy: 3\r\n            },\r\n            upgrade: {\r\n                energy: 1,\r\n                bots: 4,\r\n            }\r\n        },\r\n        bean_brain: {\r\n            brainwash_ideal: { sanity: 4},\r\n            brainimplant_secondary: { sanity: 1},\r\n            brainwash_secondary: {sanity: 2},\r\n        },\r\n        bean: {\r\n            scan: {\r\n                energy: 1\r\n            },\r\n            abduct: {\r\n                bots: 3\r\n            },\r\n            gift: {},\r\n            empower: {},\r\n            vaporize: {\r\n                energy: 2,\r\n                bots: 4\r\n            },\r\n            siphon: {},\r\n        },\r\n        market: {\r\n            scrubHedons: {\r\n                energy: 5\r\n            },\r\n            resource: {\r\n                bots: {\r\n                    hedons: 6\r\n                },\r\n                energy: {\r\n                    hedons: 5\r\n                }\r\n            },\r\n            beliefs: {\r\n                common: {},\r\n                uncommon: {},\r\n                rare: {}\r\n            },\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {\r\n            'food': {warning: 0.6, sufficient: 1, abundant: 3},\r\n            'shelter': {warning: 0.6, sufficient: 1, abundant: 7},\r\n            'medicine': {warning: 0.6, sufficient: 1, abundant: 3},\r\n            'fun': {warning: 0.1, sufficient: 1, abundant: 3},\r\n        },\r\n        degrade_per_tick: {\r\n            food: 1/12,\r\n            health: 1/20,\r\n            stamina: 1/12,\r\n            fun: 1/6\r\n        },\r\n        penalty: {\r\n            homeless_health: 1/20,\r\n            starving_health: 1/24\r\n        },\r\n        death_chance: {\r\n            starvation: 1/8,\r\n            sickness: 1/8,\r\n            exposure: 1/8,\r\n            vaporization: 1\r\n        }\r\n    },\r\n    report_card_progression: []\r\n};","import { ChangePubSub, LiveList, LiveMap } from \"../events/Events\";\r\nimport { DefaultDifficulty, IDifficulty, PlayerResources } from \"../Game\";\r\nimport { World } from \"../World\";\r\nimport { Number_Starting_City_Pop } from \"../WorldGen\";\r\nimport { IBean } from \"./Agent\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\nimport { IDate } from \"./Time\";\r\n\r\n\r\nexport interface IPlayerData{\r\n    scanned_bean: {[beanKey: number]: boolean};\r\n    abductedBeans: IBean[];\r\n    energy: IResource;\r\n    bots: IResource;\r\n    workingReportCard: IReportCard;\r\n    techProgress: TechProgress;\r\n    currentlyResearchingTech: Tech|undefined;\r\n}\r\n\r\nexport interface IResource{\r\n    amount: number;\r\n    income: number;\r\n    change: ChangePubSub;\r\n}\r\n\r\nexport type GoalKey = 'found_utopia'|'build_house_n_farm'|'beam_3'|'scan'|'set_policy'|'brainwash'|'c+_grade';\r\nexport interface IGoal{\r\n    key: GoalKey;\r\n    text: string;\r\n    tooltip?: string;\r\n    reward?: PlayerResources,\r\n    check: (world: World) => boolean\r\n}\r\nexport interface IGoalProgress {\r\n    done: boolean,\r\n    step: number\r\n}\r\nexport interface IProgressable{\r\n    goalProgress: {[key: string]: IGoalProgress},\r\n    goals: Array<GoalKey>\r\n}\r\nexport const Goals: {[key in GoalKey]: IGoal} = {\r\n    found_utopia: {\r\n        key: 'found_utopia', text: 'Found your Utopia',\r\n       check: (world) => world.party.name != 'Goodplace'\r\n    },\r\n    build_house_n_farm: {\r\n        key: 'build_house_n_farm', text: 'Build a house and farm',\r\n        check: (world) => {\r\n            return world.cities[0].book.getCountOfType('house') > 0 &&\r\n            world.cities[0].book.getCountOfType('house') > 0;\r\n        },\r\n        reward: {\r\n            energy: 3, bots: 3\r\n        }\r\n    }, \r\n    beam_3: {\r\n        key: 'beam_3', text: 'Beam in 3 new beings', \r\n        check: (world) => {\r\n            return world.beans.get.filter(b => !b.bornInPetri).length >= (3 + Number_Starting_City_Pop)\r\n        }\r\n    }, \r\n    scan: {\r\n        key: 'scan', text: 'Scan a Subject',\r\n        check: (world) => Object.keys(world.alien.scanned_bean).length > 0\r\n    }, \r\n    set_policy: {\r\n        key: 'set_policy', text: 'Set a Gov Policy',\r\n        check: (world) => false\r\n    }, \r\n    brainwash: {\r\n        key: 'brainwash', text: 'Brainwash a Subject',\r\n        check: (world) => false\r\n    }, \r\n    'c+_grade': {\r\n        key: 'c+_grade', text: 'Receive a C+ Grade',\r\n        check: (world) => false\r\n    } \r\n};\r\n\r\nexport type Grade = 'F'|'D'|'C'|'B'|'A';\r\nexport type RubricKeys = 'Happiness'|'Prosperity'|'Stability'|'Dogma';\r\nexport type IReportCard = {[key in RubricKeys]: Grade}\r\nexport type GradingFunc = (world: World) => IReportCard;\r\nexport interface ICurriculum {\r\n    GradeWorld: GradingFunc,\r\n    RubricDescription: {[key in RubricKeys]: string} \r\n}\r\nexport const Curriculums: {[difficulty: string]: ICurriculum} = {\r\n    Default: {\r\n        GradeWorld: (world: World) => {return{\r\n            Happiness: BooleanAverageGrader(world.beans.get, (o) => o.lastHappiness >- .2),\r\n            Prosperity: BooleanAverageGrader(world.beans.get, (o) => o.food !== 'hungry'),\r\n            Stability: BooleanAverageGrader(world.beans.get, (o) => o.sanity === 'sane'),\r\n            Dogma: GradeUpToNumber((world.alien.speechcrimes[world.date.year] || 0), 10, 10),\r\n        }},\r\n        RubricDescription: {\r\n            Happiness: 'Subjects are at least 20% happy',\r\n            Prosperity: 'Subjects are not hungry',\r\n            Stability: 'Subjects are all sane',\r\n            Dogma: 'Up to 10 Speechcrimes'\r\n        }\r\n    }\r\n}\r\n/**\r\n * \r\n * @param number number of bad events\r\n * @param allowance number of allowed events\r\n * @param maximum range of \"overflow\" events\r\n */\r\nfunction GradeUpToNumber(number: number, allowance: number, maximum: number): Grade{\r\n    const normalized = 1 - Math.min(1, Math.max(0, number - allowance) / maximum);\r\n    return NormalizedScoreToGrade(normalized);\r\n}\r\nfunction BooleanAverageGrader<T>(array: T[], grade: (o: T) => boolean): Grade{\r\n    if (array.length < 1) return 'F';\r\n    return NormalizedScoreToGrade(array.filter(grade).length / array.length);\r\n}\r\nfunction NormalizedScoreToGrade(normNumber: number): Grade{\r\n    if (normNumber < .58) return 'F';\r\n    if (normNumber < .68) return 'D';\r\n    if (normNumber < .78) return 'C';\r\n    if (normNumber < .88) return 'B';\r\n    return 'A';\r\n}\r\nconst GradeWeights: {[key in Grade]: number} ={\r\n    A: 5,\r\n    B: 4,\r\n    C: 3,\r\n    D: 2,\r\n    F: 1\r\n}\r\nexport function GetAverage(reportCard: IReportCard): Grade{\r\n    return NormalizedScoreToGrade((GradeWeights[reportCard.Happiness] + \r\n        GradeWeights[reportCard.Prosperity] + \r\n        GradeWeights[reportCard.Stability] +\r\n        GradeWeights[reportCard.Dogma] \r\n    ) / 20);\r\n}\r\n\r\nexport type Tech = 'halve_sanity'|'fast_resources'|'trauma_nanobots'|'fast_leadership'|'neural_duplicator';\r\nexport interface ITechInfo{\r\n    tech: Tech,\r\n    /**\r\n     * number of tech points required to complete research\r\n     */\r\n    techPoints: number,\r\n    name: string,\r\n    description: string\r\n}\r\nexport const TechData: {[key in Tech]: ITechInfo} = {\r\n    'halve_sanity': {\r\n        tech: 'halve_sanity',\r\n        name: 'Surgical Psychops',\r\n        techPoints: 30,\r\n        description: 'Brainwashing causes -1 🧠 sanity damage'\r\n    },\r\n    'fast_resources': {\r\n        tech: 'fast_resources',\r\n        name: '0 Dimensional Supersiphons',\r\n        techPoints: 30,\r\n        description: 'Faster ⚡️ and 🤖 accumulation'\r\n    },\r\n    'trauma_nanobots': {\r\n        tech: 'trauma_nanobots',\r\n        name: 'Trauma Nanobots',\r\n        techPoints: 30,\r\n        description: 'Spend 🤖 to stop Subject from dying'\r\n    },\r\n    'fast_leadership': {\r\n        tech: 'fast_leadership',\r\n        name: 'Advanced Marketing',\r\n        techPoints: 30,\r\n        description: 'Faster 🗳️ Leadership accumulation'\r\n    },\r\n    'neural_duplicator': {\r\n        tech: 'neural_duplicator',\r\n        name: 'Level 2 Neural Duplication',\r\n        techPoints: 30,\r\n        description: 'Copy Traits 1 additional time'\r\n    }\r\n}\r\nexport interface IPlayerTechProgress{\r\n    /**\r\n     * number of research points\r\n     */\r\n    researchPoints: number\r\n}\r\nexport type TechProgress = {[key: string]: IPlayerTechProgress};\r\nexport interface BeliefInventory{\r\n    trait: TraitBelief,\r\n    charges: number\r\n}\r\n\r\nexport class Player implements IPlayerData, IProgressable{\r\n    public scanned_bean: {[beanKey: number]: boolean} = {};\r\n    public seenBeliefs = new LiveMap<string, boolean>(new Map<string, boolean>());\r\n    public beliefInventory = new LiveList<BeliefInventory>([]);\r\n    public speechcrimes: {[year: number]: number} = {};\r\n    public abductedBeans: IBean[] = [];\r\n    public energy = { amount: 29, income: 2/30, change: new ChangePubSub()};\r\n    public bots = { amount: 10, income: 2/30, change: new ChangePubSub()};\r\n    public hedons = { amount: 0, income: 0, change: new ChangePubSub()};\r\n    public tortrons = { amount: 0, income: 0, change: new ChangePubSub()};\r\n    public next_grade: IDate = { year: 1, season: 3, day: 1, hour: 0 };\r\n    public difficulty: IDifficulty = DefaultDifficulty;\r\n    public goals: GoalKey[] = ['found_utopia', 'build_house_n_farm',  'beam_3', 'scan', 'brainwash', 'set_policy', 'c+_grade'];\r\n    public goalProgress: {[key: string]: IGoalProgress} = {};\r\n    public pastReportCards: IReportCard[] = [];\r\n    public workingReportCard: IReportCard = {\r\n        Happiness: 'D',\r\n        Prosperity: 'D',\r\n        Stability: 'D',\r\n        Dogma: 'D',\r\n    };\r\n    public techProgress: TechProgress = {};\r\n    public currentlyResearchingTech: Tech|undefined;\r\n\r\n    public canAfford(cost: PlayerResources, qty: number = 1): boolean{\r\n        return (cost.bots === undefined || this.bots.amount >= cost.bots * qty) &&\r\n        (cost.energy === undefined || this.energy.amount >= cost.energy * qty) && \r\n        (cost.hedons === undefined || this.hedons.amount >= cost.hedons * qty);\r\n    }\r\n\r\n    public hasResearched(tech: Tech){\r\n        return this.techProgress[tech] != null && this.techProgress[tech].researchPoints >= TechData[tech].techPoints;\r\n    }\r\n\r\n    public useCharge(t: TraitBelief){\r\n        const all = this.beliefInventory.get;\r\n        const existing = all.find(x => x.trait === t);\r\n        if (existing){\r\n            existing.charges -= 1;\r\n            this.beliefInventory.set([...all.filter(x => x.charges > 0)]);\r\n        }\r\n    }\r\n\r\n    public purchase(cost: PlayerResources, qty: number = 1){\r\n        if (cost.bots){\r\n            this.bots.amount -= cost.bots * qty;\r\n            this.bots.change.publish({change: -cost.bots * qty});\r\n        }\r\n        if (cost.energy){\r\n            this.energy.amount -= cost.energy * qty;\r\n            this.energy.change.publish({change: -cost.energy * qty});\r\n        }\r\n        if (cost.hedons){\r\n            this.hedons.amount -= cost.hedons * qty;\r\n            this.hedons.change.publish({change: -cost.hedons * qty});\r\n        }\r\n    }\r\n\r\n    public tryPurchase(cost: PlayerResources, qty: number = 1): boolean{\r\n        if (this.canAfford(cost, qty)){\r\n            this.purchase(cost, qty);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public reward(reward: PlayerResources){\r\n        if (reward.bots){\r\n            this.bots.amount += reward.bots;\r\n            this.bots.change.publish({change: reward.bots});\r\n        }\r\n        if (reward.energy){\r\n            this.energy.amount += reward.energy;\r\n            this.energy.change.publish({change: reward.energy});\r\n        }\r\n        if (reward.hedons){\r\n            this.hedons.amount += reward.hedons;\r\n            this.hedons.change.publish({change: reward.hedons});\r\n        }\r\n\r\n    }\r\n\r\n    public checkGoals(world: World){\r\n        for (let i = 0; i < this.goals.length; i++) {\r\n            const goal = this.goals[i];\r\n            if (this.goalProgress[goal] == null){\r\n                this.goalProgress[goal] = {done: false, step: 0};\r\n            }\r\n            if (!this.goalProgress[goal].done) {\r\n                const done = Goals[goal].check(world);\r\n                const reward = Goals[goal].reward;\r\n                this.goalProgress[goal].done = done;\r\n                if (done && reward != null){\r\n                    this.reward(reward);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public checkReportCard(world: World) {\r\n        this.workingReportCard = Curriculums.Default.GradeWorld(world);\r\n    }\r\n}","export type SFXFile = 'drop.mp3'|'ding_soft.mp3'|'ding_bad.wav'|'death_bell.wav'|'scan.wav'|'squish_pop.mp3'|'squish_suck.mp3';\r\nexport type SFX = 'drop'|'happiness'|'unhappiness'|'love'|'hate'|'death'|'scan'|'wash_in'|'wash_out';\r\n\r\nconst SFXToFile: {[sfx in SFX]: SFXFile} = {\r\n    drop: \"drop.mp3\",\r\n    love: \"ding_soft.mp3\",\r\n    happiness: \"ding_soft.mp3\",\r\n    unhappiness: \"ding_bad.wav\",\r\n    hate: \"ding_bad.wav\",\r\n    death: \"death_bell.wav\",\r\n    scan: 'scan.wav',\r\n    wash_in: 'squish_pop.mp3',\r\n    wash_out: 'squish_suck.mp3'\r\n};\r\n\r\ntype SFXMap = {[sfx in SFX]: SoundBuffer};\r\n\r\nclass SoundBuffer{\r\n    constructor(private file: SFXFile, private volume: number = 1){}\r\n\r\n    private buffer: HTMLAudioElement[] = [];\r\n    play(){\r\n        if (this.buffer.length > 0 && this.buffer[0].ended){\r\n            const audio = this.buffer.shift();\r\n            audio?.play();\r\n            if (audio)\r\n                this.buffer.push(audio);\r\n        } else {\r\n            const aud = new Audio(process.env.PUBLIC_URL+'/'+this.file);\r\n            aud.volume = this.volume;\r\n            aud.play();\r\n            this.buffer.push(aud);\r\n        }\r\n    }\r\n}\r\nexport class WorldSound{\r\n    private lib: SFXMap = {\r\n        'drop': new SoundBuffer(SFXToFile['drop'], 0.2),\r\n        'love': new SoundBuffer(SFXToFile['happiness']),\r\n        'happiness': new SoundBuffer(SFXToFile['happiness']),\r\n        'unhappiness': new SoundBuffer(SFXToFile['unhappiness']),\r\n        'hate': new SoundBuffer(SFXToFile['unhappiness']),\r\n        'death': new SoundBuffer(SFXToFile['death']),\r\n        'scan': new SoundBuffer(SFXToFile['scan']),\r\n        'wash_in': new SoundBuffer(SFXToFile['wash_in']),\r\n        'wash_out': new SoundBuffer(SFXToFile['wash_out']),\r\n    }\r\n\r\n    public play(sfx: SFX){\r\n        this.lib[sfx].play();\r\n    }\r\n}","import { IBeanContainer, Tile, Trait, TraitEthno, TraitJob, TraitEmote } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { Economy } from \"./Economy\";\r\nimport { Government } from \"./Government\";\r\nimport { GenerateBean, GetRandom, GetRandomNumber } from \"../WorldGen\";\r\nimport { ICityPartyHQ, Party } from \"./Politics\";\r\nimport { Geography, HexPoint, IBuilding, JobToBuilding, Point, Vector } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { shuffle } from \"./Utils\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { IEventBus, Live, LiveList, PubSub } from \"../events/Events\";\r\nimport { WorldSound } from \"../WorldSound\";\r\nimport { isEnterprise } from \"./Institutions\";\r\n\r\n\r\nexport function reportIdeals(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: Bean[], defWin: Trait, beanPropGet: (bean: Bean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}\r\n\r\nexport class UFO{\r\n    constructor(public key: number, public point: HexPoint, public action: string){}\r\n}\r\nexport class Pickup{\r\n    constructor(public key: number, public point: Point, public type: TraitEmote){}\r\n    public velocity: Vector = {x: 0, y: 0};\r\n    public onMove = new PubSub<Point>();\r\n}\r\n\r\n\r\nexport class City extends Geography implements Tile, IBeanContainer {\r\n    public name: string = '';\r\n    public url: string = '';\r\n    public type: string = '';\r\n    public key: number = 0;\r\n    public beans = new LiveList<Bean>([]);\r\n    public historicalBeans = new LiveList<Bean>([]);\r\n    public readonly pickups = new LiveList<Pickup>([]);\r\n    public ufos: UFO[] = [];\r\n    public pickupSeed = 0;\r\n    public beanSeed = 0;\r\n    public houses: any[] = [];\r\n    public partyHQ?: ICityPartyHQ;\r\n    public yearsPartyDonations: number = 0;\r\n\r\n    /// computed properties\r\n    public majorityEthnicity: TraitEthno = 'circle';\r\n    public costOfLiving: number = 1;\r\n\r\n    constructor(private sfx: WorldSound, public readonly economy: Economy){\r\n        super();\r\n    }\r\n\r\n    public law?: Government;\r\n    public environment?: IDate;\r\n    public eventBus?: IEventBus;\r\n    public pickupMagnetPoint = new Live<Point|undefined>(undefined);\r\n\r\n    tryGetJob(bean: Bean, job: TraitJob): boolean{\r\n        if(job === 'jobless') return false;\r\n        const allOfType = this.book.getBuildings().filter((x) => x.type === JobToBuilding[job]);\r\n        \r\n        for (let i = 0; i < allOfType.length; i++) {\r\n            const building = allOfType[i];\r\n            const slots = building.openSlots();\r\n            if (slots.length > 0){\r\n                const slot = slots.shift() as BuildingJobSlot;\r\n                building.job_slots[slot] = bean.key;\r\n                bean.employerEnterpriseKey = building.key;\r\n                if (isEnterprise(building) && building.ownerBeanKey == null){\r\n                    building.ownerBeanKey = bean.key;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    unsetJob(bean: Bean){\r\n        if (bean.job === 'jobless') return;\r\n        const all = this.book.getBuildings();\r\n        for (let i = 0; i < all.length; i++) {\r\n            const building = all[i];\r\n            if (building.tryFreeBean(bean.key)){\r\n                bean.employerEnterpriseKey = undefined;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    addEmotePickup(p: Point, emote: TraitEmote){\r\n        const point = {...p};\r\n        point.x += GetRandomNumber(-10, 10);\r\n        point.y += GetRandomNumber(-10, 10);\r\n        const id = ++this.pickupSeed;\r\n        this.pickups.push(new Pickup(id, point, emote));\r\n    }\r\n\r\n    getRandomCitizen(): Bean|null{\r\n        const shuffled = shuffle(this.beans.get);\r\n        if (shuffled.length > 0) {\r\n            return shuffled[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    onCitizenDie(deadBean: Bean){\r\n        if (deadBean.cash > 0){\r\n            const lucky = this.getRandomCitizen();\r\n            if (lucky) {\r\n                lucky.cash = lucky.cash + deadBean.cash;\r\n                deadBean.cash = 0;\r\n            }\r\n        }\r\n        this.unsetJob(deadBean);\r\n    }\r\n    breedBean(parent: Bean) {\r\n        const job: TraitJob = Math.random() <= .5 ? parent.job : GetRandom(['doc', 'farmer', 'builder', 'jobless']);\r\n        const bean = GenerateBean(this, undefined, job);\r\n        bean.ethnicity = parent.ethnicity;\r\n        bean.name = bean.name.split(' ')[0] + ' ' + parent.name.split(' ')[1];\r\n        bean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n        bean.bornInPetri = true;\r\n        if (this.environment)\r\n            bean.dob = {year: this.environment?.year, season: this.environment?.season, day: this.environment?.day, hour: this.environment?.hour};\r\n        this.beans.push(bean);\r\n    }\r\n    getTaxesAndDonations(party: Party, economy: Economy){\r\n    }\r\n    calculate(economy: Economy, law: Government) {\r\n        this.costOfLiving = economy.getCostOfLiving();\r\n        const c = this.beans.get.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\r\n            switch(bean.ethnicity){\r\n                case 'circle': count.circle++;break;\r\n                case 'square': count.square++;break;\r\n                case 'triangle': count.triangle++;break;\r\n            }\r\n            return count;\r\n        }, {circle: 0, square: 0, triangle: 0});\r\n        if (c.circle > c.square && c.circle > c.triangle){\r\n            this.majorityEthnicity = 'circle';\r\n        } else if (c.square > c.circle && c.square > c.triangle){\r\n            this.majorityEthnicity = 'square';\r\n        } else {\r\n            this.majorityEthnicity = 'triangle';\r\n        }\r\n    }\r\n    getNearestNeighbors(source: Bean): Bean[] {\r\n        return this.beans.get.filter((b) => {\r\n            if (b.key == source.key) return false;\r\n\r\n            const p = b.point;\r\n            const q = source.point;\r\n            const squared = Math.pow(p.x - q.x, 2)+Math.pow(p.y - q.y, 2);\r\n\r\n            return squared < 1600 && squared > 600;\r\n        });\r\n    }\r\n}","import { Bean } from \"./Bean\";\r\nimport { City } from \"./City\";\r\nimport { BuildingTypes, HexPoint, IBuilding, Point } from \"./Geography\";\r\nimport { EnterpriseType, IEnterprise } from \"./Institutions\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\n\r\nexport class Building implements IBuilding, IEnterprise{\r\n    public city?: City;\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public address: HexPoint = {q: 0, r: 0};\r\n    public type: BuildingTypes = 'farm';\r\n    public occupied_slots: Point[] = [];\r\n    public empty_slots: Point[] = [];\r\n    public upgraded: boolean = false;\r\n    public job_slots: {[key in BuildingJobSlot]: number|null} = {\r\n        0: null,\r\n        1: null,\r\n        2: null,\r\n        3: null,\r\n        4: null,\r\n        5: null,\r\n    }\r\n    public enterpriseType: EnterpriseType = 'company';\r\n    public ownerBeanKey?: number | undefined;\r\n    public ticksSinceLastSale: number = 0;\r\n    public bank: number = 0;\r\n    get cash(): number{\r\n        return this.bank;\r\n    }\r\n    set cash(revenue: number){\r\n        this.bank += revenue;\r\n        this.distributeCash();\r\n    }\r\n    distributeCash(){\r\n        const workers = this.getWorkerBeans();\r\n        switch(this.enterpriseType){\r\n            case 'company':\r\n                if (workers.length < 1) {\r\n                    //noop;\r\n                } else if (workers.length === 1){\r\n                    workers[0].cash += this.bank;\r\n                    this.bank = 0;\r\n                }\r\n                else {\r\n                    const share = this.bank / (workers.length + 0.5);\r\n                    this.bank = 0;\r\n                    let owner = workers.find(x => x.key === this.ownerBeanKey);\r\n                    if (owner == null){\r\n                        owner = workers[0];\r\n                        this.ownerBeanKey = owner.key;\r\n                    }\r\n                    workers.forEach(x => {\r\n                        if (x === owner){\r\n                            x.cash += share * 1.5;\r\n                        } else {\r\n                            x.cash += share;\r\n                        }\r\n                    });\r\n                }\r\n                break;\r\n            case 'cooperative':\r\n                const share = this.bank / workers.length;\r\n                this.bank = 0;\r\n                workers.forEach(x => {\r\n                    x.cash += share;\r\n                });\r\n                break;\r\n            case 'commune':\r\n                const commShare = this.bank / workers.length;\r\n                this.bank = 0;\r\n                workers.forEach(x => {\r\n                    x.cash += commShare;\r\n                });\r\n                break;\r\n        }\r\n    }\r\n    getWorkerBeans(): Bean[]{\r\n        const beans: Bean[] = [];\r\n        for(const bKey in this.getBeanKeys()){\r\n            const bean = this.city?.beans.get.find((y) => y.key === +bKey);\r\n            if (bean){\r\n                beans.push(bean);\r\n            }\r\n        }\r\n        return beans;\r\n    }\r\n    getBeanKeys(): number[]{\r\n        const ids: number[] = [];\r\n        const keys = Object.keys(this.job_slots);\r\n        for(const key in keys){\r\n            const slot = +key as BuildingJobSlot;\r\n            const val = this.job_slots[slot];\r\n            if (val != null){\r\n                ids.push(val);\r\n            }\r\n        }\r\n        return ids;\r\n    }\r\n    openSlots(): BuildingJobSlot[]{\r\n        return Object.keys(this.job_slots).filter((s, i) => {\r\n            return this.job_slots[+s as BuildingJobSlot] === null && (i < 3 || this.upgraded);\r\n        }).map((x) => +x);\r\n    }\r\n    usedSlots(): BuildingJobSlot[]{\r\n        return Object.keys(this.job_slots).filter((s) => {\r\n            return this.job_slots[+s as BuildingJobSlot] != null;\r\n        }).map((x) => +x);\r\n    }\r\n    tryFreeBean(beanKey: number): boolean{\r\n        const usedSlots = this.usedSlots();\r\n        for (let i = 0; i < usedSlots.length; i++) {\r\n            const slot = usedSlots[i];\r\n            const beanInSlot = this.job_slots[slot];\r\n            if (beanInSlot === beanKey){\r\n                this.job_slots[slot] = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick: () => void;\r\n    closeButtonText?: string;\r\n    hideCloseButton?: boolean\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (this.props.hideCloseButton)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n        <div className=\"modal\">\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: Bean[], \r\n    need: (b: Bean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { LiveList } from \"../events/Events\";\r\n\r\ninterface OverviewPanelP {\r\n    city?: City,\r\n    beans: LiveList<Bean>,\r\n    utopia: Party,\r\n    clearCity: () => void;\r\n}\r\n\r\nexport class OverviewPanel extends React.Component<OverviewPanelP> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let header = <div>\r\n            Human Emotion Farm\r\n            <div>\r\n                <small>Part of the 🌌 Galactic Xenosensation Federation</small>\r\n            </div>\r\n        </div>;\r\n        if (this.props.city) {\r\n            header = <div>\r\n                <div>\r\n                    <b>{this.props.city.name}</b>\r\n                    <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        const avg_happy = this.props.beans.get.reduce((sum, x) => sum + x.lastHappiness, 0) / (this.props.beans.get.length || 1);\r\n        const avg_cash = this.props.beans.get.reduce((sum, x) => sum + x.cash, 0) / (this.props.beans.get.length || 1);\r\n        const avg_approval = this.props.beans.get.reduce((sum, x) => sum + x.lastPartySentiment, 0) / (this.props.beans.get.length || 1);\r\n        return (\r\n            <div>\r\n                {header}\r\n                <div className=\"header\"><b>Demographics</b></div>\r\n                <div>\r\n                    <b>Population</b>&nbsp;\r\n                    <span>{this.props.beans.get.length}</span>\r\n                </div>\r\n                <AxisReadout report={reportEthno(this.props.beans.get)}>Ethnicity</AxisReadout>\r\n                <div className=\"header\"><b>Situation</b></div>\r\n                <NeedReadout beans={this.props.beans.get} need={(b) => b.food} dire=\"starving\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n                <NeedReadout beans={this.props.beans.get} need={(b) => b.stamina} dire=\"homeless\" abundant=\"rested\">Housing</NeedReadout>\r\n                <NeedReadout beans={this.props.beans.get} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n                <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n                <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n                <div className=\"header\"><b>Electorate</b></div>\r\n                <AxisReadout report={reportCommunity(this.props.beans.get)}>Community</AxisReadout>\r\n                <AxisReadout report={reportIdeals(this.props.beans.get)}>Ideals</AxisReadout>\r\n                <div>\r\n                    <b>Approval</b>&nbsp;\r\n                    <span>{avg_approval.toFixed(0)}%</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{ report: { avg: number, winner: Trait } }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent + '%'\r\n        }\r\n        return (\r\n            <div>\r\n                <b>\r\n                    {this.props.children}\r\n                </b>&nbsp;&nbsp;\r\n                <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n                <div className=\"bar\">\r\n                    <div className=\"bar-inner\" style={style}>\r\n                        {percent}%\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { City, UFO } from \"../simulation/City\";\r\nimport { hex_to_pixel, origin_point, transformPoint } from \"../simulation/Geography\";\r\n\r\n\r\nexport class AnimatedUFO extends React.Component<{\r\n    ufo: UFO,\r\n    city: City\r\n}, {\r\n    showBeam: boolean\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            showBeam: false\r\n        };\r\n        setTimeout(() => {\r\n            this.setState({showBeam: true});\r\n            setTimeout(() => {\r\n                this.setState({showBeam: false})\r\n            }, 1800);\r\n        }, 1800);\r\n    }\r\n    render(){\r\n        let style = {\r\n          ...transformPoint(hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, this.props.ufo.point))\r\n        };\r\n        return <span style={style} className=\"ufo\">\r\n            🛸\r\n            {this.state.showBeam ? <span className=\"beam\"></span> : null}\r\n            \r\n        </span>\r\n    }\r\n}","import React, { RefObject } from \"react\";\r\n\r\nexport class Particles extends React.Component<{\r\n    particleCount: number,\r\n    className?: string,\r\n    delay: number\r\n}, {\r\n    active: boolean,\r\n    parts: RefObject<HTMLDivElement>[]\r\n}> {\r\n    private animations: Array<Animation|null> = [];\r\n    private finishedAnimationCount: number = 0;\r\n    constructor(props: any){\r\n        super(props);\r\n        let parts: RefObject<HTMLDivElement>[] = []\r\n        for (let i = 0; i < this.props.particleCount; i++) {\r\n            parts.push(React.createRef());\r\n        }\r\n        this.state = {\r\n            active: true,\r\n            parts: parts\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.animations = this.state.parts.map((p) => {\r\n            if (p.current){\r\n                const x = Math.floor(Math.random() * 400) - 200;\r\n                const y = Math.floor(Math.random() * 400) - 400;\r\n                return p.current.animate([\r\n                    {\r\n                      transform: `translate(0px, 0px)`,\r\n                      opacity: 1\r\n                    },\r\n                    {\r\n                      transform: `translate(${x}px, ${y}px)`,\r\n                      opacity: 0\r\n                    }    \r\n                ], {\r\n                    duration: 1500 + Math.random() * 1000,\r\n                    easing: 'ease-in-out',\r\n                    delay: this.props.delay + (Math.random() * 100)\r\n                });\r\n            }\r\n            return null;\r\n        });\r\n        this.animations.forEach((x) => {\r\n            if (x)\r\n            x.onfinish = () => {\r\n                this.finishedAnimationCount++;\r\n                if (this.finishedAnimationCount >= this.props.particleCount){\r\n\r\n                    this.setState({active: false, parts: []});\r\n                }\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return <div className={(this.props.className || '') + \" particle-parent\"}>\r\n            {\r\n                this.state.active ? this.state.parts.map((x, i) => {\r\n                    return <div key={i} className=\"particle\" ref={x}></div>;\r\n                }) : null\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport class DelayedParticles extends React.Component<{\r\n    particleCount: number,\r\n    className?: string,\r\n    delay: number\r\n}, {\r\n    active: boolean\r\n}> {\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        window.setTimeout(() => {\r\n            this.setState({active: true});\r\n        }, this.props.delay);\r\n    }\r\n    render(){\r\n        if (this.state.active){\r\n            return <Particles delay={0} className={this.props.className} particleCount={this.props.particleCount}></Particles>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport { EventTrigger, IEvent } from \"../events/Events\";\r\nimport { BeanDeathCause } from \"../Game\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { transformPoint } from \"../simulation/Geography\";\r\nimport { Particles } from \"../widgets/particles\";\r\nimport './spotlight.css';\r\n\r\ninterface SpotlightState{\r\n  name: string;\r\n  beanClasses: string;\r\n  faceOV?: string,\r\n  particles: {className:string,delay:number}[]\r\n}\r\ninterface SpotlightAnimationState extends SpotlightState{\r\n  start: number;\r\n}\r\nconst spotlightAnimations: {[key:string]:SpotlightAnimationState[]} = {\r\n  'death-exposure': [\r\n    {\r\n      start: 0,\r\n      name: 'death-exposure', faceOV: '🥶',\r\n      beanClasses: 'drop-tool turn-blue',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-exposure',faceOV: '💀',\r\n      beanClasses: 'drop-tool turn-blue',      \r\n      particles: [] \r\n    }\r\n  ],\r\n  'death-vaporization': [\r\n    {\r\n      start: 0,\r\n      name: 'death-vaporization',\r\n      beanClasses: '',\r\n      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-vaporization',\r\n      beanClasses: 'drop-tool',\r\n      particles: []\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-vaporization', \r\n      beanClasses: 'drop-tool', faceOV: ' ',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 3000,\r\n      name: 'death-vaporization', \r\n      beanClasses: 'drop-tool hide-body', faceOV: ' ',\r\n      particles: [\r\n        {className: 'head', delay: 0},\r\n        {className: 'body', delay: 0}\r\n      ]\r\n    }\r\n  ],\r\n  'death-sickness': [\r\n    {\r\n      start: 0,\r\n      name: 'death-sickness', faceOV: '🤢',\r\n      beanClasses: '',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '🤮',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 1400,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '🤮',\r\n      particles: [\r\n        {className: 'head', delay: 0},\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '💀',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n  ],\r\n  'death-starvation': [\r\n    {\r\n      start: 0,\r\n      name: 'death-starvation', faceOV: '🥺',\r\n      beanClasses: '',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 500,\r\n      name: 'death-starvation', faceOV: '😖',\r\n      beanClasses: 'body-shrink',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-starvation', faceOV: '😫',\r\n      beanClasses: 'body-shrink drop-tool',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 3000,\r\n      name: 'death-starvation', faceOV: '💀',\r\n      beanClasses: 'body-shrink drop-tool',      \r\n      particles: []\r\n    }\r\n  ]\r\n}\r\nexport class AnimatedSpotlight extends React.Component<{\r\n    event: IEvent,\r\n    bean: Bean,\r\n}, SpotlightState>{\r\n    constructor(props: any){\r\n        super(props);\r\n        const name = `${this.props.event.trigger}-${this.getSubtype(this.props.event.message)}`;\r\n        this.state = spotlightAnimations[name][0];\r\n    }\r\n    private lastTickMS: DOMHighResTimeStamp = 0;\r\n    private currentTime: number = 0;\r\n    private tickHandle: number = 0;\r\n    componentDidMount(){\r\n      window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n        this.lastTickMS = time; //initialize tick time\r\n        this.tickHandle = window.requestAnimationFrame(this.tick);\r\n      });\r\n    }\r\n    componentWillUnmount(){\r\n      window.cancelAnimationFrame(this.tickHandle);\r\n    }\r\n    tick = (timeMS: DOMHighResTimeStamp) => {\r\n      // Compute the delta-time against the previous time\r\n      const deltaTimeMS = (timeMS - this.lastTickMS);\r\n    \r\n      // Update the previous time\r\n      this.lastTickMS = timeMS;\r\n      if (deltaTimeMS > 0){\r\n        this.currentTime += deltaTimeMS;\r\n        const name = `${this.props.event.trigger}-${this.getSubtype(this.props.event.message)}`;\r\n        this.setState(spotlightAnimations[name].reduce((lastValid: SpotlightAnimationState, anim: SpotlightAnimationState) => {\r\n          if (this.currentTime >= anim.start)\r\n            return anim;\r\n          else\r\n            return lastValid;\r\n        }, spotlightAnimations[name][0]));\r\n\r\n      }\r\n      this.tickHandle = window.requestAnimationFrame(this.tick);\r\n    }\r\n    getSubtype(msg: string): BeanDeathCause|undefined{\r\n        return msg.includes('vaporiz') ? 'vaporization' : msg.includes('exposure') ? 'exposure' : msg.includes('sickness') ? 'sickness' : 'starvation';\r\n    }\r\n    render(){\r\n        let t: React.CSSProperties|undefined;\r\n        if (this.props.event.point)\r\n          t = transformPoint(this.props.event?.point);\r\n\r\n        const classes = [this.props.bean.job, this.props.bean.ethnicity, this.state.name, this.state.beanClasses].join(' ');\r\n        return <div className=\"spotlight\" style={t}>\r\n        <div className=\"bean-parent\">\r\n          <span className={classes+\" bean\"}>\r\n            <span className=\"bean-face\">\r\n            {this.state.faceOV || this.props.bean.getFace()}\r\n            </span>\r\n          </span>\r\n          {\r\n              this.state.particles.map((x, i) => <Particles key={i}\r\n                className={this.state.name+' '+x.className} delay={x.delay} particleCount={30}\r\n              ></Particles>)\r\n          }\r\n        </div>\r\n        <div className=\"label\">\r\n          {this.props.event.message.replace('A subject', this.props.bean.name)}\r\n        </div>\r\n        {\r\n          (\r\n            this.props.event.trigger === 'death' ? \r\n            <div className=\"card-parent\">\r\n              <button className=\"card button\" disabled>\r\n                Prevent Death<br/>-4 🤖\r\n              </button>\r\n            </div> : null\r\n          )\r\n        }\r\n      </div>\r\n    }\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { origin_point, Point, transformPoint } from \"../simulation/Geography\";\r\nimport { GoodIcon } from \"../World\";\r\n\r\ninterface AnimatedBeanP {\r\n  bean: Bean;\r\n  selected?: boolean;\r\n  sitStill?: boolean;\r\n  onClick: () => void;\r\n  static?: boolean;\r\n}\r\n\r\ninterface AnimatedBeanS{\r\n  paused: boolean,\r\n  spin: boolean;\r\n  face: string;\r\n  good?: string;\r\n  speech?: string;\r\n}\r\n\r\nfunction BeanIsBuying(bean: Bean){\r\n  return bean.state.data.act == 'buy' && bean.state.data.good != 'shelter';\r\n}\r\n\r\nexport class AnimatedBean extends React.Component<AnimatedBeanP, AnimatedBeanS> {\r\n    constructor(props: AnimatedBeanP) {\r\n      super(props);\r\n      this.delaySeedSec = (Math.random() * 60) + this.props.bean.key;\r\n      this.state = {\r\n        paused: false,\r\n        spin: false,\r\n        face: props.bean.getFace(),\r\n      };\r\n      props.bean.onAct.subscribe(this.animate);\r\n    }\r\n    animate = (deltaMS: number) => {\r\n      this.setState({\r\n        spin: this.props.bean.state.data.act == 'work',\r\n        face: this.props.bean.getFace(),\r\n        good: BeanIsBuying(this.props.bean) ? GoodIcon[this.props.bean.state.data.good || 'food'] : undefined,\r\n        speech: this.props.bean.getSpeech()\r\n      })\r\n    }\r\n    delaySeedSec: number;\r\n    getPurchase(){\r\n      if (this.state.good){\r\n        return <span className=\"purchase\">\r\n          <span className=\"money\">💸</span>\r\n          <span className=\"purchase-good\">{this.state.good}</span>\r\n        </span>\r\n      }\r\n    }\r\n    getSpeech(){\r\n      if (this.state.speech){\r\n        return <span className=\"speech\">\r\n          <span className=\"\">{this.state.speech}</span>\r\n        </span>\r\n      }\r\n    }\r\n    render() {\r\n      let classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n      classes += this.state.paused || !this.props.bean.alive ? ' paused' : '';\r\n      if (this.props.sitStill){\r\n\r\n      } else {\r\n        classes += ' bean-walker';\r\n        if (this.state.spin)\r\n          classes += ' spin';\r\n        if (this.props.selected)\r\n          classes += ' selected';\r\n        if (this.props.bean.state.data.act != 'travel')\r\n          classes += ' paused';\r\n      }\r\n\r\n      let style = {\r\n        animationDelay: '-'+this.delaySeedSec+'s'\r\n      };\r\n      style.animationDelay = '';\r\n      let title = '';\r\n      return (\r\n        <span className={classes+\" bean interactable\"}\r\n          style={style} title={title}\r\n          onClick={(e) => {e.stopPropagation(); this.props.onClick(); }}\r\n        >\r\n          {this.state.face} {this.getPurchase()} {this.getSpeech()}\r\n        </span>\r\n      )\r\n    }\r\n  }","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { SfxContext } from \"../App\";\r\nimport { UFO, City, Pickup } from \"../simulation/City\";\r\nimport { transformPoint, hex_to_pixel } from \"../simulation/Geography\";\r\nimport { EmoteIcon } from \"../World\";\r\n\r\nexport const AnimatedPickup: React.FC<{\r\n    pickup: Pickup,\r\n    //city: City\r\n}> = (props) => {\r\n    const [played, setPlayed] = useState(false);\r\n    const sfx = React.useContext(SfxContext);\r\n    useEffect(() => {\r\n        if (!played && sfx){\r\n            sfx.play('drop');\r\n            setPlayed(true);\r\n        }\r\n    })\r\n    return <span className=\"pickup bob\">\r\n        {EmoteIcon[props.pickup.type]}\r\n    </span>\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { LiveList, PubSub } from \"../events/Events\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { Pickup } from \"../simulation/City\";\r\nimport { Point } from \"../simulation/Geography\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport { AnimatedPickup } from \"./AnimatedPickup\";\r\n\r\nexport const Mover: React.FC<{\r\n    onMove: PubSub<Point>,\r\n    startPoint: Point\r\n}> = (props) => {\r\n    const el = useRef<HTMLDivElement|null>(null);\r\n    const onMove = (p: Point) => {\r\n        if (el.current && p)\r\n            el.current.style.transform = `translate(${p.x}px, ${p.y}px)`;\r\n    }\r\n    useEffect(() => {\r\n        props.onMove.subscribe(onMove);\r\n        onMove(props.startPoint);\r\n        return () => props.onMove.unsubscribe(onMove)\r\n    }, []);\r\n    return <div ref={el}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport const PickupList: React.FC<{\r\n    pickups: LiveList<Pickup>\r\n}> = (props) => {\r\n    const [list, setList] = useState(props.pickups.get);\r\n    const onChange = (l: Pickup[]) => {\r\n        setList(l);\r\n    }\r\n    useEffect(() => {\r\n        props.pickups.onChange.subscribe(onChange)\r\n        return () => props.pickups.onChange.unsubscribe(onChange)\r\n    }, []);\r\n    return <>\r\n        {\r\n            list.map((p: Pickup) => {\r\n                return <Mover onMove={p.onMove} key={p.key} startPoint={p.point}>\r\n                    <AnimatedPickup pickup={p}></AnimatedPickup>\r\n                </Mover>\r\n            })\r\n        }\r\n    </>;\r\n}\r\n\r\nexport const BeanList: React.FC<{\r\n    beans: LiveList<Bean>,\r\n    activeBeanID: number|null;\r\n    onBeanClick: (b: Bean) => void;\r\n}> = (props) => {\r\n    const [list, setList] = useState(props.beans.get);\r\n    const onChange = (l: Bean[]) => {\r\n        setList(l);\r\n    }\r\n    useEffect(() => {\r\n        props.beans.onChange.subscribe(onChange)\r\n        return () => props.beans.onChange.unsubscribe(onChange)\r\n    }, []);\r\n    return <>\r\n        {\r\n            list.map((bean: Bean) => {\r\n                return <Mover onMove={bean.onMove} key={bean.key} startPoint={bean.point}>\r\n                    <AnimatedBean bean={bean} selected={bean.key === props.activeBeanID} onClick={() => props.onBeanClick(bean)}></AnimatedBean>\r\n                </Mover>\r\n            })\r\n        }\r\n    </>;\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { LiveMap } from \"../events/Events\";\r\nimport { City } from \"../simulation/City\";\r\nimport { CityBook, IBuilding } from \"../simulation/Geography\";\r\nimport { PetriBuilding } from \"./Building\";\r\n\r\n\r\nexport const PetriBuildings: React.FC<{\r\n    city: City\r\n}> = (props) => {\r\n    const [buildings, setBuildings] = useState<IBuilding[]>(props.city.book.getBuildings());\r\n    const getBuildings = () => {\r\n        setBuildings(props.city.book.getBuildings())\r\n    }\r\n    useEffect(() => {\r\n        props.city.book.db.onChange.subscribe(getBuildings);\r\n        return () => props.city.book.db.onChange.unsubscribe(getBuildings);\r\n    });\r\n    return <>\r\n        {\r\n            buildings.map((x) => <PetriBuilding city={props.city} key={x.key} building={x}></PetriBuilding>)\r\n        }\r\n    </>\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Live } from \"../events/Events\";\r\nimport { HexPoint, Point } from \"../simulation/Geography\";\r\n\r\n\r\nexport const Magnet: React.FC<{\r\n    pickupMagnetPoint: Live<Point|undefined>\r\n}> = (props) => {\r\n    const el = useRef<HTMLDivElement|null>(null);\r\n    const [point, setPoint] = useState(props.pickupMagnetPoint.get);\r\n    const updatePoint = (p: Point|undefined) => {\r\n        setPoint(p);\r\n        if (el.current && p)\r\n            el.current.style.transform = `translate(${p.x}px, ${p.y}px)`;\r\n    }\r\n    useEffect(() => {\r\n        props.pickupMagnetPoint.onChange.subscribe(updatePoint);\r\n        updatePoint(props.pickupMagnetPoint.get);\r\n        return () => props.pickupMagnetPoint.onChange.unsubscribe(updatePoint)\r\n    });\r\n\r\n    if (point){\r\n        return <div className=\"magnet\" ref={el}>🧲</div>\r\n    } else {\r\n        return null;\r\n    }\r\n}","import { Tile } from \"../World\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport React from \"react\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, hex_to_pixel, MatterTypes, PolarPoint, polarToPoint, transformPoint, HexPoint, Point } from \"../simulation/Geography\";\r\nimport { PetriBuilding } from \"./Building\";\r\nimport { PI2 } from \"../WorldGen\";\r\nimport { City, Pickup, UFO } from \"../simulation/City\";\r\nimport { AnimatedUFO } from \"./AnimatedUFO\";\r\nimport { IEvent } from \"../events/Events\";\r\nimport { AnimatedSpotlight } from \"./AnimatedSpotlight\";\r\nimport { BeanList, PickupList } from \"./Mover\";\r\nimport { PetriBuildings } from \"./Buildings\";\r\nimport { Magnet } from \"./Magnet\";\r\n\r\n\r\ninterface WorldTilePs {\r\n  tile: Tile;\r\n  city: City;\r\n  activeBeanID: number | null;\r\n  costOfLiving: number;\r\n  spotlightEvent: IEvent | undefined;\r\n  onClick: () => void;\r\n  onBeanClick: (b: Bean) => void;\r\n  onHexClick: (hex: HexPoint) => void;\r\n}\r\nexport class WorldTile extends React.Component<WorldTilePs> {\r\n  constructor(props: WorldTilePs) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    const mtnRadius = 530;\r\n    const worldR = 550;\r\n    for (let i = 0; i < 360 / 5; i++) {\r\n      const az = i * 5 * Math.PI / 180;\r\n      const pt = polarToPoint({ r: mtnRadius, az: az });\r\n      pt.x += worldR; pt.y += worldR;\r\n      this.mtn_transforms.push(transformPoint(pt));\r\n    }\r\n  }\r\n  mtn_transforms: { transform: string }[] = [];\r\n  renderSpotlight(): JSX.Element | null {\r\n    if (this.props.spotlightEvent) {\r\n      const bean = this.props.city.historicalBeans.get.find((x) => x.key === this.props.spotlightEvent?.beanKey);\r\n      if (this.props.spotlightEvent.point && bean) {\r\n        return <AnimatedSpotlight event={this.props.spotlightEvent} bean={bean}></AnimatedSpotlight>\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  renderHexes(){\r\n    return this.props.city.hexes.map((hex, i) => {\r\n      const xy = hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, hex);\r\n      return <div className=\"hex\" key={i} style={transformPoint(xy)} \r\n        onMouseEnter={(e) => { this.props.city.pickupMagnetPoint.set(xy); }}\r\n        onClick={(e) => { this.props.onHexClick(hex); e.stopPropagation(); return false; }}>\r\n        {/* todo: move renderbuildings to here */}\r\n      </div>\r\n    });\r\n  }\r\n  render() {\r\n    const deaths = this.props.city.historicalBeans.get.filter((x) => !x.alive).map((b: Bean, i) => {\r\n      return (\r\n        <span key={i} className=\"dead\" style={{ left: (i * 10) + 'px' }}>⚰️</span>\r\n      )\r\n    });\r\n    const ufos = this.props.city.ufos.map((u: UFO, i: number) => {\r\n      return <AnimatedUFO ufo={u} key={u.key} city={this.props.city}></AnimatedUFO>\r\n    });\r\n    const mtns = this.mtn_transforms.map((x, i) => {\r\n      return <span key={i} style={x} className=\"mtn\">⛰️</span>\r\n    });\r\n    return (\r\n      <div className=\"tile\" onClick={() => this.props.onClick()} onMouseLeave={() => {this.props.city.pickupMagnetPoint.set(undefined);}}>\r\n        <svg style={{ width: '100%', height: '100%' }} className=\"petri-base\">\r\n          <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 1)\" />\r\n        </svg>\r\n        {this.renderHexes()}\r\n        {mtns}\r\n        {/* {deaths} */}\r\n        <PetriBuildings city={this.props.city}></PetriBuildings>\r\n        <PickupList pickups={this.props.city.pickups}></PickupList>\r\n        <BeanList beans={this.props.city.beans} activeBeanID={this.props.activeBeanID} onBeanClick={(b: Bean) => this.props.onBeanClick(b)}></BeanList>\r\n        {ufos}\r\n        <Magnet pickupMagnetPoint={this.props.city.pickupMagnetPoint}></Magnet>\r\n        <svg style={{ width: '100%', height: '100%' }} className=\"petri-lid\">\r\n          <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 0.2)\" />\r\n        </svg>\r\n        {this.renderSpotlight()}\r\n      </div>\r\n    )\r\n  }\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { World, TraitJob } from \"../World\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { Listing } from \"../simulation/Economy\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport class EconomyReport extends React.Component<{world: World}, {paused: boolean}> {\r\n    constructor(props: {world: World}) {\r\n      super(props);\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    render() {\r\n      const beans = this.props.world.beans.get;\r\n      const food_median = median(beans.map(x => x.discrete_food));\r\n      const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n      const shelter_median = median(beans.map(x => x.discrete_stamina)).toFixed(1);\r\n      const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n      const wealth_avg = wealth_total / (beans.length || 1);\r\n      const wealth_median = median(beans.map(x => x.cash));\r\n      const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n      const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n      const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n      const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n      const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n      const jobs = beans.reduce((obj, b) => {\r\n        obj[b.job] = (obj[b.job] || 0)+1;\r\n        return obj;\r\n      }, {} as {[key in TraitJob]: number});\r\n      const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n      function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: Listing){\r\n        obj.supply += l.quantity;\r\n        obj.price += l.price;\r\n        obj.count++;\r\n        obj.avg = obj.price / obj.count;\r\n        return obj;\r\n      }\r\n      const food = this.props.world.economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const meds = this.props.world.economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const houses = this.props.world.economy.market.listings['shelter'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      return (\r\n        <div>\r\n          <div className=\"pad-4p\">\r\n            <h2>State of the Utopia</h2>\r\n          </div>\r\n          {/* <div className=\"pad-4p\">\r\n            <h3>Subject's Health</h3>\r\n          </div> */}\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🍞 Food Security</strong>\r\n              <NeedReadout beans={this.props.world.beans.get} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {food_median.toFixed(1)} 🍞</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {food.supply} 🍞 @ ${food.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledMonthlyDemand.food} 🍞\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div>\r\n              <strong>🩺 Healthcare</strong>\r\n              <NeedReadout beans={this.props.world.beans.get} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {health_median} 🩺</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {meds.supply} 🩺 @ ${meds.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledMonthlyDemand.medicine} 🩺\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🏡 Housing</strong> <br/>\r\n              <NeedReadout beans={this.props.world.beans.get} need={(b) => b.stamina} dire=\"homeless\" abundant=\"rested\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {shelter_median} 🏡</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {houses.supply} 🏡 @ ${houses.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledMonthlyDemand.shelter} 🏡\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"pad-4p\">\r\n            <h3>Economic Health</h3>\r\n          </div> */}\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>💰 Wealth</strong> <br/>\r\n              {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${this.props.world.economy.getCostOfLiving().toFixed(2)} <br/>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Total ${wealth_total.toFixed(2)}</td>\r\n                    <td className=\"text-center\">\r\n                      Median: ${wealth_median.toFixed(2)} \r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Avg: ${wealth_avg.toFixed(2)}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              Top {wealthy_percentage.toFixed(1)}% of subjects own {wealthy_ownership.toFixed(1)}% of the wealth\r\n            </div>\r\n            <span>\r\n              <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n              <ul className=\"boxes\">\r\n                <li>{jobs.farmer || 0} farmers</li>\r\n                <li>{jobs.builder || 0} builders</li>\r\n                <li>{jobs.doc || 0} doctors</li>\r\n                <li>{jobs.entertainer || 0} entertainers</li>\r\n              </ul>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\n\r\nexport interface EventsPanelPS\r\n{\r\n    events: IEvent[],\r\n    selectBean: (beanKey?: number) => void\r\n}\r\nfunction shouldEventJumpToBean(e: IEvent): boolean{\r\n    return e.beanKey != null && (\r\n        e.trigger === 'speechcrime' ||\r\n        e.trigger === 'birth');\r\n}\r\n\r\nexport class EventsPanel extends React.Component<EventsPanelPS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let events = this.props.events.map((e, i) => {\r\n            const alert = e.icon === '🚨';\r\n            const slot = e.trigger === 'nojobslots';\r\n            return <div key={i} className={alert||slot ? 'tall': ''}>\r\n                <span className={alert ? 'police-siren': ''}>{e.icon}</span>&nbsp;\r\n                {\r\n                    shouldEventJumpToBean(e) ? <a onClick={() => this.props.selectBean(e.beanKey)} href=\"javascript:void(0)\">{e.message}</a> : <span>{e.message}</span>\r\n                }\r\n            </div>\r\n        });\r\n        if (this.props.events.length === 0){\r\n            events = [<div key={0}>\r\n                <small>No events yet</small>\r\n            </div>]\r\n        }\r\n        return (                \r\n        <div className=\"events-panel\">\r\n            <div>\r\n                <b>Events</b>\r\n            </div>\r\n            {events}\r\n        </div>\r\n        )\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NarrativeBeliefData, PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { Trait, TraitIcon } from \"../World\";\r\n\r\nexport class CardButton extends React.Component<{\r\n    icon: string,\r\n    name: string,\r\n    onClick?: () => void,\r\n    title?: string,\r\n    subtext?: string,\r\n    thin?: boolean,\r\n    singleLine?: boolean,\r\n    disabled?: boolean\r\n}>{\r\n    render(){\r\n        let classes = \"card button\";\r\n        if (this.props.thin) classes += ' thin';\r\n        if (this.props.singleLine) classes += ' single';\r\n        return <button className={classes} title={this.props.title} onClick={() => {\r\n            if (this.props.onClick) this.props.onClick()\r\n        }} type=\"button\" disabled={this.props.disabled}>\r\n            {this.props.icon} {this.props.name}\r\n            {\r\n                (this.props.subtext != null) ? <small>{this.props.subtext}</small> : null\r\n            }\r\n        </button>\r\n    }\r\n}\r\n\r\nexport function TraitToCard(bean: Bean, trait: Trait, onClick?: () => void){\r\n    switch(trait){\r\n        case 'trad':\r\n        case 'prog':\r\n        case 'ego':\r\n        case 'state':\r\n            return <CardButton icon={TraitIcon[trait]} title={PrimaryBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'fresh':\r\n        case 'sick':\r\n        case 'hungry':\r\n        case 'starving':\r\n        case 'stuffed':\r\n        case 'homeless':\r\n        case 'rested':\r\n        case 'circle':\r\n        case 'square':\r\n        case 'triangle':\r\n        case 'sane':\r\n        case 'disturbed':\r\n        case 'stressed':\r\n            return <CardButton icon={TraitIcon[trait]} title={keyToName[trait]} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'noFaith':\r\n        case 'rocket':\r\n        case 'dragon':\r\n        case 'music':\r\n            return <CardButton icon={TraitIcon[trait]} title={NarrativeBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        default:\r\n            return null;\r\n    }\r\n} ","import React from \"react\";\r\nimport { PlayerResources, triadToString } from \"../Game\";\r\n\r\nexport class CostSmall extends React.Component<{\r\n    cost: PlayerResources,\r\n    rider?: string,\r\n    qty?: number\r\n}>{\r\n\r\n    render(){\r\n        return <small>\r\n            {triadToString(this.props.cost, '-', this.props.qty)} {this.props.rider}\r\n        </small>\r\n    }\r\n}","import React from \"react\";\r\nimport { EmoteIcon, IHappinessModifier, TraitIcon } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Economy } from \"../simulation/Economy\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { IEvent, EventBus } from \"../events/Events\";\r\nimport { withinLastYear } from \"../simulation/Time\";\r\nimport { Government } from \"../simulation/Government\";\r\nimport { Player } from \"../simulation/Player\";\r\nimport { CardButton, TraitToCard } from \"../widgets/CardButton\";\r\n\r\nimport './BeanPanel.css';\r\nimport { Act, ActivityIcon, GetPriorities } from \"../simulation/Agent\";\r\nimport { IsBeliefDivergent, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\n\r\ninterface BeanPanelP{\r\n    city: City,\r\n    bean: Bean,\r\n    economy: Economy,\r\n    law: Government,\r\n    party: Party,\r\n    alien: Player,\r\n    clearCity: () => void;\r\n    bus: EventBus\r\n    scan: (bean: Bean) => boolean;\r\n    vaporize: (bean: Bean) => void;\r\n    abduct: (bean: Bean) => void;\r\n    brainwash: () => void;\r\n    gift: () => void;\r\n}\r\n\r\ninterface BeanPanelS{\r\n    faceOverride?: string;\r\n    innerView: 'priorities'|'feelings'|'beliefs';\r\n}\r\n\r\nexport class BeanPanel extends React.Component<BeanPanelP, BeanPanelS> {\r\n    constructor(props: BeanPanelP) {\r\n        super(props);\r\n        this.state = {\r\n            innerView: 'beliefs'\r\n        }\r\n    }\r\n    scan = () => {\r\n        if (this.props.scan(this.props.bean)){\r\n            this.setState({faceOverride: '🤨'});\r\n            this._resetFace();\r\n        }\r\n    }\r\n    vaporize = () => {\r\n        this.props.vaporize(this.props.bean);\r\n        this.setState({faceOverride: '💀'});\r\n        this._resetFace();\r\n    }\r\n    support = () => {\r\n        this.setState({faceOverride: '🤩'});\r\n        this._resetFace();\r\n    }\r\n    abduct = () => {\r\n        this.props.abduct(this.props.bean);\r\n        this.setState({faceOverride: '😨'});\r\n        this._resetFace();\r\n    }\r\n    _resetFace(){\r\n        setTimeout(() => {\r\n            this.setState({faceOverride: undefined})\r\n        }, 5000);\r\n    }\r\n    happyTable(mods: IHappinessModifier[]){\r\n        return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{x.reason}</td>\r\n                <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n            </tr>\r\n        });\r\n    }\r\n    hedonTable(){\r\n        return Object.keys(this.props.bean.happiness.all).filter(\r\n            (k) => k != this.props.bean.happiness.maxSource && k != this.props.bean.happiness.minSource\r\n            ).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{this.props.bean.happiness.all[x]} {this.props.bean.happiness.all[x] >= 0 ? EmoteIcon['happiness'] : EmoteIcon['unhappiness']} from </td>\r\n                <td className=\"small\">{x}</td>\r\n            </tr>\r\n        });\r\n    }\r\n    renderInner(){\r\n        if (!this.scanned){\r\n            return <div className=\"width-100p text-center\">\r\n                <small>\r\n                    Subject needs a Scan to reveal their thoughts\r\n                </small>\r\n            </div>\r\n        }\r\n        switch(this.state.innerView){\r\n            case 'beliefs':\r\n                return this.scanned ? this.beliefTable(this.props.bean.beliefs) : null\r\n            case 'feelings':\r\n                return <table className=\"width-100p\"><tbody>\r\n                    {\r\n                        this.props.bean.happiness.maxSource.length > 0 ?  <tr>\r\n                            <td colSpan={2}>\r\n                                {this.props.bean.happiness.all[this.props.bean.happiness.maxSource]} {EmoteIcon['happiness']} from {this.props.bean.happiness.maxSource}\r\n                            </td>\r\n                        </tr> : null\r\n                    }\r\n                    {\r\n                        this.props.bean.happiness.minSource.length > 0 ?  \r\n                        <tr>\r\n                            <td colSpan={2}>\r\n                                {this.props.bean.happiness.all[this.props.bean.happiness.minSource]} {EmoteIcon['unhappiness']} from {this.props.bean.happiness.minSource}\r\n                            </td>\r\n                        </tr> : null\r\n                    }\r\n                    {this.scanned ? this.hedonTable() : null}\r\n                    </tbody>\r\n                </table>\r\n            case 'priorities':\r\n                return <table className=\"width-100p\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                Currently {this.props.bean.state.display}\r\n                            </td>\r\n                        </tr>\r\n                        {\r\n                            GetPriorities(this.props.bean, this.props.alien.difficulty).values.map((x) => {\r\n                                return <tr key={`p-${x.value.act}-${x.value.good}`}>\r\n                                    <td>\r\n                                    {x.priority.toFixed(1)} {ActivityIcon(x.value)}\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                        {\r\n                            this.actDurations().filter((x) => this.props.bean.activity_duration[x] > 0).map((x) => {\r\n                                const act = x as Act;\r\n                                return <tr key={act}>\r\n                                    <td>{x}</td>\r\n                                    <td>\r\n                                        {\r\n                                            (this.props.bean.activity_duration[act] / 1000).toFixed(1)\r\n                                        }s\r\n                                    </td>\r\n                                </tr>\r\n                                \r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n        }\r\n    }\r\n    actDurations(){\r\n        const acts = Object.keys(this.props.bean.activity_duration).map((x) => x as Act);\r\n        acts.sort((a, b) => this.props.bean.activity_duration[b] - this.props.bean.activity_duration[a]);\r\n        return acts;\r\n    }\r\n    beliefTable(beliefs: TraitBelief[]): React.ReactNode {\r\n        return beliefs.map((b, i) => {\r\n            const divergent = IsBeliefDivergent(b, this.props.party.ideals, this.props.party.community);\r\n            return <table className=\"width-100p\" key={b+i}><tbody><tr>\r\n            <th className={divergent ? 'divergent text-left': \"text-left\"}>\r\n                {SecondaryBeliefData[b].icon} {SecondaryBeliefData[b].adj}\r\n            </th>\r\n            <td className=\"text-right\">\r\n                {(SecondaryBeliefData[b].idealPro || []).map(y => <span key={y}>+{TraitIcon[y]}</span>)}\r\n                {(SecondaryBeliefData[b].idealCon || []).map(y => <span key={y}>-{TraitIcon[y]}</span>)}\r\n            </td>\r\n        </tr><tr><td className=\"small text-center\" colSpan={2}>{\r\n            SecondaryBeliefData[b].description ? SecondaryBeliefData[b].description?.split(';').map((x, i) => <span key={i}>{x}</span>) : null\r\n        }</td></tr></tbody></table>});\r\n    }\r\n    get scanned(){\r\n        return this.props.alien.scanned_bean[this.props.bean.key];\r\n    }\r\n    renderTraits(){\r\n        if (this.scanned){\r\n            const brainwash = this.props.brainwash.bind(this);\r\n            return <div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ethnicity, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.faith, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ideals, brainwash)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.community, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.food, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.stamina, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.health, undefined)}\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className=\"card-parent\">\r\n                <CardButton icon=\"🛰️\" name=\"Scan\" subtext=\"-Energy +Info\" onClick={this.scan} disabled={!this.props.alien.canAfford(this.props.alien.difficulty.cost.bean.scan)}></CardButton>\r\n            </div>\r\n        }\r\n    }\r\n    render(){\r\n        const classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n        return (                \r\n        <div className=\"vertical bean-panel\">\r\n            <div className=\"bean-panel-header\">\r\n                <div>\r\n                    <b>{this.props.bean.name}&nbsp;\r\n                    <small>\r\n                        of {this.props.city.name}\r\n                    </small>\r\n                    </b>\r\n                    <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n                </div>\r\n                <div className=\"bean-view\">                \r\n                    <span className={classes+\" bean\"}>\r\n                        {\r\n                            this.state.faceOverride === undefined ? this.props.bean.getFace() : this.state.faceOverride\r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <span className=\"text-center\">\r\n                        💰 ${this.props.bean.cash.toFixed(2)}\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        🙂 {Math.round(this.props.bean.lastHappiness)}%\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        {Math.round(this.props.bean.happiness.flatAverage)} {EmoteIcon['happiness']} /day\r\n                    </span>\r\n                </div>\r\n                {this.renderTraits()}\r\n            </div>\r\n            <div className=\"grow-1 pad-4\">\r\n                <div className=\"cylinder blue-orange horizontal\">\r\n                    <button type=\"button\" className={this.state.innerView=='beliefs'?'active':''} onClick={()=>this.setState({innerView:'beliefs'})}>\r\n                        😇 Traits\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='feelings'?'active':''} onClick={()=>this.setState({innerView:'feelings'})}>\r\n                        😐 Feelings\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='priorities'?'active':''} onClick={()=>this.setState({innerView:'priorities'})}>\r\n                        💪 Priorities\r\n                    </button>\r\n                </div>\r\n                {this.renderInner()}\r\n            </div>\r\n            <div className=\"bean-action-card-parent\">\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={() => this.props.brainwash()}\r\n                        title=\"Rewrite one of this being's traits\"\r\n                    >😵 Brainwash\r\n                        <small>-Sanity +-Trait</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\"  onClick={() => this.props.brainwash()}  disabled={true}\r\n                        title=\"Give this being food or meds or cash\">\r\n                        🎁 Gift\r\n                        <small>-Energy +Things</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={this.scan} disabled={true}\r\n                        title=\"Steal a bit of this being's mind\">\r\n                        🤪 Braindrain\r\n                        <small>-Energy -Sanity</small>\r\n                    </button>\r\n                    <button type=\"button\" className=\"button card\" onClick={this.vaporize}\r\n                        disabled={!this.props.alien.canAfford(this.props.alien.difficulty.cost.bean.vaporize)}\r\n                        title=\"Delete this being from the experiment\"\r\n                    >\r\n                        ☠️ Vaporize\r\n                        <CostSmall cost={this.props.alien.difficulty.cost.bean.vaporize}></CostSmall>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\"\r\n                        disabled={!this.props.alien.canAfford(this.props.alien.difficulty.cost.bean.abduct)}\r\n                        onClick={() => this.abduct()}\r\n                        title=\"Remove this being for study\"\r\n                    >\r\n                        👾 Abduct for Research\r\n                        <CostSmall cost={this.props.alien.difficulty.cost.bean.abduct} rider=\"+Tech\"></CostSmall>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { City } from \"../simulation/City\";\r\n\r\nexport interface FoundPartyPS\r\n{\r\n    cities: City[],\r\n    onFound: (state: FoundPartyS) => void\r\n}\r\nexport interface FoundPartyS\r\n{\r\n    community: TraitCommunity|null\r\n    ideal: TraitIdeals|null,\r\n    name: string,\r\n    slogan: string,\r\n    members: string,\r\n    goal: string,\r\n    cityKey: number\r\n}\r\n\r\nexport class FoundParty extends React.Component<FoundPartyPS, FoundPartyS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            community: null,\r\n            ideal: null,\r\n            name: \"Goodplace\",\r\n            slogan: \"Perfection is achievable.\",\r\n            members: \"Citizens\",\r\n            goal: \"Legislation\",\r\n            cityKey: 0\r\n        }\r\n    }\r\n    onCommunity(val: TraitCommunity){\r\n        this.setState({community: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onIdeal(val: TraitIdeals){\r\n        this.setState({ideal: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onBigFourChange(){\r\n        if (this.state.community === 'ego' && this.state.ideal === 'trad'){\r\n            this.setState({\r\n                name: 'Arcadia',\r\n                slogan: \"A man belongs on the farm.\",\r\n                members: \"Farmers\", goal: \"Tariffs\"});\r\n        } else if (this.state.community === 'ego' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Libertaria\",\r\n                slogan: \"Freedom for every being!\",\r\n                members: \"Builders\", goal: \"Right to Strike\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'trad') {\r\n            this.setState({\r\n                name: \"Ultimate Kingdom\",\r\n                slogan: \"Honor to King and family.\",\r\n                members: \"Homeowners\", goal: \"Repeal Property Tax\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Equus\",\r\n                slogan: \"True equality is peace.\",\r\n                members: \"Penniless\", goal: \"Food Welfare\"});\r\n        }\r\n    }\r\n    onName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({name: e.target.value});\r\n    }\r\n    onSlogan = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({slogan: e.target.value});\r\n    }\r\n    onCity = (key: any) => {\r\n        this.setState({cityKey: +key});\r\n    }\r\n    render(){\r\n        return <div>\r\n          <div className=\"pad-4p\">\r\n            <h2>Found your Utopia</h2>\r\n          </div>    \r\n          <div className=\"col-2\">\r\n            <div>\r\n              Perfect societies rely on the\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"state\" checked={this.state.community === 'state'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)} /> <b>Collective</b> 🕊️ {/* 🐘 🤝*/}\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"ego\" checked={this.state.community === 'ego'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)}/> <b>Independent</b> 🦅 {/*✌️*/}\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              to guarantee well-being.\r\n            </div>\r\n            <div>\r\n              Perfect beings devote themselves to\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"trad\" checked={this.state.ideal === 'trad'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)}/> <b>Elitist</b> {/*🕯️ 🔮*/} 👑\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"prog\" checked={this.state.ideal === 'prog'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)} /> <b>Progressive</b> {/*💡 🔬 🎓*/} ⚖️\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              social values.\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My Utopia is named <input type=\"text\" value={this.state.name} onChange={this.onName} />\r\n            </div>\r\n            <div>\r\n              My Utopia's mantra is <input type=\"text\" value={this.state.slogan} onChange={this.onSlogan}  />\r\n            </div>\r\n          </div>\r\n          <hr/>\r\n          <button type=\"button\" disabled={this.state.community == null || this.state.ideal == null} className=\"important btn-found-party\" onClick={() => this.props.onFound(this.state)}>Found the {this.state.name} Utopia</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { TraitCommunity, TraitIcon, TraitIdeals } from \"../World\";\r\n\r\nexport function RenderIdealBadges(comm: Array<TraitCommunity|TraitIdeals>, effect: 'pos'|'neg'){\r\n    return comm.map((x) => RenderIdealBadge(x, effect));\r\n}\r\nexport function RenderIdealBadge(comm: TraitCommunity|TraitIdeals, effect: 'pos'|'neg'){\r\n    return RenderBadge(TraitIcon[comm], effect);\r\n}\r\nexport function RenderBadge(str: string, effect: 'pos'|'neg'){\r\n    const c = 'badge align-mid '+effect;\r\n    const output = `${effect === 'neg' ? '-': '+'}${str}`;\r\n    return <span className={c} key={output}>\r\n        {output}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { World, TraitIcon } from \"../World\";\r\nimport { IPolicy } from \"../simulation/Politics\";\r\nimport { PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { ILaw, ILawData, LawAxis, LawAxisData, LawData, LawGroup, LawKey } from \"../simulation/Government\";\r\nimport { RenderIdealBadges } from \"../widgets/UniversalWidgets\";\r\nimport { groupBy } from \"../simulation/Utils\";\r\n\r\nexport interface PartyOverviewPS{\r\n    world: World;\r\n    setPolicy(axis: LawAxis, policy: IPolicy): void;\r\n}\r\ninterface PartyOverviewS{\r\n    overView: 'laws'|'leadership'|'finances',\r\n    detailView: 'none'|'group_add'|'law_view',\r\n    detailGroup?: LawGroup,\r\n    detailLaw?: ILaw,\r\n    collapsedGroups: {[key in LawGroup]: boolean},\r\n    collapsedAxis: {[key in LawAxis]: boolean},\r\n}\r\n\r\nexport class PartyOverview extends React.Component<PartyOverviewPS, PartyOverviewS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            overView: 'laws',\r\n            detailView: 'none',\r\n            collapsedGroups: {\r\n                Crime: false,\r\n                Taxation: false,\r\n                Welfare: false,\r\n                Culture: false,\r\n                Economics: false,\r\n            },\r\n            collapsedAxis: {\r\n                'wel_food': false,'wel_house': false,'wel_health': false,'tax_basic': false,'tax_second': false,'econ_sub': false,'cul_rel': false,'cul_theo': false,'crime_theo': false\r\n            }\r\n        }\r\n    }\r\n    renderDetailLaw(law: LawKey, view: 'edit'|'add', partOfGroup: boolean = false){\r\n        const ldata = LawData[law];\r\n        const incompatibilities = Object.values(LawData).filter(\r\n            (x) => x.key != law && x.axis === ldata.axis\r\n        );\r\n        const rowClassName = view === 'add' ? 'border-b-1 pad-bt-8' : '';\r\n        return  <div key={law} className={rowClassName+(partOfGroup ? ' pad-l-40': '')}>\r\n        <div className=\"horizontal\">\r\n            <strong className=\"f-size-15em\">\r\n                {ldata.name}\r\n            </strong>\r\n            <span>\r\n                {RenderIdealBadges(ldata.idealPro || [], 'pos')}\r\n            </span>\r\n            {\r\n                view === 'add' ? \r\n                <button className=\"callout marg-0\">\r\n                    Adopt for 3 🗳️ \r\n                </button> : null\r\n            }\r\n        </div>\r\n        {\r\n            (partOfGroup ? null : <div>\r\n                <i>Government Policy for&nbsp;{LawAxisData[ldata.axis].name}\r\n                </i>\r\n            </div>)\r\n        }\r\n        <div>\r\n            <p>\r\n                {ldata.description}\r\n            </p>\r\n            {\r\n                view === 'edit' ? \r\n                <div className=\"horizontal\">\r\n                    <span>\r\n                        <strong>Subjects Fed:</strong> 1\r\n                    </span>\r\n                    <span>\r\n                        <strong>Last Monthly Cost:</strong> $1\r\n                    </span>\r\n                </div> : null\r\n            }\r\n            <div className=\"horizontal\">\r\n                <span>\r\n                    <strong>Max. Monthly Cost:</strong> <input type=\"number\" />\r\n                </span>\r\n            </div>\r\n            <strong>Incompatible with</strong>\r\n            {\r\n                incompatibilities.map((x, i) => <i key={x.name}>{i > 0 ? <span>,</span>: null} {x.name}</i>\r\n                )\r\n            }\r\n        </div>\r\n    </div>;\r\n    }\r\n    renderDetailGroup(group: LawGroup): JSX.Element[]{\r\n        const divs: JSX.Element[] = [];\r\n        groupBy(Object.values(LawData).filter(x => x.group === group), (y: ILawData) => {\r\n            return y.axis;\r\n        }).forEach((val) => {\r\n            const isGroup = (val.length > 1);\r\n            if (isGroup){\r\n                divs.push(<div>\r\n                    <h3>\r\n                        {LawAxisData[val[0].axis].name}\r\n                        <button className=\"callout marg-0 pull-r\" onClick={() => {\r\n                            this.state.collapsedAxis[val[0].axis] = !this.state.collapsedAxis[val[0].axis];\r\n                            this.setState({collapsedAxis: this.state.collapsedAxis});\r\n                        }}>📁</button>\r\n                    </h3>\r\n                </div>);\r\n            }\r\n            if (!isGroup || !this.state.collapsedAxis[val[0].axis]){\r\n                val.forEach((z) => {\r\n                    divs.push(this.renderDetailLaw(z.key, 'add', isGroup))\r\n                });\r\n            }\r\n        });\r\n        return divs;\r\n    }\r\n    toggleGroup(group: LawGroup){\r\n        this.state.collapsedGroups[group] = !this.state.collapsedGroups[group];\r\n        this.setState({collapsedGroups: this.state.collapsedGroups});\r\n    }\r\n    renderHeader(group: LawGroup){\r\n        return <tr>\r\n            <td>\r\n                <strong>{group}</strong>\r\n            </td>\r\n            <td>\r\n                <button className=\"callout marg-0\" onClick={() => this.setState({detailView: 'group_add', detailGroup: group})}>Add ➕</button>\r\n                <button className=\"callout marg-0\" onClick={() => this.toggleGroup(group)}>📁</button>\r\n            </td>\r\n        </tr>\r\n    }\r\n    renderRows(group: LawGroup, laws: ILaw[]): React.ReactNode{\r\n        if (this.state.collapsedGroups[group])\r\n            return null;\r\n        return laws.map((x) => {\r\n            const data = LawData[x.key];\r\n            return <tr key={x.key}>\r\n            <td>\r\n                <i>{data.name}</i> \r\n                {\r\n                    (data.idealPro || []).map((x) => TraitIcon[x])\r\n                }\r\n            </td>\r\n            <td>\r\n                <button onClick={() => this.setState({detailView: 'law_view', detailLaw: x})} className=\"callout marg-0\">View 🔍</button>\r\n            </td>\r\n        </tr>\r\n        });\r\n    }\r\n    render(){\r\n        return <div>\r\n            <div className=\"col-2\">\r\n                <h2 className=\"marg-b-0\">Utopia Government</h2>\r\n                <div>\r\n                    <div className=\"horizontal blue-orange cylinder f-size-125em marg-t-20\">\r\n                        <button type=\"button\" onClick={() => this.setState({overView: 'laws'})} className={this.state.overView === 'laws' ? 'active': ''}>\r\n                            📜 Laws\r\n                        </button>\r\n                        <button type=\"button\" onClick={() => this.setState({overView: 'leadership'})} className={this.state.overView === 'leadership' ? 'active': ''}>\r\n                            {this.props.world.party.leadership} 🗳️ Leadership\r\n                        </button>\r\n                        <button type=\"button\" onClick={() => this.setState({overView: 'finances'})} className={this.state.overView === 'finances' ? 'active': ''}>\r\n                            💰 Funding\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"pad-4p\">\r\n                {this.props.world.party.name} is a&nbsp;\r\n                {PrimaryBeliefData[this.props.world.party.community].adj} {PrimaryBeliefData[this.props.world.party.community].icon}&nbsp; \r\n                {PrimaryBeliefData[this.props.world.party.ideals].adj} {PrimaryBeliefData[this.props.world.party.ideals].icon}&nbsp;\r\n                Utopia\r\n            </div> */}\r\n            {this.renderOver()}\r\n        </div>\r\n    }\r\n    renderOver(): React.ReactNode {\r\n        switch(this.state.overView){\r\n            case 'leadership':\r\n                return this.renderLeadership();\r\n            case 'finances':\r\n                return this.renderFinances();\r\n            default:\r\n                return this.renderLaws();\r\n        }\r\n    }\r\n    renderLaws(){  \r\n        const groups = this.props.world.law.getLawsByGroup();\r\n        return <div className=\"col-2-30-60\">\r\n        <div className=\"max-h-365\">\r\n            <table className=\"full\">\r\n                <tbody>\r\n                    {this.renderHeader('Taxation')}\r\n                    {this.renderRows('Taxation', groups.Taxation)}\r\n                    {this.renderHeader('Welfare')}\r\n                    {this.renderRows('Welfare', groups.Welfare)}\r\n                    {this.renderHeader('Economics')}\r\n                    {this.renderRows('Economics', groups.Economics)}\r\n                    {this.renderHeader('Crime')}\r\n                    {this.renderRows('Crime', groups.Crime)}\r\n                    {this.renderHeader('Culture')}\r\n                    {this.renderRows('Culture', groups.Culture)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div className=\"border max-h-365\">\r\n            {this.renderLawDetail()}\r\n        </div>\r\n    </div>\r\n    }\r\n    renderLawDetail(){      \r\n        if (this.state.detailView === 'group_add' && this.state.detailGroup){\r\n            return this.renderDetailGroup(this.state.detailGroup);\r\n        } else if (this.state.detailView === 'law_view' && this.state.detailLaw){\r\n            return this.renderDetailLaw(this.state.detailLaw.key, 'edit')\r\n        }\r\n        return <div className=\"text-center\">\r\n            Add ➕ or View 🔍 a Law\r\n        </div>;\r\n\r\n    }\r\n    renderFinances(): React.ReactNode {\r\n        return <div>\r\n\r\n        </div>\r\n    }\r\n    renderLeadership(): React.ReactNode {\r\n        return <div>\r\n            \r\n        </div>\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { ChangePubSub, PubSub } from \"../events/Events\";\r\n\r\ninterface Bubble {string: string, id: number, className?: string};\r\n\r\nfunction useBubbles<T>(sub: PubSub<T>, transform: (input: T) => {string: string, className: string}){\r\n    const [bubbles, setBubbles] = useState<Bubble[]>([]);\r\n    let bubbleSeed = 0;\r\n    const onEvent = (event: T) => {\r\n        const id = ++bubbleSeed;\r\n        setBubbles(bubbles.concat([{\r\n            id: id,\r\n            ...transform(event)\r\n        }]));\r\n        setTimeout(() => {\r\n            setBubbles(\r\n                bubbles.filter((b) => b.id != id)\r\n            )\r\n        }, 1500)\r\n    }\r\n    useEffect(() => {\r\n        sub.subscribe(onEvent);\r\n        return () => sub.unsubscribe(onEvent);\r\n    });\r\n    return bubbles;\r\n}\r\n\r\nexport class BubbleNumberText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<Bubble>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n    bubbleSeed = 0;\r\n    onChange = (ev: {change: number}) => {\r\n        const id = ++this.bubbleSeed;\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                string: (positive ? '+': '') + ev.change,\r\n                id: id,\r\n                className: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.id != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.id} className={[b.className, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.string}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}\r\n\r\nexport const BubbleSeenTraitsText: React.FC<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent: PubSub<{k: string, v: boolean}>\r\n}> = (props) => {\r\n    const bubbles = useBubbles(props.changeEvent, (input: {k: string, v: boolean}) => {\r\n        return {\r\n            string: `Discovered ${input.k}!`,\r\n            className: 'seen-belief'\r\n        }\r\n    })\r\n    return <span className=\"bubble-parent\">\r\n        {props.children}\r\n        {bubbles.map((b) => <span key={b.id} className={[b.className, props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {props.icon} {b.string}\r\n        </span>)}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"../petri-ui/AnimatedBean\";\r\nimport \"./SocialGraph.css\";\r\nimport { origin_point } from \"../simulation/Geography\";\r\nimport { LiveList } from \"../events/Events\";\r\n\r\ninterface SocialGraphP{\r\n    beans: LiveList<Bean>;\r\n    costOfLiving: number;\r\n    onClick: (b: Bean) => void\r\n}\r\ninterface SocialGraphS{\r\n    \r\n}\r\nexport class SocialGraph extends React.Component<SocialGraphP, SocialGraphS>{\r\n    constructor(props: SocialGraphP){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return <div className=\"social-graph\">\r\n            {\r\n                this.props.beans.get.map((b) => \r\n                <div className=\"bean-node\" onClick={() => this.props.onClick(b)}>\r\n                    <AnimatedBean bean={b} static={true} sitStill={true} \r\n                        onClick={() => {this.props.onClick(b);}}>\r\n                    </AnimatedBean>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class CapsuleLabel extends React.Component<{\r\n    icon?: string,\r\n    label?: string\r\n}, {\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const classN = 'capsule-label '+this.props.label||'';\r\n        return <span className={classN}>\r\n            <span className=\"capsule-icon\">\r\n                {this.props.icon}\r\n            </span>\r\n            <span className=\"capsule-text\">\r\n                {this.props.label}:\r\n            </span>\r\n            <span className=\"capsule-value\">\r\n                {this.props.children}\r\n            </span>\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { DefaultDifficulty, triadToString } from \"../Game\";\r\nimport { Curriculums, GetAverage, Goals, IGoal, IPlayerData, IProgressable } from \"../simulation/Player\";\r\n\r\nexport interface GoalPanelPS\r\n{\r\n  player: IPlayerData;\r\n  progress: IProgressable;\r\n}\r\n\r\nexport class GoalsPanel extends React.Component<GoalPanelPS> {\r\n  renderReward(g: IGoal){\r\n    return <div>\r\n      <small>\r\n      🎁 {triadToString(g.reward || {}, '+')}\r\n      </small>\r\n    </div>\r\n  }\r\n  renderGoal(g: IGoal){\r\n    const done = this.props.progress.goalProgress[g.key] != null && this.props.progress.goalProgress[g.key].done;\r\n    return <li>\r\n      {done ? '☑️': '⭕️'}\r\n      {g.text}\r\n      {g.tooltip != null ? <small title={g.tooltip}>❔</small> : null}\r\n      {done || g.reward == null ? null : this.renderReward(g)}\r\n    </li>\r\n  }\r\n    render(){\r\n        return (<div className=\"goals\">\r\n        <div><b>Goals</b></div>\r\n        <ul>\r\n          {this.props.progress.goals.map((key) => {\r\n            return this.renderGoal(Goals[key]);\r\n          })}\r\n        </ul>\r\n        <div><b>Report Card</b></div>\r\n        <p className=\"horizontal\">\r\n          <span>\r\n            Last Grade: <b>D</b>\r\n          </span>\r\n          <span>\r\n            Next Grade in: <b>2 mo.</b>\r\n          </span>\r\n        </p>\r\n        <p>\r\n        </p>\r\n        <table style={{margin: 'auto'}}>\r\n          <tbody>\r\n            <tr>\r\n              <th>🎯 Happiness\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Happiness}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects happy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n                <small>\r\n              {Curriculums.Default.RubricDescription.Happiness}\r\n                </small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Prosperity</th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Prosperity}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects fed and healthy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Prosperity}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Stability\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Stability}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects sane and civil?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Stability}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Dogma\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Dogma}\r\n              </td>\r\n              <td>\r\n                <small title=\"Do your society's rules match your utopian ideals?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Dogma}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={3}>\r\n                <hr />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                Avg. Grade\r\n              </th>\r\n              <td>\r\n                {GetAverage(this.props.player.workingReportCard)}\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>)\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class CampaignsPanel extends React.Component<{\r\n\r\n}>{\r\n    render(){\r\n        return <div className=\"pad-4p\">\r\n        <div className=\"subheader\">\r\n            <h3>Propaganda</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >🎙️ Buy Propaganda</button>\r\n        </div>\r\n        <span>\r\n          Propaganda changes beans' feelings on a wide variety of topics.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              📺 Broadcast Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Small chance to increase Approval among all beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              👋 Canvassing\r\n            </span>\r\n            <small>Approval+ Labor-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on a few random beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🗞️ Print Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on wealthy beans\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <div className=\"subheader\">\r\n            <h3>Appearances</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >💬 Schedule Appearance</button>\r\n        </div>\r\n        <span>\r\n          Appearances have limited reach, but have powerful effects.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🤔 Debating\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Chance to gain or lose Influence\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            📸 Photo Op\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases Approval within one Social Group\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🎤 Speechmaking\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases chance of Donations in a single City\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🙋 Town Hall\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Suppresses negative Approval in a single city                     \r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* <CharityPanel world={this.state.world} onFoundCharity={this.foundCharity}></CharityPanel>\r\n        <div>\r\n          <b>Campaign Finances</b> <br/>\r\n          <b>Expenses</b> ${seasonalCost} <b>Surplus</b> ${this.state.world.party.seasonalIncome - seasonalCost}\r\n        </div> */}\r\n      </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { World } from \"../World\";\r\n\r\nexport class GovernmentPanel extends React.Component<{\r\n    world: World\r\n}> {\r\n    render(){\r\n        return <div><div className=\"col-2\">\r\n        <h2>Government</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class ConfirmButton extends React.Component<{\r\n    confirmText: string,\r\n    onConfirm: () => void,\r\n    disabled?: boolean,\r\n    className?: string\r\n}, {\r\n    confirming: boolean\r\n}> {\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {\r\n            confirming: false\r\n        }\r\n    }\r\n    click(){\r\n        if (this.state.confirming){\r\n            this.props.onConfirm();\r\n            this.setState({confirming: false});\r\n        } else {\r\n            this.setState({confirming: true});\r\n        }\r\n    }\r\n    render(){\r\n        return <button className={this.props.className} onClick={() => this.click()} disabled={this.props.disabled}>\r\n            { this.state.confirming ? this.props.confirmText : this.props.children}\r\n        </button>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class RobotArm extends React.Component<{\r\n    tool: string,\r\n    classN: string\r\n}, {\r\n\r\n}> {\r\n    render(){\r\n        const style = {};\r\n        return <svg width=\"100\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\" style={style} className={this.props.classN+\" robot-arm\"}>\r\n        <g>\r\n         <title>robotarm</title>\r\n         <rect fill=\"transparent\" id=\"canvas_background\" height=\"302\" width=\"102\" y=\"-1\" x=\"-1\"/>\r\n         <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\r\n          <rect fill=\"url(#gridpattern)\" strokeWidth=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\"/>\r\n         </g>\r\n        </g>\r\n        <g>\r\n         <title>Layer 1</title>\r\n         <rect id=\"svg_2\" height=\"200\" width=\"48\" y=\"91.63545\" x=\"25\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#BBBBBB\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_1\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n         <ellipse ry=\"20\" rx=\"20\" id=\"svg_3\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_4\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n        <ellipse ry=\"20\" rx=\"20\" id=\"svg_5\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\">{this.props.tool}</ellipse>\r\n            \r\n        </g><text y=\"250\" x=\"-20\" fontSize=\"4em\">{this.props.tool}</text>\r\n       </svg>\r\n    }\r\n}","import React from \"react\";\r\nimport { IPlayerData, ITechInfo, Tech, TechData } from \"../simulation/Player\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { RobotArm } from \"../widgets/RobotArm\";\r\nimport './research.css';\r\n\r\nexport class ResearchPanel extends React.Component<{\r\n  player: IPlayerData,\r\n  setResearch: (t: Tech) => void,\r\n  release: () => void\r\n}, {\r\n  toolI: number, toolI2: number, toolI3: number, toolI4: number\r\n}>{\r\n  tools = [\r\n  '📡',\r\n  '🗜️',\r\n  '🔬',\r\n  '💉',\r\n  '🔎',\r\n  '🧼',\r\n  '🧲',\r\n  '🎥',\r\n  '🔧',\r\n  ];\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state = {\r\n      toolI: 0,\r\n      toolI2: 2,\r\n      toolI3: 4,\r\n      toolI4: 1,\r\n    };\r\n  }\r\n  interval?: number;\r\n  loop(lastI: number){\r\n    let i = lastI + 1;\r\n    if (i === this.tools.length)\r\n      i = 0;\r\n    return i;\r\n  }\r\n  componentDidMount(){\r\n    this.interval = window.setInterval(() => {\r\n      this.setState({\r\n        toolI: this.loop(this.state.toolI),\r\n        toolI2: this.loop(this.state.toolI2),\r\n        toolI3: this.loop(this.state.toolI3),\r\n        toolI4: this.loop(this.state.toolI4),\r\n      });\r\n    }, 1000);\r\n  }\r\n  componentWillUnmount(){\r\n    if (this.interval != null)\r\n      window.clearInterval(this.interval);\r\n  }\r\n  setResearch(tech: Tech){\r\n    this.props.setResearch(tech);\r\n  }\r\n  renderTech(tech: ITechInfo){\r\n    const unstarted = this.props.player.techProgress[tech.tech] == null;\r\n    const progress = unstarted ? 0 : this.props.player.techProgress[tech.tech].researchPoints;\r\n    const total = tech.techPoints;\r\n    const style = {width: (Math.min(progress/total*100, 100))+'%'};\r\n    const complete = progress >= total;\r\n    const isCurrent = this.props.player.currentlyResearchingTech === tech.tech;\r\n    const state: '⭕️'|'✅'|'🔬' = complete ? '✅' : isCurrent ? '🔬' : '⭕️';\r\n    const rootClassName = isCurrent ? 'active': 'inactive';\r\n    return <div className={\"card-parent \"+rootClassName} key={tech.tech}>\r\n      <button className=\"card button\" onClick={() => this.setResearch(tech.tech)}>\r\n        <strong>{tech.name}</strong>\r\n        <strong className=\"pull-r f-size-125em\">{state}</strong>\r\n        <div>\r\n          {tech.description}\r\n        </div>      \r\n        <div className=\"bar f-size-12 h-12\">\r\n            <div className=\"bar-inner text-center\" style={style}>\r\n            </div>\r\n            {progress}/{total} tech\r\n        </div>\r\n      </button>\r\n    </div>\r\n  }\r\n  render(){\r\n      const techs = Object.values(TechData);\r\n      return <div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <h2>Research 🧪 Lab</h2>\r\n              <div className=\"vertical\">\r\n                {\r\n                  techs.map((t) => this.renderTech(t))\r\n                }\r\n              </div>\r\n            </div>\r\n          <div className=\"vertical\">\r\n            <div>\r\n              <div className=\"robot\">\r\n                🤖\r\n                <RobotArm classN=\"far-left\" tool={this.tools[this.state.toolI]}></RobotArm>\r\n                <RobotArm classN=\"left\" tool={this.tools[this.state.toolI2]}></RobotArm>\r\n                <RobotArm classN=\"near-right\" tool={this.tools[this.state.toolI3]}></RobotArm>\r\n                <RobotArm classN=\"far-right\" tool={this.tools[this.state.toolI4]}></RobotArm>\r\n              </div>\r\n            </div>\r\n            <div className=\"h-42em\">\r\n              {\r\n                this.props.player.abductedBeans.map((b) => {\r\n                  return <span key={b.key} className=\"victim bean triangle shake\">😨</span>\r\n                })\r\n              }\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              Currently probing {this.props.player.abductedBeans.length} beings for {this.props.player.abductedBeans.length} tech a day\r\n              <p>\r\n                <small>1 tech per research subject per day</small>\r\n              </p>\r\n            </div>\r\n            {\r\n              this.props.player.abductedBeans.length > 0 ? <div className=\"text-right\">\r\n                <ConfirmButton className=\"callout\" onConfirm={() => {this.props.release()}} confirmText=\"-1 Research Subject?\">\r\n                🎈 Release Research Subject\r\n                </ConfirmButton>\r\n              </div> : null\r\n            }\r\n          </div>\r\n        </div>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n  }\r\n}","import React from \"react\";\r\nimport \"./StopPlayFast.css\"\r\n\r\nexport class StopPlayFastButtons extends React.Component<{\r\n    timeScale: number,\r\n    setTimeScale: (s: number) => void\r\n}>{\r\n    render(){\r\n        return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n            ⌛️\r\n            <button type=\"button\" className={this.props.timeScale == 0 ? 'active': ''} onClick={() => this.props.setTimeScale(0)}>⏹</button>\r\n            <button type=\"button\" className={this.props.timeScale == 1 ? 'active': ''} onClick={() => this.props.setTimeScale(1)}>▶️</button>\r\n            <button type=\"button\" className={this.props.timeScale == 2 ? 'active': ''} onClick={() => this.props.setTimeScale(2)}>⏩</button>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\n\r\nexport const Subtabs: React.FC<{\r\n    additionalClasses?: string,\r\n    active: string,\r\n    options: {icon: string, value: string, text: string, onClick: () => void}[]    \r\n}> = (props) => {\r\n\r\n    return <div className={'horizontal blue-orange cylinder f-size-125em marg-t-20'+(props.additionalClasses||'')}>\r\n        {\r\n            props.options.map((x) => <button type=\"button\" key={x.value} onClick={() => x.onClick()}  className={props.active === x.value ? 'active': ''}>\r\n                {x.icon} {x.text}\r\n            </button>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { Subtabs } from \"../chrome/Subtab\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { City } from \"../simulation/City\";\r\nimport { BuildingIcon, BuildingJobIcon, BuildingTypes, HexPoint, IBuilding } from \"../simulation/Geography\";\r\nimport { EnterpriseType, EnterpriseTypeIcon, EnterpriseTypes, isEnterprise } from \"../simulation/Institutions\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\n\r\nexport class HexPanel extends React.Component<{\r\n    city: City,\r\n    hex: HexPoint,\r\n    difficulty: IDifficulty,\r\n    clearHex: () => void,\r\n    build: (where: HexPoint, what: BuildingTypes) => void,\r\n    beam: (where: HexPoint) => void,\r\n    upgrade: (what: IBuilding) => void,\r\n    changeEnterprise: (what: IBuilding) => void,\r\n}, {\r\n\r\n}> {\r\n    emptyPanel(){\r\n        const eHex = this.props.difficulty.cost.emptyHex;\r\n        return <div>\r\n            <div>\r\n                <strong>Empty Lot</strong> in <strong>{this.props.city.name}</strong>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearHex()} >❌</button>\r\n            </div>\r\n            <h3>Build:</h3>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'house')}>\r\n                    {BuildingIcon['house']} House\r\n                    <CostSmall cost={eHex.build.house}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'farm')}>\r\n                    {BuildingIcon['farm']} Farm\r\n                    <CostSmall cost={eHex.build.farm}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'hospital')}>\r\n                    {BuildingIcon['hospital']} Hospital\r\n                    <CostSmall cost={eHex.build.hospital}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'theater')}>\r\n                    {BuildingIcon['theater']} Theater\r\n                    <CostSmall cost={eHex.build.theater}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'park')}>\r\n                    {BuildingIcon['park']} Park\r\n                    <CostSmall cost={eHex.build.park}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <h3>Beings:</h3>\r\n            {this.renderBeamButton()}\r\n        </div>\r\n\r\n    }\r\n    renderBeamButton(){\r\n        return <div className=\"card-parent\">\r\n        <button className=\"card button\" type=\"button\" onClick={() => this.props.beam(this.props.hex)}>\r\n            🛸 Beam In New Subject\r\n            <CostSmall cost={this.props.difficulty.cost.hex.beam} rider=\"+Subject\"></CostSmall>\r\n        </button>\r\n    </div>\r\n    }\r\n    buildingPanel(b: IBuilding){\r\n        const slots = b.usedSlots();\r\n        const free = b.openSlots();\r\n        const hasJobs = b.type != 'park' && b.type != 'nature';\r\n        return <div>\r\n            <strong>{b.upgraded && hasJobs ? 'Dense ': 'Small '}{keyToName[b.type]}</strong> in <strong>{this.props.city.name}</strong>\r\n            <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearHex()}>❌</button>\r\n        {\r\n            b.upgraded && hasJobs ? <div>\r\n                {this.renderDensityWarning(b.type)}\r\n            </div> : null\r\n        }\r\n        {\r\n            <EnterpriseTypePicker building={b} changeEnterprise={this.props.changeEnterprise}></EnterpriseTypePicker>\r\n        }\r\n        {\r\n            (slots.length === 0) ? null : <div>\r\n                <strong>Workers:</strong>\r\n                {\r\n                    slots.map((x) => {\r\n                        return {\r\n                            key: x,\r\n                            bean: this.props.city.beans.get.find((y) => y.key === b.job_slots[x])\r\n                        }\r\n                    }).map((x) => <div key={x.key}>\r\n                        {BuildingJobIcon[b.type]} {x.bean?.name} {isEnterprise(b) && b.enterpriseType === 'company' && x.bean?.key === b.ownerBeanKey ? '🎩' : ''}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        }\r\n        {\r\n            !hasJobs ? null : <div>\r\n                This {keyToName[b.type]} can support {free.length} more jobs.\r\n                {\r\n                    b.upgraded ? null : <span><br/>Upgrade it to add 3 more job slots.</span>\r\n                }\r\n            </div>\r\n        }\r\n        {\r\n            b.upgraded || !hasJobs ? null : <div><div className=\"card-parent\">\r\n                    <button className=\"card button\" type=\"button\" onClick={() => this.props.upgrade(b)}>\r\n                        🛠️ Upgrade\r\n                        <CostSmall cost={this.props.difficulty.cost.hex.upgrade}></CostSmall>\r\n                    </button>\r\n                </div>\r\n                {this.renderDensityWarning(b.type)}\r\n            </div>\r\n        }\r\n        {this.renderBeamButton()}\r\n        </div>\r\n    }\r\n    renderDensityWarning(typ: BuildingTypes){\r\n        if (typ === 'house')\r\n        return <>\r\n            <div className=\"text-center\">\r\n            <small>\r\n            🐮 Parochial subjects may emit 👎<br/>when living in dense buildings\r\n            </small>\r\n        </div> \r\n        <div className=\"text-center\">\r\n            <small>\r\n            🍸 Cosmopolitan subjects may emit 👎<br/>when living in small buildings\r\n            </small>\r\n        </div>\r\n        </>;\r\n        else return <div>\r\n\r\n        </div>\r\n    }\r\n    renderJobs(){\r\n\r\n    }\r\n    render(){\r\n        const building: IBuilding|undefined = this.props.city.book.findBuildingByCoordinate(this.props.hex);\r\n        if (building){\r\n            return this.buildingPanel(building)\r\n        } else {\r\n            return this.emptyPanel();\r\n        }\r\n    }\r\n}\r\n\r\nexport const EnterpriseTypePicker: React.FC<{\r\n    building: IBuilding,\r\n    changeEnterprise: (what: IBuilding) => void,\r\n}> = (props) => {\r\n    const b = props.building;\r\n    if (isEnterprise(b)){\r\n        const options = EnterpriseTypes.map((x) => {\r\n            return {\r\n                icon: EnterpriseTypeIcon[x],\r\n                text: x[0].toUpperCase()+x.substring(1),\r\n                value: x,\r\n                onClick: () => {\r\n                    b.enterpriseType = x;\r\n                    props.changeEnterprise(b);\r\n                }\r\n            }\r\n        })\r\n        return <Subtabs active={b.enterpriseType} options={options}></Subtabs>\r\n    } else {\r\n        return null\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\n\r\nexport interface StringDropdownPS{\r\n    options: Array<string>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any,\r\n    titleCase?: boolean\r\n}\r\ninterface StringDropdownS{\r\n    key: any;\r\n}\r\n\r\nexport class StringDropdown extends React.Component<StringDropdownPS, StringDropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n        this.setState({key: e.target.value})\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    protected getTextForOption(data: string): string{\r\n        if (this.props.titleCase){\r\n            data = data[0].toUpperCase()+data.slice(1);\r\n        }\r\n        return data;\r\n    }\r\n    options(){\r\n        return this.props.options.map((str) => {\r\n            return <option value={str} key={str} title={this.getTitleForOption(str)}>\r\n                {this.getTextForOption(str)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: string): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\n","import React, { ReactElement } from \"react\";\r\nimport './beliefs.css';\r\nimport { BeliefSubject, BeliefVerb, SecondaryBeliefData, TraitBelief, Belief, BeliefSubjectOption, BeliefVerbOption, BeliefAdjOption, BeliefsAll, BeliefSubjectAll, BeliefVerbAll, IBeliefData } from \"../simulation/Beliefs\";\r\n\r\nimport { StringDropdown } from \"../widgets/StringDropdown\";\r\nimport { TraitIcon } from \"../World\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { RenderIdealBadges } from \"../widgets/UniversalWidgets\";\r\n\r\n\r\nexport const BeliefWidget: React.FC<{\r\n    data: IBeliefData,\r\n    cost?: number,\r\n    leftButton?: ReactElement,\r\n    titleView: ReactElement,\r\n    bottomView: ReactElement\r\n}> = (props) => {\r\n    return <div className=\"belief\">\r\n        <div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {props.data.icon}\r\n                </div>\r\n                {\r\n                    props.leftButton\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    {\r\n                        props.titleView\r\n                    }\r\n                    {\r\n                        props.cost ? \r\n                        <span className=\"pull-r\">{props.cost}🧠</span>\r\n                        : null\r\n                    }\r\n                </div>\r\n                {\r\n                props.data.description ? props.data.description.split(';').map((x, i) => \r\n                    <small className=\"marg-b-6\" key={i}> {x}\r\n                    </small>\r\n                    ) : null\r\n                }\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                       props.bottomView\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport class EditBeliefInput extends React.Component<{\r\n    data: IBeliefData,\r\n    frozen?: boolean,\r\n    divergent?: boolean,\r\n    available: number,\r\n    cost: number,\r\n    wash: () => void\r\n}, {\r\n\r\n}>{\r\n\r\n    render(){\r\n        return <div className=\"belief\"><div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {this.props.data.icon}\r\n                </div>\r\n                {\r\n                    this.props.frozen ? null : <ConfirmButton className=\"callout pad-4 marg-0\"\r\n                        confirmText={'-'+this.props.cost.toString()+'🧠?'} disabled={this.props.available < this.props.cost} onConfirm={this.props.wash}>\r\n                    🚿 <small>Wash</small>\r\n                    </ConfirmButton>\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    <strong title={this.props.data.description} className={this.props.divergent ? 'divergent marg-r-6': 'marg-r-6'}>\r\n                        {this.props.data.noun}\r\n                    </strong>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{this.props.data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {/* {\r\n                        RenderIdealBadges(this.props.data.idealPro || [], 'pos')\r\n                    }\r\n                    {\r\n                        RenderIdealBadges(this.props.data.idealCon || [], 'neg')\r\n                    }  */}\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}\r\n\r\nconst SortedBeliefs = BeliefsAll.slice().sort((a, b) => a.localeCompare(b));\r\nexport class AddBeliefInput extends React.Component<{\r\n    available: number,\r\n    cost: number,\r\n    add: (b: TraitBelief) => void\r\n}, {\r\n    belief: TraitBelief,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            belief: 'Neuroticism'\r\n        }\r\n    }\r\n    render(){\r\n        const data = SecondaryBeliefData[this.state.belief]\r\n        return <div className=\"belief\"><div className=\"horizontal badger add\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {data.icon}\r\n                </div>\r\n                <ConfirmButton className=\"callout grow-0 pad-4 marg-0\" disabled={this.props.available < this.props.cost} \r\n                    confirmText={'-'+this.props.cost.toString()+'🧠?'} onConfirm={() => this.props.add(this.state.belief)}>\r\n                    💉 <small>Implant</small>\r\n                </ConfirmButton>\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">                    \r\n                    <StringDropdown titleCase={true}\r\n                    options={SortedBeliefs} \r\n                    value={this.state.belief}\r\n                    onChange={(a: string) => {\r\n                        console.log(a);\r\n                        this.setState({belief: a as TraitBelief})\r\n                    }}\r\n                    ></StringDropdown>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        (data.idealPro || []).map((x) => <span className=\"pos badge align-mid\" key={x}>+{TraitIcon[x]}</span>)\r\n                    }\r\n                    {\r\n                        (data.idealCon || []).map((x) => <span className=\"neg badge align-mid\" key={x}>-{TraitIcon[x]}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { BeliefSubject, BeliefVerb, TraitBelief, SecondaryBeliefData, Belief, PrimaryBeliefData, NarrativeBeliefData, IsBeliefDivergent } from \"../simulation/Beliefs\";\r\nimport './modals.css';\r\nimport { EmoteIcon, TraitCommunity, TraitFaith, TraitIdeals, World } from \"../World\";\r\nimport { AddBeliefInput, BeliefWidget, EditBeliefInput } from \"./BeliefRow\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { LiveList } from \"../events/Events\";\r\nimport { BeliefInventory } from \"../simulation/Player\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\n\r\nexport const TraitInventoryList: React.FC<{\r\n    dogmatic: boolean,\r\n    live: LiveList<BeliefInventory>,\r\n    implant: (t: TraitBelief) => void\r\n}> = (props) => {\r\n    const [list, setList] = useState(props.live.get);\r\n    const onChange = (b: BeliefInventory[]) => {\r\n        setList(b);\r\n    };\r\n    useEffect(() => {\r\n        props.live.onChange.subscribe(onChange);\r\n        return () => props.live.onChange.unsubscribe(onChange)\r\n    });\r\n\r\n    return <>\r\n        {list.map((x) => <BeliefWidget \r\n        key={x.trait} data={SecondaryBeliefData[x.trait]} titleView={<strong>{SecondaryBeliefData[x.trait].noun}</strong>}\r\n        leftButton={\r\n            <ConfirmButton onConfirm={() => props.implant(x.trait)} className=\"callout marg-0\" confirmText=\"-1 🧠?\" disabled={x.charges < 1 || props.dogmatic}>\r\n                Implant\r\n            </ConfirmButton>\r\n        }\r\n        bottomView={<span>{x.charges} 🧠</span>}>\r\n        </BeliefWidget>)}\r\n    </>\r\n};\r\n\r\nexport class BrainwashingContent extends React.Component<{\r\n    world: World,\r\n    beanID: number|null,\r\n    washCommunity: (bean: Bean, c: TraitCommunity) => void,\r\n    washMotive: (bean: Bean, m: TraitIdeals) => void,\r\n    washNarrative: (bean: Bean, n: TraitFaith) => void,\r\n    washBelief: (bean: Bean, b: TraitBelief) => void,\r\n    implantBelief: (bean: Bean, b: TraitBelief) => void\r\n}, {\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const bean = this.props.world.beans.get.find(x => x.key == this.props.beanID);\r\n        const isScanned =  this.props.beanID && this.props.world.alien.scanned_bean[this.props.beanID];\r\n        if (bean == null) return <div></div>;\r\n        const dogmatic = bean.believesIn('Dogmatism');\r\n        return <div>\r\n            <div className=\"horizontal fancy-header\">\r\n                <div>\r\n                    BRAIN\r\n                </div>\r\n                <div className=\"emoji-3\">\r\n                🧠🚿\r\n                </div>\r\n                <div>\r\n                    WASH\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p className=\"pad-4p\">\r\n                    <strong>{bean.name}</strong> has {bean.discrete_sanity.toFixed(0)} sanity 🧠. \r\n                    {\r\n                        bean.sanity === 'stressed' || bean.sanity === 'disturbed' ?\r\n                            <small className=\"pull-r\">(Low sanity 🧠 causes {EmoteIcon['unhappiness']}; Negative sanity 🧠 causes extremely negative traits)</small>\r\n                        : null\r\n                    }\r\n                </p>\r\n                {\r\n                    dogmatic ? <div className=\"text-center\">\r\n                        🐶 Dogmatic subjects cannot change their minds\r\n                    </div> : null\r\n                }\r\n                { isScanned ? <div className=\"horizontal scroll\">\r\n                    <EditBeliefInput\r\n                        available={bean.discrete_sanity} frozen={dogmatic}\r\n                        wash={() => this.props.washCommunity(bean, bean.community)} \r\n                        cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                        data={PrimaryBeliefData[bean.community]}\r\n                    ></EditBeliefInput>\r\n                    <EditBeliefInput\r\n                        available={bean.discrete_sanity}  frozen={dogmatic}\r\n                        wash={() => this.props.washMotive(bean, bean.ideals)} \r\n                        cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                        data={PrimaryBeliefData[bean.ideals]}\r\n                    ></EditBeliefInput>\r\n                    <EditBeliefInput\r\n                        available={bean.discrete_sanity} frozen={dogmatic}\r\n                        wash={() => this.props.washNarrative(bean, bean.faith)} \r\n                        cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                        data={NarrativeBeliefData[bean.faith]}\r\n                    ></EditBeliefInput>\r\n                    {\r\n                        bean.beliefs.map((b) => <EditBeliefInput key={b}\r\n                        available={bean.discrete_sanity} frozen={dogmatic && b != 'Dogmatism'}\r\n                        divergent={IsBeliefDivergent(b, this.props.world.party.ideals, this.props.world.party.community)}\r\n                        wash={() => this.props.washBelief(bean, b)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0}\r\n                            data={SecondaryBeliefData[b]}\r\n                        >\r\n                        </EditBeliefInput>)\r\n                    }\r\n                    {/* {\r\n                        dogmatic ? null : <AddBeliefInput\r\n                            available={bean.discrete_sanity}\r\n                            add={(b) => this.props.implantBelief(bean, b)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean_brain.brainimplant_secondary.sanity || 0}\r\n                        ></AddBeliefInput>\r\n                    } */}\r\n                </div> : <div className=\"text-center\">🛰️ Scan this subject to reveal its Traits! </div>}\r\n                <h3 className=\"pad-4p\">\r\n                    🧠 Trait Inventory\r\n                </h3>\r\n                <div className=\"horizontal scroll\">\r\n                    <TraitInventoryList \r\n                        live={this.props.world.alien.beliefInventory} \r\n                        dogmatic={dogmatic} \r\n                        implant={(t: TraitBelief) => this.props.implantBelief(bean, t)}></TraitInventoryList>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\n\r\nexport class TimelyEventToggle extends React.Component<{\r\n    event: PubSub<IEvent>,\r\n    eventIcon: string,\r\n    eventClass: string\r\n}, {\r\n eventCount: number,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.props.event.subscribe(this.onEvent);\r\n        this.state = {\r\n            eventCount: 0\r\n        };\r\n    }\r\n    onEvent = (e: IEvent) => {\r\n        this.setState({eventCount: this.state.eventCount+1});\r\n        window.setTimeout(() => {\r\n            this.setState({\r\n                eventCount: this.state.eventCount-1\r\n            });\r\n        }, 3000);\r\n    }\r\n    render(){\r\n        return <span>\r\n            {this.state.eventCount < 1 ? this.props.children : <span className={this.props.eventClass}>{this.props.eventIcon}</span>}\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { Player } from \"../simulation/Player\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\nimport { EmoteIcon } from \"../World\";\r\n\r\n export class MarketPanel extends React.Component<{\r\n     player: Player,\r\n     buyEnergy: (amount: number) => void,\r\n     buyBots: (amount: number) => void,\r\n     scrubHedons: () => void,\r\n }>{\r\n     render(){\r\n        return <div>\r\n            <div className=\"text-center\">\r\n                <strong>🌌 Galactic 😨 Emotion 💰 Market</strong>\r\n            </div>\r\n            <p>\r\n                <small>\r\n                    The premier exchange for ⚡️, 🤖,  and {EmoteIcon['happiness']}!\r\n                </small>\r\n            </p>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" onClick={() => this.props.buyEnergy(1)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.energy)}>\r\n                    +1 ⚡️ Energy\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.energy} qty={1} ></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" onClick={() => this.props.buyEnergy(5)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.energy, 5)}>\r\n                    +5 ⚡️ Energy\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.energy} qty={5} ></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" onClick={() => this.props.buyBots(1)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.bots)}>\r\n                    +1 🤖 Bot\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots} qty={1} ></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" onClick={() => this.props.buyBots(5)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.bots, 5)}>\r\n                    +5 🤖 Bots\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" onClick={() => this.props.scrubHedons()}\r\n                    disabled={this.props.player.hedons.amount >= 0 || !this.props.player.canAfford(this.props.player.difficulty.cost.market.scrubHedons)}>\r\n                    Remove 💢 Negative Hedons\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.scrubHedons} qty={1} ></CostSmall>\r\n                </button>\r\n                {/* <button className=\"card button\" onClick={() => this.props.buyBots(5)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.bots, 5)}>\r\n                    +5 🤖 Bots\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n                </button> */}\r\n            </div>\r\n            <div>\r\n                \r\n                <small>\r\n                    <i>Current 🧠 Traits for sale:</i>\r\n                </small>\r\n            </div>\r\n            <div className=\"short-scroll\">\r\n                <div className=\"card-parent\">\r\n                    <button className=\"card button\">\r\n                        🍸 Cosmopolitanism\r\n                        <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots}></CostSmall>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button className=\"card button\">\r\n                        👽 Paranoia\r\n                        <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots}></CostSmall>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button className=\"card button\">\r\n                        🤬 Antagonism\r\n                        <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots}></CostSmall>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     }\r\n }","import { Bean } from \"../simulation/Bean\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { World, TraitJob } from \"../World\";\r\nimport { IBeliefData, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { BeliefWidget } from \"./BeliefRow\";\r\nimport { LiveList, LiveMap } from \"../events/Events\";\r\nimport { BeliefInventory } from \"../simulation/Player\";\r\n\r\ninterface TraitsP {\r\n  seenBeliefs: LiveMap<string, boolean>,\r\n  beliefInventory: LiveList<BeliefInventory>,\r\n}\r\nexport class TraitsReport extends React.Component<TraitsP, {\r\n  hoveredTrait?: TraitBelief\r\n}> {\r\n    constructor(props: TraitsP) {\r\n      super(props);\r\n      this.state = {\r\n      }\r\n    }\r\n    render() {\r\n      const beliefs: IBeliefData[] = [];\r\n      this.props.seenBeliefs.get.forEach((val, key) => {\r\n        if (SecondaryBeliefData[key as TraitBelief] != null){\r\n          beliefs.push(SecondaryBeliefData[key as TraitBelief]);\r\n        }\r\n      });\r\n      beliefs.sort((a, b) => a.noun.localeCompare(b.noun));\r\n      return (\r\n        <div className=\"vertical\">\r\n          <div className=\"pad-4p\">\r\n            <h2>Subject 🧠 Traits</h2>\r\n          </div>\r\n          <div className=\"col-2-30-60\">\r\n            <div>\r\n              <div className=\"scroll\">\r\n                <div className=\"scoll-sticky-h\">\r\n                  <strong>Trait Inventory</strong>\r\n                </div>\r\n                {\r\n                  this.props.beliefInventory.get.length < 1 ? <div>\r\n                    No Traits! <br/>\r\n                    😵 Brainwash your subjects  <br/>\r\n                    or buy from the 🛍️ Market\r\n                    </div> : this.props.beliefInventory.get.map((x) => <div key={x.trait}>\r\n                          <div>\r\n                            <strong>\r\n                              {SecondaryBeliefData[x.trait].icon} {SecondaryBeliefData[x.trait].noun}\r\n                            </strong>\r\n                          </div>\r\n                          <div>\r\n                            This can be implanted {x.charges} more times\r\n                          </div>\r\n                        </div>)\r\n                }\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"modal-scroll-v\">\r\n                <div className=\"sticky-t-0\">\r\n                  <strong>Discovered Traits</strong>\r\n                </div>\r\n                {\r\n                  beliefs.length < 1 ? <div>\r\n                    No Traits! <br/>\r\n                    🛰️ Scan some of your subjects.\r\n                  </div> : beliefs.map((x) => <BeliefWidget key={x.noun} data={x} cost={0}\r\n                  titleView={<strong>{x.noun}</strong>}\r\n                  bottomView={<span></span>}\r\n                ></BeliefWidget>)\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from 'react';\r\nimport { EmoteIcon } from '../World';\r\n\r\nexport const GreetingPanel: React.FC = (props) => {\r\n    return <div>\r\n        <div className=\"col-2\">\r\n            <div>\r\n                <h3>Welcome to the</h3>\r\n                <h2>👽 Alien 🌍 Utopia 🔬 Laboratory</h2>\r\n                <div>\r\n                    Thank you for joining the <select><option>Human</option></select> Cultivation Division of the <strong>🌌 Galactic Xenosensation Federation!</strong> Your interdimensional petri dish is ready for farming.\r\n                </div>\r\n                <p>\r\n                    As a <select><option>Human Emotion Farmer</option></select>, you are required to execute the following duties:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        Construct <strong>🏠 Buildings</strong> for your <select><option>Human</option></select> subjects.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🛸 Beam In</strong> <select><option>Human</option></select> subjects for cultivation.\r\n                    </li>\r\n                    <li>\r\n                        Harvest your subject's positive <strong>{EmoteIcon['happiness']} Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Sell the Hedons on the <br/><strong>🌌 Galactic 😨 Emotion 💰 Market</strong>.\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p>\r\n                    The GXF's records indicate <select><option>Humans</option></select> are a<br/><u>mentally malleable</u> and <u>physically fragile</u> species. Try the following cultivation methods:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <strong>🛰️ Scan</strong> your subject's primitive minds for information on what pleases them.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🚿 Brainwash</strong> subjects to change their <strong>🧠&nbsp;Traits</strong>. Try to add Traits that emit more <strong>{EmoteIcon['happiness']}&nbsp;Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Avoid letting your subjects die or endure pain; this makes <strong>{EmoteIcon['unhappiness']}&nbsp;Antihedons</strong> which are less profitable.\r\n                    </li>\r\n                    <li>\r\n                        Use your knowledge of Traits to modify the farm's <strong>🗳️&nbsp;Government</strong> to maximize Hedon generation.\r\n                    </li>\r\n                    <li>\r\n                        Use the GXF's <strong>🧪 Research Lab</strong> to upgrade your farm, when stocked with <strong>👾 Abducted</strong> subjects.\r\n                    </li>\r\n                </ul>\r\n                <h3>\r\n                    🌌 Galactic Xenosensation Federation <br/>\r\n                    <div className=\"text-right\">\r\n                        <small>\r\n                        {/* <i>THE market leader in corporeal sensations.</i> */}\r\n                        <i>1 trillion sensations. 100% organic. 100% gourmet.</i>\r\n                        </small>\r\n                    </div>\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport './chrome/chrome.css';\r\nimport { World, TraitGood, Trait, TraitCommunity, TraitIdeals, TraitFaith } from './World';\r\nimport { GenerateWorld, GeneratePartyHQ, GenerateBuilding, GenerateBean, GetRandom } from './WorldGen';\r\nimport { Modal } from './widgets/Modal';\r\nimport { OverviewPanel } from './right-panel/OverviewPanel';\r\nimport { Bean } from './simulation/Bean';\r\nimport { WorldTile } from './petri-ui/WorldTile';\r\nimport { EconomyReport } from './modal-content/EconomyReport';\r\nimport { CharityPanel } from './modal-content/CharityPanel';\r\nimport { PoliticalEffect, Policy, CityPartyHQ, IPolicy } from './simulation/Politics';\r\nimport { EventsPanel } from './right-panel/Events';\r\nimport { BeanPanel } from './right-panel/BeanPanel';\r\nimport { FoundParty, FoundPartyS } from './modal-content/FoundParty';\r\nimport { PartyOverview } from './modal-content/PartyOverview';\r\nimport { BubbleNumberText, BubbleSeenTraitsText } from './widgets/BubbleText';\r\nimport { Season, Now, Hour } from './simulation/Time';\r\nimport { SocialGraph } from './widgets/SocialGraph';\r\nimport { CapsuleLabel } from './widgets/CapsuleLabel';\r\n\r\n\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { GoalsPanel } from './right-panel/Goals';\r\nimport { CampaignsPanel } from './modal-content/Campaigns';\r\nimport { GovernmentPanel } from './modal-content/Gov';\r\nimport { ResearchPanel } from './modal-content/Research';\r\nimport { StopPlayFastButtons } from './widgets/StopPlayFast';\r\nimport { BuildingTypes, HexPoint, IBuilding, Point, transformPoint } from './simulation/Geography';\r\nimport { HexPanel } from './right-panel/HexPanel';\r\nimport { City, UFO } from './simulation/City';\r\nimport { BrainwashingContent } from './modal-content/Brainwashing';\r\nimport { SecondaryBeliefData, TraitBelief } from './simulation/Beliefs';\r\nimport { TimelyEventToggle } from './widgets/TimelyEventToggle';\r\nimport { LawAxis } from './simulation/Government';\r\nimport { Tech } from './simulation/Player';\r\nimport { IEvent } from './events/Events';\r\nimport { WorldSound } from './WorldSound';\r\nimport { MarketPanel } from './right-panel/MarketPanel';\r\nimport { TraitsReport } from './modal-content/TraitsReport';\r\nimport { GreetingPanel } from './modal-content/GreetingPanel';\r\n\r\nexport const keyToName: { [key in Trait | BuildingTypes]: string } = {\r\n  state: 'Collectivist', ego: 'Independent',\r\n  trad: 'Elitist', prog: 'Progressive',\r\n  circle: 'Brunette', square: 'Blonde', triangle: 'Redhead',\r\n  rocket: 'Futuristic', dragon: 'Mythical', music: 'Dramatic', noFaith: 'Nihilistic',\r\n  starving: 'Starving', hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\r\n  homeless: 'Homeless', sleepy: 'Sleepy', awake: 'Awake', rested: 'Rested',\r\n  sick: 'Sick', sickly: 'Sickly', bruised: 'Bruised', fresh: 'Robust',\r\n  sane: 'Sane', stressed: 'Confused', disturbed: 'Disturbed', 'psychotic': 'Psychotic',\r\n  house: 'House', hospital: 'Hospital', farm: 'Farm', theater: 'Theater', church: 'Church', courthouse: 'Courthouse', park: 'Park', nature: 'Elysian Scenery'\r\n};\r\n\r\nexport type ModalView = 'greeting' | 'policy' | 'economy' | 'campaign' | 'party_creation' | 'party' | 'polisci' | 'brainwash' | 'traits';\r\ninterface AppPs {\r\n}\r\ninterface AppState {\r\n  world: World,\r\n  activeCityID: number | null;\r\n  activeBeanID: number | null;\r\n  activeHex: HexPoint | null;\r\n  activeModal: ModalView | null;\r\n  activeMain: 'geo' | 'network';\r\n  activeRightPanel: 'events' | 'overview' | 'goals' | 'market';\r\n  timeScale: number;\r\n  spotlightEvent: IEvent | undefined;\r\n  cursor?: Point;\r\n}\r\nexport const SfxContext = React.createContext<WorldSound|undefined>(undefined);\r\n\r\nconst LogicTickMS = 2000;\r\nconst SpotlightDurationTimeMS = 5000;\r\nconst ChargePerWash = 3;\r\nclass App extends React.Component<AppPs, AppState>{\r\n  constructor(props: AppPs) {\r\n    super(props);\r\n    this.state = {\r\n      world: GenerateWorld(),\r\n      activeCityID: null,\r\n      activeBeanID: null,\r\n      activeHex: null,\r\n      activeMain: 'geo',\r\n      activeModal: 'greeting',\r\n      activeRightPanel: 'overview',\r\n      timeScale: 0,\r\n      spotlightEvent: undefined\r\n    };\r\n    this.state.world.calculateComputedState();\r\n    this.state.world.bus.death.subscribe(this.onDeath);\r\n  }\r\n  private previousTimeMS: DOMHighResTimeStamp = 0;\r\n  private logicTickAccumulatorMS: number = 0;\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.keyupHandler, false);\r\n    window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n      this.previousTimeMS = time;\r\n      window.requestAnimationFrame(this.tick);\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.keyupHandler);\r\n  }\r\n  tick = (timeMS: DOMHighResTimeStamp) => {\r\n    // Compute the delta-time against the previous time\r\n    const deltaTimeMS = (timeMS - this.previousTimeMS) * this.state.timeScale;\r\n\r\n    // Update the previous time\r\n    this.previousTimeMS = timeMS;\r\n    if (deltaTimeMS > 0) {\r\n      this.logicTickAccumulatorMS += deltaTimeMS;\r\n      this.state.world.simulate_beans(deltaTimeMS);\r\n      this.state.world.simulate_pickups(deltaTimeMS);\r\n\r\n      if (this.logicTickAccumulatorMS > LogicTickMS) {\r\n        this.state.world.simulate_world();\r\n        this.setState({ world: this.state.world });\r\n        this.logicTickAccumulatorMS = 0;\r\n      }\r\n    }\r\n    window.requestAnimationFrame(this.tick);\r\n  }\r\n  keyupHandler = (event: KeyboardEvent) => {\r\n    if (event.key === ' ') {\r\n      if (this.state.timeScale > 0) {\r\n        this.setState({ timeScale: 0 });\r\n      } else {\r\n        this.setState({ timeScale: 1 });\r\n      }\r\n    } else if (event.key === 'Escape') {\r\n      this.setState({activeModal: null});\r\n    } else if (event.key === 'Q' && event.shiftKey) {\r\n      this.build(this.state.world.cities[0], { q: 1, r: 1 }, 'farm');\r\n      this.build(this.state.world.cities[0], { q: 1, r: 0 }, 'house');\r\n      this.build(this.state.world.cities[0], { q: 0, r: 1 }, 'hospital');\r\n      this.beam(this.state.world.cities[0], { q: 0, r: 0 });\r\n      this.beam(this.state.world.cities[0], { q: 1, r: 0 });\r\n      this.beam(this.state.world.cities[0], { q: 0, r: 1 });\r\n      this.beam(this.state.world.cities[0], { q: 1, r: 1 });\r\n    } else if (event.key === 'S' && event.shiftKey) {\r\n      this.state.world.beans.get.forEach((b) => {\r\n        if (this.state.world.alien.difficulty.cost.bean.scan.energy){\r\n          if (this.state.world.alien.energy.amount < this.state.world.alien.difficulty.cost.bean.scan.energy)\r\n            this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.bean.scan.energy;\r\n        }\r\n        this.scan(b);\r\n      });\r\n    }\r\n  }\r\n  foundParty = (state: FoundPartyS) => {\r\n    this.state.world.party.name = state.name;\r\n    this.state.world.party.slogan = state.slogan;\r\n    this.state.world.cities[0].name = state.name;\r\n    if (state.community)\r\n      this.state.world.party.community = state.community;\r\n    if (state.ideal)\r\n      this.state.world.party.ideals = state.ideal;\r\n    const city = this.state.world.cities.find((x) => x.key == state.cityKey);\r\n    if (city) {\r\n      GeneratePartyHQ(city, this.state.world.party);\r\n    }\r\n    this.state.world.calculateComputedState();\r\n    this.setState({\r\n      world: this.state.world,\r\n      activeModal: null\r\n    });\r\n  }\r\n  get difficulty() {\r\n    return this.state.world.alien.difficulty;\r\n  }\r\n  build = (city: City, where: HexPoint, what: BuildingTypes) => {\r\n    const cost = this.difficulty.cost.emptyHex.build[what];\r\n    if (this.state.world.alien.canAfford(cost)) {\r\n      this.state.world.alien.purchase(cost);\r\n      GenerateBuilding(city, what, where, city.economy);\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  changeEnterprise = (city: City, what: IBuilding) => {\r\n    \r\n    this.setState({ world: this.state.world });\r\n  }\r\n  upgrade = (city: City, what: IBuilding) => {\r\n    const cost = this.difficulty.cost.hex.upgrade;\r\n    if (this.state.world.alien.tryPurchase(cost)) {\r\n      what.upgraded = true;\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  beam = (city: City, where: HexPoint) => {\r\n    const cost = this.difficulty.cost.hex.beam;\r\n    if (this.state.world.alien.canAfford(cost)) {\r\n      this.state.world.alien.purchase(cost);\r\n      const newUFO = new UFO(city.ufos.length, where, 'beam-in');\r\n      city.ufos.push(newUFO);\r\n      window.setTimeout(() => {\r\n        city.beans.push(GenerateBean(city, where));\r\n        this.setState({ world: this.state.world });\r\n      }, 3000);\r\n\r\n      this.setState({ world: this.state.world }, () => {\r\n        this.removeUFO(city, newUFO.key);\r\n      });\r\n    }\r\n  }\r\n  buyBots = (amount: number) => {\r\n    const cost = this.difficulty.cost.market.resource.bots;\r\n    if (this.state.world.alien.tryPurchase(cost, amount)) {\r\n      this.state.world.alien.bots.amount += amount;\r\n      this.state.world.alien.bots.change.publish({change:amount});\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  buyEnergy = (amount: number) => {\r\n    const cost = this.difficulty.cost.market.resource.bots;\r\n    if (this.state.world.alien.tryPurchase(cost, amount)) {\r\n      this.state.world.alien.energy.amount += amount;\r\n      this.state.world.alien.energy.change.publish({change:amount});\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  scrubHedons = () => {\r\n    const cost = this.difficulty.cost.market.scrubHedons;\r\n    if (this.state.world.alien.tryPurchase(cost)) {\r\n      const old = this.state.world.alien.hedons.amount;\r\n      this.state.world.alien.hedons.amount = 0;\r\n      this.state.world.alien.hedons.change.publish({change: -old});\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  removeUFO(city: City, key: number) {\r\n    window.setTimeout(() => {\r\n      const myUFOI = city.ufos.findIndex((x) => x.key === key);\r\n      if (myUFOI > -1)\r\n        city.ufos.splice(myUFOI, 1);\r\n    }, 7000);\r\n  }\r\n  foundCharity = (good: TraitGood, name: string, budget: number) => {\r\n    this.state.world.addCharity(good, name, budget);\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  vaporize = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.vaporize)) {\r\n      if (bean.city) {\r\n        bean.die('vaporization');\r\n      }\r\n      this.setState({ world: this.state.world });\r\n    }\r\n  }\r\n  abduct = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.abduct)) {\r\n      bean.abduct(this.state.world.alien);\r\n      bean.city?.beans.remove(bean);\r\n      this.setState({ world: this.state.world });\r\n    }\r\n  }\r\n  releaseBean = () => {\r\n    if (this.state.world.alien.abductedBeans.length > 0) {\r\n      const lucky_bean = this.state.world.alien.abductedBeans.shift();\r\n      if (lucky_bean instanceof Bean) {\r\n        lucky_bean.lifecycle = 'alive';\r\n        lucky_bean.city?.beans.push(lucky_bean);\r\n      } else {\r\n        window.alert(\"releasing data beans is unimplemented\");\r\n      }\r\n    }\r\n  }\r\n  setResearch = (t: Tech) => {\r\n    this.state.world.alien.currentlyResearchingTech = t;\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  scan = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.scan)) {\r\n      this.state.world.alien.scanned_bean[bean.key] = true;\r\n      bean.beliefs.forEach((b) => {\r\n        if (!this.state.world.alien.seenBeliefs.get.has(b)){\r\n          this.state.world.alien.seenBeliefs.add(b, true);\r\n        }\r\n      });\r\n      this.state.world.sfx.play('scan');\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  washCommunity = (bean: Bean, a: TraitCommunity) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal)) {\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n      if (bean.community === 'ego')\r\n        bean.community = 'state';\r\n      else bean.community = 'ego';\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  washMotive = (bean: Bean, a: TraitIdeals) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal)) {\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n      if (bean.ideals === 'prog')\r\n        bean.ideals = 'trad';\r\n      else bean.ideals = 'prog';\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  washNarrative = (bean: Bean, a: TraitFaith) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal)) {\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n      const oldFaith = bean.faith;\r\n      while (bean.faith === oldFaith)\r\n        bean.faith = GetRandom(['rocket', 'dragon', 'music', 'noFaith']);\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  washBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_secondary)) {\r\n      bean.beliefs.splice(\r\n        bean.beliefs.indexOf(a), 1\r\n      );\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0);\r\n      const existing = this.state.world.alien.beliefInventory.get.find((x) => x.trait === a);\r\n      if (existing) {\r\n        existing.charges += ChargePerWash;\r\n        this.state.world.alien.beliefInventory.set([...this.state.world.alien.beliefInventory.get]);\r\n      } else\r\n        this.state.world.alien.beliefInventory.push({trait: a, charges: ChargePerWash});\r\n      this.state.world.sfx.play('wash_out');\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  implantBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainimplant_secondary) && \r\n      this.state.world.alien.beliefInventory.get.filter(x => x.trait == a && x.charges > 0)) {\r\n      bean.beliefs.push(a);\r\n      this.state.world.alien.useCharge(a);\r\n      this.state.world.sfx.play('wash_in');\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainimplant_secondary.sanity || 0);\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  setPolicy = (axis: LawAxis, policy: IPolicy) => {\r\n    this.state.world.party.platform[axis] = policy;\r\n    this.state.world.calculateComputedState();\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  onDeath = (event: IEvent) => {\r\n    this.state.world.sfx.play('death');\r\n    this.startSpotlight(event);\r\n  }\r\n  private timescaleBeforeSpotlight: number = 1;\r\n  startSpotlight(event: IEvent) {\r\n    this.timescaleBeforeSpotlight = this.state.timeScale;\r\n    this.setState({\r\n      spotlightEvent: event,\r\n      timeScale: 0\r\n    }, () => {\r\n      setTimeout(() => this.endSpotlight(), SpotlightDurationTimeMS);\r\n    });\r\n  }\r\n  endSpotlight() {\r\n    this.setState({\r\n      timeScale: this.timescaleBeforeSpotlight,\r\n      spotlightEvent: undefined\r\n    });\r\n  }\r\n  getPanel() {\r\n    switch (this.state.activeRightPanel) {\r\n      case 'overview':\r\n        if (this.state.activeCityID == null) {\r\n          return <OverviewPanel beans={this.state.world.beans} utopia={this.state.world.party} clearCity={() => this.setState({ activeCityID: null })}></OverviewPanel>\r\n        } else {\r\n          const city = this.state.world.cities.find((x) => x.key == this.state.activeCityID);\r\n          if (city) {\r\n\r\n            if (this.state.activeHex != null) {\r\n              return <HexPanel city={city} hex={this.state.activeHex} difficulty={this.state.world.alien.difficulty}\r\n                clearHex={() => this.setState({ activeHex: null })}\r\n                beam={(where) => this.beam(city, where)}\r\n                upgrade={(what) => this.upgrade(city, what)}\r\n                build={(where, what) => { this.build(city, where, what) }}\r\n                changeEnterprise={(what) => this.changeEnterprise(city, what)}\r\n                ></HexPanel>\r\n            }\r\n            else if (this.state.activeBeanID != null) {\r\n              const bean = city.beans.get.find((y) => y.key == this.state.activeBeanID);\r\n              if (bean)\r\n                return <BeanPanel bean={bean} city={city} alien={this.state.world.alien}\r\n                  economy={this.state.world.economy} party={this.state.world.party} bus={this.state.world.bus} law={this.state.world.law}\r\n                  scan={this.scan} vaporize={this.vaporize}\r\n                  brainwash={() => this.setState({ activeModal: 'brainwash' })}\r\n                  abduct={this.abduct}\r\n                  gift={() => this.setState({ activeModal: 'brainwash' })}\r\n                  clearCity={() => this.setState({ activeCityID: null, activeBeanID: null })}></BeanPanel>\r\n            }\r\n\r\n            return <OverviewPanel beans={city?.beans} utopia={this.state.world.party} city={city} clearCity={() => this.setState({ activeCityID: null })}></OverviewPanel>\r\n          }\r\n          else\r\n            return <div>\r\n            </div>\r\n        }\r\n      case 'goals':\r\n        return <GoalsPanel player={this.state.world.alien} progress={this.state.world.alien}></GoalsPanel>\r\n      case 'events':\r\n        return <EventsPanel events={this.state.world.bus.buffer} selectBean={(beankey?: number) => {\r\n          if (beankey)\r\n            this.setState({ activeCityID: this.state.world.cities[0].key, activeBeanID: beankey, activeHex: null, activeRightPanel: 'overview' })\r\n        }}></EventsPanel>\r\n      case 'market': \r\n        return <MarketPanel buyEnergy={this.buyEnergy} buyBots={this.buyBots} scrubHedons={this.scrubHedons}\r\n         player={this.state.world.alien}></MarketPanel>\r\n    }\r\n  }\r\n  renderGeo() {\r\n    const COL = this.state.world.economy.getCostOfLiving();\r\n    return this.state.world.cities.map((t) => {\r\n      return (\r\n        <WorldTile tile={t} city={t} costOfLiving={COL} key={t.key} spotlightEvent={this.state.spotlightEvent} activeBeanID={this.state.activeBeanID}\r\n          onClick={() => this.setState({ activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: null })}\r\n          onBeanClick={(b) => this.setState({ activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: b.key })}\r\n          onHexClick={(hex) => { this.setState({ activeCityID: t.key, activeHex: hex, activeBeanID: null, activeRightPanel: 'overview' }) }}\r\n        ></WorldTile>\r\n      )\r\n    });\r\n  }\r\n  renderNetwork() {\r\n    return <div>\r\n      <div className=\"horizontal max-w-500 m-t-2em\">\r\n        <button type=\"button\">\r\n          😎 Influence\r\n        </button>\r\n        <button type=\"button\">\r\n          🚩 Party Preference\r\n        </button>\r\n        <button type=\"button\">\r\n          📈 Demographics\r\n        </button>\r\n      </div>\r\n      <SocialGraph costOfLiving={this.state.world.economy.getCostOfLiving()}\r\n        beans={this.state.world.beans}\r\n        onClick={(b) => this.setState({ activeCityID: b.cityKey, activeRightPanel: 'overview', activeBeanID: b.key })} ></SocialGraph>\r\n    </div>\r\n  }\r\n  main() {\r\n    switch (this.state.activeMain) {\r\n      case 'network':\r\n        return this.renderNetwork();\r\n      default:\r\n        return this.renderGeo();\r\n    }\r\n  }\r\n  render() {\r\n    const season = Season[this.state.world.date.season];\r\n    return (\r\n      <div className=\"canvas\"><SfxContext.Provider value={this.state.world.sfx}>\r\n        <TransformWrapper\r\n          defaultScale={1}\r\n          wheel={{ step: 48 }}>\r\n          <TransformComponent>\r\n            <div className=\"world\">\r\n              {this.main()}\r\n            </div>\r\n          </TransformComponent>\r\n        </TransformWrapper>\r\n        <div className=\"overlay\">\r\n          <Modal show={this.state.activeModal == 'greeting'} onClick={() => this.setState({ activeModal: null })}>\r\n            <GreetingPanel></GreetingPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'party_creation'} onClick={() => this.setState({ activeModal: null })} hideCloseButton={true}>\r\n            <FoundParty cities={this.state.world.cities} onFound={this.foundParty}></FoundParty>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'party'} onClick={() => this.setState({ activeModal: null })}>\r\n            <PartyOverview world={this.state.world} setPolicy={this.setPolicy}></PartyOverview>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'polisci'} onClick={() => this.setState({ activeModal: null })}>\r\n            <ResearchPanel release={this.releaseBean} setResearch={this.setResearch} player={this.state.world.alien}></ResearchPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'policy'} onClick={() => this.setState({ activeModal: null })}>\r\n            <GovernmentPanel world={this.state.world}></GovernmentPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'campaign'} onClick={() => this.setState({ activeModal: null })}>\r\n            <CampaignsPanel></CampaignsPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({ activeModal: null })}>\r\n            {(this.state.activeModal == 'economy' ? <EconomyReport world={this.state.world}></EconomyReport> : '')}\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'traits'} onClick={() => this.setState({ activeModal: null })}>\r\n            <TraitsReport seenBeliefs={this.state.world.alien.seenBeliefs} beliefInventory={this.state.world.alien.beliefInventory}\r\n            ></TraitsReport>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'brainwash'} onClick={() => this.setState({ activeModal: null })}>\r\n            {(this.state.activeModal == 'brainwash' ? <BrainwashingContent\r\n              world={this.state.world} beanID={this.state.activeBeanID}\r\n              washCommunity={this.washCommunity}\r\n              washMotive={this.washMotive}\r\n              washNarrative={this.washNarrative}\r\n              washBelief={this.washBelief}\r\n              implantBelief={this.implantBelief}>\r\n            </BrainwashingContent> : '')}\r\n          </Modal>\r\n          <div className=\"left\">\r\n            <div className=\"top\">\r\n              <span>\r\n                👽 Alien 🌍 Utopia 🔬 Lab\r\n            </span>\r\n              <span>\r\n                &nbsp;\r\n              Year {this.state.world.date.year},\r\n              &nbsp;\r\n              {season} {this.state.world.date.day} {this.renderHour()}\r\n              </span>\r\n              <button type=\"button\" onClick={() => this.setState({ activeMain: 'network' })}>🌐</button>\r\n              <button type=\"button\" onClick={() => this.setState({ activeMain: 'geo' })}>🌎</button>\r\n\r\n              <StopPlayFastButtons timeScale={this.state.timeScale} setTimeScale={(n: number) => { this.setState({ timeScale: n }) }}></StopPlayFastButtons>\r\n            </div>\r\n            <div className=\"bottom\">\r\n              <BubbleNumberText changeEvent={this.state.world.alien.energy.change} icon=\"⚡️\">\r\n                <CapsuleLabel icon=\"⚡️\" label=\"Energy\">\r\n                  {this.state.world.alien.energy.amount.toFixed(1)}\r\n                </CapsuleLabel>\r\n              </BubbleNumberText>\r\n              <BubbleNumberText changeEvent={this.state.world.alien.bots.change} icon=\"🤖\">\r\n                <CapsuleLabel icon=\"🤖\" label=\"Bots\">\r\n                  {this.state.world.alien.bots.amount.toFixed(1)}\r\n                </CapsuleLabel>\r\n              </BubbleNumberText>\r\n              <BubbleNumberText changeEvent={this.state.world.alien.hedons.change} icon=\"👍\">\r\n                <CapsuleLabel icon=\"👍\" label=\"Hedons\">\r\n                  {this.state.world.alien.hedons.amount.toFixed(0)}\r\n                </CapsuleLabel>\r\n              </BubbleNumberText>\r\n              {/* <BubbleText changeEvent={this.state.world.alien.tortrons.change} icon=\"💔\">\r\n                <CapsuleLabel icon=\"💔\" label=\"Tortrons\">\r\n                  {this.state.world.alien.tortrons.amount.toFixed(0)}\r\n                </CapsuleLabel>\r\n              </BubbleText> */}\r\n              <span>\r\n                <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'economy' })}>📊 State of the Utopia</button>\r\n                <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'party' })}>🗳️ Gov</button>\r\n                <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'polisci' })}>🧪 Research</button>\r\n                \r\n                <BubbleSeenTraitsText changeEvent={this.state.world.alien.seenBeliefs.onAdd} icon=\"🧠\">\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'traits' })}>🧠 Traits</button>\r\n                </BubbleSeenTraitsText>\r\n                {/* <button type=\"button\" onClick={() => this.setState({activeModal:'campaign'})}>Campaigns</button> */}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"full-width-tabs\">\r\n              <button onClick={() => this.setState({ activeRightPanel: 'overview' })}>📈 Info</button>\r\n              <button onClick={() => this.setState({ activeRightPanel: 'market' })}>🛍️ Market</button>\r\n              <button onClick={() => this.setState({ activeRightPanel: 'events' })}>\r\n                <TimelyEventToggle event={this.state.world.bus.speechcrime} eventIcon=\"🚨\" eventClass=\"police-siren\">📣</TimelyEventToggle> Events\r\n              </button>\r\n              <button onClick={() => this.setState({ activeRightPanel: 'goals' })}>🏆 Goals</button>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n              {this.getPanel()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </SfxContext.Provider></div>\r\n    )\r\n  }\r\n  renderHour(): string {\r\n    switch (this.state.world.date.hour) {\r\n      default: return '☀️';\r\n      case Hour.Evening: return '🌇';\r\n      case Hour.Morning: return '🌄';\r\n      case Hour.Midnight: return '🌙';\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}