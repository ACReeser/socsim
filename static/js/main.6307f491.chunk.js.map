{"version":3,"sources":["simulation/Time.tsx","events/Events.tsx","simulation/Geography.tsx","petri-ui/Building.tsx","simulation/Agent.tsx","simulation/Bean.tsx","WorldGen.tsx","simulation/Economy.tsx","World.tsx","simulation/Politics.tsx","simulation/Institutions.tsx","simulation/Government.tsx","Game.tsx","simulation/Player.tsx","simulation/Utils.tsx","simulation/City.tsx","widgets/Modal.tsx","widgets/NeedReadout.tsx","right-panel/OverviewPanel.tsx","petri-ui/AnimatedBean.tsx","petri-ui/WorldTile.tsx","modal-content/EconomyReport.tsx","right-panel/Events.tsx","widgets/CardButton.tsx","right-panel/BeanPanel.tsx","modal-content/FoundParty.tsx","widgets/Dropdown.tsx","widgets/PolicyDropdown.tsx","modal-content/PartyOverview.tsx","App.tsx","widgets/BubbleText.tsx","widgets/SocialGraph.tsx","widgets/CapsuleLabel.tsx","right-panel/Goals.tsx","modal-content/Campaigns.tsx","modal-content/Gov.tsx","modal-content/Research.tsx","widgets/StopPlayFast.tsx","widgets/CostSmall.tsx","right-panel/HexPanel.tsx","serviceWorker.js","index.js"],"names":["Season","PubSub","onPublish","callbacks","args","this","forEach","c","callback","push","splice","indexOf","ChangePubSub","EventBus","physicalCapital","politicalCapital","labor","Now","world","year","date","season","day","withinLastYear","current","last","Hex","q","r","hex_directions","hex_direction","direction","hex_neighbor","hex","dir","hex_ring","center","radius","a","k","results","cube","b","hex_add","i","j","move_towards","target","maxDistanceDelta","x","y","magnitude","Math","sqrt","lerp","t","cube_lerp","z","cube_round","rx","round","ry","rz","x_diff","abs","y_diff","z_diff","cube_to_axial","axial_to_cube","cube_linedraw","N","cube_distance","layout_flat","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","origin_point","hex_to_pixel","size","origin","h","M","polarToPoint","p","cos","az","sin","getBuildingTransform","geo","type","key","byType","coordByID","transformPoint","hex_size","petriOrigin","background","transform","BuildingIcon","GoodToBuilding","JobToBuilding","Geography","byCoord","house","all","farm","hospital","theater","courthouse","church","movers","numberOfRings","hexes","concat","hex_spiral","petriRadius","length","where","building","undefined","slot_size","getSlotOffset","PetriBuilding","map","d","className","style","props","city","slots","React","Component","AgentState","data","agent","elapsed","deltaMS","newState","_act","Elapsed","IdleState","Bean","discrete_food","GoodToThreshold","sufficient","points","RouteRandom","TravelState","create","act","good","daysSinceSlept","DaysUntilSleepy","discrete_health","job","JobToGood","destinations","pos","newPos","speed","location","shift","intent","ActToState","WorkState","economy","law","work","BuyState","sinceLastAttemptMS","attempts","_bought","buy","tryBuy","getCrimeDecision","CrimeState","ChatState","steal","mover","buildingType","destination","GetRandom","destinationKey","address","start","pt","pixel_to_hex","offset","Route","DaysUntilHomeless","cityKey","alive","dob","name","sanity","discrete_sanity","activity_queue","markers","ethnicity","lastApproval","shelter","community","ideals","faith","cash","partyLoyalty","lastHappiness","lastSentiment","lastPartySentiment","ticksSinceLastSale","lastApprovalDate","lastInsultDate","fairGoodPrice","food","buyFood","medicine","buyMeds","fun","buyHousing","state","onAct","econ","homeCity","mods","TraitToModifier","health","majorityEthnicity","reason","mod","MaslowScore","Deficient","getCostOfLiving","party","result","environment","differingPolicies","policy","GetHappiness","getHappinessModifiers","sent","getSentimentModifiers","myGood","getFairGoodPrice","traits","policies","multiplier","fx","mag","costOfLiving","bad","idea","canBaby","crimeReason","roll","random","chance","Boolean","tryFindRandomJob","min","newJob","mostInDemandJob","produceAndPrice","groceries","tryTransact","bought","housing","starve","maybeDie","exposure","meds","breedBean","icon","message","isInCrisis","direct","canDonate","threshold","baseChance","cause","die","onCitizenDie","abundant","AllGoods","Economy","market","OrderBook","charity","unfulfilledSeasonalDemand","totalSeasonalDemand","totalSeasonalSupply","onBeanDie","deadBean","g","existing","getBeansListings","lucky","getRandomCitizen","sellerCityKey","sellerBeanKey","seller","buyer","minDemand","maxDemand","listing","getLowestPriceListing","actualDemand","quantity","price","transact","listings","subtractFromListing","addNewListing","sort","getOrgsListings","inventory","addNewOrgListing","reduce","max","GoodToJob","supply","demand","fullListings","filter","l","numberOfSamePriceListings","lowPrice","floor","find","sellerOrganizationKey","sale","bean","org","BaseParty","playerKey","organizations","slogan","availablePolicies","proposedPolicy","availableCampaigns","activeCampaigns","materialCapital","activeHQs","platform","seasonalBudget","Object","keys","ax","policyTree","NoPolicy","axis","Policies","hint","PolicyTree","dict","pol","PolicyByKey","Charity","institutionKey","parentInstitution","beansHelped","addCharity","Government","values","triadToString","cost","sign","costs","energy","bots","psi","join","DefaultDifficulty","emptyHex","build","kidnap","scan","brainwash","abduct","gift","empower","disappear","siphon","Goals","found_utopia","text","check","build_house_n_farm","cities","reward","kidnap_3","alien","scanned_bean","set_policy","Player","amount","income","change","next_grade","difficulty","goals","goalProgress","publish","goal","done","step","shuffle","array","counter","index","temp","World","institutions","Spring","yearsEvents","bus","calculate","beans","calculateBeliefs","inflate","resetYearlyCounters","resetSeasonalDemand","fundOrganizations","e","age","maybeBaby","getTaxesAndDonations","calculateComputedState","checkGoals","exit","enter","ChangeState","Act","percent","sum","o","yearlyInflationDollars","richest","obj","winner","yearsPartyDonations","budget","list","historicalBeans","institute","TraitIcon","hapMod","Sufficient","Abundant","GoodIcon","reportIdeals","_report","reportCommunity","defWin","beanPropGet","avg","stash","value","trait","City","url","houses","partyHQ","doOnCitizenDie","shuffled","parent","GenerateBean","donation","maybeDonate","count","circle","square","triangle","GetRandomNumber","randomBuffer","Uint32Array","window","crypto","getRandomValues","randomNumber","ceil","choices","PI","GenerateBuilding","newBuilding","numberOf","occupied_slots","empty_slots","addBuilding","GenerateWorld","wel_food","wel_house","wel_health","econ_ex","econ_labor","econ_sub","cul_rel","cul_theo","cul_ed","law_vote","law_bribe","law_imm","tax_basic","tax_second","GenerateCity","previousCityCount","newCity","previousBeanCount","newBean","base","StartingCash","Modal","show","hideCloseButton","onClick","closeButtonText","children","getButton","NeedReadout","dire","need","dire_style","width","full","full_style","header","keyToName","OverviewPanel","toFixed","clearCity","avg_happy","avg_cash","avg_approval","report","hq","AxisReadout","maj","AnimatedBean","animate","setState","point","spin","face","getFace","delaySeedSec","paused","static","subscribe","getIdea","classes","sitStill","animationDelay","title","stopPropagation","getPurchase","WorldTile","mtn_transforms","tile","activeTileID","onBeanClick","deaths","left","buildings","renderBuildings","regions","xy","onHexClick","mtns","height","cx","cy","stroke","fill","median","half","EconomyReport","food_median","health_median","wealth_total","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","s","jobs","unemployed","jobless","reducer","farmer","builder","doc","EventsPanel","events","CardButton","thin","singleLine","subtext","TraitToCard","BeanPanel","faceOverride","_resetFace","insult","support","setTimeout","scanned","chanceToDonate","renderTraits","happyTable","disabled","canSupport","FoundParty","onName","onSlogan","onCity","ideal","members","val","onBigFourChange","checked","onChange","onCommunity","currentTarget","onIdeal","onFound","Dropdown","selected","hidden","options","getTitleForOption","getTextForOption","required","PolicyDropdown","PartyOverview","policyKey","setPolicy","magToTextSw","compass","BubbleText","ev","id","Date","positive","bubbles","changeEvent","unsubscribe","bubbleClass","SocialGraph","CapsuleLabel","classN","label","GoalsPanel","progress","tooltip","renderReward","renderGoal","margin","colSpan","CampaignsPanel","GovernmentPanel","ResearchPanel","StopPlayFastButtons","timeScale","setTimeScale","CostSmall","HexPanel","eHex","clearHex","lookupBuilding","buildingPanel","emptyPanel","ego","trad","prog","book","heart","music","noFaith","hungry","sated","stuffed","podless","crowded","homeowner","sick","bruised","fresh","sane","confused","mad","App","previousTimeMS","logicTickAccumulatorMS","tick","timeMS","deltaTimeMS","simulate_beans","simulate_world","requestAnimationFrame","keyupHandler","event","foundParty","activeModal","what","canAfford","purchase","foundCharity","activeCityID","activeBeanID","activeHex","activeMain","activeRightPanel","document","addEventListener","time","removeEventListener","player","COL","renderNetwork","renderGeo","defaultScale","wheel","main","n","getPanel","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.6307f491.chunk.js","sourcesContent":["import { World } from \"../World\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\n\r\nexport interface IDate{\r\n    day: number;\r\n    season: Season;\r\n    year: number;\r\n}\r\n\r\nexport function Now(world: World){\r\n    return {year: world.date.year, season: world.date.season, day: world.date.day};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","\r\nexport interface IEvent{\r\n    icon: string;\r\n    message: string;\r\n}\r\n\r\nexport class PubSub<T>{\r\n    constructor(private onPublish?: (args: T) => void){}\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public publish(args: T){\r\n        if (this.onPublish)\r\n            this.onPublish(args);\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\nexport class EventBus{\r\n    physicalCapital = new ChangePubSub();\r\n    politicalCapital = new ChangePubSub();\r\n    labor = new ChangePubSub();\r\n}","import { TraitGood, TraitJob } from \"../World\";\r\n\r\nexport interface HexPoint{\r\n    q: number;\r\n    r: number;\r\n}\r\nexport class Hex implements HexPoint{\r\n    constructor(public q: number, public r: number){}\r\n}\r\nexport const hex_directions: HexPoint[] = [\r\n    new Hex(+1, 0), new Hex(+1, -1), new Hex(0, -1), \r\n    new Hex(-1, 0), new Hex(-1, +1), new Hex(0, +1), \r\n];\r\nexport function hex_direction(direction: number): HexPoint{\r\n    return hex_directions[direction]\r\n}\r\n\r\nexport function hex_neighbor(hex: HexPoint, direction: number): HexPoint{\r\n    var dir = hex_direction(direction)\r\n    return new Hex(hex.q + dir.q, hex.r + dir.r)\r\n}\r\nexport function hex_distance(a: HexPoint, b: HexPoint): number{\r\n    return (Math.abs(a.q - b.q) \r\n          + Math.abs(a.q + a.r - b.q - b.r)\r\n          + Math.abs(a.r - b.r)) / 2\r\n}\r\nexport function hex_add(a: HexPoint, b: HexPoint): HexPoint {\r\n    return new Hex(a.q + b.q, a.r + b.r);\r\n}\r\nexport function hex_scale(a: HexPoint, k: number): HexPoint {\r\n    return new Hex(a.q * k, a.r * k);\r\n}\r\nexport function hex_ring(center: HexPoint, radius: number): HexPoint[]{\r\n    var results: HexPoint[] = [];\r\n    // this code doesn't work for radius == 0; can you see why?\r\n    var cube = hex_add(center, \r\n                        hex_scale(hex_direction(4), radius));\r\n    for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < radius; j++) {\r\n            results.push(cube)\r\n            cube = hex_neighbor(cube, i);       \r\n        }\r\n    }\r\n    return results;\r\n}\r\nexport function hex_spiral(center: HexPoint, radius: number): HexPoint[]{\r\n    var results = [center];\r\n    for (let k = 0; k < radius; k++) {\r\n        results = results.concat(hex_ring(center, k));\r\n        //console.log(results);   \r\n    }\r\n    return results;\r\n}\r\n\r\nexport function move_towards(current: Point, target: Point, maxDistanceDelta: number)\r\n{\r\n    const a: Point = {x: target.x - current.x, y: target.y - current.y};\r\n    const magnitude = Math.sqrt(a.x * a.x + a.y * a.y);\r\n    if (magnitude <= maxDistanceDelta || magnitude == 0)\r\n    {\r\n        return target;\r\n    }\r\n    return {\r\n        x: current.x + a.x / magnitude * maxDistanceDelta,\r\n        y: current.y + a.y / magnitude * maxDistanceDelta,\r\n    };\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number{\r\n    return a + (b - a) * t\r\n}\r\n\r\nexport function vector_lerp(a: Point, b: Point, t: number): Point{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t)\r\n    };\r\n}\r\nfunction cube_lerp(a: CubicPoint, b: CubicPoint, t: number): CubicPoint{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t),\r\n        z: lerp(a.z, b.z, t)\r\n    };\r\n}\r\nfunction cube_distance(a: CubicPoint, b: CubicPoint): number{\r\n    return (Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z)) / 2\r\n}\r\nfunction cube_round(cube: CubicPoint): CubicPoint{\r\n    var rx = Math.round(cube.x);\r\n    var ry = Math.round(cube.y);\r\n    var rz = Math.round(cube.z);\r\n\r\n    var x_diff = Math.abs(rx - cube.x)\r\n    var y_diff = Math.abs(ry - cube.y)\r\n    var z_diff = Math.abs(rz - cube.z)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff)\r\n        rx = -ry-rz;\r\n    else if (y_diff > z_diff)\r\n        ry = -rx-rz;\r\n    else\r\n        rz = -rx-ry;\r\n\r\n    return {x: rx, y: ry, z: rz};\r\n}\r\nfunction round_point_to_hex(hex: HexPoint): HexPoint{\r\n    return cube_to_axial(cube_round(axial_to_cube(hex)))\r\n\r\n}\r\nfunction cube_to_axial(cube: CubicPoint){\r\n    var q = cube.x;\r\n    var r = cube.z;\r\n    return new Hex(q, r);\r\n}\r\nfunction axial_to_cube(hex: HexPoint): CubicPoint{\r\n    return {\r\n        x: hex.q,\r\n        z: hex.r,\r\n        y: -hex.q-hex.r\r\n    };\r\n}\r\nfunction cube_linedraw(a: CubicPoint, b: CubicPoint): HexPoint[]{\r\n    var N = cube_distance(a, b);\r\n    var results: HexPoint[] = [];\r\n    for (let i = 0; i <= N; i++) {\r\n        results.push(cube_to_axial(cube_round(cube_lerp(a, b, 1.0/N * i))))\r\n    }\r\n    return results;\r\n}\r\nexport function hex_linedraw(a: HexPoint, b: HexPoint): HexPoint[]{\r\n    return cube_linedraw(axial_to_cube(a), axial_to_cube(b));\r\n}\r\n\r\nclass Orientation {\r\n    // angle is in multiples of 60°\r\n    constructor(public f0: number, public f1: number, public  f2: number, public f3: number,\r\n        public b0: number, public b1: number,public b2: number,public b3: number,\r\n        public start_angle: number){}\r\n};\r\nexport const layout_flat: Orientation = new Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0),\r\n                2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0,\r\n                0.0);\r\nexport const origin_point: Point = {x: 0, y: 0};\r\nexport function hex_to_pixel(size: Point, origin: Point, h: HexPoint): Point {\r\n    const M: Orientation = layout_flat;\r\n    const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\r\n    const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\r\n    return {x: x + origin.x, y: y + origin.y};\r\n}\r\nexport function pixel_to_hex(size: Point, origin: Point, p: Point) {\r\n    const M = layout_flat;\r\n    const pt = {x: (p.x - origin.x) / size.x,\r\n                y: (p.y - origin.y) / size.y\r\n            };\r\n    const q = M.b0 * pt.x + M.b1 * pt.y;\r\n    const r = M.b2 * pt.x + M.b3 * pt.y;\r\n    return new Hex(q, r);\r\n}\r\n\r\n\r\nexport interface PolarPoint{\r\n    /**\r\n     * radius (in pixels)\r\n     */\r\n    r: number;\r\n    /**\r\n     * azimuth (radians)\r\n     */\r\n    az: number;\r\n}\r\n\r\nexport function polarToPoint(p: PolarPoint): Point{\r\n    return {\r\n        x: p.r * Math.cos(p.az),\r\n        y: p.r * Math.sin(p.az)\r\n    }\r\n}\r\n\r\nexport function distanceBetweenPolar(a: PolarPoint, b: PolarPoint): number{\r\n    const aCart = polarToPoint(a);\r\n    const bCart = polarToPoint(b)\r\n    return Math.sqrt(\r\n        Math.pow(aCart.x - aCart.x, 2) +\r\n        Math.pow(bCart.y - aCart.y, 2)\r\n    );\r\n}\r\n\r\nexport interface Point{\r\n    x: number; y: number;\r\n}\r\nexport interface Vector extends Point{\r\n}\r\nexport interface CubicPoint extends Point{\r\n    z: number;\r\n}\r\n\r\n\r\n/**\r\n * matter lookup, returns CSS transforms for translation\r\n * @param geo \r\n * @param type \r\n * @param key \r\n */\r\nexport function getBuildingTransform(geo: Geography, type: BuildingTypes, key: number){\r\n    const p = geo.byType[type].coordByID[key];\r\n    if (p)\r\n        return transformPoint(hex_to_pixel(geo.hex_size, geo.petriOrigin, p));\r\n    else\r\n        return {background: 'red'}\r\n}\r\nexport function transformPoint(p: Point){\r\n    return {transform:`translate(${p.x}px, ${p.y}px)`};\r\n}\r\n\r\nexport interface IBuilding{\r\n    key: number;\r\n    type: BuildingTypes;\r\n    occupied_slots: Point[],\r\n    empty_slots: Point[],\r\n    \r\n}\r\nexport class Building{\r\n    public key: number = 0;\r\n    public type: BuildingTypes = 'farm';\r\n    public occupied_slots: Point[] = [];\r\n    public empty_slots: Point[] = [];\r\n\r\n    public reserve_slot(): Point|undefined{\r\n        const s = this.empty_slots.pop();\r\n        if (s){\r\n            this.occupied_slots.push(s);\r\n        }\r\n        return s;\r\n    }\r\n    public free_slot(point: Point){\r\n        const i = this.occupied_slots.findIndex((x) => x.x == point.x && x.y == point.y);\r\n        if (i > -1)\r\n            this.occupied_slots.splice(i, 1);\r\n        this.empty_slots.push(point);\r\n    }\r\n}\r\n\r\n/**\r\n * address books allow lookups from entity \"name\" to location\r\n */\r\nexport interface AddressBookHex{\r\n    [entityKey: number]: HexPoint\r\n}\r\nexport interface AddressBookPoint{\r\n    [entityKey: number]: Point\r\n}\r\n/**\r\n * address grids allow lookups from location to entity\r\n * \r\n * note: coordinates are of form \"X,Y\"\r\n * and the map cannot distinguish between hex and cartesian points\r\n */\r\nexport interface AddressGrid<T>{\r\n    [coordinate: string]: T|undefined\r\n}\r\nexport interface AddressBuildingGrid extends AddressGrid<IBuilding>{}\r\n\r\nexport interface BuildingMap{\r\n    coordByID: AddressBookHex;\r\n    all: IBuilding[];\r\n}\r\n\r\nexport type BuildingTypes = 'farm'|'house'|'hospital'|'church'|'theater'|'courthouse';\r\nexport type MoverTypes = 'bean';\r\nexport type MatterTypes = MoverTypes|BuildingTypes;\r\n\r\nexport const BuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🎑',\r\n    'house': '🏡', 'hospital': '🏥', 'church': '⛪', 'theater': '🏟️', 'courthouse':'🏫'\r\n};\r\nexport const GoodToBuilding: {[key in TraitGood]: BuildingTypes} = {\r\n    'food': 'farm',\r\n    'shelter': 'house', 'medicine':'hospital', 'fun': 'theater'\r\n};\r\nexport const JobToBuilding: {[key in TraitJob]: BuildingTypes} = {\r\n    'farmer': 'farm',\r\n    'builder': 'house', 'doc':'hospital', 'entertainer': 'theater',\r\n    'cleric': 'church', 'jobless': 'house', 'polit': 'house'\r\n};\r\n\r\nexport class Geography{\r\n    public byCoord: AddressBuildingGrid = {};\r\n    public byType: {[type in BuildingTypes]: BuildingMap} = {\r\n        house: {coordByID: {}, all: []},\r\n        farm: {coordByID: {}, all: []},\r\n        hospital: {coordByID: {}, all: []},\r\n        theater: {coordByID: {}, all: []},\r\n        courthouse: {coordByID: {}, all: []},\r\n        church: {coordByID: {}, all: []},\r\n    }\r\n     \r\n    public movers: {[key in MoverTypes]: AddressBookPoint} = {\r\n        'bean': {}\r\n    };\r\n    public numberOf(type: BuildingTypes): number {\r\n        return this.byType[type].all.length;\r\n    }\r\n    lookupBuilding(hex: HexPoint): undefined|IBuilding {\r\n        return this.byCoord[hex.q+','+hex.r];\r\n    }\r\n    addBuilding(where: HexPoint, building: IBuilding) {\r\n        this.byType[building.type].all.push(building);\r\n        this.byType[building.type].coordByID[building.key] = where;\r\n        this.byCoord[where.q+','+where.r] = building;\r\n        return null;\r\n    }\r\n    removeBuilding(where: HexPoint, building: IBuilding) {\r\n        const i = this.byType[building.type].all.indexOf(building);\r\n        this.byType[building.type].all.splice(i, 1);\r\n        delete this.byType[building.type].coordByID[building.key];\r\n        this.byCoord[where.q+','+where.r] = undefined;\r\n        return null;\r\n    }\r\n    public numberOfRings = 5;\r\n    public hexes: HexPoint[] = hex_spiral({q:0, r:0}, this.numberOfRings);\r\n    public hex_size: Point = {x: 70, y: 70};\r\n    public readonly petriRadius = 550;\r\n    public readonly petriOrigin = {x: this.petriRadius, y: this.petriRadius};\r\n}","\r\nimport React from \"react\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, Geography, getBuildingTransform, hex_directions, transformPoint, hex_to_pixel, origin_point, HexPoint } from \"../simulation/Geography\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport './Building.css';\r\n\r\nconst slot_size = {\r\n    x: 25,\r\n    y: 25\r\n}\r\nexport function getSlotOffset(direction: HexPoint){\r\n    return hex_to_pixel(slot_size, origin_point, direction);\r\n}\r\nexport function getRandomSlotOffset(){\r\n    return getSlotOffset(GetRandom(hex_directions));\r\n}\r\n\r\nexport class PetriBuilding extends React.Component<{\r\n    city: Geography,\r\n    building: IBuilding\r\n}> {\r\n    slots() {\r\n        return hex_directions.map((d, i) => {\r\n            return <span key={i} className=\"slot\" style={transformPoint(getSlotOffset(d))}>\r\n\r\n            </span>\r\n        });\r\n    }\r\n    render() {\r\n        return <div key={this.props.building.type+this.props.building.key} style={getBuildingTransform(this.props.city, this.props.building.type, this.props.building.key)} \r\n        className={\"building \"+this.props.building.type}>\r\n        {BuildingIcon[this.props.building.type]}\r\n        {this.slots()}\r\n        </div>\r\n    }\r\n}","import { Agent } from \"https\";\r\nimport { Bean, DaysUntilSleepy } from \"./Bean\";\r\nimport { getRandomSlotOffset } from \"../petri-ui/Building\";\r\nimport { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitGood, GoodToThreshold, JobToGood, TraitSanity } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { BuildingTypes, Geography, GoodToBuilding, HexPoint, hex_linedraw, hex_to_pixel, IBuilding, JobToBuilding, move_towards, pixel_to_hex, Point, Vector } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { PubSub } from \"../events/Events\";\r\n\r\nexport type Act = 'travel'|'work'|'sleep'|'chat'|'soapbox'|'craze'|'idle'|'buy'|'crime';\r\n\r\n/**\r\n * cruise == interruptible travel towards destination\r\n * \r\n * approach == uninterruptible travel into destination slot\r\n */\r\nexport type Travel = 'cruise'|'approach';\r\n\r\nexport interface IActivityData {\r\n    act: Act;\r\n    elapsed?: number;\r\n    location?: Point, //FROM Point\r\n    destinations?: Point[]; //point to travel to??\r\n    intent?: IActivityData; //when travelling, what do you intend to do next\r\n    good?: TraitGood; //good to buy or work\r\n    timeSpent?: number; //time spent on this action\r\n    travel?: Travel;\r\n}\r\n\r\nexport interface IAgent {\r\n    state: AgentState;\r\n    onAct?: PubSub<number>;\r\n}\r\nexport function ChangeState(agent: IAgent, newState: AgentState){\r\n    if ((agent as any)['key'] === 0)\r\n    //console.log(`from ${agent.state.data.act} to ${newState.data.act} in ${agent.state.Elapsed}`);\r\n    agent.state.exit(agent);\r\n    agent.state = newState;\r\n    agent.state.enter(agent);\r\n}\r\nexport function Act(agent: IAgent, deltaMS: number): void{\r\n    const result = agent.state.act(agent, deltaMS);\r\n    if (agent.onAct)\r\n        agent.onAct.publish(deltaMS);\r\n    if (result != agent.state){\r\n        ChangeState(agent, result);\r\n    }\r\n}\r\n\r\nexport abstract class AgentState{\r\n    constructor(public data: IActivityData){}\r\n    public get Elapsed(): number {return this.data.elapsed || 0;}\r\n    enter(agent: IAgent){\r\n        this.data.elapsed = 0;\r\n    }\r\n    act(agent: IAgent, deltaMS: number): AgentState{\r\n        const newState = this._act(agent, deltaMS);\r\n        this.data.elapsed = this.Elapsed + deltaMS;\r\n        return newState;\r\n    }\r\n    abstract _act(agent: IAgent, deltaMS: number): AgentState;\r\n    exit(agent: IAgent){\r\n\r\n    }\r\n}\r\nexport class IdleState extends AgentState{\r\n    static create(){ return new IdleState({act: 'idle'})}\r\n    _act(agent: IAgent, deltaMS: number): AgentState{\r\n        if (this.Elapsed < 200){\r\n            return this;\r\n        }\r\n        if (agent instanceof Bean && agent.city){\r\n            if (agent.discrete_food <= GoodToThreshold['food'].sufficient*2){\r\n                const points = RouteRandom(agent.city, agent, GoodToBuilding['food']);\r\n                return TravelState.create(points, {act: 'buy', good: 'food'});\r\n            }\r\n            if (agent.daysSinceSlept >= DaysUntilSleepy){\r\n                const points = RouteRandom(agent.city, agent, GoodToBuilding['shelter']) \r\n                return TravelState.create(points, {act: 'buy', good: 'shelter'});\r\n            }\r\n            if (agent.discrete_health <= GoodToThreshold['medicine'].sufficient*2){\r\n                const points = RouteRandom(agent.city, agent, GoodToBuilding['medicine']) \r\n                return TravelState.create(points, {act: 'buy', good: 'medicine'});\r\n            }\r\n            const points = RouteRandom(agent.city, agent, JobToBuilding[agent.job]);\r\n            return TravelState.create(points, {act: 'work', good: JobToGood(agent.job)});\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class TravelState extends AgentState{\r\n    static create(destinations: Point[], intent: IActivityData){ \r\n        return new TravelState({act: 'travel', destinations: destinations, intent: intent})}\r\n    _act(agent: IAgent, deltaMS: number){\r\n        \r\n        if (agent instanceof Bean && agent.city && this.data.destinations && this.data.destinations.length){\r\n            const pos = agent.city.movers['bean'][agent.key];\r\n            const target = this.data.destinations[0];\r\n            const newPos = move_towards(pos, target, deltaMS / 1000 * agent.speed);\r\n            \r\n            agent.city.movers['bean'][agent.key] = newPos;\r\n            if (newPos.x == target.x && newPos.y == target.y){\r\n                this.data.location = newPos;\r\n                this.data.destinations.shift();\r\n            }\r\n        }\r\n        if (this.data.destinations == null || this.data.destinations.length === 0){\r\n            if (this.data.intent)\r\n                return ActToState[this.data.intent.act](this.data.intent);\r\n            else\r\n                return IdleState.create();\r\n        } else {\r\n            return this;\r\n        }\r\n    }\r\n}\r\nexport class WorkState extends AgentState{\r\n    static create(good: TraitGood){ return new WorkState({act: 'work', good: good})}\r\n    _act(agent: IAgent, deltaMS: number): AgentState{\r\n        if (this.Elapsed > 2000 && agent instanceof Bean && this.data.good && agent.city?.economy && agent.city?.law){\r\n            agent.work(agent.city.law, agent.city.economy);\r\n            return IdleState.create();\r\n        }\r\n        \r\n        return this;\r\n    }\r\n}\r\nexport class BuyState extends AgentState{\r\n    static create(good: TraitGood){ return new BuyState({act: 'buy', good: good})}\r\n    private sinceLastAttemptMS: number = 0;\r\n    private attempts: number = 0;\r\n    tryBuy(agent: IAgent){\r\n        if (agent instanceof Bean && this.data.good && agent.city?.economy)\r\n        {\r\n            this._bought = agent.buy[this.data.good](agent.city.economy);\r\n        }\r\n        this.sinceLastAttemptMS = 0;\r\n        this.attempts++;\r\n    }\r\n    enter(agent: IAgent){\r\n        this.tryBuy(agent);\r\n    }\r\n    private _bought: boolean = false;\r\n    _act(agent: IAgent, deltaMS: number): AgentState{\r\n        if (!this._bought){\r\n            if (this.sinceLastAttemptMS > 250)\r\n            {\r\n                this.tryBuy(agent);\r\n                if(this.attempts >= 3 && (this.data.good == 'food' || this.data.good == 'medicine') &&\r\n                    agent instanceof Bean &&\r\n                    agent.getCrimeDecision(this.data.good, 'desperation')){\r\n                    return CrimeState.create(this.data.good);\r\n                }\r\n            }\r\n        }\r\n        if (this.Elapsed > 1500)\r\n            return IdleState.create();\r\n        else\r\n            return this;\r\n    }\r\n}\r\nexport class ChatState extends AgentState{\r\n    static create(intent: IActivityData){ return new ChatState({act: 'chat', intent: intent})}\r\n    _act(agent: IAgent, deltaMS: number): AgentState{\r\n        \r\n        return this;\r\n    }\r\n}\r\nexport class CrimeState extends AgentState{\r\n    static create(good: 'food'|'medicine'){ return new CrimeState({act: 'crime', good: good})}\r\n    _act(agent: IAgent, deltaMS: number): AgentState{\r\n        if (this.Elapsed > 1500 && agent instanceof Bean && agent.city?.economy && \r\n            (this.data.good === 'food' ||\r\n            this.data.good === 'medicine')){\r\n            agent.steal(this.data.good, agent.city?.economy);\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nconst ActToState: {[key in Act]: (data: IActivityData) => AgentState} = {\r\n    'idle': (data) => new IdleState(data),\r\n    'work': (data) => new WorkState(data),\r\n    'chat': (data) => new ChatState(data),\r\n    'travel': (data) => new TravelState(data),\r\n    'craze': (data) => new BuyState(data),\r\n    'buy': (data) => new BuyState(data),\r\n    'sleep': (data) => new BuyState(data),\r\n    'soapbox': (data) => new BuyState(data),\r\n    'crime': (data) => new BuyState(data)\r\n}\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean{    \r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith?: TraitFaith;\r\n    shelter: TraitShelter;\r\n    health: TraitHealth;\r\n    discrete_food: number;\r\n    cash: number;\r\n    dob: IDate;\r\n    sanity: TraitSanity;\r\n}\r\n\r\nexport interface IMover{\r\n    key: number;\r\n    speed: number;\r\n    direction: Vector;\r\n    markers: Point[];\r\n    destinationKey: number;\r\n}\r\n\r\nexport function Step(geo: Geography, mover: IMover){\r\n    if (mover.markers.length){\r\n        const pos = geo.movers['bean'][mover.key];\r\n        const target = mover.markers[0];\r\n        const newPos = move_towards(pos, target, mover.speed);\r\n        geo.movers['bean'][mover.key] = newPos;\r\n        if (newPos.x == target.x && newPos.y == target.y){\r\n            mover.markers.pop();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * fills out \"markers\" and \"destinationKey\" with random building of type\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function RouteRandom(geo: Geography, mover: IMover, buildingType: BuildingTypes){\r\n    const destination: IBuilding = GetRandom(geo.byType[buildingType].all);\r\n    mover.destinationKey = destination.key;\r\n    return Route(geo, mover, destination);\r\n}\r\n\r\n/**\r\n * fills out \"markers\" property with points to walk to destination\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function Route(geo: Geography, mover: IMover, destination: IBuilding){\r\n    const address: HexPoint = geo.byType[destination.type].coordByID[destination.key];\r\n    const start = geo.movers['bean'][mover.key];\r\n    const nearestHex = pixel_to_hex(geo.hex_size, geo.petriOrigin, start);\r\n    return hex_linedraw(nearestHex, address).map((h) => hex_to_pixel(geo.hex_size, geo.petriOrigin, h)).map((x, i, a) => {\r\n        if (i === a.length-1){\r\n            const offset = getRandomSlotOffset();\r\n            return {\r\n                x: x.x + offset.x,\r\n                y: x.y + offset.y\r\n            }\r\n        } else {\r\n            return x;\r\n        }\r\n    });\r\n}\r\nexport function Approach(geo: Geography, mover: IMover){\r\n\r\n}","import { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitFood, TraitJob, JobToGood, IHappinessModifier, TraitToModifier, MaslowScore, GetHappiness, GoodToThreshold, TraitGood, TraitSanity } from \"../World\";\r\nimport { RandomEthno, GetRandom } from \"../WorldGen\";\r\nimport { Economy, ISeller } from \"./Economy\";\r\nimport { Policy, Party } from \"./Politics\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\nimport { IDate, withinLastYear } from \"./Time\";\r\nimport { Government } from \"./Government\";\r\nimport { AgentState, IActivityData, IAgent, IBean, IdleState, IMover } from \"./Agent\";\r\nimport { Point } from \"./Geography\";\r\nimport { City } from \"./City\";\r\n\r\n\r\nconst BabyChance = 0.01;\r\nexport const DaysUntilSleepy = 7;\r\nconst DaysUntilHomeless = DaysUntilSleepy * 2;\r\nexport class Bean implements IBean, ISeller, IMover, IAgent{\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public alive: boolean = true;\r\n    public dob: IDate = {year: 0, season: 0, day: 1};\r\n    public name: string = 'Human Bean';\r\n    public sanity: TraitSanity = 'sane'\r\n    public discrete_sanity: number = 10;\r\n\r\n    public activity_queue: IActivityData[] = [];\r\n    public speed = 60;\r\n    public direction = {x: 0,y:0}; \r\n    public markers: Point[] = [];\r\n    public destinationKey = 0;\r\n\r\n\r\n    public city: City|null = null;\r\n\r\n    public ethnicity: TraitEthno = RandomEthno();\r\n    public lastApproval: IDate = {year: -1, season: 0, day: 0};\r\n\r\n    //maslow\r\n    public discrete_food: number = 1;\r\n    public get food(): TraitFood {\r\n        if (this.discrete_food >= GoodToThreshold['food'].abundant)\r\n        return 'stuffed';\r\n        else if (this.discrete_food >= GoodToThreshold['food'].sufficient)\r\n        return 'sated'\r\n        else\r\n        return 'hungry';\r\n    }\r\n    public shelter: TraitShelter = 'crowded';\r\n    public discrete_health: number = 2;\r\n    public get health(): TraitHealth {\r\n        if (this.discrete_health >= GoodToThreshold['medicine'].abundant)\r\n        return 'fresh';\r\n        else if (this.discrete_health >= GoodToThreshold['medicine'].sufficient)\r\n        return 'bruised'\r\n        else\r\n        return 'sick';\r\n    }\r\n    //values\r\n    public community: TraitCommunity = 'ego';\r\n    public ideals: TraitIdeals = 'trad';\r\n    //other\r\n    public job: TraitJob = 'jobless';\r\n    public faith?: TraitFaith;\r\n    public cash: number = 3;\r\n    public partyLoyalty: number = 0.2;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastHappiness: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastSentiment: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastPartySentiment: number = 0;\r\n    public ticksSinceLastSale: number = 0;\r\n    public daysSinceSlept: number = 0;\r\n    public lastApprovalDate: IDate = {year: -1, season: 0, day: 0};\r\n    public lastInsultDate: IDate = {year: -1, season: 0, day: 0};\r\n    public fairGoodPrice: number = 1;\r\n    get isInCrisis(): boolean{\r\n        return this.food == 'hungry' ||\r\n        this.shelter == 'podless' ||\r\n        this.health == 'sick';\r\n    }\r\n    getHappinessModifiers(econ: Economy, homeCity: City, law: Government): IHappinessModifier[]{\r\n        const mods: IHappinessModifier[] = [\r\n            TraitToModifier[this.food],\r\n            TraitToModifier[this.shelter],\r\n            TraitToModifier[this.health],\r\n        ];\r\n        if (this.ideals == 'trad' && this.ethnicity != homeCity.majorityEthnicity) {\r\n            mods.push({reason: 'Xenophobic', mod: -.1});\r\n        }\r\n        if (this.cash < 1) {\r\n            mods.push({reason: 'Penniless', mod: MaslowScore.Deficient});\r\n        } else if (this.cash > econ.getCostOfLiving() * 3){\r\n            mods.push({reason: 'Upper Class', mod: 0.3});\r\n        } else if (this.cash > econ.getCostOfLiving() * 2){\r\n            mods.push({reason: 'Middle Class', mod: 0.15});\r\n        }\r\n        if (this.job == 'jobless') {\r\n            mods.push({reason: 'Unemployed', mod: MaslowScore.Deficient});\r\n        }\r\n\r\n        return mods;\r\n    }\r\n    getSentimentModifiers(econ: Economy, homeCity: City, law: Government, party: Party): {\r\n        party: IHappinessModifier[],\r\n        law: IHappinessModifier[]\r\n    }{\r\n        const result = {party: [] as IHappinessModifier[], law: [] as IHappinessModifier[]};\r\n\r\n        if (this.community == party.community){\r\n            result.party.push({reason: 'Same Community', mod: 0.15});\r\n        }\r\n        if (this.ideals == party.ideals){\r\n            result.party.push({reason: 'Same Ideals', mod: 0.15});\r\n        } else if (this.community != party.community){\r\n            result.party.push({reason: 'Incompatible Values', mod: -0.15});\r\n        }\r\n        if (homeCity.environment && withinLastYear(homeCity.environment, this.lastApprovalDate)){\r\n            result.party.push({reason: 'Public Endorsement', mod: 0.2});   \r\n        }\r\n        party.differingPolicies(law).forEach((policy) => {\r\n            if (policy.community && policy.community == this.community){\r\n                result.party.push({reason: 'Likes '+policy.name, mod: 0.1});\r\n            } else if (policy.ideals && policy.ideals == this.ideals){\r\n                result.party.push({reason: 'Likes '+policy.name, mod: 0.1});\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    calculateBeliefs(econ: Economy, homeCity: City, law: Government, party: Party): void{\r\n        this.lastHappiness = GetHappiness(this.getHappinessModifiers(econ, homeCity, law));\r\n        const sent = this.getSentimentModifiers(econ, homeCity, law, party);\r\n        this.lastSentiment = GetHappiness(sent.law);\r\n        this.lastPartySentiment = GetHappiness(sent.party);\r\n\r\n        if (this.job == 'jobless'){\r\n            this.fairGoodPrice = 1;\r\n        } else {\r\n            const myGood = JobToGood(this.job);\r\n            this.fairGoodPrice = econ.getFairGoodPrice(myGood);\r\n        }\r\n    }\r\n    /**\r\n     * non-normalized multiplier\r\n     */\r\n    getSentimentPolicies(traits: {[x:string]:boolean}, policies: Policy[]){\r\n        let multiplier = 100;\r\n        policies.forEach((policy) => {\r\n            policy.fx.forEach((fx) => {\r\n                if (traits[fx.key])\r\n                multiplier += fx.mag * 10; //-30 to +30\r\n            });\r\n        });\r\n        return multiplier / 100;\r\n    }\r\n    _getTraitMap(){\r\n        let traits = {[this.community]: true, [this.ideals]:  true, [this.ethnicity]: true};\r\n        if (this.faith)\r\n            traits[this.faith] = true;\r\n        return traits;\r\n    }\r\n    getFace(): string{\r\n        if (!this.alive)\r\n            return '💀';\r\n        if (this.state.data.act == 'buy' && this.state.data.good == 'shelter'){\r\n            return '😴';\r\n        }\r\n        if (this.state.data.act == 'crime'){\r\n            return '😈';\r\n        }\r\n        if (this.food == 'hungry')\r\n            return '😫';\r\n        if (this.health == 'sick')\r\n            return '🤢';\r\n        if (this.shelter == 'podless')\r\n            return '🥶';\r\n        if (this.job == 'jobless')\r\n            return '😧';\r\n        if (this.lastHappiness < 0)\r\n            return '☹️';\r\n        if (this.lastHappiness >= 50)\r\n            return '🙂';\r\n        return '😐';\r\n    }\r\n    getIdea(costOfLiving: number): {bad: boolean, idea: string}|null {\r\n        if (this.food == 'hungry')\r\n            return {bad: true, idea: '🍗'};\r\n        if (this.health == 'sick')\r\n            return {bad: true, idea: '💊'};\r\n        if (this.shelter == 'podless')\r\n            return {bad: true, idea: '🏠'};\r\n        if (this.canBaby(costOfLiving))\r\n            return {bad: false, idea: '👶'};\r\n        return null;        \r\n    }\r\n    getCrimeDecision(\r\n        good: TraitGood,\r\n        crimeReason: 'desperation'|'greed',\r\n    ){\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community == 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (crimeReason === 'desperation' && this.health === 'sick' || this.food === 'hungry'){\r\n            chance += .15;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    tryFindRandomJob(law: Government) {\r\n        if (Math.random() <= 0.5) {\r\n            this.job = GetRandom(['builder', 'doc', 'farmer']);\r\n        }\r\n    }\r\n    canInsult(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastInsultDate));\r\n    }\r\n    canSupport(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastApprovalDate));\r\n    }\r\n    work(law: Government, econ: Economy) {\r\n        if (this.job == 'jobless'){\r\n            this.tryFindRandomJob(law);\r\n        } else {\r\n            switch(this.job){\r\n                case 'farmer':\r\n                    this.discrete_food = Math.min(this.discrete_food+1, GoodToThreshold.food.sufficient*2);\r\n                    break;\r\n                case 'doc':\r\n                    this.discrete_health = Math.min(this.discrete_health+1, GoodToThreshold.medicine.sufficient*2);\r\n                    break;\r\n                case 'builder': \r\n                    this.shelter = 'crowded';\r\n                    this.daysSinceSlept = 0;\r\n                    break;\r\n            }\r\n            this.ticksSinceLastSale++;\r\n            if (this.ticksSinceLastSale > 7){\r\n                //underemployment\r\n                if (Math.random() > 0.5) {\r\n                    const newJob = econ.mostInDemandJob();\r\n                    if (newJob)\r\n                        this.job = newJob;\r\n                }\r\n            }\r\n            econ.produceAndPrice(this, JobToGood(this.job), 4, this.fairGoodPrice);\r\n        }\r\n    }\r\n    private buyFood(economy: Economy) {\r\n        const groceries = economy.tryTransact(this, 'food', 0.5, 3);\r\n        if (groceries)\r\n            this.discrete_food += groceries.bought;\r\n        return groceries;\r\n    }\r\n    public buy: {[key in TraitGood]: (econ: Economy)=> boolean} = {\r\n        food: (economy: Economy) =>{\r\n            return this.buyFood(economy) != null;\r\n        },\r\n        medicine:  (economy: Economy) =>{\r\n            return this.buyMeds(economy) != null;\r\n        },\r\n        fun:  (economy: Economy) =>{\r\n            return false;\r\n        },\r\n        shelter: (economy: Economy) => {\r\n            return this.buyHousing(economy);\r\n        }\r\n    }\r\n    public steal(good: 'food'|'medicine', econ: Economy){\r\n        econ.steal(good, 3);\r\n    }\r\n    private buyHousing(economy: Economy): boolean {\r\n        const housing = economy.tryTransact(this, 'shelter');\r\n        if (housing) {\r\n            this.daysSinceSlept = 0;\r\n            this.shelter = 'crowded';\r\n        } else if (this.daysSinceSlept >= DaysUntilHomeless){\r\n            this.shelter = 'podless';\r\n        }\r\n        return housing != null;\r\n    }\r\n\r\n    age(economy: Economy): IEvent|null {\r\n        if (!this.alive) return null;\r\n\r\n        this.discrete_food -= 1/7;\r\n        if (this.discrete_food < 0)\r\n            this.discrete_health -= 0.2;\r\n\r\n        const starve = this.maybeDie('starvation', 0.6);\r\n        if (starve)\r\n            return starve;\r\n            \r\n        if (this.shelter == 'podless')\r\n            this.discrete_health -= 1/14;\r\n        \r\n        this.daysSinceSlept++;\r\n    \r\n        const exposure = this.maybeDie('exposure', 0.2);\r\n        if (exposure)\r\n            return exposure;\r\n\r\n        this.discrete_health -= 1/20;\r\n        this.discrete_health = Math.min(this.discrete_health, 3);\r\n        const sick = this.maybeDie('sickness', 0.4);\r\n        return sick;\r\n    }\r\n    private buyMeds(economy: Economy) {\r\n        const meds = economy.tryTransact(this, 'medicine', 0.5, 3);\r\n        if (meds)\r\n            this.discrete_health += meds.bought;\r\n        return meds;\r\n    }\r\n\r\n    maybeBaby(economy: Economy): IEvent | null {\r\n        if (this.canBaby(economy.getCostOfLiving()) &&\r\n            Math.random() <= BabyChance) {\r\n            if (this.city)\r\n                this.city.breedBean(this);\r\n            else\r\n                throw 'bean does not have city object';\r\n            return {icon: '🎉', message: 'A new subject is born!'}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    canBaby(costOfLiving: number): boolean{\r\n        return this.cash > costOfLiving * 3 &&\r\n            !this.isInCrisis;\r\n    }\r\n    /**\r\n     * should return 0-1 float, with 1 meaning 100%\r\n     * @param economy \r\n     */\r\n    chanceToDonate(economy: Economy, direct: boolean = false): number{\r\n        const canDonate = this.cash > economy.getCostOfLiving() * 2 && !this.isInCrisis;\r\n        if (canDonate && this.lastPartySentiment > 0.5){\r\n            const threshold = direct ? 0.2 : 0.5;\r\n            const baseChance = this.lastPartySentiment - threshold;\r\n            return (baseChance) / 2;\r\n        }\r\n        return 0;\r\n    }\r\n    maybeDonate(economy: Economy, direct: boolean = false): number{\r\n        // const chance = this.chanceToDonate(economy, direct);\r\n        // if (chance > 0){\r\n        //     const willDonate = Math.random() < chance;\r\n        //     if (willDonate){\r\n        //         const donation = 1;\r\n        //         this.cash -= donation;\r\n        //         return donation;\r\n        //     }\r\n        // }\r\n        return 0;\r\n    }\r\n    maybeDie(cause: string, chance = 0.5): IEvent|null{\r\n        if (this.discrete_health < 0 && Math.random() <= chance) {\r\n            this.die();\r\n            return {icon: '☠️', message: `A bean died of ${cause}!`};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    die(){\r\n        this.alive = false;\r\n        this.city?.onCitizenDie(this);\r\n    }\r\n\r\n    schedule(){\r\n        //if current activities len === 0\r\n        //push copies of common_activity_ring\r\n    }\r\n\r\n    state: AgentState = IdleState.create();\r\n\r\n    onAct = new PubSub<number>();\r\n}","import { TraitIdeals, TraitCommunity, TraitEthno, TraitFaith, World, TraitJob } from './World';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Policy, BaseParty, CityPartyHQ, Party, PolicyByKey, PolicyTree, IPolicy, NoPolicy } from './simulation/Politics';\r\nimport { IBuilding, BuildingTypes, Geography, PolarPoint, polarToPoint, hex_to_pixel, HexPoint } from './simulation/Geography';\r\nimport { City } from './simulation/City';\r\n\r\nexport function GetRandomNumber(min: number, max: number): number{\r\n    const randomBuffer = new Uint32Array(1);\r\n    window.crypto.getRandomValues(randomBuffer);\r\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\nexport function GetRandomIndex(length: number): number{\r\n    return GetRandomNumber(0, length-1)\r\n}\r\nexport function GetRandom<S>(choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(choices.length);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(): TraitIdeals{\r\n    return GetRandom(['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(): TraitCommunity{\r\n    return GetRandom(['state', 'ego']);\r\n}\r\nexport function RandomEthno(): TraitEthno{\r\n    return GetRandom(['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(): TraitFaith{\r\n    return GetRandom(['book','music','heart', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\nexport const MAX_PETRI_RADIUS = 200;\r\nexport const PI2 = Math.PI*2;\r\nexport function RandomPolar(r?: number): PolarPoint{\r\n    return {\r\n        r: r || GetRandomNumber(0, MAX_PETRI_RADIUS),\r\n        az: GetRandomNumber(0, PI2)\r\n    };\r\n}\r\nexport function GetBuildingR(type: BuildingTypes): number{\r\n    switch(type){\r\n        case 'farm':\r\n            return GetRandomNumber(200, 300);\r\n        default: \r\n            return GetRandomNumber(80, 200);\r\n    }\r\n}\r\nexport function GenerateBuilding(geo: Geography, type: BuildingTypes, hex: HexPoint){\r\n    const newBuilding: IBuilding = {\r\n        type: type,\r\n        key: geo.numberOf(type),\r\n        occupied_slots: [],\r\n        empty_slots: []\r\n    };\r\n    geo.addBuilding(hex, newBuilding);\r\n}\r\n\r\nconst Number_Starting_Cities = 1;\r\nexport function GenerateWorld(): World{\r\n    const world = new World();\r\n \r\n    world.law.policyTree = {\r\n        wel_food: PolicyByKey('0') as IPolicy,\r\n        wel_house: PolicyByKey('4') as IPolicy,\r\n        wel_health: PolicyByKey('8') as IPolicy,\r\n        econ_ex: PolicyByKey('13') as IPolicy,\r\n        econ_labor: PolicyByKey('15') as IPolicy,\r\n        econ_sub: NoPolicy,\r\n        cul_rel: PolicyByKey('21') as IPolicy,\r\n        cul_theo: NoPolicy,\r\n        cul_ed: NoPolicy,\r\n        law_vote: PolicyByKey('31') as IPolicy,\r\n        law_bribe: PolicyByKey('32') as IPolicy,\r\n        law_imm: PolicyByKey('35') as IPolicy,\r\n        tax_basic: PolicyByKey('38') as IPolicy,\r\n        tax_second: NoPolicy,\r\n        all: NoPolicy\r\n    };\r\n    world.party = new BaseParty();\r\n    world.institutions.push(world.party);\r\n    for (let i = 0; i < Number_Starting_Cities; i++) {\r\n        world.cities.push(GenerateCity(world.cities.length));\r\n        world.cities[i].doOnCitizenDie.push(world.economy.onBeanDie);\r\n        world.cities[i].environment = world.date;\r\n        world.cities[i].economy = world.economy;\r\n        world.cities[i].law = world.law;\r\n        for (let j = 0; j < world.cities[i].beans.length; j++) {\r\n            const bean = world.cities[i].beans[j];\r\n            bean.work(world.law, world.economy);\r\n            if (bean.job == 'farmer')\r\n                bean.work(world.law, world.economy);\r\n        }\r\n    }\r\n    world.economy.totalSeasonalDemand.food = world.beans.length;\r\n    world.economy.totalSeasonalDemand.shelter = world.beans.length;\r\n    world.economy.totalSeasonalDemand.medicine = world.beans.length;\r\n\r\n    return world;\r\n}\r\n\r\nexport function GeneratePartyHQ(city: City, party: Party) {\r\n    \r\n}\r\n\r\nconst Number_Starting_City_Pop = 3;\r\nexport function GenerateCity(previousCityCount: number): City{\r\n    let newCity = new City();\r\n    newCity.key = previousCityCount;\r\n    newCity.name = GetRandom(['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', '']);\r\n    newCity.name += GetRandom(['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash']);\r\n    newCity.name += GetRandom(['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest']);\r\n    \r\n    GenerateBuilding(newCity, 'courthouse', newCity.hexes[0]); \r\n    GenerateBuilding(newCity, 'house', newCity.hexes[1]); \r\n    GenerateBuilding(newCity, 'hospital', newCity.hexes[5]);\r\n    \r\n    GenerateBuilding(newCity, 'farm', newCity.hexes[7]);\r\n\r\n    const cityPopulation = Number_Starting_City_Pop;\r\n    while(newCity.historicalBeans.length < cityPopulation){\r\n        newCity.historicalBeans.push(\r\n            GenerateBean(newCity, newCity.historicalBeans.length)\r\n        );\r\n    }\r\n\r\n    return newCity;\r\n}\r\nexport function GenerateBean(city: City, previousBeanCount: number): Bean{\r\n    let newBean = new Bean();\r\n    \r\n    newBean.key = previousBeanCount;\r\n    newBean.cityKey = city.key;\r\n    newBean.city = city;\r\n    newBean.name = GetRandom(['Joe', 'Frank', 'Jill', 'Jose',\r\n    'Johnny', 'Isabelle', 'Carmen', 'Ace', 'Carl', 'Zander', 'Jean',\r\n    'Anne', 'Leslie', 'Ben', 'Ron', \r\n    'Ellen', 'Dallas', 'Kane', 'Ash', \r\n    'Jim', 'James', 'Leonard', 'Nyota', 'Christine', 'Scotty', 'Tasha', 'Geordi', 'Beverly', 'Deanna', 'Wesley', 'Majel',\r\n    'Malcolm','River',  \r\n    'Luke', \r\n    'Dana', 'Walter',  \r\n    'Rick', \r\n    'Rose', 'Donna', 'Jack', 'Amy', 'Rory', 'Martha', 'Clara', \r\n    'Arnold', 'Dave', 'Holly', \r\n    'Kara', 'Gaius','William', 'Lee', 'Laura', 'Saul',\r\n    'Max', 'Edison', 'Theora', 'Bryce', 'Murray', 'Ned',\r\n    'Daniel', 'Samantha', \r\n    'Logan', 'Francis', 'Jessica'\r\n    ]) + ' ';\r\n    newBean.name += GetRandom([\r\n        'Ripley', 'Bishop', 'Hicks', 'Vasquez', 'Hudson', \r\n        'Rico', 'Flores', 'Ibanez', 'Levy', 'Jenkins', 'Barlow', 'Zim', 'Rasczak',\r\n        'Kirk', 'McCoy', 'Sulu', 'Uhura', 'Chekov', 'Chapel', 'Rand','Riker', 'Crusher', 'Barret', \"O'Brien\",\r\n        'Reynolds', 'Tam', \r\n        'Scully', 'Mulder','Skinner', \r\n        'Connor', \r\n        'Thrace', 'Baltar', 'Smith','Adama', 'Roslin', 'Tigh', 'Song', 'Oswald', \r\n        'Deckard', \r\n        'Tyler', 'Harkness', 'Jones', 'Noble', 'Pond', 'Williams',\r\n        'Rimmer', 'Lister', \r\n        'Head', 'Carter', 'Lynch', 'McKenzie', 'Grossberg',\r\n        \"O'Neil\", 'Jackson', 'Carter'\r\n         ]);\r\n    newBean.community = RandomCommunity();\r\n    newBean.ideals = RandomIdeal();\r\n    newBean.faith = RandomFaith();\r\n    const mod = previousBeanCount % 3;\r\n    newBean.job = mod == 0 ? 'farmer' : mod == 1 ? 'builder' : 'doc';\r\n    //newBean.job = GetRandom(['farmer','builder','doc']);\r\n    newBean.cash = StartingCash(newBean.job);\r\n    newBean.discrete_food = 3;\r\n\r\n    city.movers.bean[newBean.key] = hex_to_pixel(city.hex_size, city.petriOrigin, city.byType.house.coordByID[GetRandom(city.byType.house.all).key]);\r\n    \r\n    return newBean;\r\n}","import { TraitGood, TraitJob, GoodToJob, Trait } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { IOrganization, Charity } from \"./Institutions\";\r\nimport { City } from \"./City\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    ticksSinceLastSale: number;\r\n}\r\nexport interface Listing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerOrganizationKey?: number;\r\n    price: number;\r\n    seller: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'shelter', 'medicine', 'fun'];\r\nconst PartyLoyaltyPerCharityUse = 0.2;\r\nexport class Economy {\r\n    market = new OrderBook();\r\n    charity = new OrderBook();\r\n    unfulfilledSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalSupply: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    constructor(){\r\n\r\n    }\r\n    public resetSeasonalDemand(){\r\n        this.unfulfilledSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalSupply = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    }\r\n    tryTransact(\r\n        buyer: IEconomicAgent, \r\n        good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1\r\n        ): {bought: number, price: number}|null {\r\n        this.totalSeasonalDemand[good] += maxDemand;\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            //console.log('agent could not find '+good);\r\n            this.unfulfilledSeasonalDemand[good] += maxDemand;\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if (listing.price <= buyer.cash * actualDemand){\r\n            return this.market.transact(listing, good, actualDemand, buyer);\r\n        } else if (buyer instanceof Bean) {\r\n            // console.log('bean couldnot afford '+good+\" @ $\"+listing?.price);\r\n            // const charityTicket = this.charity.getLowestPriceListing(good, minDemand);\r\n            // if (charityTicket && charityTicket.seller instanceof Charity) {\r\n            //     // console.log('bean got '+good+\" from charity\");\r\n            //     const actualDemand = Math.min(charityTicket.quantity, maxDemand);\r\n            //     buyer.partyLoyalty += PartyLoyaltyPerCharityUse;\r\n            //     charityTicket.seller.beansHelped++;\r\n            //     charityTicket.seller.inventory -= actualDemand;\r\n            //     return this.charity.transact(charityTicket, good, actualDemand, buyer);\r\n            // }\r\n        }\r\n        this.unfulfilledSeasonalDemand[good] += actualDemand;\r\n        return null;\r\n    }\r\n    steal(\r\n        good: TraitGood,\r\n        maxDemand: number = 1\r\n        ): number|null {\r\n        const listing = GetRandom(this.market.listings[good]);\r\n        if (listing == null){\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        this.market.subtractFromListing(listing, good, actualDemand);\r\n        \r\n        return actualDemand;\r\n    }\r\n    produceAndPrice(seller: Bean, good: TraitGood, quantity: number, price: number) {\r\n        this.totalSeasonalSupply[good] += quantity;\r\n        const existing = this.market.getBeansListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    addCharity(seller: Charity, good: TraitGood, quantity: number) {\r\n        const existing = this.charity.getOrgsListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.quantity = Math.min(existing.quantity, 10);\r\n            seller.inventory = existing.quantity;\r\n        } else {\r\n            this.charity.addNewOrgListing(good, quantity, 0, seller);\r\n            seller.inventory = quantity;\r\n        }\r\n        //this.book[good].sort((a, b) => a.price - b.price);\r\n    }\r\n    public mostInDemandJob(): TraitJob|null{\r\n        const goods: TraitGood[] = AllGoods;\r\n        const max = goods.reduce((last, good) => {\r\n            if (this.unfulfilledSeasonalDemand[good] > last.max){\r\n                last.max = this.unfulfilledSeasonalDemand[good];\r\n                last.job = GoodToJob(good);\r\n            }\r\n            return last;\r\n        }, {max: 0, job: null as TraitJob|null})\r\n\r\n        return max.job;\r\n    }\r\n    public onBeanDie = (deadBean: Bean, city: City) => {\r\n        AllGoods.forEach((g) => {\r\n            const existing = this.market.getBeansListings(deadBean, g);\r\n            if (existing){\r\n                const lucky = city.getRandomCitizen();\r\n                if (lucky) {\r\n                    existing.sellerCityKey = lucky.cityKey;\r\n                    existing.sellerBeanKey = lucky.key;\r\n                    existing.seller = lucky;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public getFairGoodPrice(good: TraitGood){\r\n        const supply = this.totalSeasonalSupply[good] || 1;\r\n        const demand = this.totalSeasonalDemand[good];\r\n        return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n    }\r\n    public getCostOfLiving(){\r\n        return this.getFairGoodPrice('food')+this.getFairGoodPrice('shelter')+this.getFairGoodPrice('medicine');\r\n    }\r\n}\r\n\r\nexport class OrderBook{\r\n    public readonly listings: {[key in TraitGood]: Listing[]} = {\r\n        food: [] as Listing[],\r\n        shelter: [] as Listing[],\r\n        medicine: [] as Listing[],\r\n        fun: [] as Listing[],\r\n    };\r\n    public getLowestPriceListing(good: TraitGood, demand: number): Listing|null{\r\n        const fullListings =  this.listings[good].filter((l) => {\r\n            return l.quantity >= demand;\r\n        });\r\n        if (fullListings.length > 0){\r\n            let numberOfSamePriceListings = 1;\r\n            const lowPrice = fullListings[0].price;\r\n            for (let i = 1; i < fullListings.length; i++) {\r\n                const list = fullListings[i];\r\n                if (list.price > lowPrice)\r\n                    break;\r\n                numberOfSamePriceListings++;\r\n            }\r\n            const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n            if (i >= fullListings.length)\r\n                throw \"invalid index\";\r\n            return fullListings[i];\r\n        }\r\n        return null;\r\n    }\r\n    public getBeansListings(b: Bean, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == b.key && x.sellerCityKey == b.cityKey);\r\n    }\r\n    public getOrgsListings(b: IOrganization, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerOrganizationKey == b.key);\r\n    }\r\n    public transact(listing: Listing, good: TraitGood, demand: number, buyer: IEconomicAgent){    \r\n        this.subtractFromListing(listing, good, demand);\r\n        const sale = listing.price * demand;\r\n        buyer.cash -= sale;\r\n        listing.seller.cash += sale;\r\n        listing.seller.ticksSinceLastSale = 0;\r\n        return {\r\n            bought: demand,\r\n            price: sale\r\n        }\r\n    }\r\n    public subtractFromListing(listing: Listing, good: TraitGood, demand: number){     \r\n        listing.quantity -= demand;\r\n        if (listing.quantity <= 0){\r\n            this.listings[good].splice(0, 1);\r\n        }\r\n    }\r\n    public addNewListing(good: TraitGood, quantity: number, price: number, bean: Bean){\r\n        this.listings[good].push({\r\n            sellerCityKey: bean.cityKey,\r\n            sellerBeanKey: bean.key,\r\n            price: price,\r\n            seller: bean,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public addNewOrgListing(good: TraitGood, quantity: number, price: number, org: IOrganization){\r\n        this.listings[good].push({\r\n            sellerOrganizationKey: org.key,\r\n            price: price,\r\n            seller: org,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public sort(good: TraitGood){        \r\n        this.listings[good].sort((a, b) => a.price - b.price);\r\n    }\r\n}","import * as React from 'react';\r\nimport { GetRandom, RandomEthno, GenerateBean } from './WorldGen';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Economy } from './simulation/Economy';\r\nimport { Policy, Party, BaseParty, ICityPartyHQ } from './simulation/Politics';\r\nimport { IInstitution, IOrganization, Charity } from './simulation/Institutions';\r\nimport { IEvent, EventBus } from './events/Events';\r\nimport { Season, IDate } from './simulation/Time';\r\nimport { Government } from './simulation/Government';\r\nimport { Player } from './simulation/Player';\r\nimport { Geography } from './simulation/Geography';\r\nimport { City } from './simulation/City';\r\nimport { shuffle } from './simulation/Utils';\r\nimport { Act } from './simulation/Agent';\r\n\r\n\r\nexport interface IBeanContainer{\r\n    /**\r\n     * all beans ever, including dead ones\r\n     */\r\n    historicalBeans: Bean[];\r\n    /**\r\n     * current non-dead beans\r\n     */\r\n    beans: Bean[];\r\n}\r\n\r\nexport interface IWorld{\r\n    cities: City[];\r\n    law: Government;\r\n    party: Party;\r\n\r\n    institutions: IInstitution[];\r\n    bus: EventBus;\r\n    date: IDate;\r\n    alien: Player;\r\n}\r\nexport class World implements IWorld, IBeanContainer{\r\n    public cities: City[] = [];\r\n    public law: Government = new Government();\r\n    public economy: Economy = new Economy();\r\n    public institutions: IInstitution[] = [];\r\n    public party: Party = new BaseParty();\r\n    public date: IDate = {year: 1, season: Season.Spring, day: 1};\r\n\r\n    public yearsEvents: IEvent[] = [];\r\n    public bus = new EventBus();\r\n    public alien: Player = new Player();\r\n\r\n    public get beans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.beans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get historicalBeans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.historicalBeans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get organizations(): IOrganization[]{\r\n        return this.institutions.reduce((list, institute) => {\r\n            return list.concat(institute.organizations);\r\n        }, [] as IOrganization[]);\r\n    }\r\n\r\n    /**\r\n     * update 'pushed' state\r\n     */\r\n    public calculateComputedState(){\r\n        this.cities.forEach(c => {\r\n            c.calculate(this.economy, this.law);\r\n            c.beans.forEach(b => b.calculateBeliefs(this.economy, c, this.law, this.party));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * simulates a season passing, setting a lot of state\r\n     */\r\n    public simulate_world(){\r\n        \r\n        this.date.day++;\r\n        if (this.date.day > 30){\r\n            this.date.day = 1;\r\n            this.date.season++;\r\n        }\r\n        if (this.date.season > 3){\r\n            this.date.year++;\r\n            this.inflate();\r\n            this.resetYearlyCounters();\r\n            this.date.season = 0;\r\n        }\r\n\r\n        this.alien.bots.amount += this.alien.bots.income / 30;\r\n        this.alien.energy.amount += this.alien.energy.income / 30;\r\n        this.alien.psi.amount += this.alien.psi.income / 30;\r\n        \r\n        this.economy.resetSeasonalDemand();\r\n\r\n        this.institutions.forEach((i) => i.fundOrganizations());\r\n\r\n        this.organizations.forEach((org) => org.work(this.law, this.economy));\r\n        \r\n        shuffle(this.beans).forEach((b: Bean) => {\r\n            let e = b.age(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n            e = b.maybeBaby(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n        });\r\n        this.cities.forEach((c) => c.getTaxesAndDonations(this.party, this.economy));\r\n        this.calculateComputedState();\r\n        this.alien.checkGoals(this);\r\n    }\r\n    simulate_beans(deltaMS: number){\r\n        this.beans.forEach((b) => {\r\n            Act(b, deltaMS);\r\n        })\r\n    }\r\n    inflate() {\r\n        const allMoney = this.beans.reduce((sum, b) => sum+b.cash, 0) + this.organizations.reduce((sum, o) => sum + o.cash, 0);\r\n        const percent = allMoney / 100;\r\n        const yearlyInflationDollars = Math.round(percent * 1);\r\n        if (yearlyInflationDollars > 0){\r\n            const richest = this.beans.reduce((obj: {winner?: Bean, max: number}, b) => {\r\n                if (b.cash > obj.max){\r\n                    obj.winner = b;\r\n                    obj.max = b.cash;\r\n                }\r\n                return obj;\r\n            }, {max: 0});\r\n            if (richest.winner){\r\n                richest.winner.cash += yearlyInflationDollars;\r\n            }\r\n        }\r\n    }\r\n    resetYearlyCounters() {\r\n        this.yearsEvents = [];\r\n        this.cities.forEach((c) => {\r\n            c.yearsPartyDonations = 0;\r\n        })\r\n    }\r\n    addCharity(good: TraitGood, name: string, budget: number) {\r\n        const charity = new Charity();\r\n        charity.name = name;\r\n        charity.good = good;\r\n        charity.seasonalBudget = budget;\r\n        this.party.organizations.push(charity);\r\n    }\r\n}\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface Tile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'book'|'music'|'heart'|'noFaith';\r\nexport type TraitFood = 'hungry'|'sated'|'stuffed';\r\nexport type TraitShelter = 'podless'|'crowded'|'homeowner';\r\nexport type TraitHealth = 'sick'|'bruised'|'fresh';\r\nexport type TraitSanity = 'mad'|'confused'|'sane';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless';\r\nexport type TraitQuirk = 'diligent'| //125% productive\r\n'gossip'| // 100% chance to stop and talk\r\n'fit'| // takes less health damage\r\n'parental'| // increased % of having kids\r\n'gullible'| // beliefs are easily changed\r\n'fragile'| // takes extra sanity damage\r\n'partisan'| // doesn't like beings that don't share ideals \r\n'affable'| // likes all beings more\r\n'unruly'| // breaks rules easily\r\n'merry'| // extra happiness\r\n'glum'| // lower happiness\r\n'';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitShelter|TraitHealth|TraitSanity;\r\nexport type Axis = 'wel_food'|'wel_house'|'wel_health'|'tax_basic'|'tax_second'|'econ_ex'|'econ_labor'|'econ_sub'|'cul_rel'|'cul_theo'|'cul_ed'|'law_vote'|'law_bribe'|'law_imm'|'all';\r\n\r\nexport const TraitIcon: {[key in Trait]: string} = {\r\n    'state': '🐘', 'ego': '🦅',\r\n    'prog': '🎓', 'trad': '👑',\r\n    'circle': '🤎', 'square': '💛', 'triangle': '🧡',\r\n    'book': '', 'music': '', 'heart': '',\r\n    'noFaith': '',\r\n    'hungry': '🍽️', 'sated': '🥜', 'stuffed': '🥩',\r\n    'podless': '🌨️', 'crowded': '🏘️', 'homeowner': '🏡',\r\n    'sick': '🤢', 'bruised': '🩹', 'fresh': '💪',\r\n    'mad': '🤪', 'confused': '🤤', 'sane': '🧠',\r\n}\r\nexport enum MaslowScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport const TraitToModifier: {[key in TraitFood|TraitShelter|TraitHealth]: IHappinessModifier} = {\r\n    'podless': {reason: 'Homeless', mod: MaslowScore.Deficient},\r\n    'crowded': {reason: 'Renting', mod: MaslowScore.Sufficient},\r\n    'homeowner': {reason: 'Homeowner', mod: MaslowScore.Abundant},\r\n    'sick': {reason: 'Sick', mod: MaslowScore.Deficient},\r\n    'bruised': {reason: 'Bruised', mod: MaslowScore.Sufficient},\r\n    'fresh': {reason: 'Healthy', mod: MaslowScore.Abundant},\r\n    'hungry': {reason: 'Hungry', mod: MaslowScore.Deficient},\r\n    'sated': {reason: 'Sated', mod: MaslowScore.Sufficient},\r\n    'stuffed': {reason: 'Stuffed', mod: MaslowScore.Abundant},\r\n}\r\nexport const GoodToThreshold: {[key in TraitGood]: {sufficient: number, abundant: number}} = {\r\n    'food': {sufficient: 1, abundant: 3},\r\n    'shelter': {sufficient: 1, abundant: 3},\r\n    'medicine': {sufficient: 1, abundant: 3},\r\n    'fun': {sufficient: 1, abundant: 3},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'builder': return 'shelter';\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'shelter': return 'builder';\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'shelter'|'medicine'|'fun';\r\nexport const GoodIcon: {[key in TraitGood]: string} ={\r\n    'food': '🥪',\r\n    'shelter': '', \r\n    'medicine': '💊', \r\n    'fun': '👏'\r\n};","import { Trait, Axis, TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { IInstitution, IOrganization } from \"./Institutions\";\r\nimport { Government } from \"./Government\";\r\n\r\n\r\nexport interface Party extends IInstitution{\r\n    slogan: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    \r\n    availablePolicies: Policy[]; \r\n    proposedPolicy?: Policy;\r\n    availableCampaigns: Campaign[];\r\n    activeCampaigns: Campaign[];\r\n\r\n    platform: {[key in Axis]: IPolicy};\r\n\r\n    politicalCapital: number;\r\n    materialCapital: number;\r\n    labor: number;\r\n\r\n    differingPolicies(law: Government): IPolicy[];\r\n}\r\n\r\nexport class BaseParty implements Party{\r\n    key = 1;\r\n    playerKey = 1;\r\n    organizations: IOrganization[] = [];\r\n    public name: string = \"Citizen's Party\";\r\n    public slogan: string = \"Vote for us!\";\r\n    public community: TraitCommunity = 'state';\r\n    public ideals: TraitIdeals = 'trad';\r\n    public availablePolicies: Policy[] = [];\r\n    public proposedPolicy?: Policy;\r\n    public availableCampaigns: Campaign[] = [];\r\n    public activeCampaigns: Campaign[] = [];\r\n    public politicalCapital: number = 10;\r\n    public materialCapital: number = 20;\r\n    public labor: number = 10;\r\n    public activeHQs: number[] = [];\r\n    public platform: {[key in Axis]: IPolicy} = {} as {[key in Axis]: IPolicy};\r\n\r\n    constructor(){\r\n    }\r\n    fundOrganizations(): void{\r\n        this.organizations.forEach((org) => {\r\n            if (this.materialCapital >= org.seasonalBudget){\r\n                this.materialCapital -= org.seasonalBudget;\r\n                org.cash += org.seasonalBudget;\r\n            }\r\n        });\r\n    }\r\n    differingPolicies(law: Government): IPolicy[]{\r\n        return Object.keys(this.platform).filter((key: string) => {\r\n            const ax = key as Axis;\r\n            return this.platform[ax] != law.policyTree[ax];\r\n        }).map((key) => this.platform[key as Axis]);\r\n    }\r\n}\r\n\r\nexport interface ICityPartyHQ{\r\n    cityKey: number;\r\n}\r\nexport class CityPartyHQ implements ICityPartyHQ{\r\n    cityKey: number = 0;\r\n}\r\n\r\nexport interface PoliticalEffect {\r\n    key: Trait;\r\n    /**\r\n     * magnitude (-3 to +3)\r\n     */\r\n    mag: number;\r\n}\r\nexport interface Policy {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    axis?: Axis;\r\n}\r\nexport interface Campaign {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    cityKey?: number;\r\n\r\n    seasonalCost: number;\r\n}\r\nexport interface IPolicy{\r\n    key: string, \r\n    name: string, \r\n    community?: TraitCommunity, \r\n    ideals?: TraitIdeals, \r\n    axis: Axis,\r\n    hint?: string\r\n}\r\nexport const NoPolicy: IPolicy = {key: '-1', name: 'No Policy', axis: 'all'};\r\nexport const Policies: IPolicy[] = [\r\n NoPolicy,\r\n {key: '0', name: 'Let Them Eat Cake', ideals: 'trad', community: 'ego', axis: 'wel_food', hint: 'No state solution for hunger'},\r\n {key: '1', name: 'Food Bank', ideals: 'prog', community: 'ego', axis: 'wel_food'},\r\n {key: '2', name: 'Food Stamps', ideals: 'trad', community: 'state', axis: 'wel_food'},\r\n {key: '3', name: 'Universal Rations', ideals: 'prog', community: 'state', axis: 'wel_food'},\r\n\r\n {key: '4', name: 'Sleep Outside', community: 'ego', ideals: 'trad', axis: 'wel_house'},\r\n {key: '5', name: 'Homeless Shelters', community: 'ego', ideals: 'prog', axis: 'wel_house'},\r\n {key: '6', name: 'Housing Subsidy', community: 'state', ideals: 'trad', axis: 'wel_house'},\r\n {key: '7', name: 'State Apartments', community: 'state', ideals: 'prog', axis: 'wel_house'},\r\n\r\n {key: '8', name: 'Stay Healthy', community: 'ego', ideals: 'trad', axis: 'wel_health'},\r\n {key: '9', name: 'Charity Clinics', community: 'ego', ideals: 'prog', axis: 'wel_health'},\r\n {key: '10', name: 'Medical Aid', community: 'state', ideals: 'trad', axis: 'wel_health'},\r\n {key: '11', name: 'Universal Healthcare', community: 'state', ideals: 'prog', axis: 'wel_health'},\r\n\r\n {key: '12', name: 'Tariffs', community: 'state', axis: 'econ_ex'},\r\n {key: '13', name: 'Free Market', community: 'ego', axis: 'econ_ex'},\r\n \r\n {key: '14', name: 'Legal Slavery', ideals: 'trad', axis: 'econ_labor'},\r\n {key: '15', name: 'Right to Work', community: 'ego', ideals: 'trad', axis: 'econ_labor'},\r\n {key: '16', name: 'Right to Strike', community: 'ego', ideals: 'prog', axis: 'econ_labor'},\r\n\r\n {key: '17', name: 'Laissez-faire', community: 'ego', ideals:'trad', axis: 'econ_sub'},\r\n {key: '18', name: 'Grain Subsidy', community: 'state', axis: 'econ_sub'},\r\n {key: '19', name: 'Arts Patronage', community: 'ego', ideals: 'prog', axis: 'econ_sub'},\r\n\r\n {key: '20', name: 'State Religion', community: 'state', ideals: 'trad', axis: 'cul_rel'},\r\n {key: '21', name: 'Secularism', community: 'ego', axis: 'cul_rel'},\r\n {key: '22', name: 'State Atheism', community: 'state', ideals: 'prog', axis: 'cul_rel'},\r\n\r\n {key: '23', name: 'Temple of Water 🌊', axis: 'cul_theo'},\r\n {key: '24', name: 'Church of Sun ☀️', axis: 'cul_theo'},\r\n {key: '25', name: 'Chapel of Clover ☘️', axis: 'cul_theo'},\r\n\r\n {key: '26', name: 'Religious Schooling', community: 'state', ideals: 'trad', axis: 'cul_ed'},\r\n {key: '27', name: 'University Grants', community: 'ego', axis: 'cul_ed'},\r\n {key: '28', name: 'College For All', community: 'state', ideals: 'prog', axis: 'cul_ed'},\r\n\r\n {key: '29', name: 'Landowners Vote', community: 'state', ideals: 'trad', axis: 'law_vote', hint: 'only homeowners vote'},\r\n {key: '30', name: 'Poll Tax', community: 'ego', ideals: 'trad', axis: 'law_vote', hint: 'voting requires small amount of cash'},\r\n {key: '31', name: 'Universal Suffrage', ideals: 'prog', axis: 'law_vote', hint: 'all citizens vote'},\r\n\r\n {key: '32', name: 'Scandalous Bribes', community: 'state', ideals: 'trad', axis: 'law_bribe', hint: '5% chance bribery causes scandal'},\r\n {key: '33', name: 'Legal Bribery', community: 'ego', axis: 'law_bribe', hint: 'Bribery has no consequences'},\r\n {key: '34', name: 'Anti-Corruption', community: 'state', ideals: 'prog', axis: 'law_bribe', hint: '25% chance bribery results in fine'},\r\n\r\n {key: '35', name: 'Closed Borders', ideals: 'trad', axis: 'law_imm'},\r\n {key: '36', name: 'Best and Brightest', community: 'state', ideals: 'prog', axis: 'law_imm'},\r\n {key: '37', name: 'Huddle Masses', community: 'ego', ideals: 'prog', axis: 'law_imm'},\r\n\r\n {key: '38', name: 'Head Tax', community:'state', ideals: 'trad', axis: 'tax_basic'},\r\n {key: '39', name: 'Sales Tax', community: 'ego', axis: 'tax_basic'},\r\n {key: '40', name: 'Wealth Tax', community: 'state', ideals: 'prog', axis: 'tax_basic'},\r\n\r\n {key: '38', name: 'Vice Tax', ideals: 'trad', axis: 'tax_second'},\r\n {key: '39', name: 'Property Tax', ideals: 'prog', axis: 'tax_second'},\r\n {key: '40', name: 'Death Tax', ideals: 'prog', axis: 'tax_second'},\r\n\r\n];\r\nexport const PolicyTree: {\r\n    [key in Axis]: IPolicy[]\r\n} = Policies.reduce((dict, pol) => {\r\n    if (!dict[pol.axis])\r\n        dict[pol.axis] =[];\r\n    dict[pol.axis].push(pol);\r\n    return dict;\r\n}, {} as {[key in Axis]: IPolicy[]});\r\n\r\nexport function PolicyByKey(key: string): IPolicy|undefined{\r\n    return Policies.find((p) => p.key == key);\r\n}","import { ISeller, Economy } from \"./Economy\";\r\nimport { TraitGood, GoodToJob } from \"../World\";\r\nimport { Policy } from \"./Politics\";\r\nimport { Government } from \"./Government\";\r\n\r\nexport interface IInstitution{\r\n    key: number;\r\n    playerKey: number;\r\n    name: string;\r\n\r\n    organizations: IOrganization[];\r\n    fundOrganizations(): void;\r\n}\r\n\r\nexport interface IOrganization extends ISeller{\r\n    work(law: Government, economy: Economy): void;\r\n    key: number;\r\n    institutionKey: number;\r\n    seasonalBudget: number;\r\n    parentInstitution: IInstitution|null;\r\n    cash: number;\r\n}\r\n\r\nexport class Charity implements IOrganization, ISeller{\r\n    key = 0;\r\n    name: string = '';\r\n    institutionKey = 1;\r\n    cash = 0;\r\n    ticksSinceLastSale = 0;\r\n    seasonalBudget = 0;\r\n    good: TraitGood = 'food';\r\n    parentInstitution: IInstitution|null = null;\r\n    beansHelped: number = 0;\r\n    inventory: number = 0;\r\n    \r\n    work(law: Government, economy: Economy): void{\r\n        while(this.cash > 0 && this.inventory < 10) {\r\n            const groceries = economy.tryTransact(this, this.good);\r\n            if (groceries){\r\n                economy.addCharity(this, this.good, groceries.bought);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n} ","import { IPolicy } from \"./Politics\";\r\nimport { Axis } from \"../World\";\r\n\r\nexport class Government{\r\n    public get policies(): IPolicy[] {\r\n        return Object.values(this.policyTree);\r\n    }\r\n    public policyTree: {[key in Axis]: IPolicy} = {} as {[key in Axis]: IPolicy};\r\n}","import { BuildingTypes } from \"./simulation/Geography\";\r\n\r\nexport type PlayerEmptyHexAction = 'build';\r\nexport type PlayerHexAction = 'kidnap';\r\nexport type PlayerBeanAction = 'scan'|'brainwash'|'abduct'|'disappear'|'siphon'|'empower'|'gift';\r\nexport type PlayerGovernmentAction = '';\r\nexport type PlayerAction = PlayerHexAction|PlayerBeanAction;\r\n\r\nexport interface ResourceTriad{\r\n    energy?: number;\r\n    bots?: number;\r\n    psi?: number;\r\n}\r\nexport function triadToString(cost: ResourceTriad, sign: '+'|''|'-'){\r\n    const costs = [];\r\n    if (cost.energy){\r\n        costs.push(sign+cost.energy+' Energy');\r\n    }\r\n    if (cost.bots){\r\n        costs.push(sign+cost.bots+' Bots');\r\n    }\r\n    if (cost.psi){\r\n        costs.push(sign+cost.psi+' Psi');\r\n    }\r\n    return costs.join(' ');\r\n}\r\nexport interface SecondaryResources{\r\n    research?: number;\r\n    leadership?: number;\r\n}\r\nexport interface IDifficulty{\r\n    cost: {\r\n        emptyHex: {[key in PlayerEmptyHexAction]: {[key in BuildingTypes]: ResourceTriad}},\r\n        hex: {[key in PlayerHexAction]: ResourceTriad} \r\n        bean: {[key in PlayerBeanAction]: ResourceTriad}\r\n    }\r\n}\r\nexport const DefaultDifficulty: IDifficulty = {\r\n    cost: {\r\n        emptyHex: {\r\n            build: {\r\n                house: {\r\n                    energy: 3,\r\n                    bots: 3\r\n                },\r\n                farm: {\r\n                    energy: 3,\r\n                    bots: 3\r\n                },\r\n                theater: {\r\n                    energy: 4,\r\n                    bots: 4\r\n                },\r\n                hospital: {\r\n                    energy: 4,\r\n                    bots: 4\r\n                },\r\n                church: {\r\n                    energy: 4,\r\n                    bots: 4\r\n                },\r\n                courthouse: {\r\n                    energy: 999,\r\n                    bots: 999\r\n                }\r\n            }\r\n        },\r\n        hex: {\r\n            kidnap: {\r\n                energy: 4\r\n            },\r\n        },\r\n        bean: {\r\n            scan: {\r\n                energy: 1\r\n            },\r\n            brainwash: {},\r\n            abduct: {},\r\n            gift: {},\r\n            empower: {},\r\n            disappear: {},\r\n            siphon: {},\r\n        }\r\n    }\r\n};","import { ChangePubSub } from \"../events/Events\";\r\nimport { DefaultDifficulty, IDifficulty, ResourceTriad } from \"../Game\";\r\nimport { World } from \"../World\";\r\nimport { IDate } from \"./Time\";\r\n\r\n\r\nexport interface IPlayerData{\r\n    scanned_bean: {[beanKey: number]: boolean};\r\n    energy: IResource;\r\n    psi: IResource;\r\n    bots: IResource;\r\n}\r\n\r\nexport interface IResource{\r\n    amount: number;\r\n    income: number;\r\n    change: ChangePubSub;\r\n}\r\n\r\nexport type GoalKey = 'found_utopia'|'build_house_n_farm'|'kidnap_3'|'scan'|'set_policy'|'brainwash'|'c+_grade';\r\nexport interface IGoal{\r\n    key: GoalKey;\r\n    text: string;\r\n    tooltip?: string;\r\n    reward?: ResourceTriad,\r\n    check: (world: World) => boolean\r\n}\r\nexport interface IGoalProgress {\r\n    done: boolean,\r\n    step: number\r\n}\r\nexport interface IProgressable{\r\n    goalProgress: {[key: string]: IGoalProgress},\r\n    goals: Array<GoalKey>\r\n}\r\nexport const Goals: {[key in GoalKey]: IGoal} = {\r\n    found_utopia: {\r\n        key: 'found_utopia', text: 'Found your Utopia',\r\n       check: (world) => world.party.name != 'Goodplace'\r\n    },\r\n    build_house_n_farm: {\r\n        key: 'build_house_n_farm', text: 'Build a house and farm',\r\n        check: (world) => {\r\n            return world.cities[0].byType.house.all.length > 1 &&\r\n            world.cities[0].byType.farm.all.length > 1;\r\n        },\r\n        reward: {\r\n            energy: 3, bots: 3\r\n        }\r\n    }, \r\n    kidnap_3: {\r\n        key: 'kidnap_3', text: 'Kidnap 3 new beings', \r\n        check: (world) => false\r\n    }, \r\n    scan: {\r\n        key: 'scan', text: 'Scan a Subject',\r\n        check: (world) => Object.keys(world.alien.scanned_bean).length > 0\r\n    }, \r\n    set_policy: {\r\n        key: 'set_policy', text: 'Set a Gov Policy',\r\n        check: (world) => false\r\n    }, \r\n    brainwash: {\r\n        key: 'brainwash', text: 'Brainwash a Subject',\r\n        check: (world) => false\r\n    }, \r\n    'c+_grade': {\r\n        key: 'c+_grade', text: 'Receive a C+ Grade',\r\n        check: (world) => false\r\n    } \r\n};\r\n\r\nexport class Player implements IPlayerData, IProgressable{\r\n    public scanned_bean: {[beanKey: number]: boolean} = {};\r\n    public energy = { amount: 10, income: 2, change: new ChangePubSub()};\r\n    public psi = { amount: 10, income: 2, change: new ChangePubSub()};\r\n    public bots = { amount: 10, income: 2, change: new ChangePubSub()};\r\n    public next_grade:IDate = {year: 1, season: 3, day: 1};\r\n    public difficulty: IDifficulty = DefaultDifficulty;\r\n    public goals: GoalKey[] = ['found_utopia', 'build_house_n_farm', 'scan', 'kidnap_3', 'brainwash', 'set_policy', 'c+_grade'];\r\n    public goalProgress: {[key: string]: IGoalProgress} = {};\r\n\r\n    public canAfford(cost: ResourceTriad): boolean{\r\n        return (cost.bots == undefined || this.bots.amount >= cost.bots) &&\r\n        (cost.energy == undefined || this.energy.amount >= cost.energy) && \r\n        (cost.psi == undefined || this.psi.amount >= cost.psi);\r\n    }\r\n\r\n    public purchase(cost: ResourceTriad){\r\n        if (cost.bots){\r\n            this.bots.amount -= cost.bots;\r\n            this.bots.change.publish({change:-cost.bots});\r\n        }\r\n        if (cost.energy){\r\n            this.energy.amount -= cost.energy;\r\n            this.energy.change.publish({change:-cost.energy});\r\n        }\r\n        if (cost.psi){\r\n            this.psi.amount -= cost.psi;\r\n            this.psi.change.publish({change:-cost.psi});\r\n        }\r\n    }\r\n\r\n    public reward(reward: ResourceTriad){\r\n        if (reward.bots){\r\n            this.bots.amount += reward.bots;\r\n            this.bots.change.publish({change: reward.bots});\r\n        }\r\n        if (reward.energy){\r\n            this.energy.amount += reward.energy;\r\n            this.energy.change.publish({change: reward.energy});\r\n        }\r\n        if (reward.psi){\r\n            this.psi.amount += reward.psi;\r\n            this.psi.change.publish({change: reward.psi});\r\n        }\r\n\r\n    }\r\n\r\n    public checkGoals(world: World){\r\n        for (let i = 0; i < this.goals.length; i++) {\r\n            const goal = this.goals[i];\r\n            if (this.goalProgress[goal] == null){\r\n                this.goalProgress[goal] = {done: false, step: 0};\r\n            }\r\n            if (!this.goalProgress[goal].done) {\r\n                const done = Goals[goal].check(world);\r\n                const reward = Goals[goal].reward;\r\n                this.goalProgress[goal].done = done;\r\n                if (done && reward != null){\r\n                    this.reward(reward);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","\r\nexport function shuffle(array: Array<any>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}","import { IBeanContainer, Tile, Trait, TraitEthno } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { Economy } from \"./Economy\";\r\nimport { Government } from \"./Government\";\r\nimport { GenerateBean, GetRandom } from \"../WorldGen\";\r\nimport { ICityPartyHQ, Party } from \"./Politics\";\r\nimport { Geography, HexPoint, IBuilding } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { shuffle } from \"./Utils\";\r\n\r\n\r\nexport function reportIdeals(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: Bean[], defWin: Trait, beanPropGet: (bean: Bean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}\r\n\r\n\r\nexport class City extends Geography implements Tile, IBeanContainer {\r\n    public name: string = '';\r\n    public url: string = '';\r\n    public type: string = '';\r\n    public key: number = 0;\r\n    public get beans(): Bean[] {\r\n        return this.historicalBeans.filter((x) => x.alive);\r\n    }\r\n    public set beans(beans: Bean[]){\r\n        throw \"can't set city beans\";\r\n    }\r\n    public historicalBeans: Bean[] = [];\r\n    public houses: any[] = [];\r\n    public partyHQ?: ICityPartyHQ;\r\n    public yearsPartyDonations: number = 0;\r\n    public majorityEthnicity: TraitEthno = 'circle';\r\n\r\n    public economy?: Economy;\r\n    public law?: Government;\r\n    public environment?: IDate;\r\n    public doOnCitizenDie: Array<(b: Bean, c: City) => void> = [];\r\n\r\n    getRandomCitizen(): Bean|null{\r\n        const shuffled = shuffle(this.beans);\r\n        if (shuffled.length > 0) {\r\n            return shuffled[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    onCitizenDie(deadBean: Bean){\r\n        if (deadBean.cash > 0){\r\n            const lucky = this.getRandomCitizen();\r\n            if (lucky) {\r\n                lucky.cash = lucky.cash + deadBean.cash;\r\n                deadBean.cash = 0;\r\n            }\r\n        }\r\n        this.doOnCitizenDie.forEach((x) => x(deadBean, this));\r\n    }\r\n    breedBean(parent: Bean) {\r\n        let bean = GenerateBean(this, this.historicalBeans.length);\r\n        bean.ethnicity = parent.ethnicity;\r\n        bean.job = Math.random() <= .5 ? parent.job : GetRandom(['doc', 'farmer', 'builder', 'jobless']);\r\n        bean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n        if (this.environment)\r\n            bean.dob = {year: this.environment?.year, season: this.environment?.season, day: this.environment?.day};\r\n        this.historicalBeans.push(bean);\r\n    }\r\n    getTaxesAndDonations(party: Party, economy: Economy){\r\n        if (this.partyHQ){\r\n            this.beans.forEach((b) => {\r\n                const donation = b.maybeDonate(economy);\r\n                party.materialCapital += donation;\r\n                this.yearsPartyDonations += donation;\r\n            });\r\n        }\r\n    }\r\n    calculate(economy: Economy, law: Government) {\r\n        const c = this.beans.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\r\n            switch(bean.ethnicity){\r\n                case 'circle': count.circle++;break;\r\n                case 'square': count.square++;break;\r\n                case 'triangle': count.triangle++;break;\r\n            }\r\n            return count;\r\n        }, {circle: 0, square: 0, triangle: 0});\r\n        if (c.circle > c.square && c.circle > c.triangle){\r\n            this.majorityEthnicity = 'circle';\r\n        } else if (c.square > c.circle && c.square > c.triangle){\r\n            this.majorityEthnicity = 'square';\r\n        } else {\r\n            this.majorityEthnicity = 'triangle';\r\n        }\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick: () => void;\r\n    closeButtonText?: string;\r\n    hideCloseButton?: boolean\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (this.props.hideCloseButton)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n        return null;\r\n        }\r\n        return (\r\n        <div className=\"modal\">\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: Bean[], \r\n    need: (b: Bean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\n\r\ninterface OverviewPanelP{\r\n    city?: City,\r\n    beans: Bean[],\r\n    clearCity: () => void;\r\n}\r\n\r\nexport class OverviewPanel extends React.Component<OverviewPanelP> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    hq(){\r\n        if (this.props.city){\r\n            if (this.props.city.partyHQ) {\r\n                return <div>\r\n                    🏢 Has Party HQ<br/>\r\n                    ${this.props.city.yearsPartyDonations.toFixed(2)} donations this year\r\n                </div>\r\n            }\r\n            return <div className=\"text-center\">\r\n                <button type=\"button\" className=\"important\">\r\n                    🏢 Add HQ for $10\r\n                </button><br/>\r\n                <small>+1 action per season &amp; chance for donations</small>\r\n            </div>\r\n        }\r\n        return null;\r\n    }\r\n    render(){\r\n        let header = null;\r\n        if (this.props.city){\r\n            header = <div><b>{this.props.city.name}</b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n            </div>;\r\n        }\r\n        const avg_happy = this.props.beans.reduce((sum, x) => sum+x.lastHappiness, 0) / (this.props.beans.length || 1);\r\n        const avg_cash = this.props.beans.reduce((sum, x) => sum+x.cash, 0) / (this.props.beans.length || 1);\r\n        const avg_approval = this.props.beans.reduce((sum, x) => sum+x.lastPartySentiment, 0) / (this.props.beans.length || 1);\r\n        return (                \r\n        <div>\r\n            {header}\r\n            <div className=\"header\"><b>Demographics</b></div>\r\n            <div>\r\n                <b>Population</b>&nbsp;\r\n                <span>{this.props.beans.length}</span>\r\n            </div>\r\n            <AxisReadout report={reportEthno(this.props.beans)}>Ethnicity</AxisReadout>\r\n            <div className=\"header\"><b>Situation</b></div>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\">Housing</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n            <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n            <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n            <div className=\"header\"><b>Electorate</b></div>\r\n            {/* <AxisReadout report={reportIdeals(this.props.beans)}>Sentiment</AxisReadout> */}\r\n            <AxisReadout report={reportCommunity(this.props.beans)}>Community</AxisReadout>\r\n            <AxisReadout report={reportIdeals(this.props.beans)}>Ideals</AxisReadout>\r\n            <div className=\"header\"><b>Party</b></div>\r\n            {\r\n                this.hq()\r\n            }\r\n            <div>\r\n                <b>Approval</b>&nbsp;\r\n                <span>{avg_approval.toFixed(0)}%</span>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{report: {avg: number, winner: Trait}}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent+'%'\r\n        }\r\n        return (                \r\n        <div>\r\n            <b>\r\n                { this.props.children }\r\n            </b>&nbsp;&nbsp;\r\n            <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner\" style={style}>\r\n                    {percent}%\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { origin_point, Point, transformPoint } from \"../simulation/Geography\";\r\nimport { GoodIcon } from \"../World\";\r\n\r\ninterface AnimatedBeanP {\r\n  bean: Bean;\r\n  costOfLiving: number;\r\n  sitStill?: boolean;\r\n  onClick: () => void;\r\n  static?: boolean;\r\n}\r\n\r\ninterface AnimatedBeanS{\r\n  paused: boolean,\r\n  point: Point,\r\n  spin: boolean;\r\n  face: string;\r\n  good?: string;\r\n}\r\n\r\nfunction BeanIsBuying(bean: Bean){\r\n  return bean.state.data.act == 'buy' && bean.state.data.good != 'shelter';\r\n}\r\n\r\nexport class AnimatedBean extends React.Component<AnimatedBeanP, AnimatedBeanS> {\r\n    constructor(props: AnimatedBeanP) {\r\n      super(props);\r\n      this.delaySeedSec = (Math.random() * 60) + this.props.bean.key;\r\n      this.state = {\r\n        paused: false,\r\n        point: props.static ? origin_point : props.bean.city ? props.bean.city.movers.bean[props.bean.key] : {x: 0, y: 0},\r\n        spin: false,\r\n        face: props.bean.getFace(),\r\n      };\r\n      props.bean.onAct.subscribe(this.animate);\r\n    }\r\n    animate = (deltaMS: number) => {\r\n      this.setState({\r\n        point: this.props.bean.city ? this.props.bean.city.movers.bean[this.props.bean.key] : {x: 0, y: 0},\r\n        spin: this.props.bean.state.data.act == 'work',\r\n        face: this.props.bean.getFace(),\r\n        good: BeanIsBuying(this.props.bean) ? GoodIcon[this.props.bean.state.data.good || 'food'] : undefined\r\n      })\r\n    }\r\n    delaySeedSec: number;\r\n    getIdea(){\r\n        if (this.state.paused) {\r\n            const idea = this.props.bean.getIdea(this.props.costOfLiving)\r\n            if (idea){\r\n                return <span className={idea.bad ? 'bad idea': 'idea'}>{idea.idea}</span>\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getPurchase(){\r\n      if (this.state.good){\r\n        return <span className=\"purchase\">\r\n          <span className=\"money\">💸</span>\r\n          <span className=\"purchase-good\">{this.state.good}</span>\r\n        </span>\r\n      }\r\n    }\r\n    render() {\r\n      let classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n      classes += this.state.paused || !this.props.bean.alive ? ' paused' : '';\r\n      if (this.props.sitStill){\r\n\r\n      } else {\r\n        classes += ' bean-walker';\r\n        if (this.state.spin)\r\n          classes += ' spin';\r\n        if (this.props.bean.state.data.act != 'travel')\r\n          classes += ' paused';\r\n      }\r\n\r\n      let style = {\r\n        ...transformPoint(this.state.point),\r\n        animationDelay: '-'+this.delaySeedSec+'s'\r\n      };\r\n      style.animationDelay = '';\r\n      let title = '';\r\n      return (\r\n        <span className={classes+\" bean interactable\"}\r\n          style={style} title={title}\r\n          onClick={(e) => {e.stopPropagation(); this.props.onClick(); }}\r\n        >\r\n          {this.state.face} {this.getPurchase()}\r\n        </span>\r\n      )\r\n    }\r\n  }","import { Tile } from \"../World\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport React from \"react\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, hex_to_pixel, MatterTypes, PolarPoint, polarToPoint, getBuildingTransform, transformPoint, HexPoint } from \"../simulation/Geography\";\r\nimport { PetriBuilding } from \"./Building\";\r\nimport { PI2 } from \"../WorldGen\";\r\nimport { City } from \"../simulation/City\";\r\n\r\ninterface WorldTilePs {\r\n    tile: Tile;\r\n    city: City;\r\n    costOfLiving: number;\r\n    onClick: () => void;\r\n    onBeanClick: (b: Bean) => void;\r\n    onHexClick: (hex: HexPoint) => void;\r\n  }\r\nexport class WorldTile extends React.Component<WorldTilePs> {\r\n    constructor(props: WorldTilePs) {\r\n      super(props);\r\n      this.state = {\r\n        tile: null,\r\n        city: null,\r\n        activeTileID: null,\r\n      }\r\n      const mtnRadius = 530;\r\n      const worldR = 550;\r\n      for (let i = 0; i < 360 / 5; i++) {\r\n        const az = i*5* Math.PI / 180;\r\n        const pt = polarToPoint({r: mtnRadius, az: az});\r\n        pt.x += worldR; pt.y += worldR;\r\n        this.mtn_transforms.push(transformPoint(pt));\r\n      }\r\n    }\r\n    mtn_transforms: {transform: string}[] = [];\r\n    renderBuildings(type: BuildingTypes){\r\n      return this.props.city.byType[type].all.map((b: IBuilding, i) => {\r\n        return (\r\n          <PetriBuilding city={this.props.city} building={b} key={type+i} ></PetriBuilding>\r\n        )\r\n      });\r\n    }\r\n    render() {\r\n      const beans = this.props.city.beans.map((b: Bean) => {\r\n        return (\r\n          <AnimatedBean bean={b} key={b.key} costOfLiving={this.props.costOfLiving} onClick={() => this.props.onBeanClick(b)}></AnimatedBean>\r\n        )\r\n      })\r\n      const deaths = this.props.city.historicalBeans.filter((x) => !x.alive).map((b: Bean, i) => {\r\n        return (\r\n          <span key={i} className=\"dead\" style={{left: (i*10)+'px'}}>⚰️</span>\r\n        )\r\n      })\r\n      const buildings = this.renderBuildings('farm').concat(this.renderBuildings('hospital')).concat(this.renderBuildings('house')).concat(this.renderBuildings('courthouse'));\r\n      const regions = this.props.city.hexes.map((hex, i) => {\r\n        const xy = hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, hex);\r\n        return <div className=\"hex\" key={i} style={transformPoint(xy)} onClick={(e) => {this.props.onHexClick(hex); e.stopPropagation(); return false;}}>\r\n\r\n        </div>\r\n      });\r\n      const mtns = this.mtn_transforms.map((x, i) => {\r\n        return <span key={i} style={x} className=\"mtn\">⛰️</span>\r\n      });\r\n      return (\r\n        <div className=\"tile\" onClick={() => this.props.onClick()}>\r\n        <svg style={{width: '100%', height: '100%'}} className=\"petri-base\">\r\n          <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 1)\" />\r\n         </svg>\r\n          {regions}\r\n          {mtns}\r\n          {deaths}\r\n          {buildings}\r\n          {beans}\r\n          <span className=\"tile-label\">{this.props.tile.name}</span>\r\n          <svg style={{width: '100%', height: '100%'}} className=\"petri-lid\">\r\n            <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 0.2)\" />\r\n           </svg>\r\n        </div>\r\n      )\r\n    }\r\n  }","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { World, TraitJob } from \"../World\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { Listing } from \"../simulation/Economy\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport class EconomyReport extends React.Component<{world: World}, {paused: boolean}> {\r\n    constructor(props: {world: World}) {\r\n      super(props);\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    render() {\r\n      let beans = this.props.world.beans;\r\n      const food_median = median(beans.map(x => x.discrete_food));\r\n      const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n      const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n      const wealth_avg = wealth_total / (beans.length || 1);\r\n      const wealth_median = median(beans.map(x => x.cash));\r\n      const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n      const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n      const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n      const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n      const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n      const jobs = beans.reduce((obj, b) => {\r\n        obj[b.job] = (obj[b.job] || 0)+1;\r\n        return obj;\r\n      }, {} as {[key in TraitJob]: number});\r\n      const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n      function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: Listing){\r\n        obj.supply += l.quantity;\r\n        obj.price += l.price;\r\n        obj.count++;\r\n        obj.avg = obj.price / obj.count;\r\n        return obj;\r\n      }\r\n      const food = this.props.world.economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const meds = this.props.world.economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const houses = this.props.world.economy.market.listings['shelter'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      return (\r\n        <div>\r\n          <div className=\"pad-4p\">\r\n            <h3>Subject's Health</h3>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🍞 Food Security</strong> Median:{food_median.toFixed(1)} meals <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n              Supply: {food.supply} meals. Avg. price ${food.avg.toFixed(2)} <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.food} meals\r\n            </div>\r\n            <div>\r\n              <strong>🩺 Healthcare</strong> Median:{health_median} <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n              Supply: {meds.supply} treatments. Avg. price ${meds.avg.toFixed(2)}  <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.medicine} treatments\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🏡 Housing</strong> <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\" className=\"big\"></NeedReadout>\r\n              Supply: {houses.supply} units. Avg. price ${houses.avg.toFixed(2)}   <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.shelter} units\r\n            </div>\r\n          </div>\r\n          <div className=\"pad-4p\">\r\n            <h3>Economic Health</h3>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>💰 Wealth</strong> Household Wealth: {wealth_total.toFixed(2)}<br/>\r\n              {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${this.props.world.economy.getCostOfLiving().toFixed(2)} <br/>\r\n              Median: ${wealth_median.toFixed(2)} Average: ${wealth_avg.toFixed(2)} <br/>\r\n              Top {wealthy_percentage.toFixed(1)}% of subjects own {wealthy_ownership.toFixed(1)}% of the wealth\r\n            </div>\r\n            <span>\r\n              <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n              <strong>Employment</strong>\r\n              <ul className=\"boxes\">\r\n                <li>{jobs.farmer} farmers</li>\r\n                <li>{jobs.builder} builders</li>\r\n                <li>{jobs.doc} doctors</li>\r\n              </ul>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\n\r\nexport interface EventsPanelPS\r\n{\r\n    events: IEvent[]\r\n}\r\n\r\nexport class EventsPanel extends React.Component<EventsPanelPS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let events = this.props.events.map((e, i) => {\r\n            return <div key={i}>\r\n                <span>{e.icon}</span>&nbsp;\r\n                <span>{e.message}</span>\r\n            </div>\r\n        });\r\n        if (this.props.events.length === 0){\r\n            events = [<div key={0}>\r\n                <small>No events yet this year</small>\r\n            </div>]\r\n        }\r\n        return (                \r\n        <div>\r\n            <div>\r\n                <b>Events</b>\r\n            </div>\r\n            {events}\r\n        </div>\r\n        )\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { Trait, TraitIcon } from \"../World\";\r\n\r\nexport class CardButton extends React.Component<{\r\n    icon: string,\r\n    name: string,\r\n    onClick?: () => void,\r\n    title?: string,\r\n    subtext?: string,\r\n    thin?: boolean,\r\n    singleLine?: boolean\r\n}>{\r\n    render(){\r\n        let classes = \"card button\";\r\n        if (this.props.thin) classes += ' thin';\r\n        if (this.props.singleLine) classes += ' single';\r\n        return <button className={classes} title={this.props.title} onClick={() => {\r\n            if (this.props.onClick) this.props.onClick()\r\n        }} type=\"button\">\r\n            {this.props.icon} {this.props.name}\r\n            {\r\n                (this.props.subtext != null) ? <small>{this.props.subtext}</small> : null\r\n            }\r\n        </button>\r\n    }\r\n}\r\n\r\nexport function TraitToCard(bean: Bean, trait: Trait, onClick?: () => void){\r\n    switch(trait){\r\n        case 'ego':\r\n        case 'state':\r\n        case 'fresh':\r\n        case 'sick':\r\n        case 'trad':\r\n        case 'prog':\r\n        case 'hungry':\r\n        case 'stuffed':\r\n        case 'podless':\r\n        case 'homeowner':\r\n        case 'circle':\r\n        case 'square':\r\n        case 'triangle':\r\n        case 'sane':\r\n        case 'confused':\r\n        case 'mad':\r\n            return <CardButton icon={TraitIcon[trait]} title={keyToName[trait]} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        default:\r\n            return null;\r\n    }\r\n} ","import React from \"react\";\r\nimport { IHappinessModifier } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Economy } from \"../simulation/Economy\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { IEvent, EventBus } from \"../events/Events\";\r\nimport { withinLastYear } from \"../simulation/Time\";\r\nimport { Government } from \"../simulation/Government\";\r\nimport { Player } from \"../simulation/Player\";\r\nimport { CardButton, TraitToCard } from \"../widgets/CardButton\";\r\n\r\ninterface BeanPanelP{\r\n    city: City,\r\n    bean: Bean,\r\n    economy: Economy,\r\n    law: Government,\r\n    party: Party,\r\n    alien: Player,\r\n    clearCity: () => void;\r\n    bus: EventBus\r\n    scan: (bean: Bean) => boolean;\r\n    insult: (bean: Bean) => void;\r\n    support: (bean: Bean) => void;\r\n}\r\n\r\ninterface BeanPanelS{\r\n    faceOverride?: string;\r\n}\r\n\r\nexport class BeanPanel extends React.Component<BeanPanelP, BeanPanelS> {\r\n    constructor(props: BeanPanelP) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    scan = () => {\r\n        if (this.props.scan(this.props.bean)){\r\n            this.setState({faceOverride: '🤨'});\r\n            this._resetFace();\r\n        }\r\n    }\r\n    insult = () => {\r\n        this.props.insult(this.props.bean);\r\n        this.setState({faceOverride: '😡'});\r\n        this._resetFace();\r\n    }\r\n    support = () => {\r\n        this.props.support(this.props.bean);\r\n        this.setState({faceOverride: '🤩'});\r\n        this._resetFace();\r\n    }\r\n    _resetFace(){\r\n        setTimeout(() => {\r\n            this.setState({faceOverride: undefined})\r\n        }, 5000);\r\n    }\r\n    happyTable(mods: IHappinessModifier[]){\r\n        return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{x.reason}</td>\r\n                <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n            </tr>\r\n        });\r\n    }\r\n    get scanned(){\r\n        return this.props.alien.scanned_bean[this.props.bean.key];\r\n    }\r\n    renderTraits(){\r\n        if (this.scanned){\r\n            return <div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ethnicity, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.sanity, undefined)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ideals, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.community, undefined)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.food, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.shelter, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.health, undefined)}\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className=\"card-parent\">\r\n                <CardButton icon=\"🛰️\" name=\"Scan\" subtext=\"-Energy +Info\" onClick={this.scan}></CardButton>\r\n            </div>\r\n        }\r\n    }\r\n    render(){\r\n        const classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n        const chance = this.props.bean.chanceToDonate(this.props.economy, true);\r\n        return (                \r\n        <div>\r\n            <div>\r\n                <b>{this.props.bean.name}&nbsp;\r\n                <small>\r\n                    of {this.props.city.name}\r\n                </small>\r\n                </b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n            </div>\r\n            <div className=\"bean-view\">                \r\n                <span className={classes+\" bean\"}>\r\n                    {\r\n                        this.state.faceOverride === undefined ? this.props.bean.getFace() : this.state.faceOverride\r\n                    }\r\n                </span>\r\n            </div>\r\n            {this.renderTraits()}\r\n            <div className=\"horizontal\">\r\n                <span>\r\n                    💰 ${this.props.bean.cash.toFixed(2)}\r\n                </span>\r\n                <span>\r\n                    🙂 {Math.round(this.props.bean.lastHappiness)}%\r\n                </span>\r\n                <span>\r\n                    👍 {Math.round(this.props.bean.lastPartySentiment)}%\r\n                </span>\r\n            </div>\r\n            <table className=\"width-100p\"><tbody>\r\n                {this.scanned ? this.happyTable(this.props.bean.getHappinessModifiers(this.props.economy, this.props.city, this.props.law)) : null}\r\n                {this.scanned ? this.happyTable(this.props.bean.getSentimentModifiers(this.props.economy, this.props.city, this.props.law, this.props.party).party) : null}\r\n\r\n                </tbody>\r\n            </table>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\" onClick={this.support} disabled={!this.props.bean.canSupport()}\r\n                    title=\"Rewrite one of this being's beliefs\"\r\n                >😵 Brainwash\r\n                    <small>-Psi -Sanity +Belief</small>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" disabled={this.props.party.materialCapital < 1} className=\"button card\" onClick={this.scan} \r\n                    title=\"Increase this being's influence\">\r\n                    🧐 Empower\r\n                    <small>-Psi +Influence</small>\r\n                </button>\r\n                <button type=\"button\" className=\"button card\" onClick={this.scan} \r\n                    title=\"Increase this being's wealth\">\r\n                    🤑 Gift\r\n                    <small>-Energy +Money</small>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\" onClick={this.scan} \r\n                    title=\"Drain a bit of this being's brain\">\r\n                    🤪 Siphon\r\n                    <small>-Energy -Sanity +Psi</small>\r\n                </button>\r\n                <button type=\"button\" className=\"button card\" onClick={this.insult}\r\n                    title=\"Delete this being from the experiment\"\r\n                >\r\n                    ☠️ Disappear\r\n                    <small>-Bots -Energy</small>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\" onClick={this.insult}\r\n                    title=\"Remove this being for study\"\r\n                >\r\n                    👾 Abduct for Research\r\n                    <small>-Bots -Sanity +Tech</small>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { CityDropdown } from \"../widgets/Dropdown\";\r\nimport { City } from \"../simulation/City\";\r\n\r\nexport interface FoundPartyPS\r\n{\r\n    cities: City[],\r\n    onFound: (state: FoundPartyS) => void\r\n}\r\nexport interface FoundPartyS\r\n{\r\n    community: TraitCommunity|null\r\n    ideal: TraitIdeals|null,\r\n    name: string,\r\n    slogan: string,\r\n    members: string,\r\n    goal: string,\r\n    cityKey: number\r\n}\r\n\r\nexport class FoundParty extends React.Component<FoundPartyPS, FoundPartyS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            community: null,\r\n            ideal: null,\r\n            name: \"Goodplace\",\r\n            slogan: \"Perfection is achievable.\",\r\n            members: \"Citizens\",\r\n            goal: \"Legislation\",\r\n            cityKey: 0\r\n        }\r\n    }\r\n    onCommunity(val: TraitCommunity){\r\n        this.setState({community: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onIdeal(val: TraitIdeals){\r\n        this.setState({ideal: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onBigFourChange(){\r\n        if (this.state.community === 'ego' && this.state.ideal === 'trad'){\r\n            this.setState({\r\n                name: 'Arcadia',\r\n                slogan: \"A man belongs on the farm.\",\r\n                members: \"Farmers\", goal: \"Tariffs\"});\r\n        } else if (this.state.community === 'ego' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Libertaria\",\r\n                slogan: \"Freedom for every being!\",\r\n                members: \"Builders\", goal: \"Right to Strike\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'trad') {\r\n            this.setState({\r\n                name: \"Ultimate Kingdom\",\r\n                slogan: \"Honor to King and family.\",\r\n                members: \"Homeowners\", goal: \"Repeal Property Tax\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Equus\",\r\n                slogan: \"True equality is peace.\",\r\n                members: \"Penniless\", goal: \"Food Welfare\"});\r\n        }\r\n    }\r\n    onName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({name: e.target.value});\r\n    }\r\n    onSlogan = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({slogan: e.target.value});\r\n    }\r\n    onCity = (key: any) => {\r\n        this.setState({cityKey: +key});\r\n    }\r\n    render(){\r\n        return <div>            \r\n          <h2>Found your Utopia</h2>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              Perfect societies rely on the\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"state\" checked={this.state.community === 'state'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)} /> <b>Government</b> 🐘 {/*🤝*/}\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"ego\" checked={this.state.community === 'ego'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)}/> <b>Individual</b> 🦅 {/*✌️*/}\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              to guarantee well-being.\r\n            </div>\r\n            <div>\r\n              Perfect beings devote themselves to\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"trad\" checked={this.state.ideal === 'trad'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)}/> <b>Traditional</b> {/*🕯️ 🔮*/} 👑\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"prog\" checked={this.state.ideal === 'prog'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)} /> <b>Progressive</b> {/*💡 🔬*/} 🎓\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              social values.\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My Utopia is named <input type=\"text\" value={this.state.name} onChange={this.onName} />\r\n            </div>\r\n            <div>\r\n              My Utopia's mantra is <input type=\"text\" value={this.state.slogan} onChange={this.onSlogan}  />\r\n            </div>\r\n          </div>\r\n          <hr/>\r\n          <button type=\"button\" disabled={this.state.community == null || this.state.ideal == null} className=\"important btn-found-party\" onClick={() => this.props.onFound(this.state)}>Found the {this.state.name} Utopia</button>\r\n        </div>\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { City } from \"../simulation/City\";\r\n\r\nexport interface DropdownPS<T>{\r\n    options: Array<T&{key: any}>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any\r\n}\r\ninterface DropdownS{\r\n    key: any;\r\n}\r\n\r\nexport abstract class Dropdown<T> extends React.Component<DropdownPS<T>, DropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    abstract getTextForOption(data: T): string;\r\n    options(){\r\n        return this.props.options.map((o) => {\r\n            return <option value={o.key} key={o.key} title={this.getTitleForOption(o)}>\r\n                {this.getTextForOption(o)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: T): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\nexport class CityDropdown extends Dropdown<City>{\r\n    getTextForOption(data: City): string{\r\n        return data.name;\r\n    }\r\n}","import React from \"react\";\r\nimport { IPolicy } from \"../simulation/Politics\";\r\nimport { Dropdown } from \"./Dropdown\";\r\nimport { TraitIcon } from \"../World\";\r\n\r\nexport class PolicyDropdown extends Dropdown<IPolicy|undefined>{\r\n    getTextForOption(data: IPolicy): string{\r\n        return `${data.name} ${data.community ? TraitIcon[data.community]: ''}${data.ideals ? TraitIcon[data.ideals]: ''}`;\r\n    }\r\n    getTitleForOption(data: IPolicy): string|undefined{\r\n        return data.hint;\r\n    }\r\n}","import React from \"react\";\r\nimport { World, Axis, TraitIcon } from \"../World\";\r\nimport { policy, keyToName } from \"../App\";\r\nimport { PolicyDropdown } from \"../widgets/PolicyDropdown\";\r\nimport { PolicyTree, PolicyByKey, IPolicy } from \"../simulation/Politics\";\r\n\r\nexport interface PartyOverviewPS{\r\n    world: World;\r\n    setPolicy(axis: Axis, policy: IPolicy): void;\r\n}\r\ninterface PartyOverviewS{\r\n\r\n}\r\n\r\nexport class PartyOverview extends React.Component<PartyOverviewPS, PartyOverviewS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    setPolicy(axis: Axis){\r\n        return (policyKey: string) => {\r\n            const pol = PolicyByKey(policyKey);\r\n            if (pol){\r\n                this.props.setPolicy(axis, pol);\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        const hqs = this.props.world.cities.filter((x) => x.partyHQ != null);\r\n        const hq_names = hqs.map((x, i) => <i>{(i > 0 ? ', ': '')}{x.name}</i>);\r\n\r\n        return <div>\r\n            <div className=\"col-2\">\r\n            <div>\r\n              <h2 className=\"inline\">\r\n                {this.props.world.party.name}\r\n              </h2>\r\n              &nbsp;\r\n              <i>{this.props.world.party.slogan}</i>\r\n            </div>\r\n            <div>\r\n                <button type=\"button\" className=\"pull-r\">\r\n                🧪 View Research Lab\r\n                </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"policies\">\r\n            {this.props.world.party.availablePolicies.map((p) => policy(p))}\r\n          </div>\r\n          <div className=\"pad-4p\">\r\n                <h3 className=\"small\">\r\n                    Platform\r\n                </h3>\r\n                <div className=\"horizontal\">\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Welfare</div>\r\n                        <PolicyDropdown options={PolicyTree.wel_food} value={this.props.world.party.platform.wel_food} onChange={this.setPolicy('wel_food')} hint=\"Nutrition\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.wel_house} value={this.props.world.party.platform.wel_house} onChange={this.setPolicy('wel_house')} hint=\"Housing\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.wel_health} value={this.props.world.party.platform.wel_health} onChange={this.setPolicy('wel_health')} hint=\"Healthcare\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Taxation</div>\r\n                        <PolicyDropdown options={PolicyTree.tax_basic} value={this.props.world.party.platform.tax_basic} onChange={this.setPolicy('tax_basic')} hint=\"Basic Tax\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.tax_second} value={this.props.world.party.platform.tax_second} onChange={this.setPolicy('tax_second')} hint=\"Secondary Tax\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Economics</div>\r\n                        <PolicyDropdown options={PolicyTree.econ_ex} value={this.props.world.party.platform.econ_ex} onChange={this.setPolicy('econ_ex')} hint=\"External\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.econ_labor} value={this.props.world.party.platform.econ_labor} onChange={this.setPolicy('econ_labor')} hint=\"Labor\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.econ_sub} value={this.props.world.party.platform.econ_sub} onChange={this.setPolicy('econ_sub')} hint=\"Subsidies\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Culture</div>\r\n                        <PolicyDropdown options={PolicyTree.cul_rel} value={this.props.world.party.platform.cul_rel} onChange={this.setPolicy('cul_rel')} hint=\"Religion\"></PolicyDropdown>\r\n                        {\r\n                            this.props.world.party.platform.cul_rel && this.props.world.party.platform.cul_rel.key == '20' ?\r\n                            <PolicyDropdown options={PolicyTree.cul_theo} value={this.props.world.party.platform.cul_theo} onChange={this.setPolicy('cul_theo')} hint=\"Theocracy\"></PolicyDropdown> : null\r\n                        }\r\n                        <PolicyDropdown options={PolicyTree.cul_ed} value={this.props.world.party.platform.cul_ed} onChange={this.setPolicy('cul_ed')} hint=\"Education\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Law</div>\r\n                        <PolicyDropdown options={PolicyTree.law_vote} value={this.props.world.party.platform.law_vote} onChange={this.setPolicy('law_vote')} hint=\"Voting\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.law_bribe} value={this.props.world.party.platform.law_bribe} onChange={this.setPolicy('law_bribe')} hint=\"Corruption\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.law_imm} value={this.props.world.party.platform.law_imm} onChange={this.setPolicy('law_imm')} hint=\"Immigration\"></PolicyDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <div className=\"grow-1 platform-identity\">\r\n                        { keyToName[this.props.world.party.community]}\r\n                        &nbsp;\r\n                        {TraitIcon[this.props.world.party.community]}\r\n                    </div>\r\n                    <div className=\"grow-1 platform-identity\">\r\n                        { keyToName[this.props.world.party.ideals]}\r\n                        &nbsp;\r\n                        {TraitIcon[this.props.world.party.ideals]}\r\n                    </div>\r\n                </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n                <h3 className=\"small\">\r\n                    Crime\r\n                </h3>\r\n                <div className=\"horizontal\">\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Suffrage</div>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Suffrage</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport './chrome/chrome.css';\r\nimport { World, TraitGood, Axis, Trait } from './World';\r\nimport { GenerateWorld, GeneratePartyHQ, GenerateBuilding, GenerateBean } from './WorldGen';\r\nimport { Modal } from './widgets/Modal';\r\nimport { OverviewPanel } from './right-panel/OverviewPanel';\r\nimport { Bean } from './simulation/Bean';\r\nimport { AnimatedBean } from './petri-ui/AnimatedBean';\r\nimport { WorldTile } from './petri-ui/WorldTile';\r\nimport { EconomyReport } from './modal-content/EconomyReport';\r\nimport { CharityPanel } from './modal-content/CharityPanel';\r\nimport { PoliticalEffect, Policy, CityPartyHQ, IPolicy } from './simulation/Politics';\r\nimport { EventsPanel } from './right-panel/Events';\r\nimport { BeanPanel } from './right-panel/BeanPanel';\r\nimport { FoundParty, FoundPartyS } from './modal-content/FoundParty';\r\nimport { PartyOverview } from './modal-content/PartyOverview';\r\nimport { BubbleText } from './widgets/BubbleText';\r\nimport { Season, Now } from './simulation/Time';\r\nimport { SocialGraph } from './widgets/SocialGraph';\r\nimport { CapsuleLabel } from './widgets/CapsuleLabel';\r\n\r\n\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { GoalsPanel } from './right-panel/Goals';\r\nimport { CampaignsPanel } from './modal-content/Campaigns';\r\nimport { GovernmentPanel } from './modal-content/Gov';\r\nimport { ResearchPanel } from './modal-content/Research';\r\nimport { StopPlayFastButtons } from './widgets/StopPlayFast';\r\nimport { BuildingTypes, HexPoint } from './simulation/Geography';\r\nimport { HexPanel } from './right-panel/HexPanel';\r\nimport { City } from './simulation/City';\r\n\r\n\r\nexport const keyToName: {[key in Trait|BuildingTypes]: string} = {\r\n  state: 'Statist', ego: 'Egoist', \r\n  trad: 'Traditionalist', prog: 'Progressive', \r\n  circle: 'Brunette', square: 'Blonde', triangle: 'Redhead', \r\n  book: 'Book', heart: 'Heart', music: 'Music', noFaith: 'Faithless',\r\n  hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\r\n  podless: 'Homeless', crowded: 'Crowded', homeowner: 'Homeowner',\r\n  sick: 'Sick', bruised: 'Bruised', fresh: 'Robust',\r\n  sane: 'Sane', confused: 'Confused', mad: 'Mad',\r\n  house:'House', hospital:'Hospital', farm: 'Farm', theater: 'Theater', church: 'Church', courthouse: 'Courthouse'\r\n};\r\nexport const magToText = {'-3':'---', '-2':'--', '-1':'-', '1':'+', '2':'++', '3':'+++' };\r\nfunction magToTextSw(magnitude: number){\r\n  switch(magnitude) {\r\n    case -3:\r\n      return '---';\r\n    case -2:\r\n      return '--';\r\n    case -1:\r\n      return '-';\r\n    case 1:\r\n      return '+';\r\n    case 2:\r\n      return '++';\r\n    case 3:\r\n      return '+++';\r\n    default:\r\n      return '/';\r\n  }\r\n}\r\nfunction compass(p: PoliticalEffect){\r\n  return (\r\n    <span className=\"badge\">\r\n      { keyToName[p.key] }\r\n      { magToTextSw(p.mag) }\r\n    </span>\r\n  )\r\n}\r\nexport function policy(p: Policy){\r\n  return (\r\n    <div className=\"policy\" key={p.key}>\r\n      <b>{p.key}</b>\r\n      <p>\r\n        {p.fx.map((x) => compass(x))}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport type ModalView = 'policy'|'economy'|'campaign'|'party_creation'|'party'|'polisci';\r\ninterface AppPs{\r\n}\r\ninterface AppState{\r\n  world: World,\r\n  activeCityID: number|null;\r\n  activeBeanID: number|null;\r\n  activeHex: HexPoint|null;\r\n  activeModal: ModalView|null;\r\n  activeMain: 'geo'|'network';\r\n  activeRightPanel: 'events'|'overview'|'goals';\r\n  timeScale: number;\r\n}\r\n\r\nconst LogicTickMS = 2000;\r\nclass App extends React.Component<AppPs, AppState>{\r\n  constructor(props: AppPs) {\r\n    super(props);\r\n    this.state = {\r\n      world: GenerateWorld(),\r\n      activeCityID: null,\r\n      activeBeanID: null,\r\n      activeHex: null,\r\n      activeMain: 'geo',\r\n      activeModal: 'party_creation',\r\n      activeRightPanel: 'overview',\r\n      timeScale: 1\r\n    };\r\n    this.state.world.calculateComputedState();\r\n  }\r\n  private previousTimeMS: DOMHighResTimeStamp = 0;\r\n  private logicTickAccumulatorMS: number = 0;\r\n  componentDidMount(){\r\n    document.addEventListener(\"keyup\", this.keyupHandler, false);\r\n    window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n      this.previousTimeMS = time;\r\n      window.requestAnimationFrame(this.tick);\r\n    });\r\n  }\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"keyup\", this.keyupHandler);\r\n  }\r\n  tick = (timeMS: DOMHighResTimeStamp) => {\r\n    // Compute the delta-time against the previous time\r\n    const deltaTimeMS = (timeMS - this.previousTimeMS) * this.state.timeScale;\r\n  \r\n    // Update the previous time\r\n    this.previousTimeMS = timeMS;\r\n    if (deltaTimeMS > 0){\r\n      this.logicTickAccumulatorMS += deltaTimeMS;\r\n      this.state.world.simulate_beans(deltaTimeMS);\r\n      \r\n      if (this.logicTickAccumulatorMS > LogicTickMS){\r\n        this.state.world.simulate_world();\r\n        this.setState({world: this.state.world});\r\n        this.logicTickAccumulatorMS = 0;\r\n      }\r\n    }\r\n    window.requestAnimationFrame(this.tick);\r\n  }\r\n  keyupHandler = (event: KeyboardEvent) => {\r\n    if(event.key === ' ') {\r\n      if (this.state.timeScale > 0){\r\n        this.setState({timeScale: 0});\r\n      } else {\r\n        this.setState({timeScale: 1});\r\n      }\r\n    }\r\n  }\r\n  foundParty = (state: FoundPartyS) => {\r\n    this.state.world.party.name = state.name;\r\n    this.state.world.party.slogan = state.slogan;\r\n    if (state.community)\r\n      this.state.world.party.community = state.community;\r\n    if (state.ideal)\r\n      this.state.world.party.ideals = state.ideal;\r\n    const city = this.state.world.cities.find((x) => x.key == state.cityKey);\r\n    if (city) {\r\n      GeneratePartyHQ(city, this.state.world.party);\r\n    }\r\n    this.state.world.calculateComputedState();\r\n    this.setState({\r\n      world: this.state.world,\r\n      activeModal: null});\r\n  }\r\n  get difficulty(){\r\n    return this.state.world.alien.difficulty;\r\n  }\r\n  build = (city: City, where: HexPoint, what: BuildingTypes) => {\r\n    const cost = this.difficulty.cost.emptyHex.build[what];\r\n    if (this.state.world.alien.canAfford(cost)){\r\n      this.state.world.alien.purchase(cost);\r\n      GenerateBuilding(city, what, where);\r\n    }\r\n    \r\n    this.setState({world: this.state.world});\r\n  }\r\n  kidnap = (city: City, where: HexPoint) => {\r\n    const cost = this.difficulty.cost.hex.kidnap;\r\n    if (this.state.world.alien.canAfford(cost)){\r\n      this.state.world.alien.purchase(cost);\r\n      city.historicalBeans.push(GenerateBean(city, city.historicalBeans.length));\r\n    }\r\n    \r\n    this.setState({world: this.state.world});\r\n  }\r\n  foundCharity = (good: TraitGood, name: string, budget: number) => {\r\n    this.state.world.addCharity(good, name, budget);\r\n    this.setState({world: this.state.world});\r\n  }\r\n  insult = (bean: Bean) => {\r\n    this.state.world.party.politicalCapital += 1;\r\n    bean.lastInsultDate = Now(this.state.world);\r\n    if (bean.city)\r\n      bean.calculateBeliefs(this.state.world.economy, bean.city, this.state.world.law, this.state.world.party);\r\n    this.setState({world: this.state.world});\r\n    this.state.world.bus.politicalCapital.publish({change: 1});\r\n  }\r\n  support = (bean: Bean) => {\r\n    this.state.world.party.politicalCapital -= 1;\r\n    bean.lastApprovalDate = Now(this.state.world);\r\n    if (bean.city)\r\n      bean.calculateBeliefs(this.state.world.economy, bean.city, this.state.world.law, this.state.world.party);\r\n    this.setState({world: this.state.world});\r\n    this.state.world.bus.politicalCapital.publish({change: -1});\r\n  }\r\n  scan = (bean: Bean) => {\r\n    if (this.state.world.alien.canAfford(this.state.world.alien.difficulty.cost.bean.scan)){\r\n      this.state.world.alien.purchase(this.state.world.alien.difficulty.cost.bean.scan);\r\n      this.state.world.alien.scanned_bean[bean.key] = true;\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  setPolicy = (axis: Axis, policy: IPolicy) => {\r\n    this.state.world.party.platform[axis] = policy;\r\n    this.state.world.calculateComputedState();\r\n    this.setState({world: this.state.world});\r\n  }\r\n  getPanel(){\r\n    switch(this.state.activeRightPanel){\r\n      case 'overview':\r\n        if (this.state.activeCityID == null) {\r\n          return <OverviewPanel beans={this.state.world.beans} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>\r\n        } else {\r\n          const city = this.state.world.cities.find((x) => x.key == this.state.activeCityID);\r\n          if (city) {\r\n            \r\n            if (this.state.activeHex != null){\r\n              return <HexPanel city={city} hex={this.state.activeHex} difficulty={this.state.world.alien.difficulty}\r\n                clearHex={() => this.setState({activeHex: null})}\r\n                kidnap={(where) => this.kidnap(city, where)} \r\n                build={(where, what) => {this.build(city, where, what)}}></HexPanel>\r\n            }\r\n            else if (this.state.activeBeanID != null) {\r\n              const bean = city.beans.find((y) => y.key == this.state.activeBeanID);\r\n              if (bean)\r\n                return <BeanPanel bean={bean} city={city} alien={this.state.world.alien} \r\n                economy={this.state.world.economy} party={this.state.world.party} bus={this.state.world.bus} law={this.state.world.law}\r\n                scan={this.scan} insult={this.insult} support={this.support}\r\n                clearCity={() => this.setState({activeCityID: null, activeBeanID: null})}></BeanPanel>\r\n            }\r\n\r\n            return <OverviewPanel beans={city?.beans} city={city} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>            \r\n          }\r\n          else\r\n            return <div>\r\n            </div>\r\n        }\r\n      case 'goals':\r\n        return <GoalsPanel player={this.state.world.alien} progress={this.state.world.alien}></GoalsPanel>\r\n      case 'events':\r\n        return <EventsPanel events={this.state.world.yearsEvents}></EventsPanel>\r\n    }\r\n  }\r\n  renderGeo() {\r\n    const COL = this.state.world.economy.getCostOfLiving();\r\n    return this.state.world.cities.map((t) => {\r\n        return (\r\n          <WorldTile tile={t} city={t} costOfLiving={COL} key={t.key}\r\n            onClick={() => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: null})} \r\n            onBeanClick={(b) => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: b.key})} \r\n            onHexClick={(hex) => {this.setState({activeCityID: t.key, activeHex: hex, activeBeanID: null, activeRightPanel: 'overview'})}}\r\n            ></WorldTile>\r\n        )\r\n      });\r\n  }\r\n  renderNetwork(){\r\n    return <div>\r\n      <div className=\"horizontal max-w-500 m-t-2em\">\r\n        <button type=\"button\">\r\n        😎 Influence\r\n        </button>\r\n        <button type=\"button\">\r\n        🚩 Party Preference\r\n        </button>\r\n        <button type=\"button\">\r\n        📈 Demographics\r\n        </button>\r\n      </div>\r\n      <SocialGraph costOfLiving={this.state.world.economy.getCostOfLiving()} \r\n        beans={this.state.world.beans}\r\n        onClick={(b) => this.setState({activeCityID: b.cityKey, activeRightPanel: 'overview', activeBeanID: b.key})} ></SocialGraph>\r\n    </div>\r\n  }\r\n  main(){\r\n    switch(this.state.activeMain){\r\n      case 'network':\r\n        return this.renderNetwork();\r\n      default:\r\n        return this.renderGeo();\r\n    }\r\n  }\r\n  render() {\r\n    const season = Season[this.state.world.date.season];\r\n    return (\r\n    <div className=\"canvas\">\r\n      <TransformWrapper \r\n        defaultScale={1}\r\n        wheel={{step: 48}}>\r\n        <TransformComponent>\r\n          <div className=\"world\">\r\n            {this.main()}\r\n          </div>\r\n        </TransformComponent>\r\n      </TransformWrapper>\r\n      <div className=\"overlay\">\r\n        <Modal show={this.state.activeModal == 'party_creation'} onClick={() => this.setState({activeModal: null})} hideCloseButton={true}>\r\n          <FoundParty cities={this.state.world.cities} onFound={this.foundParty}></FoundParty>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'party'} onClick={() => this.setState({activeModal: null})}>\r\n          <PartyOverview world={this.state.world} setPolicy={this.setPolicy}></PartyOverview>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'polisci'} onClick={() => this.setState({activeModal: null})} hideCloseButton={true}>\r\n          <ResearchPanel></ResearchPanel>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'policy'} onClick={() => this.setState({activeModal: null})}>\r\n          <GovernmentPanel world={this.state.world}></GovernmentPanel>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'campaign'} onClick={() => this.setState({activeModal: null})}>\r\n          <CampaignsPanel></CampaignsPanel>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({activeModal: null})}>\r\n          {(this.state.activeModal == 'economy'? <EconomyReport world={this.state.world}></EconomyReport> : '')}\r\n        </Modal>\r\n        <div className=\"left\">\r\n          <div className=\"top\">\r\n            <span>\r\n            👽 Alien 🌍 Utopia 🔬 Lab\r\n            </span>\r\n            <span>\r\n              &nbsp;\r\n              Year {this.state.world.date.year}, \r\n              &nbsp;\r\n              {season} {this.state.world.date.day}\r\n            </span>\r\n            <span>\r\n              6 mo 5 days til Grade\r\n            </span>\r\n            <button type=\"button\" onClick={() => this.setState({activeMain: 'network'})}>🌐</button>\r\n            <button type=\"button\" onClick={() => this.setState({activeMain: 'geo'})}>🌎</button>\r\n            \r\n            <StopPlayFastButtons timeScale={this.state.timeScale} setTimeScale={(n: number) => {this.setState({timeScale: n})}}></StopPlayFastButtons>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <BubbleText changeEvent={this.state.world.alien.energy.change} icon=\"⚡️\">\r\n              <CapsuleLabel icon=\"⚡️\" label=\"Energy\">\r\n                {this.state.world.alien.energy.amount.toFixed(1)}\r\n              </CapsuleLabel>\r\n            </BubbleText>\r\n            <BubbleText changeEvent={this.state.world.alien.psi.change} icon=\"🧠\">\r\n              <CapsuleLabel icon=\"🧠\" label=\"Psi\">\r\n                {this.state.world.alien.psi.amount.toFixed(1)}\r\n              </CapsuleLabel>\r\n            </BubbleText>\r\n            <BubbleText changeEvent={this.state.world.alien.bots.change} icon=\"🤖\">\r\n              <CapsuleLabel icon=\"🤖\" label=\"Bots\">\r\n                {this.state.world.alien.bots.amount.toFixed(1)}\r\n              </CapsuleLabel>\r\n            </BubbleText>\r\n            <span>\r\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'economy'})}>State of the Utopia</button>\r\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'party'})}>Gov</button>\r\n              <button type=\"button\" onClick={() => this.setState({activeModal:'polisci'})}>Research</button>\r\n              <button type=\"button\" onClick={() => this.setState({activeModal:'campaign'})}>Campaigns</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"full-width-tabs\">\r\n            <button onClick={() => this.setState({activeRightPanel: 'overview'})}>📈 Overview</button>\r\n            <button onClick={() => this.setState({activeRightPanel: 'events'})}>📣 Events</button>\r\n            <button onClick={() => this.setState({activeRightPanel: 'goals'})}>🏆 Goals</button>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            {this.getPanel()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { ChangePubSub } from \"../events/Events\";\r\n\r\nexport class BubbleText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<{s: string, t: number, c?: string}>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n\r\n    onChange = (ev: {change: number}) => {\r\n        const id = +(new Date());\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                s: (positive ? '+': '') + ev.change,\r\n                t: id,\r\n                c: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.t != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.t} className={[b.c, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.s}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"../petri-ui/AnimatedBean\";\r\nimport \"./SocialGraph.css\";\r\nimport { origin_point } from \"../simulation/Geography\";\r\n\r\ninterface SocialGraphP{\r\n    beans: Bean[];\r\n    costOfLiving: number;\r\n    onClick: (b: Bean) => void\r\n}\r\ninterface SocialGraphS{\r\n    \r\n}\r\nexport class SocialGraph extends React.Component<SocialGraphP, SocialGraphS>{\r\n    constructor(props: SocialGraphP){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return <div className=\"social-graph\">\r\n            {\r\n                this.props.beans.map((b) => \r\n                <div className=\"bean-node\" onClick={() => this.props.onClick(b)}>\r\n                    <AnimatedBean bean={b} static={true} costOfLiving={this.props.costOfLiving} sitStill={true} \r\n                        onClick={() => {this.props.onClick(b);}}>\r\n                    </AnimatedBean>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { ChangePubSub } from \"../events/Events\";\r\nimport { threadId } from \"worker_threads\";\r\n\r\nexport class CapsuleLabel extends React.Component<{\r\n    icon?: string,\r\n    label?: string\r\n}, {\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const classN = 'capsule-label '+this.props.label||'';\r\n        return <span className={classN}>\r\n            <span className=\"capsule-icon\">\r\n                {this.props.icon}\r\n            </span>\r\n            <span className=\"capsule-text\">\r\n                {this.props.label}:\r\n            </span>\r\n            <span className=\"capsule-value\">\r\n                {this.props.children}\r\n            </span>\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { triadToString } from \"../Game\";\r\nimport { Goals, IGoal, IPlayerData, IProgressable } from \"../simulation/Player\";\r\n\r\nexport interface GoalPanelPS\r\n{\r\n  player: IPlayerData;\r\n  progress: IProgressable;\r\n}\r\n\r\nexport class GoalsPanel extends React.Component<GoalPanelPS> {\r\n  renderReward(g: IGoal){\r\n    return <div>\r\n      <small>\r\n      🎁 {triadToString(g.reward || {}, '+')}\r\n      </small>\r\n    </div>\r\n  }\r\n  renderGoal(g: IGoal){\r\n    const done = this.props.progress.goalProgress[g.key] != null && this.props.progress.goalProgress[g.key].done;\r\n    return <li>\r\n      {done ? '☑️': '⭕️'}\r\n      {g.text}\r\n      {g.tooltip != null ? <small title={g.tooltip}>❔</small> : null}\r\n      {done || g.reward == null ? null : this.renderReward(g)}\r\n    </li>\r\n  }\r\n    render(){\r\n        return (<div className=\"goals\">\r\n        <div><b>Goals</b></div>\r\n        <ul>\r\n          {this.props.progress.goals.map((key) => {\r\n            return this.renderGoal(Goals[key]);\r\n          })}\r\n        </ul>\r\n        <div><b>Report Card</b></div>\r\n        <p>\r\n          Last Grade: <b>D</b>\r\n        </p>\r\n        <p>\r\n          6 mo s til next grade.\r\n        </p>\r\n        <table style={{margin: 'auto'}}>\r\n          <tbody>\r\n            <tr>\r\n              <th>Happiness\r\n              </th>\r\n              <td>\r\n                D\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects happy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Prosperity</th>\r\n              <td>\r\n                D\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects fed and healthy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Stability\r\n              </th>\r\n              <td>\r\n                D\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects sane and civil?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Dogma\r\n              </th>\r\n              <td>\r\n                B\r\n              </td>\r\n              <td>\r\n                <small title=\"Do your society's rules match your utopian ideals?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={3}>\r\n                <hr />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n              </th>\r\n              <td>\r\n                C\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p>\r\n          Receive an \"A\" in \"Prosperity\" <br/> to receive 3 Psi\r\n        </p>\r\n      </div>)\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class CampaignsPanel extends React.Component<{\r\n\r\n}>{\r\n    render(){\r\n        return <div className=\"pad-4p\">\r\n        <div className=\"subheader\">\r\n            <h3>Propaganda</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >🎙️ Buy Propaganda</button>\r\n        </div>\r\n        <span>\r\n          Propaganda changes beans' feelings on a wide variety of topics.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              📺 Broadcast Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Small chance to increase Approval among all beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              👋 Canvassing\r\n            </span>\r\n            <small>Approval+ Labor-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on a few random beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🗞️ Print Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on wealthy beans\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <div className=\"subheader\">\r\n            <h3>Appearances</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >💬 Schedule Appearance</button>\r\n        </div>\r\n        <span>\r\n          Appearances have limited reach, but have powerful effects.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🤔 Debating\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Chance to gain or lose Influence\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            📸 Photo Op\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases Approval within one Social Group\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🎤 Speechmaking\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases chance of Donations in a single City\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🙋 Town Hall\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Suppresses negative Approval in a single city                     \r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* <CharityPanel world={this.state.world} onFoundCharity={this.foundCharity}></CharityPanel>\r\n        <div>\r\n          <b>Campaign Finances</b> <br/>\r\n          <b>Expenses</b> ${seasonalCost} <b>Surplus</b> ${this.state.world.party.seasonalIncome - seasonalCost}\r\n        </div> */}\r\n      </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { World } from \"../World\";\r\n\r\nexport class GovernmentPanel extends React.Component<{\r\n    world: World\r\n}> {\r\n    render(){\r\n        return <div><div className=\"col-2\">\r\n        <h2>Government</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"pad-4p\">\r\n        <h3>Policy</h3>\r\n        <div className=\"horizontal\">\r\n          <div className=\"vertical\">\r\n            <strong>Welfare</strong>\r\n            <div>Nutrition: {this.props.world.law.policyTree.wel_food.name}</div>\r\n            <div>Housing: {this.props.world.law.policyTree.wel_house.name}</div>\r\n            <div>Healthcare: {this.props.world.law.policyTree.wel_health.name}</div>\r\n          </div>\r\n          <div className=\"vertical\">\r\n            <strong>Taxation</strong>\r\n            <div>{this.props.world.law.policyTree.tax_basic.name}</div>\r\n            <div>{this.props.world.law.policyTree.tax_second.name}</div>\r\n          </div>\r\n          <div className=\"vertical\">\r\n            <strong>Economics</strong>\r\n            <div>External: {this.props.world.law.policyTree.econ_ex.name}</div>\r\n            <div>Labor: {this.props.world.law.policyTree.econ_labor.name}</div>\r\n            <div>Subsidies: {this.props.world.law.policyTree.econ_sub.name}</div>\r\n          </div>\r\n          <div className=\"vertical\">\r\n            <strong>Culture</strong>\r\n            <div>Religion: {this.props.world.law.policyTree.cul_rel.name}</div>\r\n            {this.props.world.law.policyTree.cul_rel.key == '20' ? <div>Theocracy: {this.props.world.law.policyTree.cul_theo.name}</div>: null}\r\n            <div>Education: {this.props.world.law.policyTree.cul_ed.name}</div>\r\n          </div>\r\n          <div className=\"vertical\">\r\n            <strong>Law</strong>\r\n            <div>Voting: {this.props.world.law.policyTree.law_vote.name}</div>\r\n            <div>Corruption: {this.props.world.law.policyTree.law_bribe.name}</div>\r\n            <div>Immigration: {this.props.world.law.policyTree.law_imm.name}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class ResearchPanel extends React.Component<{\r\n\r\n}>{\r\n    render(){\r\n        return <div>\r\n            <div className=\"col-2\">\r\n            <h2>Research Lab</h2>\r\n            <div>\r\n              Currently probing 0 beings\r\n            </div>\r\n          </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport \"./StopPlayFast.css\"\r\n\r\nexport class StopPlayFastButtons extends React.Component<{\r\n    timeScale: number,\r\n    setTimeScale: (s: number) => void\r\n}>{\r\n    render(){\r\n        return <div className=\"s-p-f button-group\">\r\n            <button type=\"button\" className={this.props.timeScale == 0 ? 'active': ''} onClick={() => this.props.setTimeScale(0)}>⏹</button>\r\n            <button type=\"button\" className={this.props.timeScale == 1 ? 'active': ''} onClick={() => this.props.setTimeScale(1)}>▶️</button>\r\n            <button type=\"button\" className={this.props.timeScale == 2 ? 'active': ''} onClick={() => this.props.setTimeScale(2)}>⏩</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { ResourceTriad, triadToString } from \"../Game\";\r\n\r\nexport class CostSmall extends React.Component<{\r\n    cost: ResourceTriad\r\n}>{\r\n\r\n    render(){\r\n        return <small>\r\n            {triadToString(this.props.cost, '-')}\r\n        </small>\r\n    }\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { City } from \"../simulation/City\";\r\nimport { BuildingIcon, BuildingTypes, HexPoint, IBuilding } from \"../simulation/Geography\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\n\r\nexport class HexPanel extends React.Component<{\r\n    city: City,\r\n    hex: HexPoint,\r\n    difficulty: IDifficulty,\r\n    clearHex: () => void,\r\n    build: (where: HexPoint, what: BuildingTypes) => void,\r\n    kidnap: (where: HexPoint) => void,\r\n}, {\r\n\r\n}> {\r\n    emptyPanel(){\r\n        const eHex = this.props.difficulty.cost.emptyHex;\r\n        return <div>\r\n            <div>\r\n                <strong>Empty Lot</strong> in <strong>{this.props.city.name}</strong>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearHex()} >❌</button>\r\n            </div>\r\n            <h3>Build:</h3>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'house')}>\r\n                    {BuildingIcon['house']} House\r\n                    <CostSmall cost={eHex.build.house}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'farm')}>\r\n                    {BuildingIcon['farm']} Farm\r\n                    <CostSmall cost={eHex.build.farm}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'hospital')}>\r\n                    {BuildingIcon['hospital']} Hospital\r\n                    <CostSmall cost={eHex.build.hospital}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'theater')}>\r\n                    {BuildingIcon['theater']} Theater\r\n                    <CostSmall cost={eHex.build.theater}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <h3>Beings:</h3>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.kidnap(this.props.hex)}>\r\n                    🛸 Kidnap New Subject\r\n                    <CostSmall cost={this.props.difficulty.cost.hex.kidnap}></CostSmall>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n    buildingPanel(b: IBuilding){\r\n        return <div>\r\n            <strong>{keyToName[b.type]}</strong> in <strong>{this.props.city.name}</strong>\r\n        </div>\r\n    }\r\n    render(){\r\n        const building: IBuilding|undefined = this.props.city.lookupBuilding(this.props.hex);\r\n        if (building){\r\n            return this.buildingPanel(building)\r\n        } else {\r\n            return this.emptyPanel();\r\n        }\r\n    }\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}