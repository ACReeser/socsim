{"version":3,"sources":["simulation/Time.tsx","events/Events.tsx","simulation/Geography.tsx","simulation/Occupation.tsx","petri-ui/Building.tsx","simulation/Priorities.tsx","simulation/Agent.tsx","simulation/Beliefs.tsx","simulation/Bean.tsx","WorldGen.tsx","simulation/Economy.tsx","World.tsx","simulation/Politics.tsx","simulation/Institutions.tsx","simulation/Government.tsx","Game.tsx","simulation/Player.tsx","simulation/Utils.tsx","simulation/City.tsx","widgets/Modal.tsx","widgets/NeedReadout.tsx","right-panel/OverviewPanel.tsx","petri-ui/AnimatedBean.tsx","petri-ui/AnimatedUFO.tsx","widgets/particles.tsx","petri-ui/AnimatedSpotlight.tsx","petri-ui/WorldTile.tsx","modal-content/EconomyReport.tsx","right-panel/Events.tsx","widgets/CardButton.tsx","right-panel/BeanPanel.tsx","modal-content/FoundParty.tsx","widgets/UniversalWidgets.tsx","modal-content/PartyOverview.tsx","widgets/BubbleText.tsx","widgets/SocialGraph.tsx","widgets/CapsuleLabel.tsx","right-panel/Goals.tsx","modal-content/Campaigns.tsx","modal-content/Gov.tsx","widgets/ConfirmButton.tsx","widgets/RobotArm.tsx","modal-content/Research.tsx","widgets/StopPlayFast.tsx","widgets/CostSmall.tsx","right-panel/HexPanel.tsx","widgets/StringDropdown.tsx","modal-content/BeliefRow.tsx","modal-content/Brainwashing.tsx","widgets/TimelyEventToggle.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Season","Hour","PubSub","onPublish","callbacks","args","this","forEach","c","callback","push","splice","indexOf","ChangePubSub","EventBus","buffer","sendToBuffer","event","length","pop","unshift","speechcrime","nojobslots","birth","death","withinLastYear","current","last","year","season","Hex","q","r","hex_directions","hex_direction","direction","hex_neighbor","hex","dir","hex_ring","center","radius","a","k","results","cube","b","hex_add","i","j","move_towards","target","maxDistanceDelta","x","y","magnitude","Math","sqrt","lerp","t","cube_lerp","z","cube_round","rx","round","ry","rz","x_diff","abs","y_diff","z_diff","cube_to_axial","axial_to_cube","cube_linedraw","N","cube_distance","layout_flat","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","origin_point","hex_to_pixel","size","origin","h","M","polarToPoint","p","cos","az","sin","getBuildingTransform","geo","type","key","byType","coordByID","transformPoint","hex_size","petriOrigin","background","transform","BuildingJobSlot","Building","occupied_slots","empty_slots","upgraded","job_slots","0","1","2","3","4","5","Object","keys","filter","s","map","beanKey","usedSlots","slot","BuildingIcon","UpgradedBuildingIcon","BuildingJobIcon","GoodToBuilding","JobToBuilding","Geography","byCoord","house","all","farm","hospital","theater","courthouse","church","park","nature","movers","ufo","numberOfRings","hexes","concat","hex_spiral","petriRadius","where","building","undefined","slot_size","getSlotOffset","hexDirectionToJobSlot","first","second","third","fourth","fifth","sixth","PetriBuilding","d","jobSlot","hasJob","props","className","style","city","slots","name","React","Component","PriorityNode","value","priority","DumbPriorityQueue","_values","values","sort","shift","PriorityQueue","index1","index2","temp","index","parentIndex","floor","swap","bubbleUp","elementPriority","leftChildIndex","rightChildIndex","leftChildPriority","rightChildPriority","indexToSwap","poppedNode","bubbleDown","AgentState","data","agent","elapsed","deltaMS","difficulty","newState","_act","Elapsed","IdleState","Bean","priorities","GetPriorities","top","dequeue","travelState","substituteIntent","TravelState","createFromIntent","act","intent","good","desiredGoodState","canBuy","maybeCrime","destinations","pos","newPos","speed","location","ActToState","create","nearby","getNearestNeighbors","maybeChat","targets","nn","chat","getRandomChat","state","ChatState","participation","destination","RouteRandom","job","GetRandom","destinationKey","Route","IntentToDestination","createFromDestination","WorkState","economy","law","work","BuyState","sinceLastAttemptMS","attempts","_bought","buy","tryBuy","tState","lastChatMS","Date","now","RelaxState","durationMS","believesIn","discrete_fun","CrimeState","steal","GetPriority","bean","inventory_priority","market","getBeansListings","cityKey","JobToGood","quantity","wealth_priority","cash","costOfLiving","min","discrete_food","bean_life","vital_thresh","food","sufficient","discrete_stamina","shelter","discrete_health","medicine","lastHappiness","queue","node","enqueue","mover","buildingType","address","start","nearestHex","pt","pixel_to_hex","offset","PrimaryBeliefData","prog","noun","adj","icon","description","trad","ego","NarrativeBeliefData","rocket","dragon","music","noFaith","SecondaryBeliefData","Diligence","idealCon","idealPro","Greed","Neuroticism","Anarchism","Charity","Natalism","Authority","Hedonism","Dogmatism","IsBeliefDivergent","belief","utopiaMotive","utopiaCommunity","reduce","isDivergent","con","IsIdealDivergent","BeliefsAll","dob","day","hour","bornInPetri","sanity","discrete_sanity","lifecycle","activity_queue","markers","ethnicity","community","ideals","faith","beliefs","partyLoyalty","lastSentiment","lastPartySentiment","ticksSinceLastSale","ticksSinceLastRelax","lastApprovalDate","lastInsultDate","fairGoodPrice","buyFood","buyMeds","fun","buyFun","buyHousing","jobQueue","onAct","amount","multiplier","econ","homeCity","mods","TraitToModifier","health","reason","mod","majorityEthnicity","MaslowHappinessScore","Deficient","getCostOfLiving","party","result","environment","GetHappiness","getHappinessModifiers","sent","getSentimentModifiers","myGood","getFairGoodPrice","traits","policies","policy","fx","mag","bad","idea","canBaby","preachBelief","crimeReason","roll","random","chance","trySetJob","eventBus","publish","trigger","message","tryGetJob","unsetJob","Boolean","needy","least","targetBeanKey","GoodToThreshold","beans","newJob","mostInDemandJob","produceAndPrice","groceries","tryTransact","bought","stolen","housing","alive","maybeDie","max","meds","babyChance","breedBean","isInCrisis","direct","canDonate","threshold","baseChance","cause","die","point","player","abductedBeans","val","abundant","base","AllGoods","Economy","OrderBook","charity","unfulfilledSeasonalDemand","totalSeasonalDemand","totalSeasonalSupply","buyer","minDemand","maxDemand","listing","getLowestPriceListing","actualDemand","price","transact","listings","subtractFromListing","seller","existing","addNewListing","getOrgsListings","inventory","addNewOrgListing","GoodToJob","g","lucky","getRandomCitizen","sellerCityKey","sellerBeanKey","supply","demand","fullListings","l","numberOfSamePriceListings","lowPrice","cKey","bKey","find","sellerOrganizationKey","sale","org","BaseParty","playerKey","organizations","slogan","availablePolicies","proposedPolicy","availableCampaigns","activeCampaigns","leadership","activeHQs","platform","institutionKey","seasonalBudget","parentInstitution","beansHelped","addCharity","LawAxisData","crime_theo","LawData","group","axis","hint","Government","lawTree","laws","Taxation","Welfare","Economics","Crime","Culture","v","triadToString","cost","sign","costs","energy","bots","psi","join","DefaultDifficulty","emptyHex","build","beam","upgrade","scan","report_card_progression","Goals","found_utopia","text","check","world","build_house_n_farm","cities","reward","beam_3","Number_Starting_City_Pop","alien","scanned_bean","set_policy","brainwash","Curriculums","GradeWorld","Happiness","BooleanAverageGrader","o","Prosperity","Stability","Dogma","GradeUpToNumber","speechcrimes","date","RubricDescription","number","allowance","maximum","NormalizedScoreToGrade","array","grade","normNumber","GradeWeights","A","B","C","D","F","TechData","tech","techPoints","Player","income","change","next_grade","goals","goalProgress","pastReportCards","workingReportCard","techProgress","currentlyResearchingTech","researchPoints","canAfford","purchase","goal","done","step","shuffle","counter","World","bus","institutions","Spring","onChat","publishEvent","onBeanDie","e","historicalBeans","onCitizenDie","subscribe","list","institute","calculate","calculateBeliefs","Evening","inflate","resetYearlyCounters","hasResearched","resetSeasonalDemand","age","maybeBaby","tryFindRandomJob","getTaxesAndDonations","calculateComputedState","checkGoals","checkReportCard","listener","exit","enter","ChangeState","Act","percent","sum","yearlyInflationDollars","richest","obj","winner","yearsPartyDonations","budget","TraitIcon","hapMod","Sufficient","Abundant","GoodIcon","reportIdeals","_report","reportCommunity","defWin","beanPropGet","avg","stash","trait","UFO","action","City","url","ufos","houses","partyHQ","openSlots","tryFreeBean","shuffled","deadBean","parent","GenerateBean","split","count","circle","square","triangle","source","squared","pow","GetRandomNumber","randomBuffer","Uint32Array","window","crypto","getRandomValues","randomNumber","ceil","choices","PI","GenerateBuilding","newBuilding","numberOf","addBuilding","GenerateWorld","GenerateCity","previousCityCount","newCity","cityPopulation","previousBeanCount","hexPoint","newBean","beanBeliefCount","StartingCash","Modal","show","hideCloseButton","onClick","closeButtonText","children","getButton","NeedReadout","dire","need","dire_style","width","full","full_style","header","keyToName","OverviewPanel","utopia","clearCity","avg_happy","avg_cash","avg_approval","report","toFixed","AxisReadout","maj","AnimatedBean","animate","setState","spin","face","getFace","speech","getSpeech","delaySeedSec","paused","static","classes","sitStill","selected","animationDelay","title","stopPropagation","getPurchase","AnimatedUFO","showBeam","setTimeout","Particles","animations","finishedAnimationCount","parts","particleCount","createRef","active","opacity","duration","easing","delay","onfinish","ref","spotlightAnimations","faceOV","beanClasses","particles","AnimatedSpotlight","lastTickMS","currentTime","tickHandle","tick","timeMS","deltaTimeMS","getSubtype","lastValid","anim","requestAnimationFrame","time","cancelAnimationFrame","msg","includes","replace","disabled","supportedBuildings","WorldTile","mtn_transforms","tile","activeTileID","spotlightEvent","activeBeanID","onBeanClick","deaths","left","u","buildings","renderBuildings","regions","xy","onHexClick","mtns","height","cx","cy","stroke","fill","renderSpotlight","median","half","EconomyReport","food_median","health_median","shelter_median","wealth_total","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","jobs","unemployed","jobless","reducer","farmer","builder","doc","entertainer","EventsPanel","events","alert","shouldEventJumpToBean","selectBean","href","CardButton","thin","singleLine","subtext","TraitToCard","BeanPanel","faceOverride","_resetFace","vaporize","support","abduct","innerView","scanned","beliefTable","happyTable","ActivityIcon","divergent","colSpan","bind","chanceToDonate","renderTraits","renderInner","FoundParty","onName","onSlogan","onCity","ideal","members","onBigFourChange","checked","onChange","onCommunity","currentTarget","onIdeal","onFound","RenderIdealBadges","comm","effect","str","output","RenderBadge","RenderIdealBadge","PartyOverview","overView","detailView","collapsedGroups","collapsedAxis","view","partOfGroup","ldata","incompatibilities","rowClassName","divs","keyGetter","Map","item","collection","get","set","groupBy","isGroup","renderDetailLaw","detailGroup","toggleGroup","detailLaw","renderOver","renderLeadership","renderFinances","renderLaws","groups","getLawsByGroup","renderHeader","renderRows","renderLawDetail","renderDetailGroup","BubbleText","ev","id","positive","bubbles","changeEvent","unsubscribe","bubbleClass","SocialGraph","CapsuleLabel","classN","label","GoalsPanel","progress","tooltip","renderReward","reportCard","renderGoal","margin","CampaignsPanel","GovernmentPanel","ConfirmButton","confirming","onConfirm","click","confirmText","RobotArm","xmlns","display","overflow","strokeWidth","tool","fontSize","ResearchPanel","tools","interval","toolI","toolI2","toolI3","toolI4","lastI","setInterval","loop","clearInterval","setResearch","total","complete","isCurrent","rootClassName","techs","renderTech","release","StopPlayFastButtons","timeScale","setTimeScale","CostSmall","HexPanel","eHex","clearHex","free","hasJobs","lookupBuilding","buildingPanel","emptyPanel","StringDropdown","hidden","titleCase","toUpperCase","slice","options","getTitleForOption","getTextForOption","required","EditBeliefInput","frozen","toString","available","wash","SortedBeliefs","localeCompare","AddBeliefInput","add","console","log","BrainwashingContent","beanID","washCommunity","brainwash_ideal","washMotive","washNarrative","washBelief","brainwash_secondary","implantBelief","brainimplant_secondary","TimelyEventToggle","onEvent","eventCount","eventClass","eventIcon","hungry","sated","stuffed","podless","crowded","homeowner","sick","bruised","fresh","sane","confused","mad","App","previousTimeMS","logicTickAccumulatorMS","simulate_beans","simulate_world","keyupHandler","shiftKey","foundParty","activeModal","what","tryPurchase","newUFO","removeUFO","foundCharity","releaseBean","lucky_bean","loseSanity","oldFaith","setPolicy","onDeath","startSpotlight","timescaleBeforeSpotlight","activeCityID","activeHex","activeMain","activeRightPanel","document","addEventListener","removeEventListener","myUFOI","findIndex","endSpotlight","gift","beankey","COL","renderNetwork","renderGeo","defaultScale","wheel","main","renderHour","n","getPanel","Morning","Midnight","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.316ce356.chunk.js","sourcesContent":["import { World } from \"../World\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\nexport enum Hour {Midnight, Morning, Noon, Evening}\r\n\r\nexport interface IDate{\r\n    day: number;\r\n    season: Season;\r\n    year: number;\r\n    hour: Hour;\r\n}\r\n\r\nexport function Now(world: World): IDate{\r\n    return {year: world.date.year, season: world.date.season, day: world.date.day, hour: world.date.hour};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","import { IChatData } from \"../simulation/Agent\";\r\nimport { Point } from \"../simulation/Geography\";\r\n\r\nexport type EventTrigger = 'speechcrime'|'birth'|'death'|'nojobslots';\r\n\r\nexport interface IEvent{\r\n    icon: string;\r\n    message: string;\r\n    beanKey?: number;\r\n    cityKey?: number;\r\n    point?: Point;\r\n    trigger: EventTrigger;\r\n}\r\n\r\nexport class PubSub<T>{\r\n    constructor(private onPublish?: (args: T) => void){}\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public publish(args: T){\r\n        if (this.onPublish)\r\n            this.onPublish(args);\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\nexport type IEventBus = {[key in EventTrigger]: PubSub<IEvent>};\r\nexport interface IEventBuffer{\r\n    buffer: IEvent[]   \r\n}\r\nexport const EventBusBufferLength = 20; \r\nexport class EventBus implements IEventBus, IEventBuffer{\r\n    buffer: IEvent[] = [];\r\n    private sendToBuffer = (event: IEvent) => {\r\n        if (this.buffer.length > EventBusBufferLength){\r\n            this.buffer.pop();\r\n        }\r\n        this.buffer.unshift(event);\r\n    }\r\n    speechcrime = new PubSub<IEvent>(this.sendToBuffer);\r\n    nojobslots = new PubSub<IEvent>(this.sendToBuffer);\r\n    birth = new PubSub<IEvent>(this.sendToBuffer);\r\n    death = new PubSub<IEvent>(this.sendToBuffer);\r\n\r\n}","import { TraitGood, TraitJob } from \"../World\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\n\r\nexport interface HexPoint{\r\n    q: number;\r\n    r: number;\r\n}\r\nexport class Hex implements HexPoint{\r\n    constructor(public q: number, public r: number){}\r\n}\r\nexport const hex_directions: HexPoint[] = [\r\n    new Hex(+1, 0), new Hex(+1, -1), new Hex(0, -1), \r\n    new Hex(-1, 0), new Hex(-1, +1), new Hex(0, +1), \r\n];\r\nexport function hex_direction(direction: number): HexPoint{\r\n    return hex_directions[direction]\r\n}\r\n\r\nexport function hex_neighbor(hex: HexPoint, direction: number): HexPoint{\r\n    var dir = hex_direction(direction)\r\n    return new Hex(hex.q + dir.q, hex.r + dir.r)\r\n}\r\nexport function hex_distance(a: HexPoint, b: HexPoint): number{\r\n    return (Math.abs(a.q - b.q) \r\n          + Math.abs(a.q + a.r - b.q - b.r)\r\n          + Math.abs(a.r - b.r)) / 2\r\n}\r\nexport function hex_add(a: HexPoint, b: HexPoint): HexPoint {\r\n    return new Hex(a.q + b.q, a.r + b.r);\r\n}\r\nexport function hex_scale(a: HexPoint, k: number): HexPoint {\r\n    return new Hex(a.q * k, a.r * k);\r\n}\r\nexport function hex_ring(center: HexPoint, radius: number): HexPoint[]{\r\n    var results: HexPoint[] = [];\r\n    // this code doesn't work for radius == 0; can you see why?\r\n    var cube = hex_add(center, \r\n                        hex_scale(hex_direction(4), radius));\r\n    for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < radius; j++) {\r\n            results.push(cube)\r\n            cube = hex_neighbor(cube, i);       \r\n        }\r\n    }\r\n    return results;\r\n}\r\nexport function hex_spiral(center: HexPoint, radius: number): HexPoint[]{\r\n    var results = [center];\r\n    for (let k = 0; k < radius; k++) {\r\n        results = results.concat(hex_ring(center, k));\r\n        //console.log(results);   \r\n    }\r\n    return results;\r\n}\r\n\r\nexport function move_towards(current: Point, target: Point, maxDistanceDelta: number)\r\n{\r\n    const a: Point = {x: target.x - current.x, y: target.y - current.y};\r\n    const magnitude = Math.sqrt(a.x * a.x + a.y * a.y);\r\n    if (magnitude <= maxDistanceDelta || magnitude == 0)\r\n    {\r\n        return target;\r\n    }\r\n    return {\r\n        x: current.x + a.x / magnitude * maxDistanceDelta,\r\n        y: current.y + a.y / magnitude * maxDistanceDelta,\r\n    };\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number{\r\n    return a + (b - a) * t\r\n}\r\n\r\nexport function vector_lerp(a: Point, b: Point, t: number): Point{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t)\r\n    };\r\n}\r\nfunction cube_lerp(a: CubicPoint, b: CubicPoint, t: number): CubicPoint{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t),\r\n        z: lerp(a.z, b.z, t)\r\n    };\r\n}\r\nfunction cube_distance(a: CubicPoint, b: CubicPoint): number{\r\n    return (Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z)) / 2\r\n}\r\nfunction cube_round(cube: CubicPoint): CubicPoint{\r\n    var rx = Math.round(cube.x);\r\n    var ry = Math.round(cube.y);\r\n    var rz = Math.round(cube.z);\r\n\r\n    var x_diff = Math.abs(rx - cube.x)\r\n    var y_diff = Math.abs(ry - cube.y)\r\n    var z_diff = Math.abs(rz - cube.z)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff)\r\n        rx = -ry-rz;\r\n    else if (y_diff > z_diff)\r\n        ry = -rx-rz;\r\n    else\r\n        rz = -rx-ry;\r\n\r\n    return {x: rx, y: ry, z: rz};\r\n}\r\nfunction round_point_to_hex(hex: HexPoint): HexPoint{\r\n    return cube_to_axial(cube_round(axial_to_cube(hex)))\r\n\r\n}\r\nfunction cube_to_axial(cube: CubicPoint){\r\n    var q = cube.x;\r\n    var r = cube.z;\r\n    return new Hex(q, r);\r\n}\r\nfunction axial_to_cube(hex: HexPoint): CubicPoint{\r\n    return {\r\n        x: hex.q,\r\n        z: hex.r,\r\n        y: -hex.q-hex.r\r\n    };\r\n}\r\nfunction cube_linedraw(a: CubicPoint, b: CubicPoint): HexPoint[]{\r\n    var N = cube_distance(a, b);\r\n    var results: HexPoint[] = [];\r\n    for (let i = 0; i <= N; i++) {\r\n        results.push(cube_to_axial(cube_round(cube_lerp(a, b, 1.0/N * i))))\r\n    }\r\n    return results;\r\n}\r\nexport function hex_linedraw(a: HexPoint, b: HexPoint): HexPoint[]{\r\n    return cube_linedraw(axial_to_cube(a), axial_to_cube(b));\r\n}\r\n\r\nclass Orientation {\r\n    // angle is in multiples of 60°\r\n    constructor(public f0: number, public f1: number, public  f2: number, public f3: number,\r\n        public b0: number, public b1: number,public b2: number,public b3: number,\r\n        public start_angle: number){}\r\n};\r\nexport const layout_flat: Orientation = new Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0),\r\n                2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0,\r\n                0.0);\r\nexport const origin_point: Point = {x: 0, y: 0};\r\nexport const hex_origin: HexPoint = {q: 0, r: 0};\r\nexport function hex_to_pixel(size: Point, origin: Point, h: HexPoint): Point {\r\n    const M: Orientation = layout_flat;\r\n    const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\r\n    const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\r\n    return {x: x + origin.x, y: y + origin.y};\r\n}\r\nexport function pixel_to_hex(size: Point, origin: Point, p: Point) {\r\n    const M = layout_flat;\r\n    const pt = {x: (p.x - origin.x) / size.x,\r\n                y: (p.y - origin.y) / size.y\r\n            };\r\n    const q = M.b0 * pt.x + M.b1 * pt.y;\r\n    const r = M.b2 * pt.x + M.b3 * pt.y;\r\n    return new Hex(q, r);\r\n}\r\n\r\n\r\nexport interface PolarPoint{\r\n    /**\r\n     * radius (in pixels)\r\n     */\r\n    r: number;\r\n    /**\r\n     * azimuth (radians)\r\n     */\r\n    az: number;\r\n}\r\n\r\nexport function polarToPoint(p: PolarPoint): Point{\r\n    return {\r\n        x: p.r * Math.cos(p.az),\r\n        y: p.r * Math.sin(p.az)\r\n    }\r\n}\r\n\r\nexport function distanceBetweenPolar(a: PolarPoint, b: PolarPoint): number{\r\n    const aCart = polarToPoint(a);\r\n    const bCart = polarToPoint(b)\r\n    return Math.sqrt(\r\n        Math.pow(aCart.x - aCart.x, 2) +\r\n        Math.pow(bCart.y - aCart.y, 2)\r\n    );\r\n}\r\n\r\nexport interface Point{\r\n    x: number; y: number;\r\n}\r\nexport interface Vector extends Point{\r\n}\r\nexport interface CubicPoint extends Point{\r\n    z: number;\r\n}\r\n\r\n\r\n/**\r\n * matter lookup, returns CSS transforms for translation\r\n * @param geo \r\n * @param type \r\n * @param key \r\n */\r\nexport function getBuildingTransform(geo: Geography, type: BuildingTypes, key: number){\r\n    const p = geo.byType[type].coordByID[key];\r\n    if (p)\r\n        return transformPoint(hex_to_pixel(geo.hex_size, geo.petriOrigin, p));\r\n    else\r\n        return {background: 'red'}\r\n}\r\nexport function transformPoint(p: Point){\r\n    return {transform:`translate(${p.x}px, ${p.y}px)`};\r\n}\r\n\r\nexport interface IBuilding{\r\n    key: number;\r\n    type: BuildingTypes;\r\n    job_slots: {[key in BuildingJobSlot]: number|null};\r\n    upgraded: boolean,\r\n    openSlots(): BuildingJobSlot[];\r\n    usedSlots(): BuildingJobSlot[];\r\n    /**\r\n     * returns true when bean is found in slot and freed\r\n     * @param beanKey \r\n     */\r\n    tryFreeBean(beanKey: number): boolean;\r\n}\r\nexport class Building implements IBuilding{\r\n    public key: number = 0;\r\n    public type: BuildingTypes = 'farm';\r\n    public occupied_slots: Point[] = [];\r\n    public empty_slots: Point[] = [];\r\n    public upgraded: boolean = false;\r\n    public job_slots: {[key in BuildingJobSlot]: number|null} = {\r\n        0: null,\r\n        1: null,\r\n        2: null,\r\n        3: null,\r\n        4: null,\r\n        5: null,\r\n    }\r\n    openSlots(): BuildingJobSlot[]{\r\n        return Object.keys(this.job_slots).filter((s, i) => {\r\n            return this.job_slots[+s as BuildingJobSlot] === null && (i < 3 || this.upgraded);\r\n        }).map((x) => +x);\r\n    }\r\n    usedSlots(): BuildingJobSlot[]{\r\n        return Object.keys(this.job_slots).filter((s) => {\r\n            return this.job_slots[+s as BuildingJobSlot] != null;\r\n        }).map((x) => +x);\r\n    }\r\n    tryFreeBean(beanKey: number): boolean{\r\n        const usedSlots = this.usedSlots();\r\n        for (let i = 0; i < usedSlots.length; i++) {\r\n            const slot = usedSlots[i];\r\n            const beanInSlot = this.job_slots[slot];\r\n            if (beanInSlot === beanKey){\r\n                this.job_slots[slot] = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * address books allow lookups from entity \"name\" to location\r\n */\r\nexport interface AddressBookHex{\r\n    [entityKey: number]: HexPoint\r\n}\r\nexport interface AddressBookPoint{\r\n    [entityKey: number]: Point\r\n}\r\n/**\r\n * address grids allow lookups from location to entity\r\n * \r\n * note: coordinates are of form \"X,Y\"\r\n * and the map cannot distinguish between hex and cartesian points\r\n */\r\nexport interface AddressGrid<T>{\r\n    [coordinate: string]: T|undefined\r\n}\r\nexport interface AddressBuildingGrid extends AddressGrid<IBuilding>{}\r\n\r\nexport interface BuildingMap{\r\n    coordByID: AddressBookHex;\r\n    all: IBuilding[];\r\n}\r\n\r\nexport type BuildingTypes = 'farm'|'house'|'hospital'|'church'|'theater'|'courthouse'|'park'|'nature';\r\nexport type MoverTypes = 'bean'|'ufo';\r\nexport type MatterTypes = MoverTypes|BuildingTypes;\r\n\r\nexport const BuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🐄',\r\n    'house': '🏡', 'hospital': '🏥', 'church': '⛪', 'theater': '🎪', 'courthouse':'🏫',\r\n    'park': '⛲️', 'nature': '🏞️'\r\n};\r\nexport const UpgradedBuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🚜',\r\n    'house': '🏘️', 'hospital': '🏙️', 'church': '⛪', 'theater': '🏟️', 'courthouse':'🏫',\r\n    'park': '🎡', 'nature': '🏞️'\r\n};\r\nexport const BuildingJobIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🌾',\r\n    'house': '📪', 'hospital': '🛏️', 'church': '⛪', 'theater': '🪑', 'courthouse':'🏫',\r\n    'park': '💐', 'nature': '♨️'\r\n};\r\nexport const GoodToBuilding: {[key in TraitGood]: BuildingTypes} = {\r\n    'food': 'farm',\r\n    'shelter': 'house', 'medicine':'hospital', 'fun': 'theater'\r\n};\r\nexport const JobToBuilding: {[key in TraitJob]: BuildingTypes} = {\r\n    'farmer': 'farm',\r\n    'builder': 'house', 'doc':'hospital', 'entertainer': 'theater',\r\n    'cleric': 'church', 'jobless': 'house', 'polit': 'house'\r\n};\r\n\r\nexport class Geography{\r\n    public byCoord: AddressBuildingGrid = {};\r\n    public byType: {[type in BuildingTypes]: BuildingMap} = {\r\n        house: {coordByID: {}, all: []},\r\n        farm: {coordByID: {}, all: []},\r\n        hospital: {coordByID: {}, all: []},\r\n        theater: {coordByID: {}, all: []},\r\n        courthouse: {coordByID: {}, all: []},\r\n        church: {coordByID: {}, all: []},\r\n        park: {coordByID: {}, all: []},\r\n        nature: {coordByID: {}, all: []},\r\n    }\r\n     \r\n    public movers: {[key in MoverTypes]: AddressBookPoint} = {\r\n        'bean': {},\r\n        ufo: {}\r\n    };\r\n    public numberOf(type: BuildingTypes): number {\r\n        return this.byType[type].all.length;\r\n    }\r\n    lookupBuilding(hex: HexPoint): undefined|IBuilding {\r\n        return this.byCoord[hex.q+','+hex.r];\r\n    }\r\n    addBuilding(where: HexPoint, building: IBuilding) {\r\n        this.byType[building.type].all.push(building);\r\n        this.byType[building.type].coordByID[building.key] = where;\r\n        this.byCoord[where.q+','+where.r] = building;\r\n        return null;\r\n    }\r\n    removeBuilding(where: HexPoint, building: IBuilding) {\r\n        const i = this.byType[building.type].all.indexOf(building);\r\n        this.byType[building.type].all.splice(i, 1);\r\n        delete this.byType[building.type].coordByID[building.key];\r\n        this.byCoord[where.q+','+where.r] = undefined;\r\n        return null;\r\n    }\r\n    public numberOfRings = 5;\r\n    public hexes: HexPoint[] = hex_spiral({q:0, r:0}, this.numberOfRings);\r\n    public hex_size: Point = {x: 70, y: 70};\r\n    public readonly petriRadius = 550;\r\n    public readonly petriOrigin = {x: this.petriRadius, y: this.petriRadius};\r\n}","export enum BuildingJobSlot{\r\n    first = 0,\r\n    second = 1,\r\n    third = 2,\r\n    fourth = 3,\r\n    fifth = 4,\r\n    sixth = 5\r\n}","\r\nimport React from \"react\";\r\nimport { City } from \"../simulation/City\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, Geography, getBuildingTransform, hex_directions, transformPoint, hex_to_pixel, origin_point, HexPoint, BuildingJobIcon, UpgradedBuildingIcon } from \"../simulation/Geography\";\r\nimport { BuildingJobSlot } from \"../simulation/Occupation\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport './Building.css';\r\n\r\nconst slot_size = {\r\n    x: 25,\r\n    y: 25\r\n}\r\nexport function getSlotOffset(direction: HexPoint){\r\n    return hex_to_pixel(slot_size, origin_point, direction);\r\n}\r\nexport function getRandomSlotOffset(){\r\n    return getSlotOffset(GetRandom(hex_directions));\r\n}\r\nconst hexDirectionToJobSlot: {[key: number]: BuildingJobSlot} = {\r\n    2: BuildingJobSlot.first,\r\n    0: BuildingJobSlot.second,\r\n    4: BuildingJobSlot.third,\r\n    1: BuildingJobSlot.fourth,\r\n    5: BuildingJobSlot.fifth,\r\n    3: BuildingJobSlot.sixth,\r\n}\r\n\r\nexport class PetriBuilding extends React.Component<{\r\n    city: City,\r\n    building: IBuilding\r\n}> {\r\n    slots() {\r\n        return hex_directions.map((d, i: number) => {\r\n            const jobSlot: BuildingJobSlot = hexDirectionToJobSlot[i];\r\n            const hasJob = this.props.building.job_slots[jobSlot] != null;\r\n            return <span key={i} className=\"slot\" style={transformPoint(getSlotOffset(d))}>\r\n                {hasJob ? BuildingJobIcon[this.props.building.type] : null}\r\n            </span>\r\n        });\r\n    }\r\n    render() {\r\n        return <div key={this.props.building.type+this.props.building.key} style={getBuildingTransform(this.props.city, this.props.building.type, this.props.building.key)} \r\n        className={\"building \"+this.props.building.type}>\r\n        {this.props.building.upgraded ? UpgradedBuildingIcon[this.props.building.type] : BuildingIcon[this.props.building.type]}\r\n        {this.slots()}\r\n        {this.props.building.type === 'courthouse' ? <span className=\"tile-label\">{this.props.city.name}</span> : null}\r\n        </div>\r\n    }\r\n}","export class PriorityNode<T>{\r\n    constructor(public value: T, public priority: number){}\r\n}\r\nexport interface IPriorityQueue<T>{\r\n    enqueue(value: PriorityNode<T>): void;\r\n    values: PriorityNode<T>[];\r\n    dequeue(): PriorityNode<T>|undefined;\r\n}\r\nexport class DumbPriorityQueue<T> implements IPriorityQueue<T>{\r\n    \r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n    \r\n    enqueue(value: PriorityNode<T>): void{\r\n        this.values.push(value);\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n\r\n    enqueueMany(values: PriorityNode<T>[]){\r\n        this.values = values;\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n    \r\n    dequeue(): PriorityNode<T>|undefined{\r\n        return this.values.shift();\r\n    }\r\n}\r\n\r\nexport class PriorityQueue<T> implements IPriorityQueue<T>{\r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n\r\n    //helper method that swaps the values and two indexes of an array\r\n    swap(index1: number, index2: number){\r\n        let temp = this.values[index1];\r\n        this.values[index1] = this.values[index2];\r\n        this.values[index2] = temp;\r\n        return this.values;\r\n    }\r\n    //helper methods that bubbles up values from end\r\n    bubbleUp(){\r\n        //get index of inserted element\r\n        let index = this.values.length - 1\r\n        //loop while index is not 0 or element no loger needs to bubble\r\n        while(index > 0){\r\n            //get parent index via formula\r\n            let parentIndex = Math.floor((index - 1)/2);\r\n            //if values is greater than parent, swap the two\r\n            if(this.values[parentIndex].priority > this.values[index].priority){\r\n                //swap with helper method\r\n                this.swap(index, parentIndex);\r\n                //change current index to parent index\r\n                index = parentIndex;\r\n            } else{\r\n                break;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    // method that pushes new value onto the end and calls the bubble helper\r\n    enqueue(value: PriorityNode<T>){\r\n        this.values.push(value)\r\n        //calculate parent, if parent is greater swap\r\n        //while loop or recurse\r\n        this.bubbleUp();\r\n        return this.values\r\n    }\r\n\r\n    bubbleDown(){\r\n        let parentIndex = 0;\r\n        const length = this.values.length;\r\n        const elementPriority = this.values[0].priority;\r\n        //loop breaks if no swaps are needed\r\n        while (true){\r\n            //get indexes of child elements by following formula\r\n            const leftChildIndex = (2 * parentIndex) + 1;\r\n            const rightChildIndex = (2 * parentIndex) + 2;\r\n            let leftChildPriority = 999;\r\n            let rightChildPriority;\r\n            let indexToSwap = null;\r\n            // if left child exists, and is greater than the element, plan to swap with the left child index\r\n            if(leftChildIndex < length){\r\n                leftChildPriority = this.values[leftChildIndex].priority\r\n                if(leftChildPriority < elementPriority){\r\n                    indexToSwap = leftChildIndex;\r\n                }\r\n            }\r\n            //if right child exists\r\n            if(rightChildIndex < length){\r\n                rightChildPriority = this.values[rightChildIndex].priority;\r\n\r\n                if(\r\n                    //if right child is greater than element and there are no plans to swap\r\n                    (rightChildPriority < elementPriority && indexToSwap === null) ||\r\n                    //OR if right child is greater than left child and there ARE plans to swap\r\n                    (rightChildPriority < leftChildPriority && indexToSwap !== null))\r\n                {\r\n                    //plan to swap with the right child\r\n                    indexToSwap = rightChildIndex\r\n                }\r\n            }\r\n            //if there are no plans to swap, break out of the loop\r\n            if(indexToSwap === null){\r\n                break;\r\n            } \r\n            //swap with planned element\r\n            this.swap(parentIndex, indexToSwap);\r\n            //starting index is now index that we swapped with\r\n            parentIndex = indexToSwap;\r\n        }  \r\n    }\r\n\r\n    dequeue(): PriorityNode<T>|undefined{\r\n        //swap first and last element\r\n        this.swap(0, this.values.length - 1);\r\n        //pop max value off of values\r\n        let poppedNode = this.values.pop();\r\n        //re-adjust heap if length is greater than 1\r\n        if(this.values.length > 1){\r\n            this.bubbleDown();\r\n        }\r\n        \r\n        return poppedNode;\r\n    }\r\n}","import { Agent } from \"https\";\r\nimport { Bean, DaysUntilSleepy } from \"./Bean\";\r\nimport { getRandomSlotOffset } from \"../petri-ui/Building\";\r\nimport { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitGood, GoodToThreshold, JobToGood, TraitSanity, GoodIcon } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { BuildingTypes, Geography, GoodToBuilding, HexPoint, hex_linedraw, hex_origin, hex_ring, hex_to_pixel, IBuilding, JobToBuilding, move_towards, pixel_to_hex, Point, Vector } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { PubSub } from \"../events/Events\";\r\nimport { DumbPriorityQueue, IPriorityQueue, PriorityNode, PriorityQueue } from \"./Priorities\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\nimport { ISeller } from \"./Economy\";\r\nimport { IterationStatement } from \"typescript\";\r\n\r\nexport type Act = 'travel'|'work'|'sleep'|'chat'|'soapbox'|'craze'|'idle'|'buy'|'crime'|'relax';\r\n\r\n/**\r\n * cruise == interruptible travel towards destination\r\n * \r\n * approach == uninterruptible travel into destination slot\r\n */\r\nexport type Travel = 'cruise'|'approach';\r\n\r\nexport interface IActListener{\r\n    onChat: (b: Bean, speech: IChatData) => void;\r\n}\r\n\r\nexport interface IActivityData {\r\n    act: Act;\r\n    elapsed?: number;\r\n    location?: Point, //FROM Point\r\n    destinations?: Point[]; //point to travel to??\r\n    intent?: IActivityData; //when travelling, what do you intend to do next\r\n    good?: TraitGood; //good to buy or work\r\n    timeSpent?: number; //time spent on this action\r\n    travel?: Travel;\r\n    chat?: IChatData;\r\n}\r\n\r\nexport interface IChatData{\r\n    participation: 'speaker'|'listener';\r\n    type: 'praise'|'bully'|'preach'|'gift';\r\n    preachBelief?: TraitBelief;\r\n    /**\r\n     * strength of the preacher's persuasion\r\n     */\r\n    persuasionStrength?: number;\r\n    /**\r\n     * target key of the bean who is targeted for praise or bully\r\n     */\r\n    targetBeanKey?: number;\r\n}\r\n\r\nexport interface IAgent {\r\n    state: AgentState;\r\n    onAct?: PubSub<number>;\r\n    jobQueue: PriorityQueue<AgentState>;\r\n}\r\nexport function ChangeState(agent: IAgent, newState: AgentState){\r\n    //if ((agent as any)['key'] === 0)\r\n    //console.log(`from ${agent.state.data.act} to ${newState.data.act} in ${agent.state.Elapsed}`);\r\n    agent.state.exit(agent);\r\n    agent.state = newState;\r\n    agent.state.enter(agent);\r\n}\r\nexport function Act(agent: IAgent, deltaMS: number, difficulty: IDifficulty, listener: IActListener): void{\r\n    const result = agent.state.act(agent, deltaMS, difficulty);\r\n    if (agent.onAct)\r\n        agent.onAct.publish(deltaMS);\r\n    if (result != agent.state){\r\n        ChangeState(agent, result);\r\n        if (result.data.act === 'chat' && result.data.chat?.participation === 'speaker'){\r\n            listener.onChat(agent as Bean, result.data.chat);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class AgentState{\r\n    constructor(public data: IActivityData){}\r\n    public get Elapsed(): number {return this.data.elapsed || 0;}\r\n    enter(agent: IAgent){\r\n        this.data.elapsed = 0;\r\n    }\r\n    act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        const newState = this._act(agent, deltaMS, difficulty);\r\n        this.data.elapsed = this.Elapsed + deltaMS;\r\n        return newState;\r\n    }\r\n    abstract _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState;\r\n    exit(agent: IAgent){\r\n\r\n    }\r\n}\r\nexport class IdleState extends AgentState{\r\n    static create(){ return new IdleState({act: 'idle'})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed < 200){\r\n            return this;\r\n        }\r\n        if (agent instanceof Bean && agent.city){\r\n            const priorities = GetPriorities(agent, difficulty);\r\n            let top = priorities.dequeue();\r\n            let travelState: TravelState|null = null;\r\n\r\n            //loop through possible destinations\r\n            while (top && travelState == null){\r\n                const activity = IdleState.substituteIntent(agent, top.value);\r\n                if (activity){\r\n                    travelState = TravelState.createFromIntent(agent, top.value);\r\n                    if (travelState != null)\r\n                        return travelState;\r\n                }\r\n                top = priorities.dequeue();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    static substituteIntent(agent: IAgent, intent: IActivityData): IActivityData|null{\r\n        if (intent.act === 'buy' && intent.good != null && agent instanceof Bean){\r\n            const desiredGoodState = agent.canBuy(intent.good);\r\n            if (desiredGoodState != 'yes' && intent.good === 'fun')\r\n                intent.act = 'relax'; //relaxing is free!\r\n            else if (desiredGoodState === 'pricedout') {\r\n                if (agent instanceof Bean && agent.maybeCrime(intent.good)){\r\n                    intent.act = 'crime';\r\n                } else {\r\n                    return null; //don't travel to buy something that you can't afford\r\n                }\r\n            } else if (desiredGoodState === 'nosupply'){\r\n                return null; //don't travel to buy something that doesn't exist\r\n            }\r\n        }\r\n        return intent;\r\n    }\r\n}\r\n\r\nexport function IntentToDestination(agent: IAgent, intent: IActivityData): Point[]|null{\r\n    if (!(agent instanceof Bean))\r\n        return [];\r\n    else if (agent.city){\r\n        const city = agent.city;\r\n        switch(intent.act){\r\n            case 'buy':\r\n                if (intent.good)\r\n                    return RouteRandom(city, agent, GoodToBuilding[intent.good]);\r\n            case 'work':\r\n                return RouteRandom(city, agent, JobToBuilding[agent.job]);\r\n            case 'relax': {\r\n                const parks = city.byType.park.all.concat(city.byType.nature.all);\r\n                const destination: IBuilding = GetRandom(parks);\r\n                agent.destinationKey = destination.key;\r\n                return Route(city, agent, destination);\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nexport class TravelState extends AgentState{\r\n    static createFromIntent(agent: IAgent, intent: IActivityData): TravelState|null{\r\n        const destination = IntentToDestination(agent, intent);\r\n\r\n        if (destination)\r\n            return this.createFromDestination(destination, intent);\r\n        return null;\r\n    }\r\n    static createFromDestination(destinations: Point[], intent: IActivityData): TravelState{ \r\n        return new TravelState({act: 'travel', destinations: destinations, intent: intent});\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (agent instanceof Bean && agent.city && this.data.destinations && this.data.destinations.length){\r\n            const pos = agent.city.movers['bean'][agent.key];\r\n            const target = this.data.destinations[0];\r\n            const newPos = move_towards(pos, target, deltaMS / 1000 * agent.speed);\r\n            \r\n            agent.city.movers['bean'][agent.key] = newPos;\r\n            if (newPos.x == target.x && newPos.y == target.y){\r\n                this.data.location = newPos;\r\n                this.data.destinations.shift();\r\n            }\r\n        }\r\n        if (this.data.destinations == null || this.data.destinations.length === 0){\r\n            if (this.data.intent)\r\n                return ActToState[this.data.intent.act](this.data.intent);\r\n            else\r\n                return IdleState.create();\r\n        } else if (agent instanceof Bean && agent.city) {\r\n            const nearby = agent.city.getNearestNeighbors(agent);\r\n            if (nearby.length && agent.maybeChat()){\r\n                const targets = nearby.filter((nn) => nn.maybeChat());\r\n                if (targets.length < 1)\r\n                    return this;\r\n                const chat: IChatData = agent.getRandomChat(targets);\r\n                targets.forEach((z) => z.state = ChatState.create(this.data.intent, {...chat, participation: 'listener'}));\r\n                return ChatState.create(this.data, chat);\r\n            } else {\r\n                return this;\r\n            }\r\n        } else {\r\n            return this;\r\n        }\r\n    }\r\n}\r\nexport class WorkState extends AgentState{\r\n    static create(good: TraitGood){ return new WorkState({act: 'work', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 2000 && agent instanceof Bean && this.data.good && agent.city?.economy && agent.city?.law){\r\n            agent.work(agent.city.law, agent.city.economy);\r\n            return IdleState.create();\r\n        }\r\n        \r\n        return this;\r\n    }\r\n}\r\nexport class BuyState extends AgentState{\r\n    static create(good: TraitGood){ return new BuyState({act: 'buy', good: good})}\r\n    private sinceLastAttemptMS: number = 0;\r\n    private attempts: number = 0;\r\n    tryBuy(agent: IAgent){\r\n        if (agent instanceof Bean && this.data.good && agent.city?.economy)\r\n        {\r\n            this._bought = agent.buy[this.data.good](agent.city.economy);\r\n        }\r\n        this.sinceLastAttemptMS = 0;\r\n        this.attempts++;\r\n    }\r\n    enter(agent: IAgent){\r\n        this.tryBuy(agent);\r\n    }\r\n    private _bought: boolean = false;\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (!this._bought){\r\n            if (this.sinceLastAttemptMS > 250)\r\n            {\r\n                this.tryBuy(agent);\r\n                // if(this.attempts >= 3 && (this.data.good == 'food' || this.data.good == 'medicine') &&\r\n                //     agent instanceof Bean &&\r\n                //     agent.getCrimeDecision(this.data.good, 'desperation')){\r\n                //     return CrimeState.create(this.data.good);\r\n                // }\r\n            }\r\n        }\r\n        if (this.Elapsed > 1500)\r\n            return IdleState.create();\r\n        else\r\n            return this;\r\n    }\r\n}\r\nexport class ChatState extends AgentState{\r\n    static create(intent: IActivityData|undefined, chat: IChatData){ \r\n        return new ChatState({act: 'chat', intent: intent, chat: chat})\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (this.Elapsed > 1000 && this.data.intent){\r\n            const tState = TravelState.createFromIntent(agent, this.data.intent);\r\n            if (tState)\r\n                return tState;\r\n        }\r\n        return this;\r\n    }\r\n    exit(agent: IAgent){\r\n        if (agent instanceof Bean && this.data.chat){\r\n            agent.lastChatMS = Date.now();\r\n        }\r\n    }\r\n}\r\nexport class RelaxState extends AgentState{\r\n    static create(intent: IActivityData|undefined, chat: IChatData){ \r\n        return new RelaxState({act: 'relax', intent: intent, chat: chat})\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        let durationMS = 1000;\r\n        if (agent instanceof Bean && agent.believesIn('Hedonism'))\r\n            durationMS *= 3;\r\n        if (this.Elapsed > durationMS){\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n    exit(agent: IAgent){\r\n        if (agent instanceof Bean){\r\n            agent.discrete_fun += 1;\r\n        }\r\n    }\r\n}\r\nexport class CrimeState extends AgentState{\r\n    static create(good: 'food'|'medicine'){ return new CrimeState({act: 'crime', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 1500 && agent instanceof Bean && agent.city?.economy && \r\n            (this.data.good === 'food' ||\r\n            this.data.good === 'medicine')){\r\n            agent.steal(this.data.good, agent.city?.economy);\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nconst ActToState: {[key in Act]: (data: IActivityData) => AgentState} = {\r\n    'idle': (data) => new IdleState(data),\r\n    'work': (data) => new WorkState(data),\r\n    'chat': (data) => new ChatState(data),\r\n    'travel': (data) => new TravelState(data),\r\n    'craze': (data) => new BuyState(data),\r\n    'buy': (data) => new BuyState(data),\r\n    'sleep': (data) => new BuyState(data),\r\n    'soapbox': (data) => new BuyState(data),\r\n    'crime': (data) => new CrimeState(data),\r\n    'relax': (data) => new RelaxState(data)\r\n}\r\n\r\nexport const GetPriority = {\r\n    work: function(bean:Bean): number{\r\n        if (bean.job == 'jobless' && bean.city){\r\n            return 9;\r\n        }\r\n        else if (bean.city){\r\n            //beans with no inventory prioritize work higher\r\n            let inventory_priority = 99;\r\n            if (bean.city.economy){\r\n                const quant = bean.city.economy.market.getBeansListings(bean.cityKey, bean.key, JobToGood(bean.job))?.quantity || 0;\r\n                inventory_priority = quant;\r\n            }\r\n            //beans with lots of cash prioritize work higher\r\n            const wealth_priority = bean.cash / bean.city.costOfLiving / 2;\r\n            return Math.min(inventory_priority, wealth_priority);\r\n        } else {\r\n            return 0;\r\n        }\r\n    },\r\n    food: function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 0.5 + (bean.discrete_food / difficulty.bean_life.vital_thresh.food.sufficient )\r\n    },\r\n    shelter: function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 1 + (bean.discrete_stamina / difficulty.bean_life.vital_thresh.shelter.sufficient )\r\n    },\r\n    medicine:function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 0.75 + (bean.discrete_health / difficulty.bean_life.vital_thresh.medicine.sufficient )\r\n    },\r\n    fun:function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 2 + (bean.lastHappiness / 100 * 1.25 )\r\n    }\r\n}\r\n\r\nexport function GetPriorities(bean: Bean, difficulty: IDifficulty): IPriorityQueue<IActivityData>{\r\n    const queue = new DumbPriorityQueue<IActivityData>([]);\r\n    let node = new PriorityNode<IActivityData>({act: 'work', good: JobToGood(bean.job)} as IActivityData, GetPriority.work(bean));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'food'} as IActivityData, GetPriority.food(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'shelter'} as IActivityData, GetPriority.shelter(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'medicine'} as IActivityData, GetPriority.medicine(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'fun'} as IActivityData, GetPriority.fun(bean, difficulty));\r\n    queue.enqueue(node);\r\n    return queue;\r\n}\r\n\r\nexport function ActivityIcon(data: IActivityData): string{\r\n    switch(data.act){\r\n        case 'work':\r\n            if (data.good)\r\n                return '💪 '+ GoodIcon[data.good];\r\n            else\r\n                return '💪';\r\n        case 'buy':\r\n            if (data.good == 'shelter')\r\n                return '😴';\r\n            if (data.good)\r\n                return '💸 '+ GoodIcon[data.good];\r\n            else\r\n                return '💸';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean extends ISeller, IMover, IAgent{    \r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith: TraitFaith;\r\n    shelter: TraitShelter;\r\n    health: TraitHealth;\r\n    discrete_food: number;\r\n    discrete_sanity: number;\r\n    discrete_stamina: number;\r\n    cash: number;\r\n    dob: IDate;\r\n    sanity: TraitSanity;\r\n    lifecycle: 'alive'|'dead'|'abducted'\r\n}\r\n\r\nexport interface IMover{\r\n    key: number;\r\n    speed: number;\r\n    direction: Vector;\r\n    markers: Point[];\r\n    destinationKey: number;\r\n}\r\n\r\nexport function Step(geo: Geography, mover: IMover){\r\n    if (mover.markers.length){\r\n        const pos = geo.movers['bean'][mover.key];\r\n        const target = mover.markers[0];\r\n        const newPos = move_towards(pos, target, mover.speed);\r\n        geo.movers['bean'][mover.key] = newPos;\r\n        if (newPos.x == target.x && newPos.y == target.y){\r\n            mover.markers.pop();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * fills out \"markers\" and \"destinationKey\" with random building of type\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function RouteRandom(geo: Geography, mover: IMover, buildingType: BuildingTypes): Point[]|null{\r\n    const destination: IBuilding = GetRandom(geo.byType[buildingType].all);\r\n    if (destination === undefined) return null;\r\n    mover.destinationKey = destination.key;\r\n    return Route(geo, mover, destination);\r\n}\r\n\r\n/**\r\n * fills out \"markers\" property with points to walk to destination\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function Route(geo: Geography, mover: IMover, destination: IBuilding){\r\n    const address: HexPoint = geo.byType[destination.type].coordByID[destination.key];\r\n    const start = geo.movers['bean'][mover.key];\r\n    const nearestHex = pixel_to_hex(geo.hex_size, geo.petriOrigin, start);\r\n    return hex_linedraw(nearestHex, address).map((h) => hex_to_pixel(geo.hex_size, geo.petriOrigin, h)).map((x, i, a) => {\r\n        if (i === a.length-1){\r\n            const offset = getRandomSlotOffset();\r\n            return {\r\n                x: x.x + offset.x,\r\n                y: x.y + offset.y\r\n            }\r\n        } else {\r\n            return x;\r\n        }\r\n    });\r\n}\r\nexport function Approach(geo: Geography, mover: IMover){\r\n\r\n}","import { TraitCommunity, TraitFaith, TraitIdeals } from \"../World\";\r\n\r\nexport type TraitBelief = 'Diligence'| // happy from work\r\n'Natalism'| // increased % of having kids\r\n'Authority'| //less crime, more crime reports\r\n'Hedonism'| //more entertainment\r\n// 'Tribalism'| \r\n// 'Globalism'| \r\n// 'Pacifism'| \r\n'Neuroticism'| // takes extra sanity damage\r\n'Dogmatism'| \r\n// 'Mysticism'| \r\n// 'Paranoia'| \r\n// 'Evangelism'| \r\n// 'Fanaticism'| // doesn't like beings that don't share narrative \r\n'Anarchism'| // breaks rules easily\r\n// 'Sadism'| \r\n// 'Antagonism'|\r\n'Charity'| // % to donate\r\n'Greed'; // steal easier\r\n\r\n// 'talkative'|\r\n// 'friendly'| // likes all beings more\r\n// 'realistic'| // lower happiness\r\n// 'athletic'| // takes less health damage\r\n// 'open-minded'| // beliefs are easily changed\r\n\r\nexport type BeliefSubject = 'self'|'other';\r\nexport const BeliefSubjectText: {[key in BeliefSubject]: string} ={\r\n    other: 'People',\r\n    self: 'I'\r\n}\r\nexport const BeliefSubjectIcon: {[key in BeliefSubject]: string} ={\r\n    other: '👇',\r\n    self: '👀'\r\n}\r\nexport type BeliefVerb = 'are'|'arenot';\r\nexport type BeliefSubjectVerbTree = {[key in BeliefSubject]: {[key in BeliefVerb]: string}};\r\nexport const BeliefVerbIcon: {[key in BeliefVerb]: string} ={\r\n    are: '✔️',\r\n    arenot: '🛑'\r\n}\r\nexport const BeliefVerbText: BeliefSubjectVerbTree ={\r\n    self: {\r\n        are: 'can be',\r\n        arenot: \"shouldn't be\"\r\n    },\r\n    other: {\r\n        are: 'should be',\r\n        arenot: 'cannot be'\r\n    }\r\n}\r\nexport interface IBeliefData {\r\n    noun: string,\r\n    adj: string,\r\n    icon: string,\r\n    description?: string,\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>\r\n}\r\nexport const PrimaryBeliefData: {[key in TraitIdeals|TraitCommunity]: IBeliefData} = {\r\n    prog: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️',\r\n        description: \"Strives to help others\"\r\n    },\r\n    trad: {\r\n        noun: 'Elitism', adj: 'Elitist', icon: '👑',\r\n        description: \"Strives for individual power\"\r\n    },\r\n    state: {\r\n        noun: 'Collectivism', adj: 'Collectivist', icon: '🕊️',\r\n        description: \"Trusts in the social group\"\r\n    },\r\n    ego: {\r\n        noun: 'Independence', adj: 'Independent', icon: '🦅',\r\n        description: \"Trusts only in oneself\"\r\n    },\r\n}\r\nexport const NarrativeBeliefData: {[key in TraitFaith]: IBeliefData} = {\r\n    rocket: {\r\n        noun: 'Futurism', adj: 'Futuristic', icon: '🚀',\r\n        description: \"Loves stories of the far future\"\r\n    },\r\n    dragon: {\r\n        noun: 'Mythology', adj: 'Mythical', icon: '🐲',\r\n        description: \"Loves stories of the legendary past\"\r\n    },\r\n    music: {\r\n        noun: 'Drama', adj: 'Dramatic', icon: '🎵',\r\n        description: \"Loves stories of emotional bonding\"\r\n    },\r\n    noFaith: {\r\n        noun: 'Nihilism', adj: 'Nihilist', icon: '⚫️',\r\n        description: \"Hates fairy tales\"\r\n    },\r\n}\r\nexport const SecondaryBeliefData: {[key in TraitBelief]: IBeliefData} = {\r\n    Diligence: {\r\n        noun: 'Diligence', adj: 'Diligence', icon: '💪',\r\n        description: \"🎲 to gain 🙂 while working\",\r\n        idealCon: ['trad'], idealPro: ['state', 'ego']\r\n    },\r\n    Greed: {\r\n        noun: 'Greed', adj: 'Greedy', icon: '💰',\r\n        description: \"+25% theft Crime 🎲\",\r\n        idealCon: ['prog'], idealPro: ['trad']\r\n    },\r\n    Neuroticism: {\r\n        noun: 'Neuroticism', adj: 'Neurotic', icon: '😱',\r\n        description: \"+100% 🧠 damage\",\r\n        idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n    Anarchism: {\r\n        noun: 'Anarchism', adj: 'Anarchist', icon: '🖕',\r\n        description: \"+33% Crime 🎲\",\r\n        idealCon: ['state', 'prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Charity: {\r\n        noun: 'Charity', adj: 'Charitable', icon: '😇',\r\n        description: \"🎲 to gift 💰 to the penniless\",\r\n        idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    // Globalism: {\r\n    //     noun: 'Globalism', adj: 'Globalist', icon: '🌍',\r\n    //     description: \"🎲 to 👏 other hair colors\",\r\n    //     idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    // },\r\n    Natalism: {\r\n        noun: 'Natalism', adj: 'Natalist', icon: '👶',\r\n        description: \"+15% 🎲 for 👶\"\r\n    },\r\n    Authority: {\r\n        noun: 'Authority', adj: 'Authoritarian', icon: '👢',\r\n        description: \"-25% Crime 🎲\",\r\n        idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    Hedonism: {\r\n        noun: 'Hedonism', adj: 'Hedonistic', icon: '💋',\r\n        // description: \"🎲 to skip work and gain 🙂\",\r\n        description: \"Seeks 🙂 often; 😎 3x longer\",\r\n        idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    // Tribalism: {\r\n    //     noun: 'Tribalism', adj: 'Tribal', icon: '🏰',\r\n    //     description: \"🎲 to 👎 other hair colors\",\r\n    //     idealCon: ['prog'], idealPro: ['state', 'ego']\r\n    // },\r\n    Dogmatism: {\r\n        noun: 'Dogmatism', adj: 'Dogmatic', icon: '🐶',\r\n        description: \"cannot be persuaded\",\r\n        idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    // Mysticism: {\r\n    //     noun: 'Mysticism', adj: 'Mystical', icon: '🔮',\r\n    //     description: \"🎲 to 👏 in any conversation\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n    // Pacifism: {\r\n    //     noun: 'Pacifism', adj: 'Pacifist', icon: '😘',\r\n    //     description: \"will never punish others\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n    // Paranoia: {\r\n    //     noun: 'Paranoia', adj: 'Paranoid', icon: '👽',\r\n    //     description: \"🎲 to 👎 in any conversation\",\r\n    //     idealCon: ['state'], idealPro: ['ego']\r\n    // },\r\n    // Evangelism: {\r\n    //     noun: 'Evangelism', adj: 'Evangelist', icon: '📣',\r\n    //     description: \"+50% persuasion of 🎭\",\r\n    //     idealCon: ['ego'], idealPro: ['state']\r\n    // },\r\n    // Fanaticism: {\r\n    //     noun: 'Fanaticism', adj: 'Fanatical', icon: '👺',\r\n    //     description: \"🎲 to 👎 other 🎭\",\r\n    //     idealCon: ['prog'], idealPro: []\r\n    // },\r\n    // Sadism: {\r\n    //     noun: 'Sadism', adj: 'Sadistic', icon: '😈',\r\n    //     description: \"🎲 to ☠️ other when receiving 👎\"\r\n    // },\r\n    // Antagonism: {\r\n    //     noun: 'Antagonism', adj: 'Antagonistic', icon: '🤬',\r\n    //     description: \"+15% Crime 🎲, +25% walk speed\"\r\n    // },\r\n};\r\n\r\nexport function IsIdealDivergent(con: TraitCommunity|TraitIdeals, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    switch(con){\r\n        case 'trad':\r\n        case 'prog':\r\n            return con == utopiaMotive;\r\n        case 'state':\r\n        case 'ego':\r\n            return con == utopiaCommunity;\r\n    }\r\n}\r\n\r\nexport function IsBeliefDivergent(belief: TraitBelief, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    const data = SecondaryBeliefData[belief];\r\n    return data.idealCon != null && data.idealCon.reduce((isDivergent: boolean, con) => {\r\n        return isDivergent || IsIdealDivergent(con, utopiaMotive, utopiaCommunity);\r\n    }, false);\r\n}\r\n\r\nexport interface BeliefSubjectOption {key: BeliefSubject};\r\nexport interface BeliefVerbOption {key: BeliefVerb};\r\nexport interface BeliefAdjOption {key: TraitBelief};\r\n\r\nexport const BeliefSubjectAll: BeliefSubject[] = ['self', 'other'];\r\nexport const BeliefVerbAll: BeliefVerb[] = ['are', 'arenot'];\r\nexport const BeliefsAll = Object.keys(SecondaryBeliefData).map((x) => x as TraitBelief);\r\n\r\nexport interface Belief{\r\n    subject: BeliefSubject;\r\n    verb: BeliefVerb;\r\n    adj: TraitBelief;\r\n}","import { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitFood, TraitJob, JobToGood, IHappinessModifier, TraitToModifier, MaslowHappinessScore, GetHappiness, GoodToThreshold, TraitGood, TraitSanity } from \"../World\";\r\nimport { RandomEthno, GetRandom } from \"../WorldGen\";\r\nimport { Economy, ISeller } from \"./Economy\";\r\nimport { Policy, Party } from \"./Politics\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\nimport { IDate, withinLastYear } from \"./Time\";\r\nimport { Government } from \"./Government\";\r\nimport { AgentState, IActivityData, IAgent, IBean, IChatData, IdleState, IMover } from \"./Agent\";\r\nimport { Point } from \"./Geography\";\r\nimport { City } from \"./City\";\r\nimport { PriorityQueue } from \"./Priorities\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { IPlayerData } from \"./Player\";\r\n\r\nconst BabyChance = 0.01;\r\nexport const DaysUntilSleepy = 7;\r\nconst ChatCooldownMS = 4000;\r\nexport type BeanDeathCause = 'vaporization'|'exposure'|'starvation'|'sickness';\r\nexport class Bean implements IBean{\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public dob: IDate = {year: 0, season: 0, day: 1, hour: 0};\r\n    public bornInPetri: boolean = false;\r\n    public name: string = 'Human Bean';\r\n    public sanity: TraitSanity = 'sane'\r\n    public discrete_sanity: number = 10;\r\n    /**\r\n     * 0-1\r\n     */\r\n    public discrete_fun: number = 0;\r\n    public lifecycle: 'alive'|'dead'|'abducted' = 'alive';\r\n    public get alive(): boolean{\r\n        return this.lifecycle === 'alive';\r\n    }\r\n    public set alive(val: boolean){\r\n        this.lifecycle = val === true ? 'alive' : 'dead';\r\n    }\r\n\r\n    public activity_queue: IActivityData[] = [];\r\n    public speed = 60;\r\n    public direction = {x: 0,y:0}; \r\n    public markers: Point[] = [];\r\n    public destinationKey = 0;\r\n\r\n\r\n    public city: City|null = null;\r\n\r\n    public ethnicity: TraitEthno = RandomEthno();\r\n\r\n    //maslow\r\n    public discrete_food: number = 1;\r\n    public get food(): TraitFood {\r\n        if (this.discrete_food >= GoodToThreshold['food'].abundant)\r\n        return 'stuffed';\r\n        else if (this.discrete_food >= GoodToThreshold['food'].sufficient)\r\n        return 'sated'\r\n        else\r\n        return 'hungry';\r\n    }\r\n    public shelter: TraitShelter = 'crowded';\r\n    public discrete_health: number = 2;\r\n    public get health(): TraitHealth {\r\n        if (this.discrete_health >= GoodToThreshold['medicine'].abundant)\r\n        return 'fresh';\r\n        else if (this.discrete_health >= GoodToThreshold['medicine'].sufficient)\r\n        return 'bruised'\r\n        else\r\n        return 'sick';\r\n    }\r\n    //values\r\n    public community: TraitCommunity = 'ego';\r\n    public ideals: TraitIdeals = 'trad';\r\n    //other\r\n    public job: TraitJob = 'jobless';\r\n    public faith: TraitFaith = 'noFaith';\r\n    public beliefs: TraitBelief[] = [];\r\n    public cash: number = 3;\r\n    public partyLoyalty: number = 0.2;\r\n    /**\r\n     * -100 to 100\r\n     */\r\n    public lastHappiness: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastSentiment: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastPartySentiment: number = 0;\r\n    public ticksSinceLastSale: number = 0;\r\n    public ticksSinceLastRelax: number = 0;\r\n    /**\r\n     * days until needs sleep\r\n     */\r\n    public discrete_stamina: number = 7;\r\n    public lastApprovalDate: IDate = {year: -1, season: 0, day: 0, hour: 0};\r\n    public lastInsultDate: IDate = {year: -1, season: 0, day: 0, hour: 0};\r\n    public fairGoodPrice: number = 1;\r\n    public lastChatMS: number = Date.now();\r\n    get isInCrisis(): boolean{\r\n        return this.food == 'hungry' ||\r\n        this.shelter == 'podless' ||\r\n        this.health == 'sick';\r\n    }\r\n    believesIn(belief: TraitBelief): boolean{\r\n        return this.beliefs.indexOf(belief) !== -1;\r\n    }\r\n    loseSanity(amount: number){\r\n        const multiplier = this.believesIn('Neuroticism') ? 2 : 1;\r\n        this.discrete_sanity -= multiplier * amount;\r\n    }\r\n    getHappinessModifiers(econ: Economy, homeCity: City, law: Government): IHappinessModifier[]{\r\n        const mods: IHappinessModifier[] = [\r\n            TraitToModifier[this.food],\r\n            TraitToModifier[this.shelter],\r\n            TraitToModifier[this.health],\r\n            {\r\n                reason: 'Entertainment', mod: this.discrete_fun*.4\r\n            }\r\n        ];\r\n        if (this.ideals == 'trad' && this.ethnicity != homeCity.majorityEthnicity) {\r\n            mods.push({reason: 'Xenophobic', mod: -.1});\r\n        }\r\n        if (this.cash < 1) {\r\n            mods.push({reason: 'Penniless', mod: MaslowHappinessScore.Deficient});\r\n        } else if (this.cash > econ.getCostOfLiving() * 3){\r\n            mods.push({reason: 'Upper Class', mod: 0.3});\r\n        } else if (this.cash > econ.getCostOfLiving() * 2){\r\n            mods.push({reason: 'Middle Class', mod: 0.15});\r\n        }\r\n        if (this.job == 'jobless') {\r\n            mods.push({reason: 'Unemployed', mod: MaslowHappinessScore.Deficient});\r\n        }\r\n\r\n        return mods;\r\n    }\r\n    getSentimentModifiers(econ: Economy, homeCity: City, law: Government, party: Party): {\r\n        party: IHappinessModifier[],\r\n        law: IHappinessModifier[]\r\n    }{\r\n        const result = {party: [] as IHappinessModifier[], law: [] as IHappinessModifier[]};\r\n\r\n        if (this.community == party.community){\r\n            result.party.push({reason: 'Same Community', mod: 0.15});\r\n        }\r\n        if (this.ideals == party.ideals){\r\n            result.party.push({reason: 'Same Ideals', mod: 0.15});\r\n        } else if (this.community != party.community){\r\n            result.party.push({reason: 'Incompatible Values', mod: -0.15});\r\n        }\r\n        if (homeCity.environment && withinLastYear(homeCity.environment, this.lastApprovalDate)){\r\n            result.party.push({reason: 'Public Endorsement', mod: 0.2});   \r\n        }\r\n        return result;\r\n    }\r\n    calculateBeliefs(econ: Economy, homeCity: City, law: Government, party: Party): void{\r\n        this.lastHappiness = GetHappiness(this.getHappinessModifiers(econ, homeCity, law));\r\n        const sent = this.getSentimentModifiers(econ, homeCity, law, party);\r\n        this.lastSentiment = GetHappiness(sent.law);\r\n        this.lastPartySentiment = GetHappiness(sent.party);\r\n\r\n        if (this.job == 'jobless'){\r\n            this.fairGoodPrice = 1;\r\n        } else {\r\n            const myGood = JobToGood(this.job);\r\n            this.fairGoodPrice = econ.getFairGoodPrice(myGood);\r\n        }\r\n    }\r\n    /**\r\n     * non-normalized multiplier\r\n     */\r\n    getSentimentPolicies(traits: {[x:string]:boolean}, policies: Policy[]){\r\n        let multiplier = 100;\r\n        policies.forEach((policy) => {\r\n            policy.fx.forEach((fx) => {\r\n                if (traits[fx.key])\r\n                multiplier += fx.mag * 10; //-30 to +30\r\n            });\r\n        });\r\n        return multiplier / 100;\r\n    }\r\n    _getTraitMap(){\r\n        let traits = {[this.community]: true, [this.ideals]:  true, [this.ethnicity]: true};\r\n        if (this.faith != 'noFaith')\r\n            traits[this.faith] = true;\r\n        return traits;\r\n    }\r\n    getFace(): string{\r\n        // if (!this.alive)\r\n        //     return '💀';\r\n        if (this.state.data.act == 'buy' && this.state.data.good == 'shelter'){\r\n            return '😴';\r\n        }\r\n        if (this.state.data.act == 'crime'){\r\n            return '😈';\r\n        }\r\n        if (this.state.data.act == 'relax'){\r\n            return '😎';\r\n        }\r\n        if (this.state.data.act == 'chat'){\r\n            if (this.state.data.chat?.participation === 'speaker'){\r\n                switch(this.state.data?.chat?.type){\r\n                    default: return '😃';\r\n                    case 'gift': return '😇';\r\n                    case 'praise': return '🥳';\r\n                    case 'bully': return '😈';\r\n                }\r\n            }\r\n            return '🤨';\r\n        }\r\n        if (this.food == 'hungry')\r\n            return '😫';\r\n        if (this.health == 'sick')\r\n            return '🤢';\r\n        if (this.shelter == 'podless')\r\n            return '🥶';\r\n        if (this.job == 'jobless')\r\n            return '😧';\r\n        if (this.lastHappiness < 0)\r\n            return '☹️';\r\n        if (this.lastHappiness >= 50)\r\n            return '🙂';\r\n        return '😐';\r\n    }\r\n    getIdea(costOfLiving: number): {bad: boolean, idea: string}|null {\r\n        if (this.food == 'hungry')\r\n            return {bad: true, idea: '🍗'};\r\n        if (this.health == 'sick')\r\n            return {bad: true, idea: '💊'};\r\n        if (this.shelter == 'podless')\r\n            return {bad: true, idea: '🏠'};\r\n        if (this.canBaby(costOfLiving))\r\n            return {bad: false, idea: '👶'};\r\n        return null;        \r\n    }\r\n    getSpeech(): string | undefined {\r\n        if (this.state.data.act === 'chat'){\r\n            if (this.state.data.chat?.participation === 'speaker' && this.state.data.chat.preachBelief){\r\n                return '💬'+SecondaryBeliefData[this.state.data.chat.preachBelief].icon;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getCrimeDecision(\r\n        good: TraitGood,\r\n        crimeReason: 'desperation'|'greed',\r\n    ){\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community == 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (crimeReason === 'desperation' && this.health === 'sick' || this.food === 'hungry'){\r\n            chance += .15;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    tryFindRandomJob(law: Government) {\r\n        const job: TraitJob = GetRandom(['builder', 'doc', 'farmer', 'entertainer']);\r\n        if (!this.trySetJob(job)){\r\n            \r\n            this.city?.eventBus?.nojobslots.publish({icon: '🏚️', trigger: 'nojobslots', message: `A subject cannot find a job; build or upgrade more buildings.`});\r\n        }\r\n    }\r\n    trySetJob(job: TraitJob): boolean{\r\n        if (this.city?.tryGetJob(this, job)){\r\n            this.city.unsetJob(this);\r\n            this.job = job;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    canInsult(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastInsultDate));\r\n    }\r\n    canSupport(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastApprovalDate));\r\n    }\r\n    public maybeChat(): boolean {\r\n        if (this.lastChatMS + ChatCooldownMS > Date.now()) \r\n            return false;\r\n        if (this.state.data.act === 'chat')\r\n            return false;\r\n        const roll = Math.random();\r\n        const chance = (this.community === 'state') ? 0.2 : 0.1;\r\n        return roll < chance;\r\n    }\r\n    public getRandomChat(nearby: Bean[]): IChatData {\r\n        const canPreach = this.beliefs.length;\r\n        if (canPreach){\r\n            if (this.believesIn('Charity') && this.cash >= 2){\r\n                //find a bean with less money than self, poorest in sight\r\n                const needy = nearby.filter(x => x.cash <= this.cash-1).reduce((least: Bean|null, bean) => {\r\n                    if (least == null || (bean.cash < least.cash))\r\n                        return bean;\r\n                    return least;\r\n                }, null);\r\n                if (needy) {\r\n                    this.cash -= 0.5;\r\n                    needy.cash += 0.5;\r\n                    return {\r\n                        participation: 'speaker',\r\n                        type: 'gift',\r\n                        targetBeanKey: needy.key\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'preach',\r\n                preachBelief: GetRandom(this.beliefs)\r\n            }\r\n        } else {\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'praise'\r\n            }\r\n        }\r\n    }\r\n    work(law: Government, econ: Economy) {\r\n        if (this.job == 'jobless'){\r\n        } else {\r\n            switch(this.job){\r\n                case 'farmer':\r\n                    this.discrete_food = Math.min(this.discrete_food+1, GoodToThreshold.food.sufficient*2);\r\n                    break;\r\n                case 'doc':\r\n                    this.discrete_health = Math.min(this.discrete_health+1, GoodToThreshold.medicine.sufficient*2);\r\n                    break;\r\n                case 'builder': \r\n                    this.shelter = 'crowded';\r\n                    this.discrete_stamina = 7;\r\n                    break;\r\n            }\r\n            if (this.believesIn('Diligence') && Math.random() <= 0.5){\r\n                this.discrete_fun += 0.5;\r\n            }\r\n            this.ticksSinceLastSale++;\r\n            if (this.ticksSinceLastSale > 7){\r\n                const cityHasOtherWorkers = this.city ? this.city.beans.filter(x => x.job == this.job).length > 1 : false;\r\n                //underemployment\r\n                if (cityHasOtherWorkers && Math.random() > 0.5) {\r\n                    const newJob = econ.mostInDemandJob();\r\n                    if (newJob)\r\n                        this.trySetJob(newJob);\r\n                }\r\n            }\r\n            econ.produceAndPrice(this, JobToGood(this.job), 4, this.fairGoodPrice);\r\n        }\r\n    }\r\n    private buyFood(economy: Economy) {\r\n        const groceries = economy.tryTransact(this, 'food', 0.5, 3);\r\n        if (groceries)\r\n            this.discrete_food += groceries.bought;\r\n        return groceries;\r\n    }\r\n    public buy: {[key in TraitGood]: (econ: Economy)=> boolean} = {\r\n        food: (economy: Economy) =>{\r\n            return this.buyFood(economy) != null;\r\n        },\r\n        medicine:  (economy: Economy) =>{\r\n            return this.buyMeds(economy) != null;\r\n        },\r\n        fun:  (economy: Economy) =>{\r\n            return this.buyFun(economy);\r\n        },\r\n        shelter: (economy: Economy) => {\r\n            return this.buyHousing(economy);\r\n        }\r\n    }\r\n    public steal(good: 'food'|'medicine', econ: Economy){\r\n        const stolen = econ.steal(good, 3);\r\n        if (stolen != null){\r\n            switch(good){\r\n                case 'food':\r\n                    this.discrete_food += stolen;\r\n                    break;\r\n                case 'medicine':\r\n                    this.discrete_health += stolen;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    private buyHousing(economy: Economy): boolean {\r\n        const housing = economy.tryTransact(this, 'shelter');\r\n        if (housing) {\r\n            this.discrete_stamina = 10;\r\n            this.shelter = 'crowded';\r\n        } else if (this.discrete_stamina <= 0){\r\n            this.shelter = 'podless';\r\n        }\r\n        return housing != null;\r\n    }\r\n    private buyFun(economy: Economy): boolean {\r\n        const fun = economy.tryTransact(this, 'fun');\r\n        if (fun) {\r\n            this.discrete_fun = 1;\r\n        }\r\n        return fun != null;\r\n    }\r\n\r\n    age(economy: Economy): IEvent|null {\r\n        if (!this.alive) return null;\r\n\r\n        this.discrete_food -= 1/7;\r\n        if (this.discrete_food < 0)\r\n            this.discrete_health -= 0.2;\r\n\r\n        const starve = this.maybeDie('starvation', 0.6);\r\n        if (starve)\r\n            return null;\r\n            \r\n        if (this.shelter == 'podless')\r\n            this.discrete_health -= 1/14;\r\n        \r\n        this.discrete_stamina--;\r\n    \r\n        const exposure = this.maybeDie('exposure', 0.2);\r\n        if (exposure)\r\n            return null;\r\n\r\n        this.discrete_health -= 1/20;\r\n        this.discrete_health = Math.min(this.discrete_health, 3);\r\n        const sick = this.maybeDie('sickness', 0.4);\r\n        this.discrete_fun -= 1/10;\r\n        this.discrete_fun = Math.max(0, this.discrete_fun);\r\n        return null;\r\n    }\r\n    private buyMeds(economy: Economy) {\r\n        const meds = economy.tryTransact(this, 'medicine', 0.5, 3);\r\n        if (meds)\r\n            this.discrete_health += meds.bought;\r\n        return meds;\r\n    }\r\n    get babyChance(): number{\r\n        let base = BabyChance;\r\n        if (this.believesIn('Natalism'))\r\n            return base + .15;\r\n        else\r\n            return base;\r\n    }\r\n    maybeBaby(economy: Economy): IEvent | null {\r\n        if (this.canBaby(economy.getCostOfLiving()) &&\r\n            Math.random() <= this.babyChance) {\r\n            if (this.city)\r\n                this.city.breedBean(this);\r\n            else\r\n                throw 'bean does not have city object';\r\n            return {icon: '🎉', trigger: 'birth', message: `${this.name} has a baby!`}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    canBaby(costOfLiving: number): boolean{\r\n        return this.alive && this.cash > costOfLiving * 3 &&\r\n            !this.isInCrisis;\r\n    }\r\n    maybeCrime(good: TraitGood): boolean {\r\n        if (good === 'shelter') return false;\r\n        if (good === 'fun') return false;\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community == 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (this.isInCrisis){\r\n            chance += .1;\r\n        }\r\n        if (this.believesIn('Greed')){\r\n            chance += .25;\r\n        }\r\n        if (this.believesIn('Anarchism')){\r\n            chance += .33;\r\n        }\r\n        if (this.believesIn('Authority')){\r\n            chance -= .25;\r\n        }\r\n        if (good === 'food' && this.food === 'hungry'){\r\n            chance += .25;\r\n        }\r\n        else if (good === 'medicine' && this.health === 'sick'){\r\n            chance += .25;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    canBuy(good: TraitGood): 'yes'|'nosupply'|'pricedout' {\r\n        return this.city?.economy?.canBuy(this, good) || 'nosupply';\r\n    }\r\n    /**\r\n     * should return 0-1 float, with 1 meaning 100%\r\n     * @param economy \r\n     */\r\n    chanceToDonate(economy: Economy, direct: boolean = false): number{\r\n        const canDonate = this.cash > economy.getCostOfLiving() * 2 && !this.isInCrisis;\r\n        if (canDonate && this.lastPartySentiment > 0.5){\r\n            const threshold = direct ? 0.2 : 0.5;\r\n            const baseChance = this.lastPartySentiment - threshold;\r\n            return (baseChance) / 2;\r\n        }\r\n        return 0;\r\n    }\r\n    maybeDonate(economy: Economy, direct: boolean = false): number{\r\n        // const chance = this.chanceToDonate(economy, direct);\r\n        // if (chance > 0){\r\n        //     const willDonate = Math.random() < chance;\r\n        //     if (willDonate){\r\n        //         const donation = 1;\r\n        //         this.cash -= donation;\r\n        //         return donation;\r\n        //     }\r\n        // }\r\n        return 0;\r\n    }\r\n    maybeDie(cause: BeanDeathCause, chance = 0.5): boolean{\r\n        if (this.discrete_health < 0 && Math.random() <= chance) {\r\n            this.die(cause);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    die(cause: BeanDeathCause){\r\n        this.alive = false;\r\n        this.city?.eventBus?.death.publish({\r\n            icon: '☠️', trigger: 'death', message: `${this.name} died of ${cause}!`, \r\n            beanKey: this.key, cityKey: this.cityKey,\r\n            point: this.city?.movers.bean[this.key]\r\n    });\r\n    }\r\n    abduct(player: IPlayerData){\r\n        this.lifecycle = 'abducted';\r\n        player.abductedBeans.push(this);\r\n    }\r\n\r\n    state: AgentState = IdleState.create();\r\n    jobQueue: PriorityQueue<AgentState> = new PriorityQueue<AgentState>([]);\r\n    onAct = new PubSub<number>();\r\n}","import { TraitIdeals, TraitCommunity, TraitEthno, TraitFaith, World, TraitJob } from './World';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Policy, BaseParty, CityPartyHQ, Party } from './simulation/Politics';\r\nimport { IBuilding, BuildingTypes, Geography, PolarPoint, polarToPoint, hex_to_pixel, HexPoint, Building } from './simulation/Geography';\r\nimport { City } from './simulation/City';\r\nimport { BeliefsAll } from './simulation/Beliefs';\r\n\r\nexport function GetRandomNumber(min: number, max: number): number{\r\n    const randomBuffer = new Uint32Array(1);\r\n    window.crypto.getRandomValues(randomBuffer);\r\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\nexport function GetRandomIndex(length: number): number{\r\n    return GetRandomNumber(0, length-1)\r\n}\r\nexport function GetRandom<S>(choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(choices.length);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(): TraitIdeals{\r\n    return GetRandom(['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(): TraitCommunity{\r\n    return GetRandom(['state', 'ego']);\r\n}\r\nexport function RandomEthno(): TraitEthno{\r\n    return GetRandom(['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(): TraitFaith{\r\n    return GetRandom(['rocket','music','dragon', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\nexport const MAX_PETRI_RADIUS = 200;\r\nexport const PI2 = Math.PI*2;\r\nexport function RandomPolar(r?: number): PolarPoint{\r\n    return {\r\n        r: r || GetRandomNumber(0, MAX_PETRI_RADIUS),\r\n        az: GetRandomNumber(0, PI2)\r\n    };\r\n}\r\nexport function GetBuildingR(type: BuildingTypes): number{\r\n    switch(type){\r\n        case 'farm':\r\n            return GetRandomNumber(200, 300);\r\n        default: \r\n            return GetRandomNumber(80, 200);\r\n    }\r\n}\r\nexport function GenerateBuilding(geo: Geography, type: BuildingTypes, hex: HexPoint){\r\n    const newBuilding = new Building();\r\n    newBuilding.type = type;\r\n    newBuilding.key = geo.numberOf(type);\r\n    geo.addBuilding(hex, newBuilding);\r\n}\r\n\r\nconst Number_Starting_Cities = 1;\r\nexport function GenerateWorld(): World{\r\n    const world = new World();\r\n \r\n    world.law.laws = [\r\n        {group: 'Welfare', key: 'eat_cake', axis: 'wel_food'},\r\n        {group: 'Welfare', key: 'outside', axis: 'wel_house'},\r\n        {group: 'Welfare', key: 'stay_healthy', axis: 'wel_health'},\r\n        {group: 'Culture', key: 'secularism', axis: 'cul_rel'}\r\n    ];\r\n    world.party = new BaseParty();\r\n    world.institutions.push(world.party);\r\n    for (let i = 0; i < Number_Starting_Cities; i++) {\r\n        world.cities.push(GenerateCity(world.cities.length));\r\n        world.cities[i].eventBus = world.bus;\r\n        world.cities[i].environment = world.date;\r\n        world.cities[i].economy = world.economy;\r\n        world.cities[i].law = world.law;\r\n        for (let j = 0; j < world.cities[i].beans.length; j++) {\r\n            const bean = world.cities[i].beans[j];\r\n            bean.work(world.law, world.economy);\r\n            if (bean.job == 'farmer')\r\n                bean.work(world.law, world.economy);\r\n        }\r\n    }\r\n    world.economy.totalSeasonalDemand.food = world.beans.length;\r\n    world.economy.totalSeasonalDemand.shelter = world.beans.length;\r\n    world.economy.totalSeasonalDemand.medicine = world.beans.length;\r\n\r\n    return world;\r\n}\r\n\r\nexport function GeneratePartyHQ(city: City, party: Party) {\r\n    \r\n}\r\n\r\nexport const Number_Starting_City_Pop = 0;\r\nexport function GenerateCity(previousCityCount: number): City{\r\n    let newCity = new City();\r\n    newCity.key = previousCityCount;\r\n    newCity.name = GetRandom(['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', '']);\r\n    newCity.name += GetRandom(['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash']);\r\n    newCity.name += GetRandom(['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest']);\r\n    \r\n    GenerateBuilding(newCity, 'courthouse', newCity.hexes[0]); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(15, 20)]); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(21, 25)]); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(26, 60)]);\r\n    // GenerateBuilding(newCity, 'house', newCity.hexes[1]); \r\n    // GenerateBuilding(newCity, 'hospital', newCity.hexes[5]);\r\n    \r\n    // GenerateBuilding(newCity, 'farm', newCity.hexes[7]);\r\n\r\n    const cityPopulation = Number_Starting_City_Pop;\r\n    while(newCity.historicalBeans.length < cityPopulation){\r\n        newCity.historicalBeans.push(\r\n            GenerateBean(newCity, newCity.historicalBeans.length)\r\n        );\r\n    }\r\n\r\n    return newCity;\r\n}\r\nexport function GenerateBean(city: City, previousBeanCount: number, hexPoint?: HexPoint, job?: TraitJob): Bean{\r\n    let newBean = new Bean();\r\n    \r\n    newBean.key = previousBeanCount;\r\n    newBean.cityKey = city.key;\r\n    newBean.city = city;\r\n    newBean.name = GetRandom(['Joe', 'Frank', 'Jill', 'Jose',\r\n    'Johnny', 'Isabelle', 'Carmen', 'Ace', 'Carl', 'Zander', 'Jean',\r\n    'Anne', 'Leslie', 'Ben', 'Ron', \r\n    'Ellen', 'Dallas', 'Kane', 'Ash', \r\n    'Jim', 'James', 'Leonard', 'Nyota', 'Christine', 'Scotty', 'Tasha', 'Geordi', 'Beverly', 'Deanna', 'Wesley', 'Majel',\r\n    'Malcolm','River',  \r\n    'Luke', \r\n    'Dana', 'Walter',  \r\n    'Rick', \r\n    'Rose', 'Donna', 'Jack', 'Amy', 'Rory', 'Martha', 'Clara', \r\n    'Arnold', 'Dave', 'Holly', \r\n    'Kara', 'Gaius','William', 'Lee', 'Laura', 'Saul',\r\n    'Max', 'Edison', 'Theora', 'Bryce', 'Murray', 'Ned',\r\n    'Daniel', 'Samantha', \r\n    'Logan', 'Francis', 'Jessica'\r\n    ]) + ' ';\r\n    newBean.name += GetRandom([\r\n        'Ripley', 'Bishop', 'Hicks', 'Vasquez', 'Hudson', \r\n        'Rico', 'Flores', 'Ibanez', 'Levy', 'Jenkins', 'Barlow', 'Zim', 'Rasczak',\r\n        'Kirk', 'McCoy', 'Sulu', 'Uhura', 'Chekov', 'Chapel', 'Rand','Riker', 'Crusher', 'Barret', \"O'Brien\",\r\n        'Reynolds', 'Tam', \r\n        'Scully', 'Mulder','Skinner', \r\n        'Connor', \r\n        'Thrace', 'Baltar', 'Smith','Adama', 'Roslin', 'Tigh', 'Song', 'Oswald', \r\n        'Deckard', \r\n        'Tyler', 'Harkness', 'Jones', 'Noble', 'Pond', 'Williams',\r\n        'Rimmer', 'Lister', \r\n        'Head', 'Carter', 'Lynch', 'McKenzie', 'Grossberg',\r\n        \"O'Neil\", 'Jackson', 'Carter'\r\n         ]);\r\n    newBean.community = RandomCommunity();\r\n    newBean.ideals = RandomIdeal();\r\n    newBean.faith = RandomFaith();\r\n    const beanBeliefCount = Math.ceil(Math.random() * 2);\r\n    for (let i = 0; i < beanBeliefCount; i++) {\r\n        newBean.beliefs.push(GetRandom(BeliefsAll));\r\n    }\r\n    \r\n    if (job == null){\r\n        switch (previousBeanCount){\r\n            case 0:\r\n                job = 'farmer'; break;\r\n            case 1:\r\n                job = 'builder'; break;\r\n            case 2:\r\n                job = 'doc'; break;\r\n            default:\r\n                job = GetRandom(['farmer', 'builder', 'doc', 'entertainer']); break;\r\n        }\r\n    }\r\n    newBean.trySetJob(job);\r\n\r\n    newBean.cash = StartingCash(newBean.job);\r\n    newBean.discrete_food = 3;\r\n\r\n    city.movers.bean[newBean.key] = hex_to_pixel(city.hex_size, city.petriOrigin, hexPoint || city.byType.house.coordByID[GetRandom(city.byType.house.all).key]);\r\n    \r\n    return newBean;\r\n}","import { TraitGood, TraitJob, GoodToJob, Trait } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { IOrganization, Charity } from \"./Institutions\";\r\nimport { City } from \"./City\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IEvent, IEventBus } from \"../events/Events\";\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    ticksSinceLastSale: number;\r\n}\r\nexport interface Listing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerOrganizationKey?: number;\r\n    price: number;\r\n    seller: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'shelter', 'medicine', 'fun'];\r\n\r\nexport class Economy {\r\n    market = new OrderBook();\r\n    charity = new OrderBook();\r\n    unfulfilledSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalSupply: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    constructor(public eventBus: IEventBus){\r\n    }\r\n    public resetSeasonalDemand(){\r\n        this.unfulfilledSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalSupply = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    }\r\n    tryTransact(\r\n        buyer: IEconomicAgent, \r\n        good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1\r\n        ): {bought: number, price: number}|null {\r\n        this.totalSeasonalDemand[good] += maxDemand;\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            //console.log('agent could not find '+good);\r\n            this.unfulfilledSeasonalDemand[good] += maxDemand;\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if (listing.price <= buyer.cash * actualDemand){\r\n            return this.market.transact(listing, good, actualDemand, buyer);\r\n        } else if (buyer instanceof Bean) {\r\n            // console.log('bean couldnot afford '+good+\" @ $\"+listing?.price);\r\n            // const charityTicket = this.charity.getLowestPriceListing(good, minDemand);\r\n            // if (charityTicket && charityTicket.seller instanceof Charity) {\r\n            //     // console.log('bean got '+good+\" from charity\");\r\n            //     const actualDemand = Math.min(charityTicket.quantity, maxDemand);\r\n            //     buyer.partyLoyalty += PartyLoyaltyPerCharityUse;\r\n            //     charityTicket.seller.beansHelped++;\r\n            //     charityTicket.seller.inventory -= actualDemand;\r\n            //     return this.charity.transact(charityTicket, good, actualDemand, buyer);\r\n            // }\r\n        }\r\n        this.unfulfilledSeasonalDemand[good] += actualDemand;\r\n        return null;\r\n    }\r\n    canBuy(buyer: IEconomicAgent, good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1): 'yes'|'nosupply'|'pricedout'{\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            return 'nosupply';\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if (listing.price <= buyer.cash * actualDemand)\r\n            return 'yes';\r\n        return 'pricedout';\r\n    }\r\n    steal(\r\n        good: TraitGood,\r\n        maxDemand: number = 1\r\n        ): number|null {\r\n        const listing = GetRandom(this.market.listings[good]);\r\n        if (listing == null){\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        this.market.subtractFromListing(listing, good, actualDemand);\r\n        \r\n        return actualDemand;\r\n    }\r\n    produceAndPrice(seller: Bean, good: TraitGood, quantity: number, price: number) {\r\n        this.totalSeasonalSupply[good] += quantity;\r\n        const existing = this.market.getBeansListings(seller.cityKey, seller.key, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    addCharity(seller: Charity, good: TraitGood, quantity: number) {\r\n        const existing = this.charity.getOrgsListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.quantity = Math.min(existing.quantity, 10);\r\n            seller.inventory = existing.quantity;\r\n        } else {\r\n            this.charity.addNewOrgListing(good, quantity, 0, seller);\r\n            seller.inventory = quantity;\r\n        }\r\n        //this.book[good].sort((a, b) => a.price - b.price);\r\n    }\r\n    public mostInDemandJob(): TraitJob|null{\r\n        const goods: TraitGood[] = AllGoods;\r\n        const max = goods.reduce((last, good) => {\r\n            if (this.unfulfilledSeasonalDemand[good] > last.max){\r\n                last.max = this.unfulfilledSeasonalDemand[good];\r\n                last.job = GoodToJob(good);\r\n            }\r\n            return last;\r\n        }, {max: 0, job: null as TraitJob|null})\r\n\r\n        return max.job;\r\n    }\r\n    public onBeanDie(bean: Bean){\r\n        AllGoods.forEach((g) => {\r\n            const existing = this.market.getBeansListings(bean.cityKey, bean.key, g);\r\n            if (existing){\r\n                const lucky = bean.city?.getRandomCitizen();\r\n                if (lucky) {\r\n                    existing.sellerCityKey = lucky.cityKey;\r\n                    existing.sellerBeanKey = lucky.key;\r\n                    existing.seller = lucky;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public getFairGoodPrice(good: TraitGood){\r\n        const supply = this.totalSeasonalSupply[good] || 1;\r\n        const demand = this.totalSeasonalDemand[good];\r\n        return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n    }\r\n    public getCostOfLiving(){\r\n        return this.getFairGoodPrice('food')+this.getFairGoodPrice('shelter')+this.getFairGoodPrice('medicine');\r\n    }\r\n}\r\n\r\nexport class OrderBook{\r\n    public readonly listings: {[key in TraitGood]: Listing[]} = {\r\n        food: [] as Listing[],\r\n        shelter: [] as Listing[],\r\n        medicine: [] as Listing[],\r\n        fun: [] as Listing[],\r\n    };\r\n    public getLowestPriceListing(good: TraitGood, demand: number): Listing|null{\r\n        const fullListings =  this.listings[good].filter((l) => {\r\n            return l.quantity >= demand;\r\n        });\r\n        if (fullListings.length > 0){\r\n            let numberOfSamePriceListings = 1;\r\n            const lowPrice = fullListings[0].price;\r\n            for (let i = 1; i < fullListings.length; i++) {\r\n                const list = fullListings[i];\r\n                if (list.price > lowPrice)\r\n                    break;\r\n                numberOfSamePriceListings++;\r\n            }\r\n            const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n            if (i >= fullListings.length)\r\n                throw \"invalid index\";\r\n            return fullListings[i];\r\n        }\r\n        return null;\r\n    }\r\n    public getBeansListings(cKey: number, bKey: number, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == bKey && x.sellerCityKey == cKey);\r\n    }\r\n    public getOrgsListings(b: IOrganization, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerOrganizationKey == b.key);\r\n    }\r\n    public transact(listing: Listing, good: TraitGood, demand: number, buyer: IEconomicAgent){    \r\n        this.subtractFromListing(listing, good, demand);\r\n        const sale = listing.price * demand;\r\n        buyer.cash -= sale;\r\n        listing.seller.cash += sale;\r\n        listing.seller.ticksSinceLastSale = 0;\r\n        return {\r\n            bought: demand,\r\n            price: sale\r\n        }\r\n    }\r\n    public subtractFromListing(listing: Listing, good: TraitGood, demand: number){     \r\n        listing.quantity -= demand;\r\n        if (listing.quantity <= 0){\r\n            this.listings[good].splice(0, 1);\r\n        }\r\n    }\r\n    public addNewListing(good: TraitGood, quantity: number, price: number, bean: Bean){\r\n        this.listings[good].push({\r\n            sellerCityKey: bean.cityKey,\r\n            sellerBeanKey: bean.key,\r\n            price: price,\r\n            seller: bean,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public addNewOrgListing(good: TraitGood, quantity: number, price: number, org: IOrganization){\r\n        this.listings[good].push({\r\n            sellerOrganizationKey: org.key,\r\n            price: price,\r\n            seller: org,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public sort(good: TraitGood){        \r\n        this.listings[good].sort((a, b) => a.price - b.price);\r\n    }\r\n}","import * as React from 'react';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Economy } from './simulation/Economy';\r\nimport { Policy, Party, BaseParty, ICityPartyHQ } from './simulation/Politics';\r\nimport { IInstitution, IOrganization, Charity } from './simulation/Institutions';\r\nimport { IEvent, EventBus } from './events/Events';\r\nimport { Season, IDate, Hour } from './simulation/Time';\r\nimport { Government } from './simulation/Government';\r\nimport { Player, TechData } from './simulation/Player';\r\nimport { Geography } from './simulation/Geography';\r\nimport { City } from './simulation/City';\r\nimport { shuffle } from './simulation/Utils';\r\nimport { Act, IActListener, IChatData } from './simulation/Agent';\r\nimport { IDifficulty } from './Game';\r\nimport { type } from 'os';\r\nimport { IsBeliefDivergent, SecondaryBeliefData } from './simulation/Beliefs';\r\n\r\n\r\nexport interface IBeanContainer{\r\n    /**\r\n     * all beans ever, including dead ones\r\n     */\r\n    historicalBeans: Bean[];\r\n    /**\r\n     * current non-dead beans\r\n     */\r\n    beans: Bean[];\r\n}\r\n\r\nexport interface IWorld{\r\n    cities: City[];\r\n    law: Government;\r\n    party: Party;\r\n\r\n    institutions: IInstitution[];\r\n    bus: EventBus;\r\n    date: IDate;\r\n    alien: Player;\r\n}\r\nexport class World implements IWorld, IBeanContainer, IActListener{\r\n    public readonly bus = new EventBus();\r\n    public readonly economy: Economy = new Economy(this.bus);\r\n    public cities: City[] = [];\r\n    public law: Government = new Government();\r\n    public institutions: IInstitution[] = [];\r\n    public party: Party = new BaseParty();\r\n    public date: IDate = {year: 1, season: Season.Spring, day: 1, hour: 1};\r\n\r\n    public alien: Player = new Player();\r\n\r\n    public get beans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.beans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get historicalBeans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.historicalBeans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get organizations(): IOrganization[]{\r\n        return this.institutions.reduce((list, institute) => {\r\n            return list.concat(institute.organizations);\r\n        }, [] as IOrganization[]);\r\n    }\r\n\r\n    constructor(){\r\n        this.bus.death.subscribe(this.onBeanDie)\r\n    }\r\n\r\n    /**\r\n     * update 'pushed' state\r\n     */\r\n    public calculateComputedState(){\r\n        this.cities.forEach(c => {\r\n            c.calculate(this.economy, this.law);\r\n            c.beans.forEach(b => b.calculateBeliefs(this.economy, c, this.law, this.party));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * simulates a season passing, setting a lot of state\r\n     */\r\n    public simulate_world(){\r\n        this.date.hour++\r\n        if (this.date.hour > Hour.Evening){\r\n            this.date.hour = 0;\r\n            this.date.day++;\r\n        }\r\n        if (this.date.day > 30){\r\n            this.date.day = 1;\r\n            this.date.season++;\r\n        }\r\n        if (this.date.season > 3){\r\n            this.date.year++;\r\n            this.inflate();\r\n            this.resetYearlyCounters();\r\n            this.date.season = 0;\r\n        }\r\n\r\n        this.alien.bots.amount += this.alien.bots.income;\r\n        this.alien.energy.amount += this.alien.energy.income;\r\n        this.alien.psi.amount += this.alien.psi.income;\r\n        if (this.alien.hasResearched('fast_resources')){\r\n            this.alien.bots.amount += this.alien.bots.income*0.5;\r\n            this.alien.energy.amount += this.alien.energy.income*0.5;\r\n            this.alien.psi.amount += this.alien.psi.income*0.5;\r\n        }\r\n        if (this.alien.currentlyResearchingTech){\r\n            const tech = this.alien.currentlyResearchingTech;\r\n            if(this.alien.techProgress[tech] == null){\r\n                this.alien.techProgress[tech] = {\r\n                    researchPoints: 0\r\n                }\r\n            }\r\n            const max = TechData[tech].techPoints;\r\n            const current = this.alien.techProgress[tech].researchPoints;\r\n            if (current < max)\r\n                this.alien.techProgress[tech].researchPoints += this.alien.abductedBeans.length;\r\n            if (current >= max)\r\n                this.alien.currentlyResearchingTech = undefined;\r\n        }\r\n        \r\n        this.economy.resetSeasonalDemand();\r\n\r\n        this.organizations.forEach((org) => org.work(this.law, this.economy));\r\n        \r\n        shuffle(this.beans).forEach((b: Bean) => {\r\n            b.age(this.economy);\r\n            const e = b.maybeBaby(this.economy);\r\n            if (e) this.publishEvent(e);\r\n            if (b.job === 'jobless')\r\n                b.tryFindRandomJob(this.law);\r\n        });\r\n        this.cities.forEach((c) => c.getTaxesAndDonations(this.party, this.economy));\r\n        this.calculateComputedState();\r\n        this.alien.checkGoals(this);\r\n        this.alien.checkReportCard(this);\r\n    }\r\n    simulate_beans(deltaMS: number){\r\n        this.beans.forEach((b) => {\r\n            Act(b, deltaMS, this.alien.difficulty, this);\r\n        })\r\n    }\r\n    onChat = (b: Bean, chat: IChatData) => {\r\n        if (this.party && chat.preachBelief){\r\n            if (IsBeliefDivergent(chat.preachBelief, this.party.ideals, this.party.community)){\r\n                this.publishEvent({\r\n                    icon: '🚨', trigger: 'speechcrime',\r\n                    message: `Speechcrime! ${b.name} is talking about ${SecondaryBeliefData[chat.preachBelief].noun}`,\r\n                    beanKey: b.key\r\n                });\r\n                if (this.alien.speechcrimes[this.date.year] == null)\r\n                    this.alien.speechcrimes[this.date.year] = 1;\r\n                else\r\n                    this.alien.speechcrimes[this.date.year]++;\r\n            }\r\n        }\r\n    }\r\n    onBeanDie = (e: IEvent) => {\r\n        const city = this.cities.find((x) => x.key === e.cityKey);\r\n        if (city){\r\n            const bean = city.historicalBeans.find((x) => x.key === e.beanKey);\r\n            if (bean){\r\n                city.onCitizenDie(bean);\r\n                this.economy.onBeanDie(bean);\r\n            }\r\n        }\r\n    }\r\n    publishEvent(e: IEvent){\r\n        this.bus[e.trigger].publish(e);\r\n    }\r\n    inflate() {\r\n        const allMoney = this.beans.reduce((sum, b) => sum+b.cash, 0) + this.organizations.reduce((sum, o) => sum + o.cash, 0);\r\n        const percent = allMoney / 100;\r\n        const yearlyInflationDollars = Math.round(percent * 1);\r\n        if (yearlyInflationDollars > 0){\r\n            const richest = this.beans.reduce((obj: {winner?: Bean, max: number}, b) => {\r\n                if (b.cash > obj.max){\r\n                    obj.winner = b;\r\n                    obj.max = b.cash;\r\n                }\r\n                return obj;\r\n            }, {max: 0});\r\n            if (richest.winner){\r\n                richest.winner.cash += yearlyInflationDollars;\r\n            }\r\n        }\r\n    }\r\n    resetYearlyCounters() {\r\n        this.cities.forEach((c) => {\r\n            c.yearsPartyDonations = 0;\r\n        })\r\n    }\r\n    addCharity(good: TraitGood, name: string, budget: number) {\r\n        const charity = new Charity();\r\n        charity.name = name;\r\n        charity.good = good;\r\n        charity.seasonalBudget = budget;\r\n        this.party.organizations.push(charity);\r\n    }\r\n}\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface Tile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'rocket'|'music'|'dragon'|'noFaith';\r\nexport type TraitFood = 'hungry'|'sated'|'stuffed';\r\nexport type TraitShelter = 'podless'|'crowded'|'homeowner';\r\nexport type TraitHealth = 'sick'|'bruised'|'fresh';\r\nexport type TraitSanity = 'mad'|'confused'|'sane';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitShelter|TraitHealth|TraitSanity;\r\n\r\nexport const TraitIcon: {[key in Trait]: string} = {\r\n    'state': '🕊️', 'ego': '🦅',\r\n    'prog': '⚖️', 'trad': '👑',\r\n    'circle': '🤎', 'square': '💛', 'triangle': '🧡',\r\n    'rocket': '🚀', 'music': '🎵', 'dragon': '🐲',\r\n    'noFaith': '⚫️',\r\n    'hungry': '🍽️', 'sated': '🥜', 'stuffed': '🥩',\r\n    'podless': '🌨️', 'crowded': '🏘️', 'homeowner': '🏡',\r\n    'sick': '🤢', 'bruised': '🩹', 'fresh': '💪',\r\n    'mad': '🤪', 'confused': '🤤', 'sane': '🧠',\r\n}\r\nexport enum MaslowHappinessScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport const TraitToModifier: {[key in TraitFood|TraitShelter|TraitHealth]: IHappinessModifier} = {\r\n    'podless': {reason: 'Homeless', mod: MaslowHappinessScore.Deficient},\r\n    'crowded': {reason: 'Renting', mod: MaslowHappinessScore.Sufficient},\r\n    'homeowner': {reason: 'Homeowner', mod: MaslowHappinessScore.Abundant},\r\n    'sick': {reason: 'Sick', mod: MaslowHappinessScore.Deficient},\r\n    'bruised': {reason: 'Bruised', mod: MaslowHappinessScore.Sufficient},\r\n    'fresh': {reason: 'Healthy', mod: MaslowHappinessScore.Abundant},\r\n    'hungry': {reason: 'Hungry', mod: MaslowHappinessScore.Deficient},\r\n    'sated': {reason: 'Sated', mod: MaslowHappinessScore.Sufficient},\r\n    'stuffed': {reason: 'Stuffed', mod: MaslowHappinessScore.Abundant},\r\n}\r\nexport interface IThreshold {sufficient: number, abundant: number}\r\nexport const GoodToThreshold: {[key in TraitGood]: IThreshold} = {\r\n    'food': {sufficient: 1, abundant: 3},\r\n    'shelter': {sufficient: 1, abundant: 7},\r\n    'medicine': {sufficient: 1, abundant: 3},\r\n    'fun': {sufficient: 1, abundant: 3},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'builder': return 'shelter';\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'shelter': return 'builder';\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'shelter'|'medicine'|'fun';\r\nexport const GoodIcon: {[key in TraitGood]: string} ={\r\n    'food': '🥪',\r\n    'shelter': '', \r\n    'medicine': '💊', \r\n    'fun': '👏'\r\n};","import { Trait, TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { IInstitution, IOrganization } from \"./Institutions\";\r\nimport { Government, LawAxis } from \"./Government\";\r\n\r\n\r\nexport interface Party extends IInstitution{\r\n    slogan: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    \r\n    availablePolicies: Policy[]; \r\n    proposedPolicy?: Policy;\r\n    availableCampaigns: Campaign[];\r\n    activeCampaigns: Campaign[];\r\n\r\n    platform: {[key in LawAxis]: IPolicy};\r\n\r\n    leadership: number;\r\n}\r\n\r\nexport class BaseParty implements Party{\r\n    key = 1;\r\n    playerKey = 1;\r\n    organizations: IOrganization[] = [];\r\n    public name: string = \"Citizen's Party\";\r\n    public slogan: string = \"Vote for us!\";\r\n    public community: TraitCommunity = 'state';\r\n    public ideals: TraitIdeals = 'trad';\r\n    public availablePolicies: Policy[] = [];\r\n    public proposedPolicy?: Policy;\r\n    public availableCampaigns: Campaign[] = [];\r\n    public activeCampaigns: Campaign[] = [];\r\n    public leadership: number = 10;\r\n    public activeHQs: number[] = [];\r\n    public platform: {[key in LawAxis]: IPolicy} = {} as {[key in LawAxis]: IPolicy};\r\n\r\n    constructor(){\r\n    }\r\n    // differingPolicies(law: Government): IPolicy[]{\r\n    //     return Object.keys(this.platform).filter((key: string) => {\r\n    //         const ax = key as LawAxis;\r\n    //         return this.platform[ax] != law.laws[ax];\r\n    //     }).map((key) => this.platform[key as LawAxis]);\r\n    // }\r\n}\r\n\r\nexport interface ICityPartyHQ{\r\n    cityKey: number;\r\n}\r\nexport class CityPartyHQ implements ICityPartyHQ{\r\n    cityKey: number = 0;\r\n}\r\n\r\nexport interface PoliticalEffect {\r\n    key: Trait;\r\n    /**\r\n     * magnitude (-3 to +3)\r\n     */\r\n    mag: number;\r\n}\r\nexport interface Policy {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    axis?: LawAxis;\r\n}\r\nexport interface Campaign {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    cityKey?: number;\r\n\r\n    seasonalCost: number;\r\n}\r\nexport interface IPolicy{\r\n    key: string, \r\n    name: string, \r\n    community?: TraitCommunity, \r\n    ideals?: TraitIdeals, \r\n    axis: LawAxis,\r\n    hint?: string\r\n}","import { ISeller, Economy } from \"./Economy\";\r\nimport { TraitGood, GoodToJob } from \"../World\";\r\nimport { Policy } from \"./Politics\";\r\nimport { Government } from \"./Government\";\r\n\r\nexport interface IInstitution{\r\n    key: number;\r\n    playerKey: number;\r\n    name: string;\r\n\r\n    organizations: IOrganization[];\r\n}\r\n\r\nexport interface IOrganization extends ISeller{\r\n    work(law: Government, economy: Economy): void;\r\n    key: number;\r\n    institutionKey: number;\r\n    seasonalBudget: number;\r\n    parentInstitution: IInstitution|null;\r\n    cash: number;\r\n}\r\n\r\nexport class Charity implements IOrganization, ISeller{\r\n    key = 0;\r\n    name: string = '';\r\n    institutionKey = 1;\r\n    cash = 0;\r\n    ticksSinceLastSale = 0;\r\n    seasonalBudget = 0;\r\n    good: TraitGood = 'food';\r\n    parentInstitution: IInstitution|null = null;\r\n    beansHelped: number = 0;\r\n    inventory: number = 0;\r\n    \r\n    work(law: Government, economy: Economy): void{\r\n        while(this.cash > 0 && this.inventory < 10) {\r\n            const groceries = economy.tryTransact(this, this.good);\r\n            if (groceries){\r\n                economy.addCharity(this, this.good, groceries.bought);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n} ","import { TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { IPolicy } from \"./Politics\";\r\n\r\nexport type LawGroup = 'Taxation'|'Welfare'|'Economics'|'Crime'|'Culture';\r\nexport type LawAxis = 'wel_food'|'wel_house'|'wel_health'|'tax_basic'|'tax_second'|'econ_sub'|'cul_rel'|'cul_theo'|'crime_theo';\r\n\r\nexport type LawKey = 'eat_cake'\r\n|'food_bank'\r\n|'food_stamps'\r\n|'univ_rations'\r\n|'outside'\r\n|'homeless_shelters'\r\n|'housing_subsidy'\r\n|'state_apartments'\r\n|'stay_healthy'\r\n|'clinics'\r\n|'medical_aid'\r\n|'univ_health'\r\n|'hands_off'\r\n|'grain_sub'\r\n|'arts'\r\n|'theocracy'\r\n|'secularism'\r\n|'atheism'\r\n|'mythology'\r\n|'futurism'\r\n|'drama'\r\n|'poll_tax'\r\n|'sales_tax'\r\n|'wealth_tax'\r\n|'vice_tax'\r\n|'prop_tax'\r\n|'death_tax';\r\n\r\nexport type LawPunishment = 'fine'|'imprison'|'death';\r\n\r\nexport interface ILaw{\r\n    /**\r\n     * convenience grouping property\r\n     */\r\n    group: LawGroup;\r\n    /**\r\n     * \"slot\" for law\r\n     */\r\n    axis: LawAxis;\r\n    /**\r\n     * specific law selected\r\n     */\r\n    key: LawKey;\r\n}\r\nexport interface IGovernment{\r\n    laws: ILaw[];\r\n    lawTree: {[key in LawAxis]: ILaw};\r\n}\r\nexport interface ILawData extends ILaw{\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>,\r\n    name: string;\r\n    hint?: string;\r\n    description?: string;\r\n}\r\nexport const LawAxisData: {[key in LawAxis]: {name: string}} = {\r\n    'wel_food': {name: 'Food Welfare'},\r\n    'wel_house': {name: 'Housing Welfare'},\r\n    'wel_health': {name: 'Healthcare'},\r\n    'tax_basic': {name: 'Taxation'},\r\n    'tax_second': {name: 'Advanced Taxation'},\r\n    'econ_sub': {name: 'Subsidies'},\r\n    'cul_rel': {name: 'Culture'},\r\n    'cul_theo': {name: 'State Narrative'},\r\n    crime_theo: {name: 'Persecution'}\r\n}\r\nexport const LawData: {[key in LawKey]: ILawData} = {\r\n    'eat_cake':{\r\n        key: 'eat_cake', group: 'Welfare', name: 'Let Them Eat Cake', idealPro: [ 'trad', 'ego' ], axis: 'wel_food',\r\n        description: 'Hungry Subjects must go without any relief.', hint: 'No state solution for hunger'},\r\n    'food_bank':{\r\n        key: 'food_bank', group: 'Welfare', name: 'Food Bank', idealPro: [ 'prog', 'ego'], axis: 'wel_food',\r\n        description: 'Hungry Subjects are provided food purchased by the government.'\r\n    },\r\n    'food_stamps':{\r\n        key: 'food_stamps', group: 'Welfare', name: 'Food Stamps', idealPro: [ 'trad', 'state'], axis: 'wel_food',\r\n        description: 'Hungry Subjects are provided money by the government to purchase food.'},\r\n    'univ_rations':{\r\n        key: 'univ_rations', group: 'Welfare', name: 'Universal Rations', idealPro: [ 'prog', 'state'], axis: 'wel_food',\r\n        description: 'All Subjects are provided small amounts of food from the government.'},\r\n    'outside':{\r\n        key: 'outside', group: 'Welfare', name: 'Sleep Outside', idealPro: [ 'trad','ego'], axis: 'wel_house',\r\n        description: 'Homeless Subjects must sleep in the cold.'},\r\n    'homeless_shelters':{\r\n        key: 'homeless_shelters', group: 'Welfare', name: 'Homeless Shelters', idealPro: [ 'prog','ego'], axis: 'wel_house',\r\n        description: 'Homeless Subjects are provided shelter purchased by the government.'},\r\n    'housing_subsidy':{\r\n        key: 'housing_subsidy', group: 'Welfare', name: 'Housing Subsidy', idealPro: [ 'trad','state'], axis: 'wel_house',\r\n        description: 'Homeless Subjects are provided money by the government to purchase shelter.'},\r\n    'state_apartments':{\r\n        key: 'state_apartments', group: 'Welfare', name: 'State Apartments', idealPro: [ 'prog','state'], axis: 'wel_house'},\r\n    'stay_healthy':{\r\n        key: 'stay_healthy', group: 'Welfare', name: 'Stay Healthy', idealPro: [ 'trad','ego'], axis: 'wel_health',\r\n        description: 'Sick Subjects must pay for their own medical care.'},\r\n    'clinics':{\r\n        key: 'clinics', group: 'Welfare', name: 'Charity Clinics', idealPro: [ 'prog','ego'], axis: 'wel_health',\r\n        description: 'Sick Subjects are provided medicine purchased by the government.'},\r\n    'medical_aid':{\r\n        key: 'medical_aid', group: 'Welfare', name: 'Medical Aid', idealPro: [ 'trad','state'], axis: 'wel_health',\r\n        description: 'Sick Subjects are provided money by the government to pay for medical care.'},\r\n    'univ_health':{\r\n        key: 'univ_health', group: 'Welfare', name: 'Universal Healthcare', idealPro: [ 'prog','state'], axis: 'wel_health',\r\n        description: 'All Subjects are provided medical care by the government.'},\r\n    'hands_off':{\r\n        key: 'hands_off', group: 'Economics', name: 'Laissez-faire', idealPro: ['ego', 'trad'], axis: 'econ_sub',\r\n        description: 'No industries receive subsidies.'},\r\n    'grain_sub':{\r\n        key: 'grain_sub', group: 'Economics', name: 'Grain Subsidy', idealPro: ['state'], axis: 'econ_sub',\r\n        description: 'Farmers are provided money.'},\r\n    'arts':{\r\n        key: 'arts', group: 'Economics', name: 'Arts Patronage', idealPro: [ 'prog', 'ego' ], axis: 'econ_sub'},\r\n    'theocracy':{\r\n        key: 'theocracy', group: 'Crime', name: 'Illegal Narratives', idealPro: [ 'trad', 'state' ], axis: 'crime_theo',\r\n        description: \"It is illegal for subjects to speak about other universal narratives.\"},\r\n    'secularism':{\r\n        key: 'secularism', group: 'Culture', name: 'Secularism', idealPro: ['ego'], axis: 'cul_theo',\r\n        description: \"The government does not endorse a particular universal narrative.\"},\r\n    'atheism':{\r\n        key: 'atheism', group: 'Culture', name: 'State Nihilism', axis: 'cul_theo'},\r\n    'mythology':{\r\n        key: 'mythology', group: 'Culture', name: 'State Mythology 🐲', idealPro: [ 'trad' ], axis: 'cul_theo'},\r\n    'futurism':{\r\n        key: 'futurism', group: 'Culture', name: 'State Futurism 🚀', idealPro: [ 'prog' ], axis: 'cul_theo'},\r\n    'drama':{\r\n        key: 'drama', group: 'Culture', name: 'State Drama 🎵', idealPro: [ 'state' ], axis: 'cul_theo'},\r\n    // '':{key: // , group: '', name: 'Religious Schooling', 'state', idealPro: [ 'trad', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'University Grants', 'ego', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'College For All', 'state', idealPro: [ 'prog', axis: 'cul_ed'},\r\n    'poll_tax':{\r\n        key: 'poll_tax', group: 'Taxation', name: 'Poll Tax', idealPro: [ 'trad', 'state' ], axis: 'tax_basic',\r\n        description: 'Subjects must pay a flat tax every month.'},\r\n    'sales_tax':{\r\n        key: 'sales_tax', group: 'Taxation', name: 'Sales Tax', idealPro: [ 'ego' ], axis: 'tax_basic',\r\n        description: 'Subjects must pay a percentage tax for every transaction.'},\r\n    'wealth_tax':{\r\n        key: 'wealth_tax', group: 'Taxation', name: 'Wealth Tax', idealPro: [ 'prog', 'state' ], axis: 'tax_basic',\r\n        description: 'Rich subjects must pay a percentage tax on their excess cash.'},\r\n    'vice_tax':{\r\n        key: 'vice_tax', group: 'Taxation', name: 'Vice Tax', idealPro: [ 'trad'], axis: 'tax_second',\r\n        description: 'Entertainment goods have a flat tax.'},\r\n    'prop_tax':{\r\n        key: 'prop_tax', group: 'Taxation', name: 'Property Tax', idealPro: [ 'prog'], axis: 'tax_second',\r\n        description: 'Subjects must pay a tax on housing.'},\r\n    'death_tax':{\r\n        key: 'death_tax', group: 'Taxation', name: 'Death Tax', idealPro: [ 'prog'], axis: 'tax_second',\r\n        description: 'Dead subjects pay a portion of their cash to the government.'},\r\n}\r\n\r\nexport type LawGroupToLaws = {\r\n    [key in LawGroup]: ILaw[]\r\n};\r\nexport class Government{\r\n    public get laws(): ILaw[] {\r\n        return Object.values(this.lawTree);\r\n    }\r\n    public set laws(val: ILaw[]) {\r\n        val.forEach((v) => {\r\n            this.lawTree[v.axis] = v;\r\n        });\r\n    }\r\n    public getLawsByGroup(): LawGroupToLaws {\r\n        return this.laws.reduce((d, x) => {\r\n            d[x.group].push(x);\r\n            return d;\r\n        }, {\r\n            Taxation: [] as ILaw[],\r\n            Welfare: [] as ILaw[],\r\n            Economics: [] as ILaw[],\r\n            Crime: [] as ILaw[],\r\n            Culture: [] as ILaw[]\r\n        });\r\n    }\r\n    public lawTree: {[key in LawAxis]: ILaw} = {} as {[key in LawAxis]: ILaw};\r\n}","import { BuildingTypes } from \"./simulation/Geography\";\r\nimport { RubricKeys } from \"./simulation/Player\";\r\nimport { IThreshold, TraitGood } from \"./World\";\r\n\r\nexport type PlayerEmptyHexAction = 'build';\r\nexport type PlayerHexAction = 'beam'|'upgrade';\r\nexport type PlayerBeanAction = 'scan'|'brainwash_ideal'|'brainimplant_secondary'|'brainwash_secondary'|'abduct'|'vaporize'|'siphon'|'empower'|'gift';\r\nexport type PlayerGovernmentAction = '';\r\nexport type PlayerAction = PlayerHexAction|PlayerBeanAction;\r\n\r\nexport interface ResourceTriad{\r\n    energy?: number;\r\n    bots?: number;\r\n    psi?: number;\r\n}\r\nexport function triadToString(cost: ResourceTriad, sign: '+'|''|'-'){\r\n    const costs = [];\r\n    if (cost.energy){\r\n        costs.push(sign+cost.energy+' Energy');\r\n    }\r\n    if (cost.bots){\r\n        costs.push(sign+cost.bots+' Bots');\r\n    }\r\n    if (cost.psi){\r\n        costs.push(sign+cost.psi+' Psi');\r\n    }\r\n    return costs.join(' ');\r\n}\r\nexport interface SecondaryResources{\r\n    research?: number;\r\n    leadership?: number;\r\n}\r\nexport interface IDifficulty{\r\n    cost: {\r\n        emptyHex: {[key in PlayerEmptyHexAction]: {[key in BuildingTypes]: ResourceTriad}},\r\n        hex: {[key in PlayerHexAction]: ResourceTriad} \r\n        bean: {[key in PlayerBeanAction]: ResourceTriad}\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {[key in TraitGood]: IThreshold}\r\n    },\r\n    report_card_progression: RubricKeys[]\r\n}\r\nexport const DefaultDifficulty: IDifficulty = {\r\n    cost: {\r\n        emptyHex: {\r\n            build: {\r\n                house: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                farm: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                theater: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                hospital: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                church: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                courthouse: {\r\n                    energy: 999,\r\n                    bots: 999\r\n                },\r\n                park: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                nature: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                }\r\n            }\r\n        },\r\n        hex: {\r\n            beam: {\r\n                energy: 3\r\n            },\r\n            upgrade: {\r\n                energy: 1,\r\n                bots: 4,\r\n            }\r\n        },\r\n        bean: {\r\n            scan: {\r\n                energy: 1\r\n            },\r\n            ['brainwash_ideal']: { psi: 4},\r\n            ['brainimplant_secondary']: { psi: 3},\r\n            ['brainwash_secondary']: {psi: 2},\r\n            abduct: {\r\n                bots: 3,\r\n                psi: 1\r\n            },\r\n            gift: {},\r\n            empower: {},\r\n            vaporize: {\r\n                energy: 2,\r\n                bots: 4\r\n            },\r\n            siphon: {},\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {\r\n            'food': {sufficient: 1, abundant: 3},\r\n            'shelter': {sufficient: 1, abundant: 3},\r\n            'medicine': {sufficient: 1, abundant: 3},\r\n            'fun': {sufficient: 1, abundant: 3},\r\n        }\r\n    },\r\n    report_card_progression: []\r\n};","import { ChangePubSub } from \"../events/Events\";\r\nimport { DefaultDifficulty, IDifficulty, ResourceTriad } from \"../Game\";\r\nimport { World } from \"../World\";\r\nimport { Number_Starting_City_Pop } from \"../WorldGen\";\r\nimport { IBean } from \"./Agent\";\r\nimport { IDate } from \"./Time\";\r\n\r\n\r\nexport interface IPlayerData{\r\n    scanned_bean: {[beanKey: number]: boolean};\r\n    abductedBeans: IBean[];\r\n    energy: IResource;\r\n    psi: IResource;\r\n    bots: IResource;\r\n    workingReportCard: IReportCard;\r\n    techProgress: TechProgress;\r\n    currentlyResearchingTech: Tech|undefined;\r\n}\r\n\r\nexport interface IResource{\r\n    amount: number;\r\n    income: number;\r\n    change: ChangePubSub;\r\n}\r\n\r\nexport type GoalKey = 'found_utopia'|'build_house_n_farm'|'beam_3'|'scan'|'set_policy'|'brainwash'|'c+_grade';\r\nexport interface IGoal{\r\n    key: GoalKey;\r\n    text: string;\r\n    tooltip?: string;\r\n    reward?: ResourceTriad,\r\n    check: (world: World) => boolean\r\n}\r\nexport interface IGoalProgress {\r\n    done: boolean,\r\n    step: number\r\n}\r\nexport interface IProgressable{\r\n    goalProgress: {[key: string]: IGoalProgress},\r\n    goals: Array<GoalKey>\r\n}\r\nexport const Goals: {[key in GoalKey]: IGoal} = {\r\n    found_utopia: {\r\n        key: 'found_utopia', text: 'Found your Utopia',\r\n       check: (world) => world.party.name != 'Goodplace'\r\n    },\r\n    build_house_n_farm: {\r\n        key: 'build_house_n_farm', text: 'Build a house and farm',\r\n        check: (world) => {\r\n            return world.cities[0].byType.house.all.length > 0 &&\r\n            world.cities[0].byType.farm.all.length > 0;\r\n        },\r\n        reward: {\r\n            energy: 3, bots: 3\r\n        }\r\n    }, \r\n    beam_3: {\r\n        key: 'beam_3', text: 'Beam in 3 new beings', \r\n        check: (world) => {\r\n            return world.beans.filter(b => !b.bornInPetri).length >= (3 + Number_Starting_City_Pop)\r\n        }\r\n    }, \r\n    scan: {\r\n        key: 'scan', text: 'Scan a Subject',\r\n        check: (world) => Object.keys(world.alien.scanned_bean).length > 0\r\n    }, \r\n    set_policy: {\r\n        key: 'set_policy', text: 'Set a Gov Policy',\r\n        check: (world) => false\r\n    }, \r\n    brainwash: {\r\n        key: 'brainwash', text: 'Brainwash a Subject',\r\n        check: (world) => false\r\n    }, \r\n    'c+_grade': {\r\n        key: 'c+_grade', text: 'Receive a C+ Grade',\r\n        check: (world) => false\r\n    } \r\n};\r\n\r\nexport type Grade = 'F'|'D'|'C'|'B'|'A';\r\nexport type RubricKeys = 'Happiness'|'Prosperity'|'Stability'|'Dogma';\r\nexport type IReportCard = {[key in RubricKeys]: Grade}\r\nexport type GradingFunc = (world: World) => IReportCard;\r\nexport interface ICurriculum {\r\n    GradeWorld: GradingFunc,\r\n    RubricDescription: {[key in RubricKeys]: string} \r\n}\r\nexport const Curriculums: {[difficulty: string]: ICurriculum} = {\r\n    Default: {\r\n        GradeWorld: (world: World) => {return{\r\n            Happiness: BooleanAverageGrader(world.beans, (o) => o.lastHappiness >- .2),\r\n            Prosperity: BooleanAverageGrader(world.beans, (o) => o.food != 'hungry'),\r\n            Stability: BooleanAverageGrader(world.beans, (o) => o.sanity == 'sane'),\r\n            Dogma: GradeUpToNumber((world.alien.speechcrimes[world.date.year] || 0), 10, 10),\r\n        }},\r\n        RubricDescription: {\r\n            Happiness: 'Subjects are at least 20% happy',\r\n            Prosperity: 'Subjects are not hungry',\r\n            Stability: 'Subjects are all sane',\r\n            Dogma: 'Up to 10 Speechcrimes'\r\n        }\r\n    }\r\n}\r\n/**\r\n * \r\n * @param number number of bad events\r\n * @param allowance number of allowed events\r\n * @param maximum range of \"overflow\" events\r\n */\r\nfunction GradeUpToNumber(number: number, allowance: number, maximum: number): Grade{\r\n    const normalized = 1 - Math.min(1, Math.max(0, number - allowance) / maximum);\r\n    return NormalizedScoreToGrade(normalized);\r\n}\r\nfunction BooleanAverageGrader<T>(array: T[], grade: (o: T) => boolean): Grade{\r\n    if (array.length < 1) return 'F';\r\n    return NormalizedScoreToGrade(array.filter(grade).length / array.length);\r\n}\r\nfunction NormalizedScoreToGrade(normNumber: number): Grade{\r\n    if (normNumber < .58) return 'F';\r\n    if (normNumber < .68) return 'D';\r\n    if (normNumber < .78) return 'C';\r\n    if (normNumber < .88) return 'B';\r\n    return 'A';\r\n}\r\nconst GradeWeights: {[key in Grade]: number} ={\r\n    A: 5,\r\n    B: 4,\r\n    C: 3,\r\n    D: 2,\r\n    F: 1\r\n}\r\nexport function GetAverage(reportCard: IReportCard): Grade{\r\n    return NormalizedScoreToGrade((GradeWeights[reportCard.Happiness] + \r\n        GradeWeights[reportCard.Prosperity] + \r\n        GradeWeights[reportCard.Stability] +\r\n        GradeWeights[reportCard.Dogma] \r\n    ) / 20);\r\n}\r\n\r\nexport type Tech = 'halve_sanity'|'fast_resources'|'trauma_nanobots'|'fast_leadership';\r\nexport interface ITechInfo{\r\n    tech: Tech,\r\n    /**\r\n     * number of tech points required to complete research\r\n     */\r\n    techPoints: number,\r\n    name: string,\r\n    description: string\r\n}\r\nexport const TechData: {[key in Tech]: ITechInfo} = {\r\n    'halve_sanity': {\r\n        tech: 'halve_sanity',\r\n        name: 'Surgical Psychops',\r\n        techPoints: 30,\r\n        description: 'Brainwashing causes -1 🧠 sanity damage'\r\n    },\r\n    'fast_resources': {\r\n        tech: 'fast_resources',\r\n        name: '0 Dimensional Supersiphons',\r\n        techPoints: 30,\r\n        description: 'Faster ⚡️🧠🤖 accumulation'\r\n    },\r\n    'trauma_nanobots': {\r\n        tech: 'trauma_nanobots',\r\n        name: 'Trauma Nanobots',\r\n        techPoints: 30,\r\n        description: 'Spend 🤖 to stop Subject from dying'\r\n    },\r\n    'fast_leadership': {\r\n        tech: 'fast_leadership',\r\n        name: 'Advanced Marketing',\r\n        techPoints: 30,\r\n        description: 'Faster 🗳️ Leadership accumulation'\r\n    }\r\n}\r\nexport interface IPlayerTechProgress{\r\n    /**\r\n     * number of research points\r\n     */\r\n    researchPoints: number\r\n}\r\nexport type TechProgress = {[key: string]: IPlayerTechProgress};\r\n\r\nexport class Player implements IPlayerData, IProgressable{\r\n    public scanned_bean: {[beanKey: number]: boolean} = {};\r\n    public speechcrimes: {[year: number]: number} = {};\r\n    public abductedBeans: IBean[] = [];\r\n    public energy = { amount: 29, income: 2/30, change: new ChangePubSub()};\r\n    public psi = { amount: 10, income: 2/30, change: new ChangePubSub()};\r\n    public bots = { amount: 10, income: 2/30, change: new ChangePubSub()};\r\n    public next_grade: IDate = { year: 1, season: 3, day: 1, hour: 0 };\r\n    public difficulty: IDifficulty = DefaultDifficulty;\r\n    public goals: GoalKey[] = ['found_utopia', 'build_house_n_farm',  'beam_3', 'scan', 'brainwash', 'set_policy', 'c+_grade'];\r\n    public goalProgress: {[key: string]: IGoalProgress} = {};\r\n    public pastReportCards: IReportCard[] = [];\r\n    public workingReportCard: IReportCard = {\r\n        Happiness: 'D',\r\n        Prosperity: 'D',\r\n        Stability: 'D',\r\n        Dogma: 'D',\r\n    };\r\n    public techProgress: TechProgress = {};\r\n    public currentlyResearchingTech: Tech|undefined;\r\n\r\n    public canAfford(cost: ResourceTriad): boolean{\r\n        return (cost.bots == undefined || this.bots.amount >= cost.bots) &&\r\n        (cost.energy == undefined || this.energy.amount >= cost.energy) && \r\n        (cost.psi == undefined || this.psi.amount >= cost.psi);\r\n    }\r\n\r\n    public hasResearched(tech: Tech){\r\n        return this.techProgress[tech] != null && this.techProgress[tech].researchPoints >= TechData[tech].techPoints;\r\n    }\r\n\r\n    public purchase(cost: ResourceTriad){\r\n        if (cost.bots){\r\n            this.bots.amount -= cost.bots;\r\n            this.bots.change.publish({change:-cost.bots});\r\n        }\r\n        if (cost.energy){\r\n            this.energy.amount -= cost.energy;\r\n            this.energy.change.publish({change:-cost.energy});\r\n        }\r\n        if (cost.psi){\r\n            this.psi.amount -= cost.psi;\r\n            this.psi.change.publish({change:-cost.psi});\r\n        }\r\n    }\r\n\r\n    public tryPurchase(cost: ResourceTriad): boolean{\r\n        if (this.canAfford(cost)){\r\n            this.purchase(cost);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public reward(reward: ResourceTriad){\r\n        if (reward.bots){\r\n            this.bots.amount += reward.bots;\r\n            this.bots.change.publish({change: reward.bots});\r\n        }\r\n        if (reward.energy){\r\n            this.energy.amount += reward.energy;\r\n            this.energy.change.publish({change: reward.energy});\r\n        }\r\n        if (reward.psi){\r\n            this.psi.amount += reward.psi;\r\n            this.psi.change.publish({change: reward.psi});\r\n        }\r\n\r\n    }\r\n\r\n    public checkGoals(world: World){\r\n        for (let i = 0; i < this.goals.length; i++) {\r\n            const goal = this.goals[i];\r\n            if (this.goalProgress[goal] == null){\r\n                this.goalProgress[goal] = {done: false, step: 0};\r\n            }\r\n            if (!this.goalProgress[goal].done) {\r\n                const done = Goals[goal].check(world);\r\n                const reward = Goals[goal].reward;\r\n                this.goalProgress[goal].done = done;\r\n                if (done && reward != null){\r\n                    this.reward(reward);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public checkReportCard(world: World) {\r\n        this.workingReportCard = Curriculums.Default.GradeWorld(world);\r\n    }\r\n}","\r\nexport function shuffle(array: Array<any>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function groupBy<T>(list: T[], keyGetter: (val: T) => string|number): Map<string|number, T[]> {\r\n    const map = new Map<string|number, T[]>();\r\n    list.forEach((item) => {\r\n         const key = keyGetter(item);\r\n         const collection = map.get(key);\r\n         if (!collection) {\r\n             map.set(key, [item]);\r\n         } else {\r\n             collection.push(item);\r\n         }\r\n    });\r\n    return map;\r\n}","import { IBeanContainer, Tile, Trait, TraitEthno, TraitJob } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { Economy } from \"./Economy\";\r\nimport { Government } from \"./Government\";\r\nimport { GenerateBean, GetRandom } from \"../WorldGen\";\r\nimport { ICityPartyHQ, Party } from \"./Politics\";\r\nimport { Geography, HexPoint, IBuilding, JobToBuilding } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { shuffle } from \"./Utils\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { IEventBus } from \"../events/Events\";\r\n\r\n\r\nexport function reportIdeals(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: Bean[], defWin: Trait, beanPropGet: (bean: Bean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}\r\n\r\nexport class UFO{\r\n    constructor(public key: number, public point: HexPoint, public action: string){}\r\n}\r\n\r\n\r\nexport class City extends Geography implements Tile, IBeanContainer {\r\n    public name: string = '';\r\n    public url: string = '';\r\n    public type: string = '';\r\n    public key: number = 0;\r\n    public get beans(): Bean[] {\r\n        return this.historicalBeans.filter((x) => x.alive);\r\n    }\r\n    public set beans(beans: Bean[]){\r\n        throw \"can't set city beans\";\r\n    }\r\n    public historicalBeans: Bean[] = [];\r\n    public ufos: UFO[] = [];\r\n    public houses: any[] = [];\r\n    public partyHQ?: ICityPartyHQ;\r\n    public yearsPartyDonations: number = 0;\r\n\r\n    /// computed properties\r\n    public majorityEthnicity: TraitEthno = 'circle';\r\n    public costOfLiving: number = 1;\r\n\r\n    public economy?: Economy;\r\n    public law?: Government;\r\n    public environment?: IDate;\r\n    public eventBus?: IEventBus;\r\n\r\n    tryGetJob(bean: Bean, job: TraitJob): boolean{\r\n        if(job === 'jobless') return false;\r\n        const buildingType = JobToBuilding[job];\r\n        const all = this.byType[buildingType].all;\r\n        \r\n        for (let i = 0; i < all.length; i++) {\r\n            const building = all[i];\r\n            const slots = building.openSlots();\r\n            if (slots.length > 0){\r\n                const slot = slots.shift() as BuildingJobSlot;\r\n                building.job_slots[slot] = bean.key;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    unsetJob(bean: Bean){\r\n        if (bean.job === 'jobless') return;\r\n        const buildingType = JobToBuilding[bean.job];\r\n        const all = this.byType[buildingType].all;\r\n        for (let i = 0; i < all.length; i++) {\r\n            const building = all[i];\r\n            if (building.tryFreeBean(bean.key))\r\n                break;\r\n        }\r\n    }\r\n\r\n    getRandomCitizen(): Bean|null{\r\n        const shuffled = shuffle(this.beans);\r\n        if (shuffled.length > 0) {\r\n            return shuffled[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    onCitizenDie(deadBean: Bean){\r\n        if (deadBean.cash > 0){\r\n            const lucky = this.getRandomCitizen();\r\n            if (lucky) {\r\n                lucky.cash = lucky.cash + deadBean.cash;\r\n                deadBean.cash = 0;\r\n            }\r\n        }\r\n        this.unsetJob(deadBean);\r\n    }\r\n    breedBean(parent: Bean) {\r\n        const job: TraitJob = Math.random() <= .5 ? parent.job : GetRandom(['doc', 'farmer', 'builder', 'jobless']);\r\n        const bean = GenerateBean(this, this.historicalBeans.length, undefined, job);\r\n        bean.ethnicity = parent.ethnicity;\r\n        bean.name = bean.name.split(' ')[0] + ' ' + parent.name.split(' ')[1];\r\n        bean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n        bean.bornInPetri = true;\r\n        if (this.environment)\r\n            bean.dob = {year: this.environment?.year, season: this.environment?.season, day: this.environment?.day, hour: this.environment?.hour};\r\n        this.historicalBeans.push(bean);\r\n    }\r\n    getTaxesAndDonations(party: Party, economy: Economy){\r\n    }\r\n    calculate(economy: Economy, law: Government) {\r\n        this.costOfLiving = economy.getCostOfLiving();\r\n        const c = this.beans.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\r\n            switch(bean.ethnicity){\r\n                case 'circle': count.circle++;break;\r\n                case 'square': count.square++;break;\r\n                case 'triangle': count.triangle++;break;\r\n            }\r\n            return count;\r\n        }, {circle: 0, square: 0, triangle: 0});\r\n        if (c.circle > c.square && c.circle > c.triangle){\r\n            this.majorityEthnicity = 'circle';\r\n        } else if (c.square > c.circle && c.square > c.triangle){\r\n            this.majorityEthnicity = 'square';\r\n        } else {\r\n            this.majorityEthnicity = 'triangle';\r\n        }\r\n    }\r\n    getNearestNeighbors(source: Bean): Bean[] {\r\n        return this.beans.filter((b) => {\r\n            if (b.key == source.key) return false;\r\n\r\n            const p = this.movers.bean[b.key];\r\n            const q = this.movers.bean[source.key];\r\n            const squared = Math.pow(p.x - q.x, 2)+Math.pow(p.y - q.y, 2);\r\n\r\n            return squared < 1600 && squared > 600;\r\n        });\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick: () => void;\r\n    closeButtonText?: string;\r\n    hideCloseButton?: boolean\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (this.props.hideCloseButton)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n        return null;\r\n        }\r\n        return (\r\n        <div className=\"modal\">\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: Bean[], \r\n    need: (b: Bean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { PrimaryBeliefData } from \"../simulation/Beliefs\";\r\n\r\ninterface OverviewPanelP{\r\n    city?: City,\r\n    beans: Bean[],\r\n    utopia: Party,\r\n    clearCity: () => void;\r\n}\r\n\r\nexport class OverviewPanel extends React.Component<OverviewPanelP> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let header = null;\r\n        if (this.props.city){\r\n            header = <div><div><b>{this.props.city.name}</b> {PrimaryBeliefData[this.props.utopia.community].icon} {PrimaryBeliefData[this.props.utopia.ideals].icon}\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n            </div>\r\n            <div> {PrimaryBeliefData[this.props.utopia.community].adj} {PrimaryBeliefData[this.props.utopia.ideals].adj} Utopia</div> \r\n            </div>;\r\n        }\r\n        const avg_happy = this.props.beans.reduce((sum, x) => sum+x.lastHappiness, 0) / (this.props.beans.length || 1);\r\n        const avg_cash = this.props.beans.reduce((sum, x) => sum+x.cash, 0) / (this.props.beans.length || 1);\r\n        const avg_approval = this.props.beans.reduce((sum, x) => sum+x.lastPartySentiment, 0) / (this.props.beans.length || 1);\r\n        return (                \r\n        <div>\r\n            {header}\r\n            <div className=\"header\"><b>Demographics</b></div>\r\n            <div>\r\n                <b>Population</b>&nbsp;\r\n                <span>{this.props.beans.length}</span>\r\n            </div>\r\n            <AxisReadout report={reportEthno(this.props.beans)}>Ethnicity</AxisReadout>\r\n            <div className=\"header\"><b>Situation</b></div>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\">Housing</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n            <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n            <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n            <div className=\"header\"><b>Electorate</b></div>\r\n            {/* <AxisReadout report={reportIdeals(this.props.beans)}>Sentiment</AxisReadout> */}\r\n            <AxisReadout report={reportCommunity(this.props.beans)}>Community</AxisReadout>\r\n            <AxisReadout report={reportIdeals(this.props.beans)}>Ideals</AxisReadout>\r\n            <div>\r\n                <b>Approval</b>&nbsp;\r\n                <span>{avg_approval.toFixed(0)}%</span>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{report: {avg: number, winner: Trait}}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent+'%'\r\n        }\r\n        return (                \r\n        <div>\r\n            <b>\r\n                { this.props.children }\r\n            </b>&nbsp;&nbsp;\r\n            <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner\" style={style}>\r\n                    {percent}%\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { origin_point, Point, transformPoint } from \"../simulation/Geography\";\r\nimport { GoodIcon } from \"../World\";\r\n\r\ninterface AnimatedBeanP {\r\n  bean: Bean;\r\n  selected?: boolean;\r\n  sitStill?: boolean;\r\n  onClick: () => void;\r\n  static?: boolean;\r\n}\r\n\r\ninterface AnimatedBeanS{\r\n  paused: boolean,\r\n  point: Point,\r\n  spin: boolean;\r\n  face: string;\r\n  good?: string;\r\n  speech?: string;\r\n}\r\n\r\nfunction BeanIsBuying(bean: Bean){\r\n  return bean.state.data.act == 'buy' && bean.state.data.good != 'shelter';\r\n}\r\n\r\nexport class AnimatedBean extends React.Component<AnimatedBeanP, AnimatedBeanS> {\r\n    constructor(props: AnimatedBeanP) {\r\n      super(props);\r\n      this.delaySeedSec = (Math.random() * 60) + this.props.bean.key;\r\n      this.state = {\r\n        paused: false,\r\n        point: props.static ? origin_point : props.bean.city ? props.bean.city.movers.bean[props.bean.key] : {x: 0, y: 0},\r\n        spin: false,\r\n        face: props.bean.getFace(),\r\n      };\r\n      props.bean.onAct.subscribe(this.animate);\r\n    }\r\n    animate = (deltaMS: number) => {\r\n      this.setState({\r\n        point: this.props.bean.city ? this.props.bean.city.movers.bean[this.props.bean.key] : {x: 0, y: 0},\r\n        spin: this.props.bean.state.data.act == 'work',\r\n        face: this.props.bean.getFace(),\r\n        good: BeanIsBuying(this.props.bean) ? GoodIcon[this.props.bean.state.data.good || 'food'] : undefined,\r\n        speech: this.props.bean.getSpeech()\r\n      })\r\n    }\r\n    delaySeedSec: number;\r\n    getPurchase(){\r\n      if (this.state.good){\r\n        return <span className=\"purchase\">\r\n          <span className=\"money\">💸</span>\r\n          <span className=\"purchase-good\">{this.state.good}</span>\r\n        </span>\r\n      }\r\n    }\r\n    getSpeech(){\r\n      if (this.state.speech){\r\n        return <span className=\"speech\">\r\n          <span className=\"\">{this.state.speech}</span>\r\n        </span>\r\n      }\r\n    }\r\n    render() {\r\n      let classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n      classes += this.state.paused || !this.props.bean.alive ? ' paused' : '';\r\n      if (this.props.sitStill){\r\n\r\n      } else {\r\n        classes += ' bean-walker';\r\n        if (this.state.spin)\r\n          classes += ' spin';\r\n        if (this.props.selected)\r\n          classes += ' selected';\r\n        if (this.props.bean.state.data.act != 'travel')\r\n          classes += ' paused';\r\n      }\r\n\r\n      let style = {\r\n        ...transformPoint(this.state.point),\r\n        animationDelay: '-'+this.delaySeedSec+'s'\r\n      };\r\n      style.animationDelay = '';\r\n      let title = '';\r\n      return (\r\n        <span className={classes+\" bean interactable\"}\r\n          style={style} title={title}\r\n          onClick={(e) => {e.stopPropagation(); this.props.onClick(); }}\r\n        >\r\n          {this.state.face} {this.getPurchase()} {this.getSpeech()}\r\n        </span>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { City, UFO } from \"../simulation/City\";\r\nimport { hex_to_pixel, origin_point, transformPoint } from \"../simulation/Geography\";\r\n\r\n\r\nexport class AnimatedUFO extends React.Component<{\r\n    ufo: UFO,\r\n    city: City\r\n}, {\r\n    showBeam: boolean\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            showBeam: false\r\n        };\r\n        setTimeout(() => {\r\n            this.setState({showBeam: true});\r\n            setTimeout(() => {\r\n                this.setState({showBeam: false})\r\n            }, 1800);\r\n        }, 1800);\r\n    }\r\n    render(){\r\n        let style = {\r\n          ...transformPoint(hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, this.props.ufo.point))\r\n        };\r\n        return <span style={style} className=\"ufo\">\r\n            🛸\r\n            {this.state.showBeam ? <span className=\"beam\"></span> : null}\r\n            \r\n        </span>\r\n    }\r\n}","import React, { RefObject } from \"react\";\r\n\r\nexport class Particles extends React.Component<{\r\n    particleCount: number,\r\n    className?: string,\r\n    delay: number\r\n}, {\r\n    active: boolean,\r\n    parts: RefObject<HTMLDivElement>[]\r\n}> {\r\n    private animations: Array<Animation|null> = [];\r\n    private finishedAnimationCount: number = 0;\r\n    constructor(props: any){\r\n        super(props);\r\n        let parts: RefObject<HTMLDivElement>[] = []\r\n        for (let i = 0; i < this.props.particleCount; i++) {\r\n            parts.push(React.createRef());\r\n        }\r\n        this.state = {\r\n            active: true,\r\n            parts: parts\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.animations = this.state.parts.map((p) => {\r\n            if (p.current){\r\n                const x = Math.floor(Math.random() * 400) - 200;\r\n                const y = Math.floor(Math.random() * 400) - 400;\r\n                return p.current.animate([\r\n                    {\r\n                      transform: `translate(0px, 0px)`,\r\n                      opacity: 1\r\n                    },\r\n                    {\r\n                      transform: `translate(${x}px, ${y}px)`,\r\n                      opacity: 0\r\n                    }    \r\n                ], {\r\n                    duration: 1500 + Math.random() * 1000,\r\n                    easing: 'ease-in-out',\r\n                    delay: this.props.delay + (Math.random() * 100)\r\n                });\r\n            }\r\n            return null;\r\n        });\r\n        this.animations.forEach((x) => {\r\n            if (x)\r\n            x.onfinish = () => {\r\n                this.finishedAnimationCount++;\r\n                if (this.finishedAnimationCount >= this.props.particleCount){\r\n\r\n                    this.setState({active: false, parts: []});\r\n                }\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return <div className={(this.props.className || '') + \" particle-parent\"}>\r\n            {\r\n                this.state.active ? this.state.parts.map((x, i) => {\r\n                    return <div key={i} className=\"particle\" ref={x}></div>;\r\n                }) : null\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport class DelayedParticles extends React.Component<{\r\n    particleCount: number,\r\n    className?: string,\r\n    delay: number\r\n}, {\r\n    active: boolean\r\n}> {\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        window.setTimeout(() => {\r\n            this.setState({active: true});\r\n        }, this.props.delay);\r\n    }\r\n    render(){\r\n        if (this.state.active){\r\n            return <Particles delay={0} className={this.props.className} particleCount={this.props.particleCount}></Particles>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport { EventTrigger, IEvent } from \"../events/Events\";\r\nimport { Bean, BeanDeathCause } from \"../simulation/Bean\";\r\nimport { transformPoint } from \"../simulation/Geography\";\r\nimport { Particles } from \"../widgets/particles\";\r\nimport './spotlight.css';\r\n\r\ninterface SpotlightState{\r\n  name: string;\r\n  beanClasses: string;\r\n  faceOV?: string,\r\n  particles: {className:string,delay:number}[]\r\n}\r\ninterface SpotlightAnimationState extends SpotlightState{\r\n  start: number;\r\n}\r\nconst spotlightAnimations: {[key:string]:SpotlightAnimationState[]} = {\r\n  'death-exposure': [\r\n    {\r\n      start: 0,\r\n      name: 'death-exposure', faceOV: '🥶',\r\n      beanClasses: 'drop-tool turn-blue',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-exposure',faceOV: '💀',\r\n      beanClasses: 'drop-tool turn-blue',      \r\n      particles: [] \r\n    }\r\n  ],\r\n  'death-vaporization': [\r\n    {\r\n      start: 0,\r\n      name: 'death-vaporization',\r\n      beanClasses: '',\r\n      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-vaporization',\r\n      beanClasses: 'drop-tool',\r\n      particles: []\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-vaporization', \r\n      beanClasses: 'drop-tool', faceOV: ' ',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 3000,\r\n      name: 'death-vaporization', \r\n      beanClasses: 'drop-tool hide-body', faceOV: ' ',\r\n      particles: [\r\n        {className: 'head', delay: 0},\r\n        {className: 'body', delay: 0}\r\n      ]\r\n    }\r\n  ],\r\n  'death-sickness': [\r\n    {\r\n      start: 0,\r\n      name: 'death-sickness', faceOV: '🤢',\r\n      beanClasses: '',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '🤮',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 1400,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '🤮',\r\n      particles: [\r\n        {className: 'head', delay: 0},\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '💀',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n  ],\r\n  'death-starvation': [\r\n    {\r\n      start: 0,\r\n      name: 'death-starvation', faceOV: '🥺',\r\n      beanClasses: '',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 500,\r\n      name: 'death-starvation', faceOV: '😖',\r\n      beanClasses: 'body-shrink',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-starvation', faceOV: '😫',\r\n      beanClasses: 'body-shrink drop-tool',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 3000,\r\n      name: 'death-starvation', faceOV: '💀',\r\n      beanClasses: 'body-shrink drop-tool',      \r\n      particles: []\r\n    }\r\n  ]\r\n}\r\nexport class AnimatedSpotlight extends React.Component<{\r\n    event: IEvent,\r\n    bean: Bean,\r\n}, SpotlightState>{\r\n    constructor(props: any){\r\n        super(props);\r\n        const name = `${this.props.event.trigger}-${this.getSubtype(this.props.event.message)}`;\r\n        this.state = spotlightAnimations[name][0];\r\n    }\r\n    private lastTickMS: DOMHighResTimeStamp = 0;\r\n    private currentTime: number = 0;\r\n    private tickHandle: number = 0;\r\n    componentDidMount(){\r\n      window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n        this.lastTickMS = time; //initialize tick time\r\n        this.tickHandle = window.requestAnimationFrame(this.tick);\r\n      });\r\n    }\r\n    componentWillUnmount(){\r\n      window.cancelAnimationFrame(this.tickHandle);\r\n    }\r\n    tick = (timeMS: DOMHighResTimeStamp) => {\r\n      // Compute the delta-time against the previous time\r\n      const deltaTimeMS = (timeMS - this.lastTickMS);\r\n    \r\n      // Update the previous time\r\n      this.lastTickMS = timeMS;\r\n      if (deltaTimeMS > 0){\r\n        this.currentTime += deltaTimeMS;\r\n        const name = `${this.props.event.trigger}-${this.getSubtype(this.props.event.message)}`;\r\n        this.setState(spotlightAnimations[name].reduce((lastValid: SpotlightAnimationState, anim: SpotlightAnimationState) => {\r\n          if (this.currentTime >= anim.start)\r\n            return anim;\r\n          else\r\n            return lastValid;\r\n        }, spotlightAnimations[name][0]));\r\n\r\n      }\r\n      this.tickHandle = window.requestAnimationFrame(this.tick);\r\n    }\r\n    getSubtype(msg: string): BeanDeathCause|undefined{\r\n        return msg.includes('vaporiz') ? 'vaporization' : msg.includes('exposure') ? 'exposure' : msg.includes('sickness') ? 'sickness' : 'starvation';\r\n    }\r\n    render(){\r\n        let t: React.CSSProperties|undefined;\r\n        if (this.props.event.point)\r\n          t = transformPoint(this.props.event?.point);\r\n\r\n        const classes = [this.props.bean.job, this.props.bean.ethnicity, this.state.name, this.state.beanClasses].join(' ');\r\n        return <div className=\"spotlight\" style={t}>\r\n        <div className=\"bean-parent\">\r\n          <span className={classes+\" bean\"}>\r\n            <span className=\"bean-face\">\r\n            {this.state.faceOV || this.props.bean.getFace()}\r\n            </span>\r\n          </span>\r\n          {\r\n              this.state.particles.map((x, i) => <Particles key={i}\r\n                className={this.state.name+' '+x.className} delay={x.delay} particleCount={30}\r\n              ></Particles>)\r\n          }\r\n        </div>\r\n        <div className=\"label\">\r\n          {this.props.event.message.replace('A subject', this.props.bean.name)}\r\n        </div>\r\n        {\r\n          (\r\n            this.props.event.trigger === 'death' ? \r\n            <div className=\"card-parent\">\r\n              <button className=\"card button\" disabled>\r\n                Prevent Death<br/>-4 🤖\r\n              </button>\r\n            </div> : null\r\n          )\r\n        }\r\n      </div>\r\n    }\r\n}","import { Tile } from \"../World\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport React from \"react\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, hex_to_pixel, MatterTypes, PolarPoint, polarToPoint, getBuildingTransform, transformPoint, HexPoint } from \"../simulation/Geography\";\r\nimport { PetriBuilding } from \"./Building\";\r\nimport { PI2 } from \"../WorldGen\";\r\nimport { City, UFO } from \"../simulation/City\";\r\nimport { AnimatedUFO } from \"./AnimatedUFO\";\r\nimport { IEvent } from \"../events/Events\";\r\nimport { Particles } from \"../widgets/particles\";\r\nimport { AnimatedSpotlight } from \"./AnimatedSpotlight\";\r\n\r\nconst supportedBuildings: BuildingTypes[] = ['farm', 'hospital', 'house', 'theater', 'courthouse', 'park', 'nature'];\r\ninterface WorldTilePs {\r\n    tile: Tile;\r\n    city: City;\r\n    activeBeanID: number|null;\r\n    costOfLiving: number;\r\n    spotlightEvent: IEvent|undefined;\r\n    onClick: () => void;\r\n    onBeanClick: (b: Bean) => void;\r\n    onHexClick: (hex: HexPoint) => void;\r\n  }\r\nexport class WorldTile extends React.Component<WorldTilePs> {\r\n    constructor(props: WorldTilePs) {\r\n      super(props);\r\n      this.state = {\r\n        tile: null,\r\n        city: null,\r\n        activeTileID: null,\r\n      }\r\n      const mtnRadius = 530;\r\n      const worldR = 550;\r\n      for (let i = 0; i < 360 / 5; i++) {\r\n        const az = i*5* Math.PI / 180;\r\n        const pt = polarToPoint({r: mtnRadius, az: az});\r\n        pt.x += worldR; pt.y += worldR;\r\n        this.mtn_transforms.push(transformPoint(pt));\r\n      }\r\n    }\r\n    mtn_transforms: {transform: string}[] = [];\r\n    renderBuildings(type: BuildingTypes){\r\n      return this.props.city.byType[type].all.map((b: IBuilding, i) => {\r\n        return (\r\n          <PetriBuilding city={this.props.city} building={b} key={type+i} ></PetriBuilding>\r\n        )\r\n      });\r\n    }\r\n    renderSpotlight(): JSX.Element|null{\r\n      if (this.props.spotlightEvent)\r\n      {\r\n        const bean = this.props.city.historicalBeans.find((x) => x.key === this.props.spotlightEvent?.beanKey);\r\n        if (this.props.spotlightEvent.point && bean){\r\n          return <AnimatedSpotlight event={this.props.spotlightEvent} bean={bean}></AnimatedSpotlight>\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n    render() {\r\n      const beans = this.props.city.beans.map((b: Bean) => {\r\n        return (\r\n          <AnimatedBean bean={b} key={b.key} selected={b.key === this.props.activeBeanID} onClick={() => this.props.onBeanClick(b)}></AnimatedBean>\r\n        )\r\n      });\r\n      const deaths = this.props.city.historicalBeans.filter((x) => !x.alive).map((b: Bean, i) => {\r\n        return (\r\n          <span key={i} className=\"dead\" style={{left: (i*10)+'px'}}>⚰️</span>\r\n        )\r\n      });\r\n      const ufos = this.props.city.ufos.map((u: UFO, i: number) => {\r\n        return <AnimatedUFO ufo={u} key={i} city={this.props.city}></AnimatedUFO>\r\n      });\r\n      const buildings = supportedBuildings.reduce((list, type) => {\r\n        return list.concat(this.renderBuildings(type));\r\n      }, [] as JSX.Element[]);\r\n      const regions = this.props.city.hexes.map((hex, i) => {\r\n        const xy = hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, hex);\r\n        return <div className=\"hex\" key={i} style={transformPoint(xy)} onClick={(e) => {this.props.onHexClick(hex); e.stopPropagation(); return false;}}>\r\n\r\n        </div>\r\n      });\r\n      const mtns = this.mtn_transforms.map((x, i) => {\r\n        return <span key={i} style={x} className=\"mtn\">⛰️</span>\r\n      });\r\n      return (\r\n        <div className=\"tile\" onClick={() => this.props.onClick()}>\r\n        <svg style={{width: '100%', height: '100%'}} className=\"petri-base\">\r\n          <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 1)\" />\r\n         </svg>\r\n          {regions}\r\n          {mtns}\r\n          {deaths}\r\n          {buildings}\r\n          {beans}\r\n          {ufos}\r\n          {/* <span className=\"tile-label\">{this.props.tile.name}</span> */}\r\n          <svg style={{width: '100%', height: '100%'}} className=\"petri-lid\">\r\n            <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 0.2)\" />\r\n           </svg>\r\n           {this.renderSpotlight()}\r\n        </div>\r\n      )\r\n    }\r\n  }","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { World, TraitJob } from \"../World\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { Listing } from \"../simulation/Economy\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport class EconomyReport extends React.Component<{world: World}, {paused: boolean}> {\r\n    constructor(props: {world: World}) {\r\n      super(props);\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    render() {\r\n      let beans = this.props.world.beans;\r\n      const food_median = median(beans.map(x => x.discrete_food));\r\n      const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n      const shelter_median = median(beans.map(x => x.discrete_stamina)).toFixed(1);\r\n      const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n      const wealth_avg = wealth_total / (beans.length || 1);\r\n      const wealth_median = median(beans.map(x => x.cash));\r\n      const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n      const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n      const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n      const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n      const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n      const jobs = beans.reduce((obj, b) => {\r\n        obj[b.job] = (obj[b.job] || 0)+1;\r\n        return obj;\r\n      }, {} as {[key in TraitJob]: number});\r\n      const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n      function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: Listing){\r\n        obj.supply += l.quantity;\r\n        obj.price += l.price;\r\n        obj.count++;\r\n        obj.avg = obj.price / obj.count;\r\n        return obj;\r\n      }\r\n      const food = this.props.world.economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const meds = this.props.world.economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const houses = this.props.world.economy.market.listings['shelter'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      return (\r\n        <div>\r\n          <div className=\"pad-4p\">\r\n            <h2>State of the Utopia</h2>\r\n          </div>\r\n          {/* <div className=\"pad-4p\">\r\n            <h3>Subject's Health</h3>\r\n          </div> */}\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🍞 Food Security</strong>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {food_median.toFixed(1)} 🍞</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {food.supply} 🍞 @ ${food.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledSeasonalDemand.food} 🍞\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div>\r\n              <strong>🩺 Healthcare</strong>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {health_median} 🩺</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {meds.supply} 🩺 @ ${meds.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledSeasonalDemand.medicine} 🩺\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🏡 Housing</strong> <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {shelter_median} 🏡</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {houses.supply} 🏡 @ ${houses.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledSeasonalDemand.shelter} 🏡\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"pad-4p\">\r\n            <h3>Economic Health</h3>\r\n          </div> */}\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>💰 Wealth</strong> <br/>\r\n              {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${this.props.world.economy.getCostOfLiving().toFixed(2)} <br/>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Total ${wealth_total.toFixed(2)}</td>\r\n                    <td className=\"text-center\">\r\n                      Median: ${wealth_median.toFixed(2)} \r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Avg: ${wealth_avg.toFixed(2)}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              Top {wealthy_percentage.toFixed(1)}% of subjects own {wealthy_ownership.toFixed(1)}% of the wealth\r\n            </div>\r\n            <span>\r\n              <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n              <ul className=\"boxes\">\r\n                <li>{jobs.farmer || 0} farmers</li>\r\n                <li>{jobs.builder || 0} builders</li>\r\n                <li>{jobs.doc || 0} doctors</li>\r\n                <li>{jobs.entertainer || 0} entertainers</li>\r\n              </ul>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\n\r\nexport interface EventsPanelPS\r\n{\r\n    events: IEvent[],\r\n    selectBean: (beanKey?: number) => void\r\n}\r\nfunction shouldEventJumpToBean(e: IEvent): boolean{\r\n    return e.beanKey != null && (\r\n        e.trigger === 'speechcrime' ||\r\n        e.trigger === 'birth');\r\n}\r\n\r\nexport class EventsPanel extends React.Component<EventsPanelPS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let events = this.props.events.map((e, i) => {\r\n            const alert = e.icon === '🚨';\r\n            const slot = e.trigger === 'nojobslots';\r\n            return <div key={i} className={alert||slot ? 'tall': ''}>\r\n                <span className={alert ? 'police-siren': ''}>{e.icon}</span>&nbsp;\r\n                {\r\n                    shouldEventJumpToBean(e) ? <a onClick={() => this.props.selectBean(e.beanKey)} href=\"javascript:void(0)\">{e.message}</a> : <span>{e.message}</span>\r\n                }\r\n            </div>\r\n        });\r\n        if (this.props.events.length === 0){\r\n            events = [<div key={0}>\r\n                <small>No events yet</small>\r\n            </div>]\r\n        }\r\n        return (                \r\n        <div className=\"events-panel\">\r\n            <div>\r\n                <b>Events</b>\r\n            </div>\r\n            {events}\r\n        </div>\r\n        )\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NarrativeBeliefData, PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { Trait, TraitIcon } from \"../World\";\r\n\r\nexport class CardButton extends React.Component<{\r\n    icon: string,\r\n    name: string,\r\n    onClick?: () => void,\r\n    title?: string,\r\n    subtext?: string,\r\n    thin?: boolean,\r\n    singleLine?: boolean\r\n}>{\r\n    render(){\r\n        let classes = \"card button\";\r\n        if (this.props.thin) classes += ' thin';\r\n        if (this.props.singleLine) classes += ' single';\r\n        return <button className={classes} title={this.props.title} onClick={() => {\r\n            if (this.props.onClick) this.props.onClick()\r\n        }} type=\"button\">\r\n            {this.props.icon} {this.props.name}\r\n            {\r\n                (this.props.subtext != null) ? <small>{this.props.subtext}</small> : null\r\n            }\r\n        </button>\r\n    }\r\n}\r\n\r\nexport function TraitToCard(bean: Bean, trait: Trait, onClick?: () => void){\r\n    switch(trait){\r\n        case 'trad':\r\n        case 'prog':\r\n        case 'ego':\r\n        case 'state':\r\n            return <CardButton icon={TraitIcon[trait]} title={PrimaryBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'fresh':\r\n        case 'sick':\r\n        case 'hungry':\r\n        case 'stuffed':\r\n        case 'podless':\r\n        case 'homeowner':\r\n        case 'circle':\r\n        case 'square':\r\n        case 'triangle':\r\n        case 'sane':\r\n        case 'confused':\r\n        case 'mad':\r\n            return <CardButton icon={TraitIcon[trait]} title={keyToName[trait]} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'noFaith':\r\n        case 'rocket':\r\n        case 'dragon':\r\n        case 'music':\r\n            return <CardButton icon={TraitIcon[trait]} title={NarrativeBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        default:\r\n            return null;\r\n    }\r\n} ","import React from \"react\";\r\nimport { IHappinessModifier, TraitIcon } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Economy } from \"../simulation/Economy\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { IEvent, EventBus } from \"../events/Events\";\r\nimport { withinLastYear } from \"../simulation/Time\";\r\nimport { Government } from \"../simulation/Government\";\r\nimport { Player } from \"../simulation/Player\";\r\nimport { CardButton, TraitToCard } from \"../widgets/CardButton\";\r\n\r\nimport './BeanPanel.css';\r\nimport { ActivityIcon, GetPriorities } from \"../simulation/Agent\";\r\nimport { IsBeliefDivergent, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\n\r\ninterface BeanPanelP{\r\n    city: City,\r\n    bean: Bean,\r\n    economy: Economy,\r\n    law: Government,\r\n    party: Party,\r\n    alien: Player,\r\n    clearCity: () => void;\r\n    bus: EventBus\r\n    scan: (bean: Bean) => boolean;\r\n    vaporize: (bean: Bean) => void;\r\n    abduct: (bean: Bean) => void;\r\n    brainwash: () => void;\r\n    gift: () => void;\r\n}\r\n\r\ninterface BeanPanelS{\r\n    faceOverride?: string;\r\n    innerView: 'priorities'|'feelings'|'beliefs';\r\n}\r\n\r\nexport class BeanPanel extends React.Component<BeanPanelP, BeanPanelS> {\r\n    constructor(props: BeanPanelP) {\r\n        super(props);\r\n        this.state = {\r\n            innerView: 'feelings'\r\n        }\r\n    }\r\n    scan = () => {\r\n        if (this.props.scan(this.props.bean)){\r\n            this.setState({faceOverride: '🤨'});\r\n            this._resetFace();\r\n        }\r\n    }\r\n    vaporize = () => {\r\n        this.props.vaporize(this.props.bean);\r\n        this.setState({faceOverride: '💀'});\r\n        this._resetFace();\r\n    }\r\n    support = () => {\r\n        this.setState({faceOverride: '🤩'});\r\n        this._resetFace();\r\n    }\r\n    abduct = () => {\r\n        this.props.abduct(this.props.bean);\r\n        this.setState({faceOverride: '😨'});\r\n        this._resetFace();\r\n    }\r\n    _resetFace(){\r\n        setTimeout(() => {\r\n            this.setState({faceOverride: undefined})\r\n        }, 5000);\r\n    }\r\n    happyTable(mods: IHappinessModifier[]){\r\n        return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{x.reason}</td>\r\n                <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n            </tr>\r\n        });\r\n    }\r\n    renderInner(){\r\n        if (!this.scanned){\r\n            return <div className=\"width-100p text-center\">\r\n                <small>\r\n                    Subject needs a Scan to reveal their thoughts\r\n                </small>\r\n            </div>\r\n        }\r\n        switch(this.state.innerView){\r\n            case 'beliefs':\r\n                return this.scanned ? this.beliefTable(this.props.bean.beliefs) : null\r\n            case 'feelings':\r\n                return <table className=\"width-100p\"><tbody>\r\n                    {this.scanned ? this.happyTable(this.props.bean.getHappinessModifiers(this.props.economy, this.props.city, this.props.law)) : null}\r\n                    {/* {this.scanned ? this.happyTable(this.props.bean.getSentimentModifiers(this.props.economy, this.props.city, this.props.law, this.props.party).party) : null} */}\r\n                    </tbody>\r\n                </table>\r\n            case 'priorities':\r\n                return <table className=\"width-100p\">\r\n                    <tbody>\r\n                        {\r\n                            GetPriorities(this.props.bean, this.props.alien.difficulty).values.map((x) => {\r\n                                return <tr>\r\n                                    <td>\r\n                                    {x.priority.toFixed(1)} {ActivityIcon(x.value)}\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n        }\r\n    }\r\n    beliefTable(beliefs: TraitBelief[]): React.ReactNode {\r\n        return beliefs.map((b) => {\r\n            const divergent = IsBeliefDivergent(b, this.props.party.ideals, this.props.party.community);\r\n            return <table className=\"width-100p\" key={b}><tbody><tr>\r\n            <th className={divergent ? 'divergent text-left': \"text-left\"}>\r\n                {SecondaryBeliefData[b].icon} {SecondaryBeliefData[b].adj}\r\n            </th>\r\n            <td className=\"text-right\">\r\n                {(SecondaryBeliefData[b].idealPro || []).map(y => <span>+{TraitIcon[y]}</span>)}\r\n                {(SecondaryBeliefData[b].idealCon || []).map(y => <span>-{TraitIcon[y]}</span>)}\r\n            </td>\r\n        </tr><tr><td className=\"small text-center\" colSpan={2}>{SecondaryBeliefData[b].description}</td></tr></tbody></table>});\r\n    }\r\n    get scanned(){\r\n        return this.props.alien.scanned_bean[this.props.bean.key];\r\n    }\r\n    renderTraits(){\r\n        if (this.scanned){\r\n            const brainwash = this.props.brainwash.bind(this);\r\n            return <div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ethnicity, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.faith, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ideals, brainwash)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.community, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.food, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.shelter, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.health, undefined)}\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className=\"card-parent\">\r\n                <CardButton icon=\"🛰️\" name=\"Scan\" subtext=\"-Energy +Info\" onClick={this.scan}></CardButton>\r\n            </div>\r\n        }\r\n    }\r\n    render(){\r\n        const classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n        const chance = this.props.bean.chanceToDonate(this.props.economy, true);\r\n        return (                \r\n        <div className=\"vertical bean-panel\">\r\n            <div className=\"bean-panel-header\">\r\n                <div>\r\n                    <b>{this.props.bean.name}&nbsp;\r\n                    <small>\r\n                        of {this.props.city.name}\r\n                    </small>\r\n                    </b>\r\n                    <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n                </div>\r\n                <div className=\"bean-view\">                \r\n                    <span className={classes+\" bean\"}>\r\n                        {\r\n                            this.state.faceOverride === undefined ? this.props.bean.getFace() : this.state.faceOverride\r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <span className=\"text-center\">\r\n                        💰 ${this.props.bean.cash.toFixed(2)}\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        🙂 {Math.round(this.props.bean.lastHappiness)}%\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        👍 {Math.round(this.props.bean.lastPartySentiment)}%\r\n                    </span>\r\n                </div>\r\n                {this.renderTraits()}\r\n            </div>\r\n            <div className=\"grow-1 pad-4\">\r\n                <div className=\"cylinder blue-orange horizontal\">\r\n                    <button type=\"button\" className={this.state.innerView=='priorities'?'active':''} onClick={()=>this.setState({innerView:'priorities'})}>\r\n                        💪 Priorities\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='feelings'?'active':''} onClick={()=>this.setState({innerView:'feelings'})}>\r\n                        😐 Feelings\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='beliefs'?'active':''} onClick={()=>this.setState({innerView:'beliefs'})}>\r\n                        😇 Beliefs\r\n                    </button>\r\n                </div>\r\n                {this.renderInner()}\r\n            </div>\r\n            <div className=\"bean-action-card-parent\">\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={() => this.props.brainwash()}\r\n                        title=\"Rewrite one of this being's beliefs\"\r\n                    >😵 Brainwash\r\n                        <small>-Psi -Sanity +Belief</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\"  onClick={() => this.props.brainwash()}\r\n                        title=\"Give this being food or meds or cash\">\r\n                        🎁 Gift\r\n                        <small>-Energy +Things</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={this.scan} \r\n                        title=\"Steal a bit of this being's mind\">\r\n                        🤪 Braindrain\r\n                        <small>-Energy -Sanity +Psi</small>\r\n                    </button>\r\n                    <button type=\"button\" className=\"button card\" onClick={this.vaporize}\r\n                        title=\"Delete this being from the experiment\"\r\n                    >\r\n                        ☠️ Vaporize\r\n                        <small>-Bots -Energy</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\"\r\n                        onClick={() => this.abduct()}\r\n                        title=\"Remove this being for study\"\r\n                    >\r\n                        👾 Abduct for Research\r\n                        <small>-Bots -Sanity +Tech</small>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { City } from \"../simulation/City\";\r\n\r\nexport interface FoundPartyPS\r\n{\r\n    cities: City[],\r\n    onFound: (state: FoundPartyS) => void\r\n}\r\nexport interface FoundPartyS\r\n{\r\n    community: TraitCommunity|null\r\n    ideal: TraitIdeals|null,\r\n    name: string,\r\n    slogan: string,\r\n    members: string,\r\n    goal: string,\r\n    cityKey: number\r\n}\r\n\r\nexport class FoundParty extends React.Component<FoundPartyPS, FoundPartyS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            community: null,\r\n            ideal: null,\r\n            name: \"Goodplace\",\r\n            slogan: \"Perfection is achievable.\",\r\n            members: \"Citizens\",\r\n            goal: \"Legislation\",\r\n            cityKey: 0\r\n        }\r\n    }\r\n    onCommunity(val: TraitCommunity){\r\n        this.setState({community: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onIdeal(val: TraitIdeals){\r\n        this.setState({ideal: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onBigFourChange(){\r\n        if (this.state.community === 'ego' && this.state.ideal === 'trad'){\r\n            this.setState({\r\n                name: 'Arcadia',\r\n                slogan: \"A man belongs on the farm.\",\r\n                members: \"Farmers\", goal: \"Tariffs\"});\r\n        } else if (this.state.community === 'ego' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Libertaria\",\r\n                slogan: \"Freedom for every being!\",\r\n                members: \"Builders\", goal: \"Right to Strike\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'trad') {\r\n            this.setState({\r\n                name: \"Ultimate Kingdom\",\r\n                slogan: \"Honor to King and family.\",\r\n                members: \"Homeowners\", goal: \"Repeal Property Tax\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Equus\",\r\n                slogan: \"True equality is peace.\",\r\n                members: \"Penniless\", goal: \"Food Welfare\"});\r\n        }\r\n    }\r\n    onName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({name: e.target.value});\r\n    }\r\n    onSlogan = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({slogan: e.target.value});\r\n    }\r\n    onCity = (key: any) => {\r\n        this.setState({cityKey: +key});\r\n    }\r\n    render(){\r\n        return <div>\r\n          <div className=\"pad-4p\">\r\n            <h2>Found your Utopia</h2>\r\n          </div>    \r\n          <div className=\"col-2\">\r\n            <div>\r\n              Perfect societies rely on the\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"state\" checked={this.state.community === 'state'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)} /> <b>Collective</b> 🕊️ {/* 🐘 🤝*/}\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"ego\" checked={this.state.community === 'ego'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)}/> <b>Independent</b> 🦅 {/*✌️*/}\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              to guarantee well-being.\r\n            </div>\r\n            <div>\r\n              Perfect beings devote themselves to\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"trad\" checked={this.state.ideal === 'trad'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)}/> <b>Elitist</b> {/*🕯️ 🔮*/} 👑\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"prog\" checked={this.state.ideal === 'prog'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)} /> <b>Progressive</b> {/*💡 🔬 🎓*/} ⚖️\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              social values.\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My Utopia is named <input type=\"text\" value={this.state.name} onChange={this.onName} />\r\n            </div>\r\n            <div>\r\n              My Utopia's mantra is <input type=\"text\" value={this.state.slogan} onChange={this.onSlogan}  />\r\n            </div>\r\n          </div>\r\n          <hr/>\r\n          <button type=\"button\" disabled={this.state.community == null || this.state.ideal == null} className=\"important btn-found-party\" onClick={() => this.props.onFound(this.state)}>Found the {this.state.name} Utopia</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { TraitCommunity, TraitIcon, TraitIdeals } from \"../World\";\r\n\r\nexport function RenderIdealBadges(comm: Array<TraitCommunity|TraitIdeals>, effect: 'pos'|'neg'){\r\n    return comm.map((x) => RenderIdealBadge(x, effect));\r\n}\r\nexport function RenderIdealBadge(comm: TraitCommunity|TraitIdeals, effect: 'pos'|'neg'){\r\n    return RenderBadge(TraitIcon[comm], effect);\r\n}\r\nexport function RenderBadge(str: string, effect: 'pos'|'neg'){\r\n    const c = 'badge align-mid '+effect;\r\n    const output = `${effect === 'neg' ? '-': '+'}${str}`;\r\n    return <span className={c} key={output}>\r\n        {output}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { World, TraitIcon } from \"../World\";\r\nimport { IPolicy } from \"../simulation/Politics\";\r\nimport { PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { ILaw, ILawData, LawAxis, LawAxisData, LawData, LawGroup, LawKey } from \"../simulation/Government\";\r\nimport { RenderIdealBadges } from \"../widgets/UniversalWidgets\";\r\nimport { groupBy } from \"../simulation/Utils\";\r\n\r\nexport interface PartyOverviewPS{\r\n    world: World;\r\n    setPolicy(axis: LawAxis, policy: IPolicy): void;\r\n}\r\ninterface PartyOverviewS{\r\n    overView: 'laws'|'leadership'|'finances',\r\n    detailView: 'none'|'group_add'|'law_view',\r\n    detailGroup?: LawGroup,\r\n    detailLaw?: ILaw,\r\n    collapsedGroups: {[key in LawGroup]: boolean},\r\n    collapsedAxis: {[key in LawAxis]: boolean},\r\n}\r\n\r\nexport class PartyOverview extends React.Component<PartyOverviewPS, PartyOverviewS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            overView: 'laws',\r\n            detailView: 'none',\r\n            collapsedGroups: {\r\n                Crime: false,\r\n                Taxation: false,\r\n                Welfare: false,\r\n                Culture: false,\r\n                Economics: false,\r\n            },\r\n            collapsedAxis: {\r\n                'wel_food': false,'wel_house': false,'wel_health': false,'tax_basic': false,'tax_second': false,'econ_sub': false,'cul_rel': false,'cul_theo': false,'crime_theo': false\r\n            }\r\n        }\r\n    }\r\n    renderDetailLaw(law: LawKey, view: 'edit'|'add', partOfGroup: boolean = false){\r\n        const ldata = LawData[law];\r\n        const incompatibilities = Object.values(LawData).filter(\r\n            (x) => x.key != law && x.axis === ldata.axis\r\n        );\r\n        const rowClassName = view === 'add' ? 'border-b-1 pad-bt-8' : '';\r\n        return  <div key={law} className={rowClassName+(partOfGroup ? ' pad-l-40': '')}>\r\n        <div className=\"horizontal\">\r\n            <strong className=\"f-size-15em\">\r\n                {ldata.name}\r\n            </strong>\r\n            <span>\r\n                {RenderIdealBadges(ldata.idealPro || [], 'pos')}\r\n            </span>\r\n            {\r\n                view === 'add' ? \r\n                <button className=\"callout marg-0\">\r\n                    Adopt for 3 🗳️ \r\n                </button> : null\r\n            }\r\n        </div>\r\n        {\r\n            (partOfGroup ? null : <div>\r\n                <i>Government Policy for&nbsp;{LawAxisData[ldata.axis].name}\r\n                </i>\r\n            </div>)\r\n        }\r\n        <div>\r\n            <p>\r\n                {ldata.description}\r\n            </p>\r\n            {\r\n                view === 'edit' ? \r\n                <div className=\"horizontal\">\r\n                    <span>\r\n                        <strong>Subjects Fed:</strong> 1\r\n                    </span>\r\n                    <span>\r\n                        <strong>Last Monthly Cost:</strong> $1\r\n                    </span>\r\n                </div> : null\r\n            }\r\n            <div className=\"horizontal\">\r\n                <span>\r\n                    <strong>Max. Monthly Cost:</strong> <input type=\"number\" />\r\n                </span>\r\n            </div>\r\n            <strong>Incompatible with</strong>\r\n            {\r\n                incompatibilities.map((x, i) => <i key={x.name}>{i > 0 ? <span>,</span>: null} {x.name}</i>\r\n                )\r\n            }\r\n        </div>\r\n    </div>;\r\n    }\r\n    renderDetailGroup(group: LawGroup): JSX.Element[]{\r\n        const divs: JSX.Element[] = [];\r\n        groupBy(Object.values(LawData).filter(x => x.group === group), (y: ILawData) => {\r\n            return y.axis;\r\n        }).forEach((val) => {\r\n            const isGroup = (val.length > 1);\r\n            if (isGroup){\r\n                divs.push(<div>\r\n                    <h3>\r\n                        {LawAxisData[val[0].axis].name}\r\n                        <button className=\"callout marg-0 pull-r\" onClick={() => {\r\n                            this.state.collapsedAxis[val[0].axis] = !this.state.collapsedAxis[val[0].axis];\r\n                            this.setState({collapsedAxis: this.state.collapsedAxis});\r\n                        }}>📁</button>\r\n                    </h3>\r\n                </div>);\r\n            }\r\n            if (!isGroup || !this.state.collapsedAxis[val[0].axis]){\r\n                val.forEach((z) => {\r\n                    divs.push(this.renderDetailLaw(z.key, 'add', isGroup))\r\n                });\r\n            }\r\n        });\r\n        return divs;\r\n    }\r\n    toggleGroup(group: LawGroup){\r\n        this.state.collapsedGroups[group] = !this.state.collapsedGroups[group];\r\n        this.setState({collapsedGroups: this.state.collapsedGroups});\r\n    }\r\n    renderHeader(group: LawGroup){\r\n        return <tr>\r\n            <td>\r\n                <strong>{group}</strong>\r\n            </td>\r\n            <td>\r\n                <button className=\"callout marg-0\" onClick={() => this.setState({detailView: 'group_add', detailGroup: group})}>Add ➕</button>\r\n                <button className=\"callout marg-0\" onClick={() => this.toggleGroup(group)}>📁</button>\r\n            </td>\r\n        </tr>\r\n    }\r\n    renderRows(group: LawGroup, laws: ILaw[]): React.ReactNode{\r\n        if (this.state.collapsedGroups[group])\r\n            return null;\r\n        return laws.map((x) => {\r\n            const data = LawData[x.key];\r\n            return <tr key={x.key}>\r\n            <td>\r\n                <i>{data.name}</i> \r\n                {\r\n                    (data.idealPro || []).map((x) => TraitIcon[x])\r\n                }\r\n            </td>\r\n            <td>\r\n                <button onClick={() => this.setState({detailView: 'law_view', detailLaw: x})} className=\"callout marg-0\">View 🔍</button>\r\n            </td>\r\n        </tr>\r\n        });\r\n    }\r\n    render(){\r\n        return <div>\r\n            <div className=\"col-2\">\r\n                <h2 className=\"marg-b-0\">Utopia Government</h2>\r\n                <div>\r\n                    <div className=\"horizontal blue-orange cylinder f-size-125em marg-t-20\">\r\n                        <button type=\"button\" onClick={() => this.setState({overView: 'laws'})} className={this.state.overView === 'laws' ? 'active': ''}>\r\n                            📜 Laws\r\n                        </button>\r\n                        <button type=\"button\" onClick={() => this.setState({overView: 'leadership'})} className={this.state.overView === 'leadership' ? 'active': ''}>\r\n                            {this.props.world.party.leadership} 🗳️ Leadership\r\n                        </button>\r\n                        <button type=\"button\" onClick={() => this.setState({overView: 'finances'})} className={this.state.overView === 'finances' ? 'active': ''}>\r\n                            💰 Funding\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"pad-4p\">\r\n                {this.props.world.party.name} is a&nbsp;\r\n                {PrimaryBeliefData[this.props.world.party.community].adj} {PrimaryBeliefData[this.props.world.party.community].icon}&nbsp; \r\n                {PrimaryBeliefData[this.props.world.party.ideals].adj} {PrimaryBeliefData[this.props.world.party.ideals].icon}&nbsp;\r\n                Utopia\r\n            </div>\r\n            {this.renderOver()}\r\n        </div>\r\n    }\r\n    renderOver(): React.ReactNode {\r\n        switch(this.state.overView){\r\n            case 'leadership':\r\n                return this.renderLeadership();\r\n            case 'finances':\r\n                return this.renderFinances();\r\n            default:\r\n                return this.renderLaws();\r\n        }\r\n    }\r\n    renderLaws(){  \r\n        const groups = this.props.world.law.getLawsByGroup();\r\n        return <div className=\"col-2-30-60\">\r\n        <div className=\"max-h-365\">\r\n            <table className=\"full\">\r\n                <tbody>\r\n                    {this.renderHeader('Taxation')}\r\n                    {this.renderRows('Taxation', groups.Taxation)}\r\n                    {this.renderHeader('Welfare')}\r\n                    {this.renderRows('Welfare', groups.Welfare)}\r\n                    {this.renderHeader('Economics')}\r\n                    {this.renderRows('Economics', groups.Economics)}\r\n                    {this.renderHeader('Crime')}\r\n                    {this.renderRows('Crime', groups.Crime)}\r\n                    {this.renderHeader('Culture')}\r\n                    {this.renderRows('Culture', groups.Culture)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div className=\"border max-h-365\">\r\n            {this.renderLawDetail()}\r\n        </div>\r\n    </div>\r\n    }\r\n    renderLawDetail(){      \r\n        if (this.state.detailView === 'group_add' && this.state.detailGroup){\r\n            return this.renderDetailGroup(this.state.detailGroup);\r\n        } else if (this.state.detailView === 'law_view' && this.state.detailLaw){\r\n            return this.renderDetailLaw(this.state.detailLaw.key, 'edit')\r\n        }\r\n        return <div className=\"text-center\">\r\n            Add ➕ or View 🔍 a Law\r\n        </div>;\r\n\r\n    }\r\n    renderFinances(): React.ReactNode {\r\n        return <div>\r\n\r\n        </div>\r\n    }\r\n    renderLeadership(): React.ReactNode {\r\n        return <div>\r\n            \r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { ChangePubSub } from \"../events/Events\";\r\n\r\nexport class BubbleText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<{s: string, t: number, c?: string}>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n\r\n    onChange = (ev: {change: number}) => {\r\n        const id = +(new Date());\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                s: (positive ? '+': '') + ev.change,\r\n                t: id,\r\n                c: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.t != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.t} className={[b.c, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.s}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"../petri-ui/AnimatedBean\";\r\nimport \"./SocialGraph.css\";\r\nimport { origin_point } from \"../simulation/Geography\";\r\n\r\ninterface SocialGraphP{\r\n    beans: Bean[];\r\n    costOfLiving: number;\r\n    onClick: (b: Bean) => void\r\n}\r\ninterface SocialGraphS{\r\n    \r\n}\r\nexport class SocialGraph extends React.Component<SocialGraphP, SocialGraphS>{\r\n    constructor(props: SocialGraphP){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return <div className=\"social-graph\">\r\n            {\r\n                this.props.beans.map((b) => \r\n                <div className=\"bean-node\" onClick={() => this.props.onClick(b)}>\r\n                    <AnimatedBean bean={b} static={true} sitStill={true} \r\n                        onClick={() => {this.props.onClick(b);}}>\r\n                    </AnimatedBean>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { ChangePubSub } from \"../events/Events\";\r\nimport { threadId } from \"worker_threads\";\r\n\r\nexport class CapsuleLabel extends React.Component<{\r\n    icon?: string,\r\n    label?: string\r\n}, {\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const classN = 'capsule-label '+this.props.label||'';\r\n        return <span className={classN}>\r\n            <span className=\"capsule-icon\">\r\n                {this.props.icon}\r\n            </span>\r\n            <span className=\"capsule-text\">\r\n                {this.props.label}:\r\n            </span>\r\n            <span className=\"capsule-value\">\r\n                {this.props.children}\r\n            </span>\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { DefaultDifficulty, triadToString } from \"../Game\";\r\nimport { Curriculums, GetAverage, Goals, IGoal, IPlayerData, IProgressable } from \"../simulation/Player\";\r\n\r\nexport interface GoalPanelPS\r\n{\r\n  player: IPlayerData;\r\n  progress: IProgressable;\r\n}\r\n\r\nexport class GoalsPanel extends React.Component<GoalPanelPS> {\r\n  renderReward(g: IGoal){\r\n    return <div>\r\n      <small>\r\n      🎁 {triadToString(g.reward || {}, '+')}\r\n      </small>\r\n    </div>\r\n  }\r\n  renderGoal(g: IGoal){\r\n    const done = this.props.progress.goalProgress[g.key] != null && this.props.progress.goalProgress[g.key].done;\r\n    return <li>\r\n      {done ? '☑️': '⭕️'}\r\n      {g.text}\r\n      {g.tooltip != null ? <small title={g.tooltip}>❔</small> : null}\r\n      {done || g.reward == null ? null : this.renderReward(g)}\r\n    </li>\r\n  }\r\n    render(){\r\n        return (<div className=\"goals\">\r\n        <div><b>Goals</b></div>\r\n        <ul>\r\n          {this.props.progress.goals.map((key) => {\r\n            return this.renderGoal(Goals[key]);\r\n          })}\r\n        </ul>\r\n        <div><b>Report Card</b></div>\r\n        <p className=\"horizontal\">\r\n          <span>\r\n            Last Grade: <b>D</b>\r\n          </span>\r\n          <span>\r\n            Next Grade in: <b>2 mo.</b>\r\n          </span>\r\n        </p>\r\n        <p>\r\n        </p>\r\n        <table style={{margin: 'auto'}}>\r\n          <tbody>\r\n            <tr>\r\n              <th>🎯 Happiness\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Happiness}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects happy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n                <small>\r\n              {Curriculums.Default.RubricDescription.Happiness}\r\n                </small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Prosperity</th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Prosperity}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects fed and healthy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Prosperity}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Stability\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Stability}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects sane and civil?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Stability}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Dogma\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Dogma}\r\n              </td>\r\n              <td>\r\n                <small title=\"Do your society's rules match your utopian ideals?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Dogma}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={3}>\r\n                <hr />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                Avg. Grade\r\n              </th>\r\n              <td>\r\n                {GetAverage(this.props.player.workingReportCard)}\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {/* <p>\r\n          Receive an \"A\" in \"Prosperity\" <br/> to receive 3 Psi\r\n        </p> */}\r\n      </div>)\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class CampaignsPanel extends React.Component<{\r\n\r\n}>{\r\n    render(){\r\n        return <div className=\"pad-4p\">\r\n        <div className=\"subheader\">\r\n            <h3>Propaganda</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >🎙️ Buy Propaganda</button>\r\n        </div>\r\n        <span>\r\n          Propaganda changes beans' feelings on a wide variety of topics.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              📺 Broadcast Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Small chance to increase Approval among all beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              👋 Canvassing\r\n            </span>\r\n            <small>Approval+ Labor-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on a few random beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🗞️ Print Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on wealthy beans\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <div className=\"subheader\">\r\n            <h3>Appearances</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >💬 Schedule Appearance</button>\r\n        </div>\r\n        <span>\r\n          Appearances have limited reach, but have powerful effects.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🤔 Debating\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Chance to gain or lose Influence\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            📸 Photo Op\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases Approval within one Social Group\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🎤 Speechmaking\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases chance of Donations in a single City\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🙋 Town Hall\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Suppresses negative Approval in a single city                     \r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* <CharityPanel world={this.state.world} onFoundCharity={this.foundCharity}></CharityPanel>\r\n        <div>\r\n          <b>Campaign Finances</b> <br/>\r\n          <b>Expenses</b> ${seasonalCost} <b>Surplus</b> ${this.state.world.party.seasonalIncome - seasonalCost}\r\n        </div> */}\r\n      </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { World } from \"../World\";\r\n\r\nexport class GovernmentPanel extends React.Component<{\r\n    world: World\r\n}> {\r\n    render(){\r\n        return <div><div className=\"col-2\">\r\n        <h2>Government</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class ConfirmButton extends React.Component<{\r\n    confirmText: string,\r\n    onConfirm: () => void,\r\n    disabled?: boolean,\r\n    className?: string\r\n}, {\r\n    confirming: boolean\r\n}> {\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {\r\n            confirming: false\r\n        }\r\n    }\r\n    click(){\r\n        if (this.state.confirming){\r\n            this.props.onConfirm();\r\n            this.setState({confirming: false});\r\n        } else {\r\n            this.setState({confirming: true});\r\n        }\r\n    }\r\n    render(){\r\n        return <button className={this.props.className} onClick={() => this.click()} disabled={this.props.disabled}>\r\n            { this.state.confirming ? this.props.confirmText : this.props.children}\r\n        </button>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class RobotArm extends React.Component<{\r\n    tool: string,\r\n    classN: string\r\n}, {\r\n\r\n}> {\r\n    render(){\r\n        const style = {};\r\n        return <svg width=\"100\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\" style={style} className={this.props.classN+\" robot-arm\"}>\r\n        <g>\r\n         <title>robotarm</title>\r\n         <rect fill=\"transparent\" id=\"canvas_background\" height=\"302\" width=\"102\" y=\"-1\" x=\"-1\"/>\r\n         <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\r\n          <rect fill=\"url(#gridpattern)\" strokeWidth=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\"/>\r\n         </g>\r\n        </g>\r\n        <g>\r\n         <title>Layer 1</title>\r\n         <rect id=\"svg_2\" height=\"200\" width=\"48\" y=\"91.63545\" x=\"25\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#BBBBBB\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_1\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n         <ellipse ry=\"20\" rx=\"20\" id=\"svg_3\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_4\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n        <ellipse ry=\"20\" rx=\"20\" id=\"svg_5\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\">{this.props.tool}</ellipse>\r\n            \r\n        </g><text y=\"250\" x=\"-20\" fontSize=\"4em\">{this.props.tool}</text>\r\n       </svg>\r\n    }\r\n}","import React from \"react\";\r\nimport { IPlayerData, ITechInfo, Tech, TechData } from \"../simulation/Player\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { RobotArm } from \"../widgets/RobotArm\";\r\nimport './research.css';\r\n\r\nexport class ResearchPanel extends React.Component<{\r\n  player: IPlayerData,\r\n  setResearch: (t: Tech) => void,\r\n  release: () => void\r\n}, {\r\n  toolI: number, toolI2: number, toolI3: number, toolI4: number\r\n}>{\r\n  tools = [\r\n  '📡',\r\n  '🗜️',\r\n  '🔬',\r\n  '💉',\r\n  '🔎',\r\n  '🧼',\r\n  '🧲',\r\n  '🎥',\r\n  '🔧',\r\n  ];\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state = {\r\n      toolI: 0,\r\n      toolI2: 2,\r\n      toolI3: 4,\r\n      toolI4: 1,\r\n    };\r\n  }\r\n  interval?: number;\r\n  loop(lastI: number){\r\n    let i = lastI + 1;\r\n    if (i === this.tools.length)\r\n      i = 0;\r\n    return i;\r\n  }\r\n  componentDidMount(){\r\n    this.interval = window.setInterval(() => {\r\n      this.setState({\r\n        toolI: this.loop(this.state.toolI),\r\n        toolI2: this.loop(this.state.toolI2),\r\n        toolI3: this.loop(this.state.toolI3),\r\n        toolI4: this.loop(this.state.toolI4),\r\n      });\r\n    }, 1000);\r\n  }\r\n  componentWillUnmount(){\r\n    if (this.interval != null)\r\n      window.clearInterval(this.interval);\r\n  }\r\n  setResearch(tech: Tech){\r\n    this.props.setResearch(tech);\r\n  }\r\n  renderTech(tech: ITechInfo){\r\n    const unstarted = this.props.player.techProgress[tech.tech] == null;\r\n    const progress = unstarted ? 0 : this.props.player.techProgress[tech.tech].researchPoints;\r\n    const total = tech.techPoints;\r\n    const style = {width: (Math.min(progress/total*100, 100))+'%'};\r\n    const complete = progress >= total;\r\n    const isCurrent = this.props.player.currentlyResearchingTech === tech.tech;\r\n    const state: '⭕️'|'✅'|'🔬' = complete ? '✅' : isCurrent ? '🔬' : '⭕️';\r\n    const rootClassName = isCurrent ? 'active': 'inactive';\r\n    return <div className={\"card-parent \"+rootClassName} key={tech.tech}>\r\n      <button className=\"card button\" onClick={() => this.setResearch(tech.tech)}>\r\n        <strong>{tech.name}</strong>\r\n        <strong className=\"pull-r f-size-125em\">{state}</strong>\r\n        <div>\r\n          {tech.description}\r\n        </div>      \r\n        <div className=\"bar f-size-12 h-12\">\r\n            <div className=\"bar-inner text-center\" style={style}>\r\n            </div>\r\n            {progress}/{total} tech\r\n        </div>\r\n      </button>\r\n    </div>\r\n  }\r\n  render(){\r\n      const techs = Object.values(TechData);\r\n      return <div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <h2>Research Lab</h2>\r\n              <div className=\"vertical\">\r\n                {\r\n                  techs.map((t) => this.renderTech(t))\r\n                }\r\n              </div>\r\n            </div>\r\n          <div className=\"vertical\">\r\n            <div>\r\n              <div className=\"robot\">\r\n                🤖\r\n                <RobotArm classN=\"far-left\" tool={this.tools[this.state.toolI]}></RobotArm>\r\n                <RobotArm classN=\"left\" tool={this.tools[this.state.toolI2]}></RobotArm>\r\n                <RobotArm classN=\"near-right\" tool={this.tools[this.state.toolI3]}></RobotArm>\r\n                <RobotArm classN=\"far-right\" tool={this.tools[this.state.toolI4]}></RobotArm>\r\n              </div>\r\n            </div>\r\n            <div className=\"h-42em\">\r\n              {\r\n                this.props.player.abductedBeans.map((b) => {\r\n                  return <span key={b.key} className=\"victim bean triangle shake\">😨</span>\r\n                })\r\n              }\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              Currently probing {this.props.player.abductedBeans.length} beings for {this.props.player.abductedBeans.length} tech a day\r\n              <p>\r\n                <small>1 tech per research subject per day</small>\r\n              </p>\r\n            </div>\r\n            {\r\n              this.props.player.abductedBeans.length > 0 ? <div className=\"text-right\">\r\n                <ConfirmButton className=\"callout\" onConfirm={() => {this.props.release()}} confirmText=\"-1 Research Subject?\">\r\n                🎈 Release Research Subject\r\n                </ConfirmButton>\r\n              </div> : null\r\n            }\r\n          </div>\r\n        </div>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n  }\r\n}","import React from \"react\";\r\nimport \"./StopPlayFast.css\"\r\n\r\nexport class StopPlayFastButtons extends React.Component<{\r\n    timeScale: number,\r\n    setTimeScale: (s: number) => void\r\n}>{\r\n    render(){\r\n        return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n            ⌛️\r\n            <button type=\"button\" className={this.props.timeScale == 0 ? 'active': ''} onClick={() => this.props.setTimeScale(0)}>⏹</button>\r\n            <button type=\"button\" className={this.props.timeScale == 1 ? 'active': ''} onClick={() => this.props.setTimeScale(1)}>▶️</button>\r\n            <button type=\"button\" className={this.props.timeScale == 2 ? 'active': ''} onClick={() => this.props.setTimeScale(2)}>⏩</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { ResourceTriad, triadToString } from \"../Game\";\r\n\r\nexport class CostSmall extends React.Component<{\r\n    cost: ResourceTriad\r\n}>{\r\n\r\n    render(){\r\n        return <small>\r\n            {triadToString(this.props.cost, '-')}\r\n        </small>\r\n    }\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { City } from \"../simulation/City\";\r\nimport { BuildingIcon, BuildingJobIcon, BuildingTypes, HexPoint, IBuilding } from \"../simulation/Geography\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\n\r\nexport class HexPanel extends React.Component<{\r\n    city: City,\r\n    hex: HexPoint,\r\n    difficulty: IDifficulty,\r\n    clearHex: () => void,\r\n    build: (where: HexPoint, what: BuildingTypes) => void,\r\n    beam: (where: HexPoint) => void,\r\n    upgrade: (what: IBuilding) => void,\r\n}, {\r\n\r\n}> {\r\n    emptyPanel(){\r\n        const eHex = this.props.difficulty.cost.emptyHex;\r\n        return <div>\r\n            <div>\r\n                <strong>Empty Lot</strong> in <strong>{this.props.city.name}</strong>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearHex()} >❌</button>\r\n            </div>\r\n            <h3>Build:</h3>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'house')}>\r\n                    {BuildingIcon['house']} House\r\n                    <CostSmall cost={eHex.build.house}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'farm')}>\r\n                    {BuildingIcon['farm']} Farm\r\n                    <CostSmall cost={eHex.build.farm}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'hospital')}>\r\n                    {BuildingIcon['hospital']} Hospital\r\n                    <CostSmall cost={eHex.build.hospital}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'theater')}>\r\n                    {BuildingIcon['theater']} Theater\r\n                    <CostSmall cost={eHex.build.theater}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'park')}>\r\n                    {BuildingIcon['park']} Park\r\n                    <CostSmall cost={eHex.build.park}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <h3>Beings:</h3>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.beam(this.props.hex)}>\r\n                    🛸 Beam In New Subject\r\n                    <CostSmall cost={this.props.difficulty.cost.hex.beam}></CostSmall>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n    buildingPanel(b: IBuilding){\r\n        const slots = b.usedSlots();\r\n        const free = b.openSlots();\r\n        const hasJobs = b.type != 'park' && b.type != 'nature';\r\n        return <div>\r\n            <strong>{keyToName[b.type]}</strong> in <strong>{this.props.city.name}</strong>\r\n        {\r\n            (slots.length === 0) ? null : <div>\r\n                <strong>Workers:</strong>\r\n                {\r\n                    slots.map((x) => <div>\r\n                        {BuildingJobIcon[b.type]} {this.props.city.beans.find((y) => y.key === b.job_slots[x])?.name}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        }\r\n        {\r\n            !hasJobs ? null : <div>\r\n                This {keyToName[b.type]} can support {free.length} more jobs.\r\n                {\r\n                    b.upgraded ? null : <span><br/>Upgrade it to add 3 more job slots.</span>\r\n                }\r\n            </div>\r\n        }\r\n        {\r\n            b.upgraded || !hasJobs ? null : <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.upgrade(b)}>\r\n                    🛠️ Upgrade\r\n                    <CostSmall cost={this.props.difficulty.cost.hex.upgrade}></CostSmall>\r\n                </button>\r\n            </div>\r\n        }\r\n        </div>\r\n    }\r\n    renderJobs(){\r\n\r\n    }\r\n    render(){\r\n        const building: IBuilding|undefined = this.props.city.lookupBuilding(this.props.hex);\r\n        if (building){\r\n            return this.buildingPanel(building)\r\n        } else {\r\n            return this.emptyPanel();\r\n        }\r\n    }\r\n\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { BeliefSubjectIcon, BeliefSubjectText, BeliefVerbOption, BeliefVerbIcon, BeliefVerbText, BeliefSubject, BeliefVerb } from \"../simulation/Beliefs\";\r\n\r\nexport interface StringDropdownPS{\r\n    options: Array<string>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any,\r\n    titleCase?: boolean\r\n}\r\ninterface StringDropdownS{\r\n    key: any;\r\n}\r\n\r\nexport class StringDropdown extends React.Component<StringDropdownPS, StringDropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n        this.setState({key: e.target.value})\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    protected getTextForOption(data: string): string{\r\n        if (this.props.titleCase){\r\n            data = data[0].toUpperCase()+data.slice(1);\r\n        }\r\n        return data;\r\n    }\r\n    options(){\r\n        return this.props.options.map((str) => {\r\n            return <option value={str} key={str} title={this.getTitleForOption(str)}>\r\n                {this.getTextForOption(str)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: string): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\n\r\n\r\nexport class BeliefSubjectDropdown extends StringDropdown{\r\n    getTextForOption(data: string): string{\r\n        return BeliefSubjectIcon[data as BeliefSubject] + ' ' +BeliefSubjectText[data as BeliefSubject];\r\n    }\r\n}\r\n\r\nexport class SelfVerbDropdown extends StringDropdown{\r\n    getTextForOption(data: string): string{\r\n        return BeliefVerbIcon[data as BeliefVerb]+' '+BeliefVerbText['self'][data as BeliefVerb];\r\n    }\r\n}\r\nexport class OtherVerbDropdown extends StringDropdown{\r\n    getTextForOption(data: string): string{\r\n        return BeliefVerbIcon[data as BeliefVerb]+' '+BeliefVerbText['other'][data as BeliefVerb];\r\n    }\r\n}","import React from \"react\";\r\nimport './beliefs.css';\r\nimport { BeliefSubject, BeliefVerb, SecondaryBeliefData, TraitBelief, Belief, BeliefSubjectOption, BeliefVerbOption, BeliefAdjOption, BeliefsAll, BeliefSubjectAll, BeliefVerbAll, IBeliefData } from \"../simulation/Beliefs\";\r\n\r\nimport { BeliefSubjectDropdown, OtherVerbDropdown, SelfVerbDropdown, StringDropdown } from \"../widgets/StringDropdown\";\r\nimport { TraitIcon } from \"../World\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { RenderIdealBadges } from \"../widgets/UniversalWidgets\";\r\n\r\nexport class EditBeliefInput extends React.Component<{\r\n    data: IBeliefData,\r\n    frozen?: boolean,\r\n    divergent?: boolean,\r\n    available: number,\r\n    cost: number,\r\n    wash: () => void\r\n}, {\r\n\r\n}>{\r\n\r\n    render(){\r\n        return <div className=\"belief\"><div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {this.props.data.icon}\r\n                </div>\r\n                {\r\n                    this.props.frozen ? null : <ConfirmButton className=\"callout pad-4 marg-0\"\r\n                        confirmText={'-'+this.props.cost.toString()+'🧠?'} disabled={this.props.available < this.props.cost} onConfirm={this.props.wash}>\r\n                    🚿 <small>Wash</small>\r\n                    </ConfirmButton>\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    <strong title={this.props.data.description} className={this.props.divergent ? 'divergent marg-r-6': 'marg-r-6'}>\r\n                        {this.props.data.noun}\r\n                    </strong>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{this.props.data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        RenderIdealBadges(this.props.data.idealPro || [], 'pos')\r\n                    }\r\n                    {\r\n                        RenderIdealBadges(this.props.data.idealCon || [], 'neg')\r\n                    } \r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}\r\n\r\nconst SortedBeliefs = BeliefsAll.slice().sort((a, b) => a.localeCompare(b));\r\nexport class AddBeliefInput extends React.Component<{\r\n    available: number,\r\n    cost: number,\r\n    add: (b: TraitBelief) => void\r\n}, {\r\n    belief: TraitBelief,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            belief: 'Neuroticism'\r\n        }\r\n    }\r\n    render(){\r\n        const data = SecondaryBeliefData[this.state.belief]\r\n        return <div className=\"belief\"><div className=\"horizontal badger add\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {data.icon}\r\n                </div>\r\n                <ConfirmButton className=\"callout grow-0 pad-4 marg-0\" disabled={this.props.available < this.props.cost} \r\n                    confirmText={'-'+this.props.cost.toString()+'🧠?'} onConfirm={() => this.props.add(this.state.belief)}>\r\n                    💉 <small>Implant</small>\r\n                </ConfirmButton>\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">                    \r\n                    <StringDropdown titleCase={true}\r\n                    options={SortedBeliefs} \r\n                    value={this.state.belief}\r\n                    onChange={(a: string) => {\r\n                        console.log(a);\r\n                        this.setState({belief: a as TraitBelief})\r\n                    }}\r\n                    ></StringDropdown>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        (data.idealPro || []).map((x) => <span className=\"pos badge align-mid\">+{TraitIcon[x]}</span>)\r\n                    }\r\n                    {\r\n                        (data.idealCon || []).map((x) => <span className=\"neg badge align-mid\">-{TraitIcon[x]}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}","import React from \"react\";\r\nimport { BeliefSubject, BeliefVerb, TraitBelief, SecondaryBeliefData, Belief, PrimaryBeliefData, NarrativeBeliefData, IsBeliefDivergent } from \"../simulation/Beliefs\";\r\nimport './modals.css';\r\nimport { TraitCommunity, TraitFaith, TraitIdeals, World } from \"../World\";\r\nimport { AddBeliefInput, EditBeliefInput } from \"./BeliefRow\";\r\nimport { Bean } from \"../simulation/Bean\";\r\n\r\nexport class BrainwashingContent extends React.Component<{\r\n    world: World,\r\n    beanID: number|null,\r\n    washCommunity: (bean: Bean, c: TraitCommunity) => void,\r\n    washMotive: (bean: Bean, m: TraitIdeals) => void,\r\n    washNarrative: (bean: Bean, n: TraitFaith) => void,\r\n    washBelief: (bean: Bean, b: TraitBelief) => void,\r\n    implantBelief: (bean: Bean, b: TraitBelief) => void\r\n}, {\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const bean = this.props.world.beans.find(x => x.key == this.props.beanID);\r\n        if (bean == null) return;\r\n        return <div>\r\n            <div className=\"horizontal fancy-header\">\r\n                <div>\r\n                    BRAIN\r\n                </div>\r\n                <div className=\"emoji-3\">\r\n                💉🧠🚿\r\n                </div>\r\n                <div>\r\n                    WASH\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"text-center\">\r\n                    <strong>{bean.name}</strong> has {bean.discrete_sanity} sanity 🧠\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <div>\r\n                        <EditBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            wash={() => this.props.washCommunity(bean, bean.community)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean.brainwash_ideal.psi || 0}\r\n                            data={PrimaryBeliefData[bean.community]}\r\n                        ></EditBeliefInput>\r\n                        <EditBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            wash={() => this.props.washMotive(bean, bean.ideals)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean.brainwash_ideal.psi || 0}\r\n                            data={PrimaryBeliefData[bean.ideals]}\r\n                        ></EditBeliefInput>\r\n                        <EditBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            wash={() => this.props.washNarrative(bean, bean.faith)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean.brainwash_ideal.psi || 0}\r\n                            data={NarrativeBeliefData[bean.faith]}\r\n                        ></EditBeliefInput>\r\n                        {\r\n                            bean.beliefs.map((b) => <EditBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            divergent={IsBeliefDivergent(b, this.props.world.party.ideals, this.props.world.party.community)}\r\n                            wash={() => this.props.washBelief(bean, b)} \r\n                                cost={this.props.world.alien.difficulty.cost.bean.brainwash_secondary.psi || 0}\r\n                                data={SecondaryBeliefData[b]}\r\n                            >\r\n                            </EditBeliefInput>)\r\n                        }\r\n                        <AddBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            add={(b) => this.props.implantBelief(bean, b)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean.brainimplant_secondary.psi || 0}\r\n                        ></AddBeliefInput>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\n\r\nexport class TimelyEventToggle extends React.Component<{\r\n    event: PubSub<IEvent>,\r\n    eventIcon: string,\r\n    eventClass: string\r\n}, {\r\n eventCount: number,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.props.event.subscribe(this.onEvent);\r\n        this.state = {\r\n            eventCount: 0\r\n        };\r\n    }\r\n    onEvent = (e: IEvent) => {\r\n        this.setState({eventCount: this.state.eventCount+1});\r\n        window.setTimeout(() => {\r\n            this.setState({\r\n                eventCount: this.state.eventCount-1\r\n            });\r\n        }, 3000);\r\n    }\r\n    render(){\r\n        return <span>\r\n            {this.state.eventCount < 1 ? this.props.children : <span className={this.props.eventClass}>{this.props.eventIcon}</span>}\r\n        </span>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport './chrome/chrome.css';\r\nimport { World, TraitGood, Trait, TraitCommunity, TraitIdeals, TraitFaith } from './World';\r\nimport { GenerateWorld, GeneratePartyHQ, GenerateBuilding, GenerateBean, GetRandom } from './WorldGen';\r\nimport { Modal } from './widgets/Modal';\r\nimport { OverviewPanel } from './right-panel/OverviewPanel';\r\nimport { Bean } from './simulation/Bean';\r\nimport { WorldTile } from './petri-ui/WorldTile';\r\nimport { EconomyReport } from './modal-content/EconomyReport';\r\nimport { CharityPanel } from './modal-content/CharityPanel';\r\nimport { PoliticalEffect, Policy, CityPartyHQ, IPolicy } from './simulation/Politics';\r\nimport { EventsPanel } from './right-panel/Events';\r\nimport { BeanPanel } from './right-panel/BeanPanel';\r\nimport { FoundParty, FoundPartyS } from './modal-content/FoundParty';\r\nimport { PartyOverview } from './modal-content/PartyOverview';\r\nimport { BubbleText } from './widgets/BubbleText';\r\nimport { Season, Now, Hour } from './simulation/Time';\r\nimport { SocialGraph } from './widgets/SocialGraph';\r\nimport { CapsuleLabel } from './widgets/CapsuleLabel';\r\n\r\n\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { GoalsPanel } from './right-panel/Goals';\r\nimport { CampaignsPanel } from './modal-content/Campaigns';\r\nimport { GovernmentPanel } from './modal-content/Gov';\r\nimport { ResearchPanel } from './modal-content/Research';\r\nimport { StopPlayFastButtons } from './widgets/StopPlayFast';\r\nimport { BuildingTypes, HexPoint, IBuilding, transformPoint } from './simulation/Geography';\r\nimport { HexPanel } from './right-panel/HexPanel';\r\nimport { City, UFO } from './simulation/City';\r\nimport { BrainwashingContent } from './modal-content/Brainwashing';\r\nimport { SecondaryBeliefData, TraitBelief } from './simulation/Beliefs';\r\nimport { TimelyEventToggle } from './widgets/TimelyEventToggle';\r\nimport { LawAxis } from './simulation/Government';\r\nimport { Tech } from './simulation/Player';\r\nimport { IEvent } from './events/Events';\r\nimport { JsxEmit } from 'typescript';\r\n\r\nexport const keyToName: {[key in Trait|BuildingTypes]: string} = {\r\n  state: 'Collectivist', ego: 'Independent', \r\n  trad: 'Elitist', prog: 'Progressive', \r\n  circle: 'Brunette', square: 'Blonde', triangle: 'Redhead', \r\n  rocket: 'Futuristic', dragon: 'Mythical', music: 'Dramatic', noFaith: 'Nihilistic',\r\n  hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\r\n  podless: 'Homeless', crowded: 'Crowded', homeowner: 'Homeowner',\r\n  sick: 'Sick', bruised: 'Bruised', fresh: 'Robust',\r\n  sane: 'Sane', confused: 'Confused', mad: 'Mad',\r\n  house:'House', hospital:'Hospital', farm: 'Farm', theater: 'Theater', church: 'Church', courthouse: 'Courthouse', park: 'Park', nature: 'Natural Scenery'\r\n};\r\n\r\nexport type ModalView = 'policy'|'economy'|'campaign'|'party_creation'|'party'|'polisci'|'brainwash';\r\ninterface AppPs{\r\n}\r\ninterface AppState{\r\n  world: World,\r\n  activeCityID: number|null;\r\n  activeBeanID: number|null;\r\n  activeHex: HexPoint|null;\r\n  activeModal: ModalView|null;\r\n  activeMain: 'geo'|'network';\r\n  activeRightPanel: 'events'|'overview'|'goals';\r\n  timeScale: number;\r\n  spotlightEvent: IEvent|undefined;\r\n}\r\n\r\nconst LogicTickMS = 2000;\r\nconst SpotlightDurationTimeMS = 5000;\r\nclass App extends React.Component<AppPs, AppState>{\r\n  constructor(props: AppPs) {\r\n    super(props);\r\n    this.state = {\r\n      world: GenerateWorld(),\r\n      activeCityID: null,\r\n      activeBeanID: null,\r\n      activeHex: null,\r\n      activeMain: 'geo',\r\n      activeModal: 'party_creation',\r\n      activeRightPanel: 'overview',\r\n      timeScale: 0,\r\n      spotlightEvent: undefined\r\n    };\r\n    this.state.world.calculateComputedState();\r\n    this.state.world.bus.death.subscribe(this.onDeath);\r\n  }\r\n  private previousTimeMS: DOMHighResTimeStamp = 0;\r\n  private logicTickAccumulatorMS: number = 0;\r\n  componentDidMount(){\r\n    document.addEventListener(\"keyup\", this.keyupHandler, false);\r\n    window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n      this.previousTimeMS = time;\r\n      window.requestAnimationFrame(this.tick);\r\n    });\r\n  }\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"keyup\", this.keyupHandler);\r\n  }\r\n  tick = (timeMS: DOMHighResTimeStamp) => {\r\n    // Compute the delta-time against the previous time\r\n    const deltaTimeMS = (timeMS - this.previousTimeMS) * this.state.timeScale;\r\n  \r\n    // Update the previous time\r\n    this.previousTimeMS = timeMS;\r\n    if (deltaTimeMS > 0){\r\n      this.logicTickAccumulatorMS += deltaTimeMS;\r\n      this.state.world.simulate_beans(deltaTimeMS);\r\n      \r\n      if (this.logicTickAccumulatorMS > LogicTickMS){\r\n        this.state.world.simulate_world();\r\n        this.setState({world: this.state.world});\r\n        this.logicTickAccumulatorMS = 0;\r\n      }\r\n    }\r\n    window.requestAnimationFrame(this.tick);\r\n  }\r\n  keyupHandler = (event: KeyboardEvent) => {\r\n    if(event.key === ' ') {\r\n      if (this.state.timeScale > 0){\r\n        this.setState({timeScale: 0});\r\n      } else {\r\n        this.setState({timeScale: 1});\r\n      }\r\n    } else if (event.key === 'Q' && event.shiftKey){\r\n      this.build(this.state.world.cities[0], {q:1,r:1}, 'farm');\r\n      this.build(this.state.world.cities[0], {q:1,r:0}, 'house');\r\n      this.build(this.state.world.cities[0], {q:0,r:1}, 'hospital');\r\n      this.beam(this.state.world.cities[0], {q:0,r:0});\r\n      this.beam(this.state.world.cities[0], {q:1,r:0});\r\n      this.beam(this.state.world.cities[0], {q:0,r:1});\r\n      this.beam(this.state.world.cities[0], {q:1,r:1});\r\n    }\r\n  }\r\n  foundParty = (state: FoundPartyS) => {\r\n    this.state.world.party.name = state.name;\r\n    this.state.world.party.slogan = state.slogan;\r\n    this.state.world.cities[0].name = state.name;\r\n    if (state.community)\r\n      this.state.world.party.community = state.community;\r\n    if (state.ideal)\r\n      this.state.world.party.ideals = state.ideal;\r\n    const city = this.state.world.cities.find((x) => x.key == state.cityKey);\r\n    if (city) {\r\n      GeneratePartyHQ(city, this.state.world.party);\r\n    }\r\n    this.state.world.calculateComputedState();\r\n    this.setState({\r\n      world: this.state.world,\r\n      activeModal: null});\r\n  }\r\n  get difficulty(){\r\n    return this.state.world.alien.difficulty;\r\n  }\r\n  build = (city: City, where: HexPoint, what: BuildingTypes) => {\r\n    const cost = this.difficulty.cost.emptyHex.build[what];\r\n    if (this.state.world.alien.canAfford(cost)){\r\n      this.state.world.alien.purchase(cost);\r\n      GenerateBuilding(city, what, where);\r\n    }\r\n    \r\n    this.setState({world: this.state.world});\r\n  }\r\n  upgrade = (city: City, what: IBuilding) => {\r\n    const cost = this.difficulty.cost.hex.upgrade;\r\n    if (this.state.world.alien.tryPurchase(cost)){\r\n      what.upgraded = true;\r\n    }\r\n    \r\n    this.setState({world: this.state.world});\r\n  }\r\n  beam = (city: City, where: HexPoint) => {\r\n    const cost = this.difficulty.cost.hex.beam;\r\n    if (this.state.world.alien.canAfford(cost)){\r\n      this.state.world.alien.purchase(cost);\r\n      const newUFO = new UFO(city.ufos.length, where, 'beam-in');\r\n      city.ufos.push(newUFO);\r\n      window.setTimeout(() => {\r\n        city.historicalBeans.push(GenerateBean(city, city.historicalBeans.length, where));\r\n        this.setState({world: this.state.world});\r\n      }, 3000);\r\n\r\n      this.setState({world: this.state.world}, () => {\r\n        this.removeUFO(city, newUFO.key);\r\n      });\r\n    }\r\n  }\r\n  removeUFO(city: City, key: number){\r\n    window.setTimeout(() => {\r\n      const myUFOI = city.ufos.findIndex((x) => x.key === key);\r\n      if (myUFOI > -1)\r\n        city.ufos.splice(myUFOI, 1);\r\n    }, 7000);\r\n  }\r\n  foundCharity = (good: TraitGood, name: string, budget: number) => {\r\n    this.state.world.addCharity(good, name, budget);\r\n    this.setState({world: this.state.world});\r\n  }\r\n  vaporize = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.vaporize)){\r\n      if (bean.city){\r\n        bean.die('vaporization');\r\n      }\r\n      this.setState({world: this.state.world});\r\n    }\r\n  }\r\n  abduct = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.abduct)){\r\n      bean.abduct(this.state.world.alien);\r\n      this.setState({world: this.state.world});\r\n    }\r\n  }\r\n  releaseBean = () => {\r\n    if(this.state.world.alien.abductedBeans.length > 0){\r\n      const lucky_bean = this.state.world.alien.abductedBeans.shift();\r\n      if (lucky_bean instanceof Bean){\r\n        lucky_bean.lifecycle = 'alive';\r\n      } else {\r\n        window.alert(\"releasing data beans is unimplemented\");\r\n      }\r\n    }\r\n  }\r\n  setResearch = (t: Tech) => {\r\n    this.state.world.alien.currentlyResearchingTech = t;\r\n    this.setState({world: this.state.world});\r\n  }\r\n  support = (bean: Bean) => {\r\n    bean.lastApprovalDate = Now(this.state.world);\r\n    if (bean.city)\r\n      bean.calculateBeliefs(this.state.world.economy, bean.city, this.state.world.law, this.state.world.party);\r\n    this.setState({world: this.state.world});\r\n  }\r\n  scan = (bean: Bean) => {\r\n    if (this.state.world.alien.canAfford(this.state.world.alien.difficulty.cost.bean.scan)){\r\n      this.state.world.alien.purchase(this.state.world.alien.difficulty.cost.bean.scan);\r\n      this.state.world.alien.scanned_bean[bean.key] = true;\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  washCommunity = (bean: Bean, a: TraitCommunity) => {\r\n    if (bean.discrete_sanity > 0 && this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainwash_ideal)){\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean.brainwash_ideal.psi || 0);\r\n      if (bean.community === 'ego')\r\n        bean.community = 'state';\r\n      else bean.community = 'ego';\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  washMotive = (bean: Bean, a: TraitIdeals) => {\r\n    if (bean.discrete_sanity > 0 && this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainwash_ideal)){\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean.brainwash_ideal.psi || 0);\r\n      if (bean.ideals === 'prog')\r\n        bean.ideals = 'trad';\r\n      else bean.ideals = 'prog';\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  washNarrative = (bean: Bean, a: TraitFaith) => {\r\n    if (bean.discrete_sanity > 0 && this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainwash_ideal)){\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean.brainwash_ideal.psi || 0);\r\n      const oldFaith = bean.faith;\r\n      while (bean.faith === oldFaith)\r\n        bean.faith = GetRandom(['rocket', 'dragon', 'music', 'noFaith']);\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  washBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (bean.discrete_sanity > 0 && this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainwash_secondary)){\r\n      bean.beliefs.splice(\r\n        bean.beliefs.indexOf(a), 1\r\n      );\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean.brainwash_secondary.psi || 0);\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  implantBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (bean.discrete_sanity > 0 && this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainimplant_secondary)){\r\n      bean.beliefs.push(a);\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean.brainimplant_secondary.psi || 0);\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  setPolicy = (axis: LawAxis, policy: IPolicy) => {\r\n    this.state.world.party.platform[axis] = policy;\r\n    this.state.world.calculateComputedState();\r\n    this.setState({world: this.state.world});\r\n  }\r\n  onDeath = (event: IEvent) => {\r\n    this.startSpotlight(event);\r\n  }\r\n  private timescaleBeforeSpotlight: number = 1;\r\n  startSpotlight(event: IEvent){\r\n    this.timescaleBeforeSpotlight = this.state.timeScale;\r\n    this.setState({\r\n      spotlightEvent: event,\r\n      timeScale: 0\r\n    }, () => {\r\n      setTimeout(() => this.endSpotlight(), SpotlightDurationTimeMS);\r\n    });\r\n  }\r\n  endSpotlight(){\r\n    this.setState({\r\n      timeScale: this.timescaleBeforeSpotlight,\r\n      spotlightEvent: undefined\r\n    });\r\n  }\r\n  getPanel(){\r\n    switch(this.state.activeRightPanel){\r\n      case 'overview':\r\n        if (this.state.activeCityID == null) {\r\n          return <OverviewPanel beans={this.state.world.beans} utopia={this.state.world.party} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>\r\n        } else {\r\n          const city = this.state.world.cities.find((x) => x.key == this.state.activeCityID);\r\n          if (city) {\r\n            \r\n            if (this.state.activeHex != null){\r\n              return <HexPanel city={city} hex={this.state.activeHex} difficulty={this.state.world.alien.difficulty}\r\n                clearHex={() => this.setState({activeHex: null})}\r\n                beam={(where) => this.beam(city, where)} \r\n                upgrade={(what) => this.upgrade(city, what)} \r\n                build={(where, what) => {this.build(city, where, what)}}></HexPanel>\r\n            }\r\n            else if (this.state.activeBeanID != null) {\r\n              const bean = city.beans.find((y) => y.key == this.state.activeBeanID);\r\n              if (bean)\r\n                return <BeanPanel bean={bean} city={city} alien={this.state.world.alien} \r\n                economy={this.state.world.economy} party={this.state.world.party} bus={this.state.world.bus} law={this.state.world.law}\r\n                scan={this.scan} vaporize={this.vaporize}\r\n                brainwash={() => this.setState({activeModal:'brainwash'})}\r\n                abduct={this.abduct}\r\n                gift={() => this.setState({activeModal:'brainwash'})}\r\n                clearCity={() => this.setState({activeCityID: null, activeBeanID: null})}></BeanPanel>\r\n            }\r\n\r\n            return <OverviewPanel beans={city?.beans} utopia={this.state.world.party}  city={city} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>            \r\n          }\r\n          else\r\n            return <div>\r\n            </div>\r\n        }\r\n      case 'goals':\r\n        return <GoalsPanel player={this.state.world.alien} progress={this.state.world.alien}></GoalsPanel>\r\n      case 'events':\r\n        return <EventsPanel events={this.state.world.bus.buffer} selectBean={(beankey?: number) => {\r\n          if (beankey)\r\n            this.setState({activeCityID: this.state.world.cities[0].key, activeBeanID: beankey, activeHex: null, activeRightPanel: 'overview'})\r\n        }}></EventsPanel>\r\n    }\r\n  }\r\n  renderGeo() {\r\n    const COL = this.state.world.economy.getCostOfLiving();\r\n    return this.state.world.cities.map((t) => {\r\n        return (\r\n          <WorldTile tile={t} city={t} costOfLiving={COL} key={t.key} spotlightEvent={this.state.spotlightEvent} activeBeanID={this.state.activeBeanID}\r\n            onClick={() => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: null})} \r\n            onBeanClick={(b) => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: b.key})} \r\n            onHexClick={(hex) => {this.setState({activeCityID: t.key, activeHex: hex, activeBeanID: null, activeRightPanel: 'overview'})}}\r\n            ></WorldTile>\r\n        )\r\n      });\r\n  }\r\n  renderNetwork(){\r\n    return <div>\r\n      <div className=\"horizontal max-w-500 m-t-2em\">\r\n        <button type=\"button\">\r\n        😎 Influence\r\n        </button>\r\n        <button type=\"button\">\r\n        🚩 Party Preference\r\n        </button>\r\n        <button type=\"button\">\r\n        📈 Demographics\r\n        </button>\r\n      </div>\r\n      <SocialGraph costOfLiving={this.state.world.economy.getCostOfLiving()} \r\n        beans={this.state.world.beans}\r\n        onClick={(b) => this.setState({activeCityID: b.cityKey, activeRightPanel: 'overview', activeBeanID: b.key})} ></SocialGraph>\r\n    </div>\r\n  }\r\n  main(){\r\n    switch(this.state.activeMain){\r\n      case 'network':\r\n        return this.renderNetwork();\r\n      default:\r\n        return this.renderGeo();\r\n    }\r\n  }\r\n  render() {\r\n    const season = Season[this.state.world.date.season];\r\n    return (\r\n    <div className=\"canvas\">\r\n      <TransformWrapper \r\n        defaultScale={1}\r\n        wheel={{step: 48}}>\r\n        <TransformComponent>\r\n          <div className=\"world\">\r\n            {this.main()}\r\n          </div>\r\n        </TransformComponent>\r\n      </TransformWrapper>\r\n      <div className=\"overlay\">\r\n        <Modal show={this.state.activeModal == 'party_creation'} onClick={() => this.setState({activeModal: null})} hideCloseButton={true}>\r\n          <FoundParty cities={this.state.world.cities} onFound={this.foundParty}></FoundParty>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'party'} onClick={() => this.setState({activeModal: null})}>\r\n          <PartyOverview world={this.state.world} setPolicy={this.setPolicy}></PartyOverview>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'polisci'} onClick={() => this.setState({activeModal: null})}>\r\n          <ResearchPanel release={this.releaseBean} setResearch={this.setResearch} player={this.state.world.alien}></ResearchPanel>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'policy'} onClick={() => this.setState({activeModal: null})}>\r\n          <GovernmentPanel world={this.state.world}></GovernmentPanel>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'campaign'} onClick={() => this.setState({activeModal: null})}>\r\n          <CampaignsPanel></CampaignsPanel>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({activeModal: null})}>\r\n          {(this.state.activeModal == 'economy'? <EconomyReport world={this.state.world}></EconomyReport> : '')}\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'brainwash'} onClick={() => this.setState({activeModal: null})}>\r\n          {(this.state.activeModal == 'brainwash'? <BrainwashingContent \r\n            world={this.state.world} beanID={this.state.activeBeanID}\r\n            washCommunity={this.washCommunity}\r\n            washMotive={this.washMotive}\r\n            washNarrative={this.washNarrative}\r\n            washBelief={this.washBelief}\r\n            implantBelief={this.implantBelief}>\r\n          </BrainwashingContent> : '')}\r\n        </Modal>\r\n        <div className=\"left\">\r\n          <div className=\"top\">\r\n            <span>\r\n            👽 Alien 🌍 Utopia 🔬 Lab\r\n            </span>\r\n            <span>\r\n              &nbsp;\r\n              Year {this.state.world.date.year}, \r\n              &nbsp;\r\n              {season} {this.state.world.date.day} {this.renderHour()}\r\n            </span>\r\n            <span>\r\n              6 mo 5 days til Grade\r\n            </span>\r\n            <button type=\"button\" onClick={() => this.setState({activeMain: 'network'})}>🌐</button>\r\n            <button type=\"button\" onClick={() => this.setState({activeMain: 'geo'})}>🌎</button>\r\n            \r\n            <StopPlayFastButtons timeScale={this.state.timeScale} setTimeScale={(n: number) => {this.setState({timeScale: n})}}></StopPlayFastButtons>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <BubbleText changeEvent={this.state.world.alien.energy.change} icon=\"⚡️\">\r\n              <CapsuleLabel icon=\"⚡️\" label=\"Energy\">\r\n                {this.state.world.alien.energy.amount.toFixed(1)}\r\n              </CapsuleLabel>\r\n            </BubbleText>\r\n            <BubbleText changeEvent={this.state.world.alien.psi.change} icon=\"🧠\">\r\n              <CapsuleLabel icon=\"🧠\" label=\"Psi\">\r\n                {this.state.world.alien.psi.amount.toFixed(1)}\r\n              </CapsuleLabel>\r\n            </BubbleText>\r\n            <BubbleText changeEvent={this.state.world.alien.bots.change} icon=\"🤖\">\r\n              <CapsuleLabel icon=\"🤖\" label=\"Bots\">\r\n                {this.state.world.alien.bots.amount.toFixed(1)}\r\n              </CapsuleLabel>\r\n            </BubbleText>\r\n            <span>\r\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'economy'})}>State of the Utopia</button>\r\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'party'})}>🗳️ Gov</button>\r\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'polisci'})}>🧪 Research</button>\r\n              {/* <button type=\"button\" onClick={() => this.setState({activeModal:'campaign'})}>Campaigns</button> */}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"full-width-tabs\">\r\n            <button onClick={() => this.setState({activeRightPanel: 'overview'})}>📈 Overview</button>\r\n            <button onClick={() => this.setState({activeRightPanel: 'events'})}>\r\n              <TimelyEventToggle event={this.state.world.bus.speechcrime} eventIcon=\"🚨\" eventClass=\"police-siren\">📣</TimelyEventToggle> Events\r\n            </button>\r\n            <button onClick={() => this.setState({activeRightPanel: 'goals'})}>🏆 Goals</button>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            {this.getPanel()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n  renderHour(): string{\r\n    switch(this.state.world.date.hour){\r\n      default: return '☀️';\r\n      case Hour.Evening: return '🌇';\r\n      case Hour.Morning: return '🌄';\r\n      case Hour.Midnight: return '🌙';\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}