{"version":3,"sources":["events/Events.tsx","GameStorage.ts","simulation/Beliefs.tsx","state/entity.state.ts","WorldGen.tsx","simulation/Geography.tsx","simulation/Utils.tsx","World.tsx","MoverStoreSingleton.tsx","simulation/MoverBus.tsx","simulation/Government.tsx","simulation/Economy.tsx","simulation/Pickup.tsx","simulation/Bean.tsx","SignalStore.tsx","simulation/Player.tsx","simulation/RealEstate.tsx","simulation/City.tsx","simulation/Agent.tsx","simulation/AgentDuration.tsx","simulation/Time.tsx","simulation/AgentDurationInstance.tsx","simulation/BeanAndCity.tsx","WorldSound.tsx","simulation/MarketTraits.tsx","simulation/WorldSim.tsx","Game.tsx","state/features/world.reducer.ts","state/features/world.ts","state/hooks.ts","state/features/selected.reducer.ts","state/state.ts","widgets/ConfirmButton.tsx","widgets/StringDropdown.tsx","modal-content/BeliefRow.tsx","modal-content/Brainwashing.tsx","chrome/Subtab.tsx","simulation/Titles.tsx","modal-content/Society.tsx","i18n/text.ts","widgets/NeedReadout.tsx","modal-content/EconomyReport.tsx","modal-content/EscapeMenu.tsx","widgets/TreasuryReport.tsx","modal-content/Gov.tsx","modal-content/GreetingPanel.tsx","modal-content/LoadGameMenu.tsx","modal-content/MainMenu.tsx","widgets/RobotArm.tsx","modal-content/Research.tsx","modal-content/TraitsReport.tsx","petri-ui/AnimatedUFO2.tsx","simulation/Institutions.tsx","widgets/CostSmall.tsx","right-panel/DwellingList.tsx","right-panel/HexPanel.tsx","petri-ui/Building.tsx","petri-ui/PetriHexes.tsx","petri-ui/Magnet.tsx","petri-ui/AnimatedBean.tsx","petri-ui/AnimatedPickup.tsx","petri-ui/Mover.tsx","petri-ui/WorldTile.tsx","widgets/CardButton.tsx","right-panel/BeanPanel.tsx","right-panel/OverviewPanel.tsx","right-panel/DetailPanel.tsx","right-panel/Events.tsx","right-panel/Goals.tsx","right-panel/MarketPanel.tsx","simulation/SeedGen.tsx","widgets/Autosave.tsx","widgets/BubbleText.tsx","widgets/CapsuleLabel.tsx","widgets/Modal.tsx","widgets/Season.tsx","widgets/SocialGraph.tsx","widgets/StopPlayFast.tsx","widgets/TimelyEventToggle.tsx","modal-content/Entitling.tsx","App.tsx","serviceWorker.js","index.js"],"names":["PubSub","onPublish","callbacks","current","undefined","args","this","forEach","c","callback","push","splice","indexOf","ChangePubSub","GameStorageInstance","Dirty","Saving","rawID","localStorage","getItem","id","parseInt","isNaN","slots","i","brief","JSON","parse","rawgame","errors","game","e","world","raw","stringify","Name","cities","byID","name","Population","beans","allIDs","map","x","filter","y","lifecycle","length","Age","day","date","hour","season","year","setItem","saveSlot","toString","publish","CommonalityChances","PrimaryBeliefData","prog","noun","adj","icon","description","rarity","trad","state","ego","NarrativeBeliefData","rocket","dragon","music","noFaith","SecondaryBeliefData","Diligence","Natalism","Antinatalism","Charity","Progressivism","Libertarianism","Wanderlust","Germophobia","Parochialism","Cosmopolitanism","Capitalism","Socialism","Communism","Fraud","Naturalism","Hedonism","Gluttony","Paranoia","Depression","Optimism","Authority","Anarchism","Greed","Bloodthirst","Extroversion","Introversion","Charisma","Gossip","Antagonism","Enthusiasm","Sadism","Vandalism","Delirium","DelusionalMania","Catatonia","Neuroticism","Dogmatism","Insanities","InsanityChances","SanityChances","BeliefsAll","Object","keys","RandomBeliefBucket","reduce","list","str","t","CreateEntitySlice","all","entity","key","nextID","max","Math","EntityAddToSlice","slice","newEntity","k","RandomSeeds","GetRandomGenerator","seed","Rand","PRNG","sfc32","GetRandomNumber","min","randomNumber","next","ceil","floor","GetRandomFloat","GetRandomRoll","chance","GetRandom","choices","GetRandomIndex","RandomIdeal","RandomCommunity","RandomFaith","PI","CityPrefixes","CityFirstsnames","CityLastnames","GenerateCity","numberOfRings","radius","hexes","hex_spiral","q","r","district_hex_size","DistrictHexSize","petriRadius","petriOrigin","GenerateGeography","deadBeanKeys","beanKeys","ufoKeys","pickupKeys","buildingKeys","pickupMagnetPoint","costOfLiving","buildingMap","districtKeys","GenerateDistrictsAndLots","city","lots","ds","isCenter","d","kind","hex","hexString","point","hex_to_pixel","GenerateDistrict","DistrictAddLots","urbanHexes","ruralHexes","district","lotSlice","h","lot","districtKey","LotHexSizePX","GenerateBean","parent","hexPoint","job","newBean","cityKey","ethnicity","community","ideals","faith","stamina","health","food","discrete_food","discrete_health","discrete_sanity","discrete_stamina","discrete_fun","housing","graceTicks","dob","sanity","beliefs","hedonHistory","priorities","happiness","flatAverage","maxSource","minSource","weightedAverage","lastHappiness","hedonFiveDayRecord","fairGoodPrice","bornInPetri","cash","ticksSinceLastSale","ticksSinceLastRelax","lastChatMS","action","actionData","act","activity_duration","beanBeliefCount","random","newBelief","includes","split","MathClamp","input","SampleNormalDistribution","u","v","mean","standardDeviation","sqrt","log","Hex","hex_directions","hex_direction","direction","hex_neighbor","dir","hex_ring","center","a","results","cube","b","hex_add","j","concat","OriginAccelerator","velocity","point_normalize","p","magnitude","point_magnitude","accelerate_towards","mover","plane","target","acceleration","maxSpeed","colDistance","brake","getAvoidanceVelocity","delta","avoidV","accelerator_coast","cube_to_axial","cube_round","axial_to_cube","pixel_to_hex","lerp","cube_lerp","z","rx","round","ry","rz","x_diff","abs","y_diff","z_diff","cube_linedraw","N","cube_distance","Orientation","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","layout_pointy","size","origin","M","pt","polarToPoint","cos","az","sin","transformPoint","transform","BuildingIcon","UpgradedBuildingIcon","BuildingJobIcon","BuildingToGood","GoodToBuilding","JobToBuilding","BuildingToJob","MaslowHappinessScore","MoverStoreInstance","cache","bins","type","newPos","oldHex","Get","oldBin","oldI","newHexStr","selfKey","allKeysInBin","Array","isArray","keyInBin","GetOtherKeysInHexBin","otherKey","PickupPhysics","BeanPhysics","TraitIcon","GoodToThreshold","warning","sufficient","abundant","JobToGood","GoodIcon","EmoteIcon","EmotionWorth","EmotionSanity","PlayerKnowsPrereq","prereq","seen","some","PlayerKnowsBelief","BeliefString","LawData","group","axis","prereqs","CrimeData","IsLaw","gov","l","lawTree","GovPurchaseQualifiesForWelfare","law","buyer","good","bean","GovCanPayWelfare","price","BeanDistrictIdeologyBonus","BeanBelievesIn","AllGoods","MarketTransact","market","listing","demand","seller","salesTaxPercentage","MarketListingSubtract","listPrice","tax","grossPrice","bought","MarketGovernmentTransact","quantity","listings","EconomyTryTransact","economy","getSeller","minDemand","maxDemand","monthlyDemand","MarketLowestPriceListing","actualDemand","salesTaxPercent","receipt","unfulfilledMonthlyDemand","GetFairGoodPrice","econ","supply","monthlySupply","GetCostOfLiving","fullListings","numberOfSamePriceListings","lowPrice","GenerateEmoteFromBean","emote","BeanCalculateHealth","difficulty","BeanCalculateStamina","BeanCalculateSanity","BeanCalculateFood","BeanMaybeChat","Date","now","roll","BeanEmote","source","out","trait","BeanMaybeBaby","BeanIsInCrisis","BeanCanBaby","base","BeanBabyChance","trigger","message","BeanMaybeDie","cause","isDire","BeanDie","pains","emotes","death","beanKey","BeanLoseSanity","amount","multiplier","BeanGetSpeech","chat","participation","preachBelief","BeanCanPurchase","cost","sanityBonus","BeanGetFace","faceOverride","assault","victimBeanKey","assaultType","chase","BeanMaybeGetInsanity","insanity","existingBeliefs","s","find","GetInsanityFromBrainwashing","newInsanity","SignalStoreInstance","alienEnergy","alienBots","alienHedons","newTraitSeen","events","autosave","Goals","found_utopia","text","check","buildings","build_house_n_farm","reward","energy","bots","beam_3","scan","alien","scanned_bean","set_policy","brainwash","Curriculums","GradeWorld","Happiness","BooleanAverageGrader","o","Prosperity","Stability","Dogma","GradeUpToNumber","speechcrimes","RubricDescription","number","allowance","maximum","NormalizedScoreToGrade","array","grade","normNumber","GradeWeights","A","B","C","D","F","TechData","tech","techPoints","PlayerReward","player","change","hedons","HasResearched","techProgress","researchPoints","PlayerCanAfford","qty","PlayerTryPurchase","PlayerPurchase","DwellingKindToIcon","apartment","house","townhouse","loft","EnterpriseBuildings","BuildingNumOfOpenJobs","upgradedJobs","BuildingJobs","BuildingMaximumJobs","employeeBeanKeys","BeanLoseJob","employerEnterpriseKey","building","enterprise","enterprises","ownerBeanKey","BuildingUnsetJob","oldLen","BuildingTryFreeBean","BeanActions","enter","agent","elapsed","deltaMS","destinationTargetIndex","destinationIndex","destinations","intent","newActivity","console","warn","oldAccelerator","newAccelerator","collide","GetOthersInHexBin","vec","sib","UpdatePosition","beanHitDestination","nearbyBeanKeys","bKey","squared","pow","CityGetNearestNeighbors","targets","findNeedy","needy","targetBeanKey","persuasionStrength","BeanGetRandomChat","least","changeState","newState","WanderlustEmoteChance","beanEmote","exit","beanWork","belief","strength","defense","BeanMaybePersuaded","beanBePersuaded","top","travelState","sideEffect","substitute","SubstituteIntent","CreateTravelFromIntent","shift","BeanMaybeParanoid","targetPos","lastPoint","arrest","beanArrest","criminalBeanKey","crime","buyReceipt","buyAttempts","beanBuy","beanCrime","crimeGood","durationMS","beanRelax","desiredGoodState","EconomyCanBuy","BeanMaybeCrime","scarce","BeanMaybeScarcity","IntentToDestination","RouteRandomBuildingOfType","dwellingKey","dwelling","dwellings","buildingKey","lotKey","districts","RouteToHexAndPoint","destination","keysOfType","CityGetRandomHomelessSleepingBuilding","Route","RouteRandomHomelessSleepingBuilding","buildingDest","CityGetRandomEntertainmentBuilding","nature","GetPriority","deviation","StatsNormalDev","StatsNormalMean","bean_life","vital_thresh","shelter","medicine","GetPriorities","priors","priority","sort","buildingType","CityGetRandomBuildingOfType","start","nearestHex","Season","AgentDurationStoreInstance","duration","BeanTryFindJob","employableBuildingKeys","employableBuildings","jobs","ideologyBonus","isEmpty","openJobs","BeanSetJob","PartOfDay","TicksPerHour","SFXToFile","SoundBuffer","file","volume","buffer","ended","audio","play","aud","Audio","process","WorldSfxInstance","lib","sfx","CommonalityBaseCost","CommonalityRandomMaxCost","getMarketTraitListing","rare","simulate_world","eKey","workers","enterpriseType","share","owner","pay","commShare","simulate_every_other_tick","pop","unshift","simulate_every_day","marketTraitsForSale","newTraits","GetMarketTraits","WorldAddEvent","collected","cityID","selectBeansByCity","allowedTreasury","perBean","MaybeRebate","values","simulate_every_week","fun","simulate_every_month","arr","percent","sum","yearlyInflationDollars","richest","obj","winner","WorldInflate","simulate_every_year","income","currentlyResearchingTech","abductedBeanKeys","beliefInventory","gems","CoL","ticks","faceOverrideTicks","jailTicksLeft","ageResult","diff","wasNotHungry","wasNotSick","degrade_per_tick","penalty","starving_health","starve","sick","BeanAge","pickups","WorldOnBeanDie","lastHex","openDwellingKey","dKey","occupantKey","allSum","daySum","sources","allSources","val","GetHedonReport","goals","goal","goalProgress","done","step","CheckGoals","workingReportCard","CheckReportCard","removedID","deathEvent","luckyBeanKey","triadToString","sign","costs","tortrons","join","DefaultDifficulty","emptyHex","build","farm","theater","hospital","church","jail","graveyard","park","beam","upgrade","fallow_2_rural","rural_2_urban","add_loft","bean_brain","brainwash_ideal","brainimplant_secondary","brainwash_secondary","abduct","gift","empower","vaporize","siphon","scrubHedons","resource","common","uncommon","unique","homeless_health","death_chance","starvation","sickness","exposure","vaporization","report_card_progression","worldSlice","createSlice","initialState","ufos","titles","crimes","laws","Spring","seenBeliefs","next_grade","pastReportCards","spotlightEvent","insanityEvent","GetBlankWorldState","reducers","refreshMarket","magnetChange","payload","px","worldTick","newGame","dls","natureID","loadGame","what","newBuilding","upgradedLoft","upgradedStorage","enterpriseKey","dwellingKeys","newDwell","interredBeanKeys","sellerCityKey","sellerEnterpriseKey","GenerateIBuilding","upgradeDistrict","changeEnterprise","newType","fireBean","upgradeLoft","upgradeStorage","ufo","where","remove_ufo","ufoKey","cheatAdd","release","lucky_bean_key","luckyBean","washCommunity","washMotive","washNarrative","oldFaith","washBelief","sanityCostBonus","extractBelief","existing","chargeBonus","acknowledgeNewInsanity","setResearch","implant","PlayerUseTraitGem","setCrimeLegality","legality","pickUpPickup","pickup","pickupKey","amt","_changeState","beanGiveCharity","senderBeanKey","_emote","needyBeanKey","_ifBelievesInMaybeEmote","last","GoodToJob","workedForEmployer","employer","EconomyEmployAndPrice","sellerBeanKey","EconomyProduceAndPrice","stolen","unluckyBean","ownerKey","unluckyBeanKey","witnesses","bK","person","perpBeanKey","BeanDidWitnessCrime","witness","criminal","punishment","TicksPerDay","jailPoint","jailHex","enactLaw","data","lawKey","repealLaw","beanInter","grave","buyBots","buyEnergy","buyTrait","addTitle","privileges","editTitle","oldTitle","newT","badge","titleKey","headwear","hat","manualSave","SaveGame","beanSetTitle","title","oldAct","ADS","beanPosition","actions","selectCityBeanIDs","createSelector","cityBeanIDs","beansByID","cityBeanKey","useAppDispatch","cityBeans","count","circle","square","triangle","useDispatch","useAppSelector","useSelector","selectedSlice","selectedCityKey","selectedBeanKey","doSelectCity","selectedBuildingKey","selectedDistrictKey","selectedLotKey","doSelectDistrict","doSelectLot","doSelectBuilding","doSelectBean","selectedHexKey","doSelectNone","store","configureStore","reducer","selected","middleware","getDefaultMiddleware","storeApi","startsWith","selectSelectedCity","selectSelectedBean","selectSelectedBuilding","buildingID","selectEventIDs","ConfirmButton","props","confirming","onConfirm","setState","className","onClick","click","disabled","confirmText","children","React","Component","StringDropdown","onChange","value","hint","hidden","titleCase","toUpperCase","options","getTitleForOption","getTextForOption","required","BeliefWidget","leftButton","titleView","bottomView","EditBeliefInput","divergent","frozen","available","wash","extract","SortedBeliefs","localeCompare","TraitInventoryList","dispatch","dogmatic","BrainwashingContent","isScanned","brains","colSpan","style","clear","Subtabs","additionalClasses","active","PrivilegeData","social_deference","criminal_immunity","tax_exemption","hereditary","gentility","SocietyPanel","onEdit","TitleEdit","ev","newArray","keyToName","starving","hungry","sated","stuffed","homeless","sleepy","awake","rested","sickly","bruised","fresh","sane","stressed","disturbed","housed","NeedReadout","dire","need","dire_style","width","full","full_style","header","median","half","EconomyReport","numDwellings","food_median","health_median","toFixed","shelter_median","wealth_total","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","unemployed","jobless","avg","meds","farmer","builder","doc","entertainer","EscapeMenu","TreasuryReport","coin","GovernmentPanel","useState","view","setView","CrimeDetailList","CrimeDetail","legalOptions","LegalitySwitch","opts","LawDetailList","enacted","lKey","revokeLaw","LawFormula","canSeeName","unlocked","every","PlayerMeetsPrereqs","has","PrereqString","GreetingPanel","whiteSpace","changeSeed","currentTarget","maxLength","fontFamily","fontSize","LoadGameMenu","MainMenu","continueID","HasContinueGame","GetGameSlots","startGame","RobotArm","height","xmlns","classN","fill","display","overflow","strokeWidth","stroke","cy","cx","tool","tools","loop","lastI","ResearchPanel","currentTech","tool1","setTool1","tool2","setTool2","tool3","setTool3","tool4","setTool4","useEffect","interval","window","setInterval","clearInterval","techs","progress","total","complete","isCurrent","rootClassName","renderTech","TraitsReport","AnimatedUFO2","showBeam","setShowBeam","setTimeout","EnterpriseTypes","EnterpriseTypeIcon","CostSmall","rider","DwellingList","beanNames","substr","BeamButton","BuildPanel","districtLots","targetLot","eHex","DistrictTypeIcon","urban","rural","fallow","DistrictTypeText","HexPanel","HexBuildingPanel","hasJobs","upgraded","renderDensityWarning","typ","WorkerList","EnterpriseTypePicker","substring","EnterpriseListings","hexDirectionToJobSlot","2","0","4","1","5","3","BuildingToJobIcon","PetriGoods","goodType","is","row","col","ii","PetriBuilding","UIBuilding","getStyle","UIBuildingSlots","jobSlot","hasJob","PetriLot","preventDefault","lotDrawn","PetriHex","extraClasses","hex_style","onMouseEnter","isDefaultPrevented","stopPropagation","viewBox","version","position","left","opacity","PetriHexes2","SocialBuildings","selectBuildingKeysByCity","selectBuildingsByCity","onClickBuilding","Magnet2","useRef","magnetPoint","BeanIsBuying","AnimatedBean","st","working","speech","face","classes","animationClasses","selectBeanAnimation","isSelected","sitStill","AnimatedPickup","played","setPlayed","useContext","SfxContext","Mover","MoverContext","el","onMove","pubsub","moverType","moverKey","subscribe","unsubscribe","ref","PetriBeanList","PickupList2","pKey","HexSizeR","WorldTile2","mtn_transforms","mtnRadius","bk","onMouseLeave","uK","CardButton","thin","singleLine","subtext","TraitToCard","renderInner","scanned","innerView","idealPro","idealCon","hedonTable","ActivityDisplay","ActivityIcon","acts","actDurations","BeanInnerPanel","setInnerView","DeadBeanActions","BeanPanel","renderTraits","entitle","TitleButton","TitleView","OverviewPanel","clearCity","avg_happy","avg_cash","scannedBeans","from","m","prev","get","set","Map","entries","aC","CityGetPopulationTraitsList","DetailPanel","openBrainwash","openEntitle","EventsPanel","eventIDs","reverse","elements","alert","tallTrigger","shouldEventJumpToBean","href","renderGoal","g","tooltip","renderReward","GoalsPanel","reportCard","margin","MarketPanel","MarketTraits","fourLetterWords","GetSeedName","rand","AutosaveWidget","isDirty","setDirty","isSaving","setSaving","onDirty","dirty","onSaving","BubbleNumberText","bubbleSeed","positive","bubbles","string","changeEvent","bubbleClass","BubbleSeenTraitsText","sub","setBubbles","onEvent","event","useBubbles","CapsuleLabel","label","EnergyAmount","BotsAmount","HedonAmount","Modal","show","closeButtonText","getButton","SeasonWidget","Morning","Noon","Evening","SocialGraph","static","StopPlayFastButtons","timeScale","setTimeScale","GeoNetworkButtons","activeMain","setActiveMain","TimelyEventToggle","eventCount","eventClass","eventIcon","EntitleModalContent","closeModal","createContext","StoreState","App","previousTimeMS","logicTickAccumulatorMS","millisecondsSinceLastSave","saveAccumulatorMS","tick","timeMS","deltaTimeMS","gameDeltaTimeMS","animate_ufos","getState","pickupIDs","pickupID","magnet","animate_pickups","actResult","exitAction","enterAction","animate_beans","requestAnimationFrame","cheatMode","keyupHandler","activeModal","newGameSeed","shiftKey","onDeath","startSpotlight","timescaleBeforeSpotlight","activeRightPanel","document","addEventListener","time","removeEventListener","endSpotlight","Provider","minScale","centerZoomedOut","centerOnInit","initialPositionX","limitToBounds","alignmentAnimation","wheel","slot","GetGame","n","getPanel","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.0a347ad0.chunk.js","sourcesContent":["import { Point } from \"../simulation/Geography\";\r\n\r\nexport type EventTrigger = 'speechcrime'|'birth'|'death'|'nojobslots'|'marketrefresh'|'persuasion'|'crimecrime';\r\n\r\nexport interface IEvent{\r\n    key: number;\r\n    icon: string;\r\n    message: string;\r\n    beanKey?: number;\r\n    cityKey?: number;\r\n    point?: Point;\r\n    trigger: EventTrigger;\r\n}\r\n\r\nexport const EventBufferLength = 25; \r\n\r\nexport class PubSub<T>{\r\n    constructor(private onPublish?: (args: T) => void){}\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public current: T|undefined = undefined;\r\n    public publish(args: T){\r\n        if (this.onPublish)\r\n            this.onPublish(args);\r\n        this.current = args;\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    public unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\n","import { PubSub } from \"./events/Events\";\r\nimport { IDate } from \"./simulation/Time\";\r\nimport { IWorldState } from \"./state/features/world\";\r\n\r\nconst GameSavePrefix = 'game-';\r\nconst GameBriefPrefix = 'game-brief-';\r\nconst LastGameSaveIDKey = 'last-game-id';\r\nconst MaxNumGameSlots = 3;\r\n\r\ninterface IWorldBrief {\r\n    Name: string,\r\n    Population: number,\r\n    Age: IDate\r\n}\r\nexport function isGame(g: {game: IWorldState}|{errors: string[]}): g is {game:IWorldState}{\r\n    return (<any>g).game != null;\r\n}\r\nexport class GameStorage{\r\n    HasContinueGame(): number|undefined{\r\n        const rawID = localStorage.getItem(LastGameSaveIDKey);\r\n        if (rawID == null)\r\n            return undefined;\r\n\r\n        const id = parseInt(rawID);\r\n        if (isNaN(id))\r\n            return undefined;\r\n\r\n        const rawgame = localStorage.getItem(`${GameSavePrefix}${id}`);\r\n        if (rawgame != null)\r\n            return id;\r\n        else\r\n            return undefined;\r\n    }\r\n    GetGameSlots(): {id: number, brief?: IWorldBrief}[] {\r\n        const slots: {id: number, brief: IWorldBrief}[] = [];\r\n        for (let i = 0; i < MaxNumGameSlots; i++) {\r\n            const brief = localStorage.getItem(`${GameBriefPrefix}${i+1}`);\r\n            slots.push({\r\n                id: i+1,\r\n                brief: brief ? JSON.parse(brief) : undefined\r\n            });\r\n        }\r\n        return slots;\r\n    }\r\n    GetGame(id: number): {game: IWorldState}|{errors: string[]}{\r\n        const rawgame = localStorage.getItem(`${GameSavePrefix}${id}`);\r\n        if (rawgame){\r\n\r\n        } else {\r\n            return {\r\n                errors: ['Cannot find game']\r\n            }\r\n        }\r\n        try {\r\n            const game = JSON.parse(rawgame);\r\n            return {\r\n                game: game as IWorldState\r\n            }\r\n        } catch(e) {\r\n            return {\r\n                errors: [e]\r\n            }\r\n        }\r\n    }\r\n    SaveGame(world: IWorldState){\r\n        const raw = JSON.stringify(world);\r\n        const brief: IWorldBrief = {\r\n            Name: world.cities.byID[0].name,\r\n            Population: world.beans.allIDs.map(x => world.beans.byID[x]).filter(y => y.lifecycle != 'dead').length,\r\n            Age: {\r\n                day: world.date.day,\r\n                hour: world.date.hour,\r\n                season: world.date.season,\r\n                year: world.date.year\r\n            }\r\n        };\r\n        localStorage.setItem(`${GameSavePrefix}${world.saveSlot}`, raw);\r\n        localStorage.setItem(`${GameBriefPrefix}${world.saveSlot}`, JSON.stringify(brief));\r\n        localStorage.setItem(LastGameSaveIDKey, world.saveSlot.toString());\r\n        this.Dirty.publish(false);\r\n        this.Saving.publish();\r\n    }\r\n    Dirty = new PubSub<boolean>();\r\n    Saving = new PubSub<void>();\r\n}\r\nexport const GameStorageInstance = new GameStorage();","import { TraitCommunity, TraitFaith, TraitIdeals, TraitSanity } from \"../World\";\r\nimport { GetRandom, GetRandomRoll } from \"../WorldGen\";\r\n\r\nexport type BeliefCommonality = 'common'|'uncommon'|'rare'|'unique';\r\nexport const CommonalityChances: {[b in BeliefCommonality]: number} = {\r\n    'common': 3,\r\n    'uncommon': 2,\r\n    'rare': 1,\r\n    'unique': 0\r\n};\r\n\r\nexport type TraitBelief = 'Diligence'| // happy from work\r\n'Natalism'| // increased % of having kids\r\n'Antinatalism'|\r\n'Naturalism'|\r\n'Hedonism'| //more entertainment\r\n'Progressivism'|\r\n'Libertarianism'|\r\n'Parochialism'|\r\n'Cosmopolitanism'|\r\n'Capitalism'|\r\n'Socialism'|\r\n'Communism'|\r\n// 'Tribalism'| \r\n// 'Globalism'| \r\n// 'Pacifism'| \r\n'Neuroticism'| // takes extra sanity damage\r\n'Dogmatism'| \r\n// 'Mysticism'| \r\n 'Paranoia'| \r\n// 'Evangelism'| \r\n// 'Fanaticism'| // doesn't like beings that don't share narrative \r\n'Authority'| //less crime, more crime reports\r\n'Anarchism'| // breaks rules easily\r\n'Sadism'| \r\n'Vandalism'|\r\n'Antagonism'|\r\n'Enthusiasm'|\r\n'Gossip'|\r\n'Extroversion'|\r\n'Charity'| // % to donate\r\n'Gluttony'|\r\n'Wanderlust'|\r\n'Germophobia'|\r\n'Bloodthirst'|\r\n'Introversion'|\r\n'Charisma'|\r\n'Depression'|\r\n'Optimism'|\r\n'Fraud'|\r\n'Greed'| // steal easier\r\n'Delirium'|\r\n'Catatonia'|\r\n'DelusionalMania';\r\n\r\n\r\n// 'friendly'| // likes all beings more\r\n// 'realistic'| // lower happiness\r\n// 'athletic'| // takes less health damage\r\n// 'open-minded'| // beliefs are easily changed\r\n\r\nexport type BeliefSubject = 'self'|'other';\r\nexport type BeliefVerb = 'are'|'arenot';\r\nexport interface IBeliefData {\r\n    noun: string,\r\n    adj: string,\r\n    icon: string,\r\n    description?: string,\r\n    rarity: BeliefCommonality,\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>\r\n}\r\nexport const PrimaryBeliefData: {[key in TraitIdeals|TraitCommunity]: IBeliefData} = {\r\n    prog: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️',\r\n        description: \"Strives to help others\", rarity: 'common',\r\n    },\r\n    trad: {\r\n        noun: 'Elitism', adj: 'Elitist', icon: '👑',\r\n        description: \"Strives for individual power\", rarity: 'common',\r\n    },\r\n    state: {\r\n        noun: 'Collectivism', adj: 'Collectivist', icon: '🕊️',\r\n        description: \"Trusts in the social group\", rarity: 'common',\r\n    },\r\n    ego: {\r\n        noun: 'Independence', adj: 'Independent', icon: '🦅',\r\n        description: \"Trusts only in oneself\", rarity: 'common',\r\n    },\r\n}\r\nexport const NarrativeBeliefData: {[key in TraitFaith]: IBeliefData} = {\r\n    rocket: {\r\n        noun: 'Futurism', adj: 'Futuristic', icon: '🚀',\r\n        description: \"Loves stories of the far future\", rarity: 'common',\r\n    },\r\n    dragon: {\r\n        noun: 'Mythology', adj: 'Mythical', icon: '🐲',\r\n        description: \"Loves stories of the legendary past\", rarity: 'common',\r\n    },\r\n    music: {\r\n        noun: 'Drama', adj: 'Dramatic', icon: '🎵',\r\n        description: \"Loves stories of emotional bonding\", rarity: 'common',\r\n    },\r\n    noFaith: {\r\n        noun: 'Nihilism', adj: 'Nihilist', icon: '⚫️',\r\n        description: \"Hates fairy tales\", rarity: 'common',\r\n    },\r\n}\r\nexport const SecondaryBeliefData: {[key in TraitBelief]: IBeliefData} = {\r\n    // misc 🎲 traits\r\n    Diligence: {\r\n        noun: 'Diligence', adj: 'Diligence', icon: '💪', rarity: 'common',\r\n        description: \"🎲 to 👍 while working\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['state', 'ego']\r\n    },\r\n    Natalism: {\r\n        noun: 'Natalism', adj: 'Natalist', icon: '👶', rarity: 'common',\r\n        description: \"Extra 🎲 for 👶;Extra 👍 after birth\" //implemented\r\n    },\r\n    Antinatalism: {\r\n        noun: 'Antinatalism', adj: 'Antinatalist', icon: '🚷', rarity: 'uncommon',\r\n        description: \"Less 🎲 for 👶;💢 after birth\" //implemented\r\n    },\r\n    Charity: {\r\n        noun: 'Charity', adj: 'Charitable', icon: '😇', rarity: 'uncommon',\r\n        description: \"🎲 to gift 💰 to the penniless; and spread 👍\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Progressivism: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️', rarity: 'uncommon',\r\n        description: \"🎲 to 👍 when paying taxes\" //implemented\r\n    },\r\n    Libertarianism: {\r\n        noun: 'Libertarianism', adj: 'Libertarian', icon: '🔫', rarity: 'rare',\r\n        description: \"🎲 to 💢 when paying taxes\", //implemented\r\n    },\r\n    Wanderlust: {\r\n        noun: 'Wanderlust', adj: 'Wanderer', icon: '🔭', rarity: 'uncommon',\r\n        description: \"🎲 to 👍 when travelling\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Germophobia: {\r\n        noun: 'Germophobia', adj: 'Germophobic', icon: '🤧', rarity: 'rare',\r\n        description: \"💢 when sick or working in hospital\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n\r\n    // work traits\r\n    Parochialism: {\r\n        noun: 'Parochialism', adj: 'Parochial', icon: '🐮', rarity: 'common',\r\n        description: \"Extra 👍 working 🌾; 💢 from dense houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Cosmopolitanism: {\r\n        noun: 'Cosmopolitanism', adj: 'Cosmopolitan', icon: '🍸', rarity: 'common',\r\n        description: \"Extra 👍 working 🎻; 💢 from rural houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Capitalism: {\r\n        noun: 'Capitalism', adj: 'Capitalist', icon: '🎩', rarity: 'common',\r\n        description: \"💢 working in co-ops and communes; Extra 👍 when owner\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Socialism: {\r\n        noun: 'Socialism', adj: 'Socialist', icon: '🤝', rarity: 'common',\r\n        description: \"Extra 👍 working in co-ops\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Communism: {\r\n        noun: 'Communism', adj: 'Communist', icon: '⚒️', rarity: 'common',\r\n        description: \"💢 working in companies\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n\r\n    Fraud: {\r\n        noun: 'Fraud', adj: 'Fraudulent', icon: '🤥', rarity: 'uncommon',\r\n        description: \"🎲 to avoid taxes; Extra 🎲 for theft 😈 Crime\"\r\n    },\r\n\r\n    // 👍 traits\r\n    Naturalism: {\r\n        noun: 'Naturalism', adj: 'Naturalist', icon: '🛶', rarity: 'uncommon',\r\n        description: \"Extra 👍 from 😎; 😎 3x longer\" //implemented\r\n    },\r\n    Hedonism: {\r\n        noun: 'Hedonism', adj: 'Hedonistic', icon: '💋', rarity: 'uncommon',\r\n        description: \"🎲 to emote extra 👍;🎲 to 💢 when working;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Gluttony: {\r\n        noun: 'Gluttony', adj: 'Glutton', icon: '🎃', rarity: 'common',\r\n        description: \"Extra 👍 when stuffed; Extra 💢 when hungry;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Paranoia: {\r\n        noun: 'Paranoia', adj: 'Paranoid', icon: '👽', rarity: 'uncommon',\r\n        description: \"🎲 to 💢 at any time\",  //implemented\r\n        //idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n    Depression: {\r\n        noun: 'Depression', adj: 'Depressive', icon: '😓', rarity: 'common',\r\n        description: \"🎲 to 💢 when unhappy\",\r\n    },\r\n    Optimism: {\r\n        noun: 'Optimism', adj: 'Optimistic', icon: '😺', rarity: 'uncommon',\r\n        description: \"🎲 to 👍 when happy\",\r\n    },\r\n\r\n    // 😈 Crime traits\r\n    Authority: {\r\n        noun: 'Authority', adj: 'Authoritarian', icon: '👢', rarity: 'common',\r\n        description: \"Less 🎲 for all 😈 Crime; Extra 🎲 to report Crime\", //implemented\r\n        //idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    Anarchism: {\r\n        noun: 'Anarchism', adj: 'Anarchist', icon: '🖕', rarity: 'uncommon',\r\n        description: \"Extra 🎲 for all 😈 Crime; Less 🎲 to report Crime\", //implemented\r\n    },\r\n    Greed: {\r\n        noun: 'Greed', adj: 'Greedy', icon: '🤑', rarity: 'common',\r\n        description: \"Extra 🎲 for theft 😈 Crime; Extra 👍 when rich\",\r\n        //idealCon: ['prog'], idealPro: ['trad']\r\n    },\r\n    Bloodthirst: {\r\n        noun: 'Bloodthirst', adj: 'Bloodthirsty', icon: '🩸', rarity: 'rare',\r\n        description: \"High 🎲 to ☠️ Kill during 😈 Crime\"\r\n    },\r\n    // Pacifism: {\r\n    //     noun: 'Pacifism', adj: 'Pacifist', icon: '😘', rarity: 'common',\r\n    //     description: \"will never punish others\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n    // Mysticism: {\r\n    //     noun: 'Mysticism', adj: 'Mystical', icon: '🔮', rarity: 'common',\r\n    //     description: \"🎲 to 👏 in any conversation\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n\r\n    // 🗣️ traits\r\n    Extroversion: {\r\n        noun: 'Extroversion', adj: 'Extroverted', icon: '🤩', rarity: 'common',\r\n        description: \"Extra 🎲 to start a 🗣️\", //implemented\r\n    },\r\n    Introversion: {\r\n        noun: 'Introversion', adj: 'Introverted', icon: '🤓', rarity: 'uncommon',\r\n        description: \"Less 🎲 to be in a 🗣️\", //implemented\r\n    },\r\n    Charisma: {\r\n        noun: 'Charisma', adj: 'Charismatic', icon: '😏', rarity: 'uncommon',\r\n        description: \"More 🎲 to persuade in a 🗣️\", //implemented\r\n    },\r\n    Gossip: {\r\n        noun: 'Gossip', adj: 'Gossipy', icon: '📞', rarity: 'common',\r\n        description: \"🎲 to spread 💢 in a 🗣️; 🎲 to 👍 after 🗣️\", //implemented\r\n    },\r\n    Antagonism: {\r\n        noun: 'Antagonism', adj: 'Antagonistic', icon: '🤬', rarity: 'common',\r\n        description: \"🎲 to spread 💢 in a 🗣️\" //implemented\r\n    },\r\n    Enthusiasm: {\r\n        noun: 'Enthusiasm', adj: 'Enthusiastic', icon: '🥳', rarity: 'common',\r\n        description: \"🎲 to spread 👍 in a 🗣️\" //implemented\r\n    },\r\n    // Globalism: {\r\n    //     noun: 'Globalism', adj: 'Globalist', icon: '🌍', rarity: 'common',\r\n    //     description: \"🎲 to 👍 other hair colors in a 🗣️\",\r\n    //     idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    // },\r\n    // Tribalism: {\r\n    //     noun: 'Tribalism', adj: 'Tribal', icon: '🏰', rarity: 'common',\r\n    //     description: \"🎲 to 💢 other hair colors in a 🗣️\",\r\n    //     idealCon: ['prog'], idealPro: ['state', 'ego']\r\n    // },\r\n\r\n    // narrative traits\r\n    // Evangelism: {\r\n    //     noun: 'Evangelism', adj: 'Evangelist', icon: '📣', rarity: 'common',\r\n    //     description: \"+50% persuasion of 🎭\",\r\n    //     idealCon: ['ego'], idealPro: ['state']\r\n    // },\r\n    // Fanaticism: {\r\n    //     noun: 'Fanaticism', adj: 'Fanatical', icon: '👺', rarity: 'common',\r\n    //     description: \"🎲 to 💢 other 🎭\",\r\n    //     idealCon: ['prog'], idealPro: []\r\n    // },\r\n    // Xenophobia: {\r\n    //     noun: 'Xenophobia', adj: 'Xenophobic', icon: '🛑', rarity: 'common',\r\n    //     description: \"🎲 to 💢 when living with other hair colors\",\r\n    // },\r\n\r\n    // super bad traits\r\n    Sadism: {\r\n        noun: 'Sadism', adj: 'Sadistic', icon: '😈', rarity: 'rare',\r\n        description: \"🎲 to ☠️ Kill in a 🗣️;👍 from ☠️ Kill\"\r\n    },\r\n    Vandalism: {\r\n        noun: 'Vandalism', adj: 'Vandal', icon: '💩', rarity: 'rare',\r\n        description: \"🎲 to destroy goods;👍 from 😈 Theft Crime\"\r\n    },\r\n\r\n    // madness traits\r\n    Delirium: {\r\n        noun: 'Delirium', adj: 'Delirious', icon: '😪', rarity: 'unique',\r\n        description: \"Chooses actions at random\"\r\n    },\r\n    DelusionalMania: {\r\n        noun: 'Delusional Mania', adj: 'Delusional Maniac', icon: '😵', rarity: 'unique',\r\n        description: \"🎲 to ☠️ nearby subjects\"\r\n    },\r\n    Catatonia: {\r\n        noun: 'Catatonia', adj: 'Catatonic', icon: '😶', rarity: 'unique',\r\n        description: \"-60% walk speed. Cannot work.\"\r\n    },\r\n\r\n    // meta-traits\r\n    Neuroticism: {\r\n        noun: 'Neuroticism', adj: 'Neurotic', icon: '😱', rarity: 'rare',\r\n        description: \"+100% 🧠 damage\", //implemented\r\n    },\r\n    Dogmatism: {\r\n        noun: 'Dogmatism', adj: 'Dogmatic', icon: '🐶', rarity: 'uncommon',\r\n        description: \"Cannot change beliefs\", //implemented\r\n    },\r\n};\r\n\r\nexport function IsIdealDivergent(con: TraitCommunity|TraitIdeals, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    switch(con){\r\n        case 'trad':\r\n        case 'prog':\r\n            return con == utopiaMotive;\r\n        case 'state':\r\n        case 'ego':\r\n            return con == utopiaCommunity;\r\n    }\r\n}\r\n\r\nexport function IsBeliefDivergent(belief: TraitBelief, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    const data = SecondaryBeliefData[belief];\r\n    return data.idealCon != null && data.idealCon.reduce((isDivergent: boolean, con) => {\r\n        return isDivergent || IsIdealDivergent(con, utopiaMotive, utopiaCommunity);\r\n    }, false);\r\n}\r\n\r\nexport type InsanityTraits = 'Depression'|'Catatonia'|'Neuroticism'|'DelusionalMania'|'Delirium'|'Sadism'|'Antagonism';\r\nexport const Insanities: Array<InsanityTraits> = ['Depression','Catatonia','Neuroticism','DelusionalMania','Delirium','Sadism','Antagonism'];\r\nconst InsanityChances = {\r\n    'Catatonia': 2,\r\n    'Neuroticism': 2,\r\n    'DelusionalMania': 2,\r\n    'Delirium': 2,\r\n    'Sadism': 2,\r\n    'Depression': 1,\r\n    'Antagonism': 1\r\n};\r\n/**\r\n * maps bean sanity to chance of getting any insanity.\r\n * \r\n * Value will be between 0-1\r\n */\r\nconst SanityChances = {\r\n    'psychotic': 1,\r\n    'disturbed': .65,\r\n    'stressed': .1,\r\n    'sane': 0\r\n}\r\nexport function GetInsanityFromBrainwashing(seed: string, sanity: TraitSanity, existingBeliefs: TraitBelief[]): InsanityTraits|undefined{\r\n    const chance = SanityChances[sanity];\r\n    if (GetRandomRoll(seed, chance)){\r\n        const list: InsanityTraits[] = [];\r\n        for (let s = 0; s < Insanities.length; s++) {\r\n            const insanity = Insanities[s];\r\n\r\n            // don't allow duplicate insanities\r\n            if (existingBeliefs.find(x => x === insanity))\r\n                continue;\r\n            \r\n            let slots = InsanityChances[insanity];\r\n            if (sanity === 'psychotic')\r\n                slots *= 2;\r\n            \r\n            for (let i = 0; i < slots; i++) {\r\n                list.push(insanity);\r\n            }\r\n        }\r\n        return GetRandom(seed, list);\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const BeliefsAll = Object.keys(SecondaryBeliefData).map((x) => x as TraitBelief);\r\n\r\n/**\r\n * static list of beliefs with rarity\r\n * \r\n * common traits are duplicated many times within the array\r\n * rarer traits have fewer duplications or a singular instance \r\n */\r\nexport const RandomBeliefBucket = Object.keys(SecondaryBeliefData).reduce((list, str) => {\r\n    const t = str as TraitBelief;\r\n    const slots = CommonalityChances[SecondaryBeliefData[t].rarity];\r\n    for (let i = 0; i < slots; i++) {\r\n        list.push(t);\r\n    }\r\n    return list;\r\n}, [] as TraitBelief[]);\r\n\r\nexport interface Belief{\r\n    subject: BeliefSubject;\r\n    verb: BeliefVerb;\r\n    adj: TraitBelief;\r\n}\r\n\r\nexport type HedonSourceToVal = {[source: string]: number};\r\nexport interface HedonReport {\r\n    flatAverage: number,\r\n    weightedAverage: number,\r\n    maxSource: string,\r\n    minSource: string,\r\n    all: HedonSourceToVal\r\n}\r\nexport interface HedonExtremes { max:number, min:number }\r\n\r\nexport function GetHedonReport(hedonHistory: HedonSourceToVal[]): HedonReport {\r\n    if (hedonHistory.length === 0){\r\n        return {\r\n            all: {},\r\n            flatAverage: 0,\r\n            weightedAverage: 0,\r\n            maxSource: '',\r\n            minSource: ''\r\n        }\r\n    }\r\n    const all: {[source: string]: number} = {};\r\n    let weightedAverage: number = 0;\r\n    let allSum: number = 0;\r\n    for (let i = 0; i < hedonHistory.length; i++) {\r\n        const day = hedonHistory[i];\r\n        let daySum = 0;\r\n        const sources = Object.keys(day);\r\n        for (let j = 0; j < sources.length; j++) {\r\n            const source = sources[j];\r\n            daySum += day[source];\r\n            if (!all[source]) all[source] = 0;\r\n            all[source] += day[source];\r\n        }\r\n        weightedAverage += daySum / (i + 1);\r\n        allSum += daySum;\r\n    }\r\n\r\n    const allSources = Object.keys(all);\r\n    return {\r\n        flatAverage: allSum / hedonHistory.length,\r\n        weightedAverage: weightedAverage,\r\n        maxSource: allSources.reduce((max, source) => {\r\n            if (all[source] > max.val)\r\n                return {source: source, val: all[source]};\r\n            else return max;\r\n        }, {source: '', val: 0}).source,\r\n        minSource: allSources.reduce((max, source) => {\r\n            if (all[source] < max.val)\r\n                return {source: source, val: all[source]};\r\n            else return max;\r\n        }, {source: '', val: 0}).source,\r\n        all: all\r\n    }\r\n}","\r\nexport interface IEntitySlice<T extends {key: number}> {\r\n    byID: { [key: number]: T },\r\n    allIDs: number[],\r\n    nextID: number\r\n}\r\n\r\nexport function CreateEmptyEntitySlice<T extends {key: number}>(): IEntitySlice<T>{\r\n    return {\r\n        byID: {},\r\n        allIDs: [],\r\n        nextID: 0\r\n    }\r\n}\r\nexport function CreateEntitySlice<T extends {key: number}>(all: T[]): IEntitySlice<T>{\r\n    return {\r\n        byID: all.reduce((map, entity) => { map[entity.key] = entity; return map; }, {} as {[key: number]: T}),\r\n        allIDs: all.map(x => x.key),\r\n        nextID: all.reduce((max, entity) => Math.max(entity.key+1, max), 0)\r\n    }\r\n}\r\nexport function EntityAddToSlice<T extends {key: number}>(slice: IEntitySlice<T>, newEntity: T){\r\n    const k = slice.nextID++;\r\n    newEntity.key = k;\r\n    slice.allIDs.push(k);\r\n    slice.byID[k] = newEntity;\r\n}","import { IBean } from './simulation/Agent';\r\nimport { RandomBeliefBucket } from './simulation/Beliefs';\r\nimport { ICity } from './simulation/City';\r\nimport { BuildingTypes, GenerateGeography, HexPoint, hex_to_pixel, IDistrict, ILot, LotHexSizePX, PolarPoint } from './simulation/Geography';\r\nimport { IDate } from './simulation/Time';\r\nimport { IWorldState } from './state/features/world';\r\nimport { TraitCommunity, TraitEthno, TraitFaith, TraitIdeals, TraitJob } from './World';\r\nimport Rand, {PRNG} from 'rand-seed';\r\nimport { CreateEntitySlice, EntityAddToSlice, IEntitySlice } from './state/entity.state';\r\n\r\nconst EnterpriseStartingListing = 1;\r\nconst MaxNumBeanTraitsOnGenerate = 3;\r\nconst RandomSeeds: {[seed: string]: Rand} = {};\r\n\r\nexport function GetRandomGenerator(seed: string){\r\n    if (RandomSeeds[seed] == null)\r\n        RandomSeeds[seed] = new Rand(seed, PRNG.sfc32);\r\n    return RandomSeeds[seed];\r\n}\r\n\r\n/**\r\n * return better random values\r\n * @param min \r\n * @param max \r\n * @returns \r\n */\r\nexport function GetRandomNumber(seed: string, min: number = 0, max: number = 1): number{\r\n    const randomNumber = GetRandomGenerator(seed).next();\r\n    // const randomNumber = window.crypto.getRandomValues()[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * \r\n * @returns float between 0 and 1\r\n */\r\nexport function GetRandomFloat(seed: string): number{\r\n    return GetRandomGenerator(seed).next();\r\n}\r\n\r\n/**\r\n * given a chance (0-1) return true if random float is <= chance\r\n * @param chance \r\n * @returns \r\n */\r\nexport function GetRandomRoll(seed: string, chance: number): boolean{\r\n    const randomNumber = GetRandomFloat(seed);\r\n    //console.log(`DC ${(chance*100).toFixed(3)} rolled ${(randomNumber*100).toFixed(4)}`);\r\n    return randomNumber <= chance;\r\n}\r\n\r\n/**\r\n * convenience random function\r\n * @param length \r\n * @returns \r\n */\r\nexport function GetRandomIndex(seed: string, length: number): number{\r\n    return GetRandomNumber(seed, 0, length-1)\r\n}\r\n\r\nexport function GetRandom<S>(seed: string, choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(seed, choices.length);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(seed: string): TraitIdeals{\r\n    return GetRandom(seed, ['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(seed: string): TraitCommunity{\r\n    return GetRandom(seed, ['state', 'ego']);\r\n}\r\nexport function RandomEthno(seed: string): TraitEthno{\r\n    return GetRandom(seed, ['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(seed: string): TraitFaith{\r\n    return GetRandom(seed, ['rocket','music','dragon', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\nexport const MAX_PETRI_RADIUS = 200;\r\nexport const PI2 = Math.PI*2;\r\nexport function RandomPolar(seed: string, r?: number): PolarPoint{\r\n    return {\r\n        r: r || GetRandomNumber(seed, 0, MAX_PETRI_RADIUS),\r\n        az: GetRandomNumber(seed, 0, PI2)\r\n    };\r\n}\r\nexport function GetBuildingR(seed: string, type: BuildingTypes): number{\r\n    switch(type){\r\n        case 'farm':\r\n            return GetRandomNumber(seed, 200, 300);\r\n        default: \r\n            return GetRandomNumber(seed, 80, 200);\r\n    }\r\n}\r\n\r\nconst CityPrefixes = ['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', ''];\r\nconst CityFirstsnames = ['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash'];\r\nconst CityLastnames = ['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest'];\r\nexport function GetRandomCityName(seed: string){\r\n    return `${GetRandom(seed, CityPrefixes)}${GetRandom(seed, CityFirstsnames)}${GetRandom(seed, CityLastnames)}`;\r\n}\r\nexport const Number_Starting_City_Pop = 0;\r\n\r\nexport function GenerateCity(): ICity{\r\n    return {\r\n        ...GenerateGeography(),\r\n        key: 0,\r\n        name: 'string',\r\n        deadBeanKeys: [],\r\n        beanKeys: [],\r\n        ufoKeys: [],\r\n        pickupKeys: [],\r\n        buildingKeys: [],\r\n        pickupMagnetPoint: undefined,\r\n        costOfLiving: 0,\r\n        buildingMap: {},\r\n        districtKeys: []\r\n      }\r\n}\r\nexport function GenerateDistrictsAndLots(city: ICity): {ds:IEntitySlice<IDistrict>,lots:IEntitySlice<ILot>}{\r\n    const lots = CreateEntitySlice<ILot>([]);\r\n    const ds = CreateEntitySlice<IDistrict>(city.hexes.map((x, i) => {\r\n        const isCenter = (x.q === 0 && x.r === 0);\r\n        const d = GenerateDistrict(isCenter ? 'urban': 'fallow', city, x);\r\n        d.key = i+1;\r\n        city.districtKeys.push(d.key);\r\n        if (isCenter)\r\n            DistrictAddLots(d, lots, 'urban');\r\n        return d;\r\n    }));\r\n    return {\r\n        ds: ds,\r\n        lots: lots\r\n    }\r\n}\r\n\r\nexport function GenerateDistrict(kind: 'urban'|'rural'|'fallow'|'nature', city: ICity, hex: HexPoint): IDistrict{\r\n    return {\r\n        kind: kind,\r\n        key: 0,\r\n        q: hex.q,\r\n        r: hex.r,\r\n        hexString: hex.q+','+hex.r,\r\n        point: hex_to_pixel(city.district_hex_size, city.petriOrigin, hex),\r\n        lots: []\r\n    }\r\n}\r\n\r\nconst urbanHexes = [{q: 1, r: -1},{q: 1, r: 0},{q: 0, r: 1},{q: -1, r: 1},{q: -1, r: 0},{q: 0, r: -1}];\r\nconst ruralHexes = [{q: 1, r: -1},{q: 0, r: 1},{q: -1, r: 0}];\r\nexport function DistrictAddLots(district: IDistrict, lotSlice: IEntitySlice<ILot>, kind: 'urban'|'rural'){\r\n    const hexes = (kind === 'rural')? ruralHexes : urbanHexes;\r\n    hexes.forEach((h, i) => {\r\n        if (district.lots[i] == null){\r\n            const lot: ILot = {\r\n                key: 0,\r\n                kind: kind,\r\n                districtKey: district.key,\r\n                point: hex_to_pixel({x: LotHexSizePX, y: LotHexSizePX}, district.point, h)\r\n            }\r\n            EntityAddToSlice(lotSlice, lot);\r\n            district.lots.push(lot.key);\r\n        }\r\n    });\r\n}\r\n\r\nexport function GenerateBean(world: {beans: {nextID:number}, date: IDate, seed: string}, city: ICity, parent?: IBean, hexPoint?: HexPoint, job?: TraitJob): IBean{\r\n    let newBean: IBean = {\r\n        key: world.beans.nextID++,\r\n        cityKey: city.key,\r\n        name: '',\r\n        ethnicity: RandomEthno(world.seed),\r\n        community: RandomCommunity(world.seed),\r\n        ideals: RandomIdeal(world.seed),\r\n        faith: RandomFaith(world.seed),\r\n        stamina: 'awake',\r\n        health: 'fresh',\r\n        food: 'sated',\r\n        discrete_food: 3,\r\n        discrete_health: 2,\r\n        discrete_sanity: 10,\r\n        discrete_stamina: 7,\r\n        discrete_fun: 0,\r\n        housing: 'homeless',\r\n        graceTicks: 0,\r\n        dob: {year: world.date.year, season: world.date.season, day: world.date.day, hour: world.date.hour},\r\n        sanity: 'sane',\r\n        beliefs: [],\r\n        lifecycle: 'alive',\r\n        hedonHistory: [{}, {}, {}, {}, {}],\r\n        priorities: [],\r\n        job: 'jobless',\r\n        happiness: { flatAverage: 0,all: {}, maxSource: '', minSource: '', weightedAverage: 0},\r\n        lastHappiness: 0,\r\n        hedonFiveDayRecord: { max: 0, min: 0 },\r\n        fairGoodPrice: 0,\r\n        bornInPetri: parent != null,\r\n        cash: 3,\r\n        ticksSinceLastSale: 0,\r\n        ticksSinceLastRelax: 0,\r\n        lastChatMS: 0,\r\n        action: 'idle',\r\n        actionData: {act: 'idle'},\r\n        activity_duration: {'buy': 0, 'chat': 0, 'craze': 0, 'crime': 0, 'idle': 0, 'relax': 0, 'sleep': 0, 'soapbox': 0, 'travel': 0, 'work': 0, 'chase': 0, 'assault': 0},\r\n    };\r\n    // MoverBusInstance.Get('bean', newBean.key).publish({\r\n    //     velocity: {x: 0, y: 0},\r\n    //     point: hex_to_pixel(city.hex_size, city.petriOrigin, hexPoint || {q: 0, r: 0})\r\n    // });\r\n    newBean.name = GetRandom(world.seed, ['Joe', 'Frank', 'Jill', 'Jose',\r\n    'Johnny', 'Isabelle', 'Carmen', 'Ace', 'Carl', 'Zander', 'Jean',\r\n    'Anne', 'Leslie', 'Ben', 'Ron', \r\n    'Ellen', 'Dallas', 'Kane', 'Ash', \r\n    'Jim', 'James', 'Leonard', 'Nyota', 'Christine', 'Scotty', 'Tasha', 'Geordi', 'Beverly', 'Deanna', 'Wesley', 'Majel',\r\n    'Malcolm','River',  \r\n    'Luke', 'Han', 'Owen', 'Rey', 'Mace', 'Cody',\r\n    'Dana', 'Walter',  \r\n    'Rick', 'Holden', 'Roy', 'Pris', 'Eldon', 'Rachael',\r\n    'Rose', 'Donna', 'Jack', 'Amy', 'Rory', 'Martha', 'Clara', \r\n    'Arnold', 'Dave', 'Holly', \r\n    'Kara', 'Gaius','William', 'Lee', 'Laura', 'Saul',\r\n    'Max', 'Edison', 'Theora', 'Bryce', 'Murray', 'Ned',\r\n    'Daniel', 'Samantha', \r\n    'Logan', 'Francis', 'Jessica',\r\n    'Thomas',\r\n    'Benny', 'James', 'John Henry', 'Sarah', 'Piper', 'Nick', 'Shaun', 'Preston'\r\n    ]) + ' ';\r\n    newBean.name += GetRandom(world.seed, [\r\n        'Ripley', 'Bishop', 'Hicks', 'Vasquez', 'Hudson', \r\n        'Rico', 'Flores', 'Ibanez', 'Levy', 'Jenkins', 'Barlow', 'Zim', 'Rasczak',\r\n        'Kirk', 'McCoy', 'Sulu', 'Uhura', 'Chekov', 'Chapel', 'Rand','Riker', 'Crusher', 'Barret', \"O'Brien\",\r\n        'Reynolds', 'Tam', \r\n        'Scully', 'Mulder','Skinner', \r\n        'Connor', \r\n        'Rex',\r\n        'Thrace', 'Baltar', 'Smith','Adama', 'Roslin', 'Tigh', 'Song', 'Oswald', \r\n        'Deckard', 'Bryant', 'Tyrell', 'Sebastian', 'Voight', 'Kampff',\r\n        'Tyler', 'Harkness', 'Jones', 'Noble', 'Pond', 'Williams',\r\n        'Rimmer', 'Lister', \r\n        'Head', 'Carter', 'Lynch', 'McKenzie', 'Grossberg',\r\n        \"O'Neil\", 'Jackson', 'Carter',\r\n        'Whitmore',\r\n        'House', 'Mitchell', 'Eden', 'Lyons', 'Valentine', 'Garvey'\r\n         ]);\r\n    const beanBeliefCount = Math.ceil(Math.random() * MaxNumBeanTraitsOnGenerate);\r\n    while (newBean.beliefs.length < beanBeliefCount) {\r\n        const newBelief = GetRandom(world.seed, RandomBeliefBucket);\r\n        const hasAlready = newBean.beliefs.includes(newBelief);\r\n        if (!hasAlready)\r\n            newBean.beliefs.push(newBelief);\r\n    }\r\n\r\n    if (parent){\r\n        newBean.ethnicity = parent.ethnicity;\r\n        newBean.name = newBean.name.split(' ')[0] + ' ' + parent.name.split(' ')[1];\r\n        newBean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n    }\r\n    \r\n    // if (job == null){\r\n    //     switch (city.beanSeed){\r\n    //         case 1:\r\n    //             job = 'farmer'; break;\r\n    //         case 2:\r\n    //             job = 'builder'; break;\r\n    //         case 3:\r\n    //             job = 'doc'; break;\r\n    //         default:\r\n    //             job = GetRandom(['farmer', 'builder', 'doc', 'entertainer']); break;\r\n    //     }\r\n    // }\r\n    // newBean.trySetJob(job);\r\n    \r\n    return newBean;\r\n}","import { TraitGood, TraitJob } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IHexPlane } from \"./City\";\r\nimport { IEnterprise } from \"./Institutions\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { IBuilding } from \"./RealEstate\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nexport interface HexPoint{\r\n    q: number;\r\n    r: number;\r\n}\r\nexport type DistrictKind = 'fallow'|'rural'|'urban'|'nature';\r\nexport interface IDistrict extends HexPoint{\r\n    key: number,\r\n    hexString: string,\r\n    point: Point,\r\n    kind: DistrictKind,\r\n    lots: number[]\r\n}\r\nexport interface ILot{\r\n    key: number,\r\n    districtKey: number,\r\n    point: Point,\r\n    buildingKey?: number,\r\n    kind: 'rural'|'urban',\r\n}\r\nexport class Hex implements HexPoint{\r\n    constructor(public q: number, public r: number){}\r\n}\r\nexport const hex_directions: HexPoint[] = [\r\n    {q:+1, r:0}, {q: +1, r: -1}, {q: 0, r: -1}, \r\n    {q:-1, r:0}, {q: -1, r: +1}, {q: 0, r: +1}, \r\n];\r\nexport function hex_direction(direction: number): HexPoint{\r\n    return hex_directions[direction]\r\n}\r\n\r\nexport function hex_neighbor(hex: HexPoint, direction: number): HexPoint{\r\n    var dir = hex_direction(direction)\r\n    return {q: hex.q + dir.q, r: hex.r + dir.r};\r\n}\r\nexport function hex_distance(a: HexPoint, b: HexPoint): number{\r\n    return (Math.abs(a.q - b.q) \r\n          + Math.abs(a.q + a.r - b.q - b.r)\r\n          + Math.abs(a.r - b.r)) / 2\r\n}\r\nexport function hex_add(a: HexPoint, b: HexPoint): HexPoint {\r\n    return {q: a.q + b.q, r: a.r + b.r};\r\n}\r\nexport function hex_scale(a: HexPoint, k: number): HexPoint {\r\n    return {q:a.q * k, r:a.r * k};\r\n}\r\nexport function hex_ring(center: HexPoint, radius: number): HexPoint[]{\r\n    var results: HexPoint[] = [];\r\n    // this code doesn't work for radius == 0; can you see why?\r\n    var cube = hex_add(center, \r\n                        hex_scale(hex_direction(4), radius));\r\n    for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < radius; j++) {\r\n            results.push(cube)\r\n            cube = hex_neighbor(cube, i);       \r\n        }\r\n    }\r\n    return results;\r\n}\r\nexport function hex_spiral(center: HexPoint, radius: number): HexPoint[]{\r\n    var results = [center];\r\n    for (let k = 0; k < radius; k++) {\r\n        results = results.concat(hex_ring(center, k));\r\n        //console.log(results);   \r\n    }\r\n    return results;\r\n}\r\n\r\nexport function move_towards(current: Point, target: Point, maxDistanceDelta: number)\r\n{\r\n    const a: Point = {x: target.x - current.x, y: target.y - current.y};\r\n    const magnitude = Math.sqrt(a.x * a.x + a.y * a.y);\r\n    if (magnitude <= maxDistanceDelta || magnitude == 0)\r\n    {\r\n        return target;\r\n    }\r\n    return {\r\n        x: current.x + a.x / magnitude * maxDistanceDelta,\r\n        y: current.y + a.y / magnitude * maxDistanceDelta,\r\n    };\r\n}\r\nexport interface IAccelerator {\r\n    point: Point, \r\n    velocity: Vector,\r\n    hex: HexPoint\r\n};\r\nexport const OriginAccelerator = { \r\n    point: {x: 0, y: 0}, \r\n    velocity: {x: 0, y: 0},\r\n    hex: {q: 0, r: 0}\r\n};\r\nexport function point_magnitude(p: Point){\r\n    return Math.sqrt((p.x * p.x) + (p.y * p.y));\r\n}\r\nexport function point_normalize(p: Point){\r\n    const magnitude: number = point_magnitude(p);\r\n    if (magnitude > 0){\r\n        p.x /= magnitude;\r\n        p.y /= magnitude;\r\n    } else {\r\n        p.x = p.y = 0;\r\n    }\r\n}\r\nexport function accelerate_towards(\r\n    mover: IAccelerator, \r\n    plane: IHexPlane,\r\n    target: Point, \r\n    acceleration: number,\r\n    maxSpeed: number, \r\n    colDistance: number, \r\n    brake: Point, \r\n    getAvoidanceVelocity?: () => Point): boolean\r\n{\r\n    const delta: Point = {\r\n        x: target.x - mover.point.x, \r\n        y: target.y - mover.point.y\r\n    };\r\n    const magnitude = Math.sqrt((delta.x * delta.x) + (delta.y * delta.y));\r\n    if (magnitude <= colDistance) return true;\r\n\r\n    delta.x /= magnitude;\r\n    delta.y /= magnitude;\r\n    //now delta is normalized \r\n\r\n    mover.velocity.x += (delta.x * acceleration);\r\n    mover.velocity.y += (delta.y * acceleration);\r\n    if (getAvoidanceVelocity){\r\n        const avoidV = getAvoidanceVelocity();\r\n        mover.velocity.x -= avoidV.x;\r\n        mover.velocity.y -= avoidV.y;\r\n    }\r\n    mover.velocity.x = MathClamp(mover.velocity.x, -maxSpeed, maxSpeed);\r\n    mover.velocity.y = MathClamp(mover.velocity.y, -maxSpeed, maxSpeed);\r\n\r\n\r\n    accelerator_coast(mover, brake);\r\n    mover.hex = round_point_to_hex(pixel_to_hex(plane.district_hex_size, plane.petriOrigin, mover.point));\r\n    return false;\r\n}\r\nexport function accelerator_coast(\r\n    current: IAccelerator, \r\n    brake: Point): void\r\n{\r\n    current.velocity.x *= brake.x;\r\n    current.velocity.y *= brake.y;\r\n\r\n    current.point.x += current.velocity.x;\r\n    current.point.y += current.velocity.y;\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number{\r\n    return a + (b - a) * t\r\n}\r\n\r\nexport function vector_lerp(a: Point, b: Point, t: number): Point{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t)\r\n    };\r\n}\r\nfunction cube_lerp(a: CubicPoint, b: CubicPoint, t: number): CubicPoint{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t),\r\n        z: lerp(a.z, b.z, t)\r\n    };\r\n}\r\nfunction cube_distance(a: CubicPoint, b: CubicPoint): number{\r\n    return (Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z)) / 2\r\n}\r\nfunction cube_round(cube: CubicPoint): CubicPoint{\r\n    var rx = Math.round(cube.x);\r\n    var ry = Math.round(cube.y);\r\n    var rz = Math.round(cube.z);\r\n\r\n    var x_diff = Math.abs(rx - cube.x)\r\n    var y_diff = Math.abs(ry - cube.y)\r\n    var z_diff = Math.abs(rz - cube.z)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff)\r\n        rx = -ry-rz;\r\n    else if (y_diff > z_diff)\r\n        ry = -rx-rz;\r\n    else\r\n        rz = -rx-ry;\r\n\r\n    return {x: rx, y: ry, z: rz};\r\n}\r\nfunction round_point_to_hex(hex: HexPoint): HexPoint{\r\n    return cube_to_axial(cube_round(axial_to_cube(hex)))\r\n\r\n}\r\nfunction cube_to_axial(cube: CubicPoint){\r\n    var q = cube.x;\r\n    var r = cube.z;\r\n    return new Hex(q, r);\r\n}\r\nfunction axial_to_cube(hex: HexPoint): CubicPoint{\r\n    return {\r\n        x: hex.q,\r\n        z: hex.r,\r\n        y: -hex.q-hex.r\r\n    };\r\n}\r\nfunction cube_linedraw(a: CubicPoint, b: CubicPoint): HexPoint[]{\r\n    var N = cube_distance(a, b);\r\n    var results: HexPoint[] = [];\r\n    for (let i = 0; i <= N; i++) {\r\n        results.push(cube_to_axial(cube_round(cube_lerp(a, b, 1.0/N * i))))\r\n    }\r\n    return results;\r\n}\r\nexport function hex_linedraw(a: HexPoint, b: HexPoint): HexPoint[]{\r\n    return cube_linedraw(axial_to_cube(a), axial_to_cube(b));\r\n}\r\n\r\nclass Orientation {\r\n    // angle is in multiples of 60°\r\n    constructor(public f0: number, public f1: number, public  f2: number, public f3: number,\r\n        public b0: number, public b1: number,public b2: number,public b3: number,\r\n        public start_angle: number){}\r\n};\r\nexport const layout_flat: Orientation = new Orientation(\r\n    3.0 / 2.0, \r\n    0.0, \r\n    Math.sqrt(3.0) / 2.0, \r\n    Math.sqrt(3.0),\r\n    2.0 / 3.0, \r\n    0.0, \r\n    -1.0 / 3.0, \r\n    Math.sqrt(3.0) / 3.0,\r\n    0.0\r\n);\r\nexport const layout_pointy: Orientation = new Orientation(\r\n    Math.sqrt(3.0), \r\n    Math.sqrt(3.0) / 2.0, \r\n    0.0, 3.0 / 2.0,       \r\n    Math.sqrt(3.0) / 3.0, \r\n    -1.0 / 3.0, \r\n    0.0, \r\n    2.0 / 3.0,\r\n    0.5\r\n);\r\nexport const origin_point: Point = {x: 0, y: 0};\r\nexport const hex_origin: HexPoint = {q: 0, r: 0};\r\nexport function hex_to_pixel(size: Point, origin: Point, h: HexPoint): Point {\r\n    const M: Orientation = layout_pointy;\r\n    const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\r\n    const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\r\n    return {x: x + origin.x, y: y + origin.y};\r\n}\r\nexport function pixel_to_hex(size: Point, origin: Point, p: Point): HexPoint {\r\n    const M = layout_pointy;\r\n    const pt = {x: (p.x - origin.x) / size.x,\r\n                y: (p.y - origin.y) / size.y\r\n            };\r\n    const q = M.b0 * pt.x + M.b1 * pt.y;\r\n    const r = M.b2 * pt.x + M.b3 * pt.y;\r\n    return {q: q, r: r};\r\n}\r\n\r\n\r\nexport interface PolarPoint{\r\n    /**\r\n     * radius (in pixels)\r\n     */\r\n    r: number;\r\n    /**\r\n     * azimuth (radians)\r\n     */\r\n    az: number;\r\n}\r\n\r\nexport function polarToPoint(p: PolarPoint): Point{\r\n    return {\r\n        x: p.r * Math.cos(p.az),\r\n        y: p.r * Math.sin(p.az)\r\n    }\r\n}\r\n\r\nexport function distanceBetweenPolar(a: PolarPoint, b: PolarPoint): number{\r\n    const aCart = polarToPoint(a);\r\n    const bCart = polarToPoint(b)\r\n    return Math.sqrt(\r\n        Math.pow(aCart.x - aCart.x, 2) +\r\n        Math.pow(bCart.y - aCart.y, 2)\r\n    );\r\n}\r\n\r\nexport interface Point{\r\n    x: number; y: number;\r\n}\r\nexport interface Vector extends Point{\r\n}\r\nexport interface CubicPoint extends Point{\r\n    z: number;\r\n}\r\n\r\nexport function transformPoint(p: Point){\r\n    return {transform:`translate(${p.x}px, ${p.y}px)`};\r\n}\r\n\r\n/**\r\n * address books allow lookups from entity \"name\" to location\r\n */\r\nexport interface AddressBookHex{\r\n    [entityKey: number]: HexPoint\r\n}\r\nexport interface AddressBookPoint{\r\n    [entityKey: number]: Point\r\n}\r\n/**\r\n * address grids allow lookups from location to entity\r\n * \r\n * note: coordinates are of form \"X,Y\"\r\n * and the map cannot distinguish between hex and cartesian points\r\n */\r\nexport interface AddressGrid<T>{\r\n    [coordinate: string]: T|undefined\r\n}\r\nexport interface AddressBuildingGrid extends AddressGrid<IBuilding>{}\r\n\r\nexport interface BuildingMap{\r\n    coordByID: AddressBookHex;\r\n    all: IBuilding[];\r\n}\r\n\r\nexport type BuildingTypes = 'farm'|'house'|'hospital'|'church'|'theater'|'jail'|'park'|'nature'|'graveyard';\r\nexport type TopiaBuildingTypes = 'utopia_fields'|'utopia_pump'|'dystopia_refinery'|'dystopia_crypt';\r\n//third place - cafe/bookstore/barbershop/pub/gym/arcade/bingohall\r\n//utopia pump = slowly sucks up happiness/unhappiness?\r\n//dystopia refinery = slowly converts negative emotions to energy/bots\r\n//dystopia crypt = skips death notifications (limited use?)\r\nexport type MoverTypes = 'bean'|'ufo'|'pickup';\r\nexport type MatterTypes = MoverTypes|BuildingTypes;\r\n\r\nexport const BuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🐄',\r\n    'house': '🏡', 'hospital': '🏥', 'church': '⛪', 'theater': '🎪', 'jail':'🏛️',\r\n    'park': '⛲️', 'nature': '🏞️', 'graveyard': '⚱️'\r\n};\r\nexport const UpgradedBuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🚜',\r\n    'house': '🏘️', 'hospital': '🏙️', 'church': '⛪', 'theater': '🏟️', 'jail':'🏫',\r\n    'park': '🎡', 'nature': '🏞️', 'graveyard': '⚱️'\r\n};\r\nexport const BuildingJobIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🪕',\r\n    'house': '📪', 'hospital': '🩺', 'church': '📿', 'theater': '🪑', 'jail':'🚨',\r\n    'park': '💐', 'nature': '♨️', 'graveyard': '📿'\r\n};\r\nexport const BuildingToGood: {[key in BuildingTypes]: TraitGood|undefined} = {\r\n    'farm': 'food',\r\n    'house': undefined, \r\n    'hospital': 'medicine', \r\n    'church': 'fun', \r\n    'theater': 'fun', \r\n    'jail': undefined,\r\n    'graveyard': undefined,\r\n    'park': 'fun', \r\n    'nature': 'fun'\r\n};\r\nexport const GoodToBuilding: {[key in TraitGood]: BuildingTypes} = {\r\n    'food': 'farm',\r\n    // 'shelter': 'house',\r\n    'medicine':'hospital',\r\n    'fun': 'theater'\r\n};\r\nexport const JobToBuilding: {[key in TraitJob]: BuildingTypes} = {\r\n    'farmer': 'farm',\r\n    'builder': 'house',\r\n    'doc': 'hospital',\r\n    'entertainer': 'theater',\r\n    'cleric': 'church',\r\n    'jobless': 'house',\r\n    'polit': 'house',\r\n    'cop': 'jail'\r\n};\r\nexport const BuildingToJob: {[key in BuildingTypes]: TraitJob} = {\r\n    'farm': 'farmer',\r\n    'house': 'builder', \r\n    'hospital':'doc', \r\n    'theater': 'entertainer',\r\n    'church': 'cleric',\r\n    'park': 'entertainer',\r\n    'nature': 'entertainer',\r\n    'jail': 'cop',\r\n    'graveyard': 'cleric'\r\n};\r\n\r\n//district sized hexes\r\nexport const HexSizePX = 150;\r\nexport const HexSizeR = 260; // rounded sqrt(3) * HexSizePX\r\nexport const DistrictHexSize = {x: HexSizePX, y: HexSizePX};\r\n\r\nexport function GenerateGeography(numberOfRings: number = 3){\r\n    const radius = ((numberOfRings - 0.5) * HexSizeR);\r\n    return {\r\n        numberOfRings: numberOfRings,\r\n        hexes: hex_spiral({q:0, r:0}, numberOfRings),\r\n        district_hex_size: {...DistrictHexSize},\r\n        petriRadius: radius,\r\n        petriOrigin: {x: radius, y: radius}\r\n    }\r\n}\r\n\r\nexport const LotHexSizePX = 50;\r\nexport const LotHexSizeR = 86; // rounded sqrt(3) * LotHexSizePX","import { GetRandomFloat } from \"../WorldGen\";\r\n\r\nexport function shuffle<T>(array: Array<T>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function MathClamp(input: number, min: number, max: number): number{\r\n    return Math.max(Math.min(input, max), min)\r\n}\r\n\r\nexport function groupBy<T>(list: T[], keyGetter: (val: T) => string|number): Map<string|number, T[]> {\r\n    const map = new Map<string|number, T[]>();\r\n    list.forEach((item) => {\r\n         const key = keyGetter(item);\r\n         const collection = map.get(key);\r\n         if (!collection) {\r\n             map.set(key, [item]);\r\n         } else {\r\n             collection.push(item);\r\n         }\r\n    });\r\n    return map;\r\n}\r\n\r\nexport const StatsNormalMean = 0.5;\r\nexport const StatsNormalDev = 0.125;\r\n\r\n/**\r\n * Marsaglia polar method\r\n * @param mean \r\n * @param standardDeviation \r\n * @returns \r\n */\r\nexport function SampleNormalDistribution(seed: string, mean: number = StatsNormalMean, standardDeviation: number = StatsNormalDev) {\r\n    let q, u, v, p;\r\n    do {\r\n        u = 2.0 * GetRandomFloat(seed) - 1.0;\r\n        v = 2.0 * GetRandomFloat(seed) - 1.0;\r\n        q = u * u + v * v;\r\n    } while (q >= 1.0 || q === 0);\r\n    p = Math.sqrt(-2.0 * Math.log(q) / q);\r\n    return mean + standardDeviation * u * p;\r\n}\r\n\r\nexport function toTitleCase(str: string): string{\r\n    return str[0].toUpperCase() + str.substr(1);\r\n}","import * as React from 'react';\r\nimport { Season, IDate } from './simulation/Time';\r\nimport { Act, IBean, IChatData } from './simulation/Agent';\r\nimport { IDifficulty, PlayerResources } from './Game';\r\nimport { type } from 'os';\r\nimport { GetHedonReport, IsBeliefDivergent, SecondaryBeliefData, TraitBelief } from './simulation/Beliefs';\r\nimport { WorldSfxInstance, WorldSound } from './WorldSound';\r\nimport { GetMarketTraits, MarketTraitListing } from './simulation/MarketTraits';\r\nimport { IWorldState } from './state/features/world';\r\n\r\nexport const PickupPhysics = {\r\n    Brake: { x: .94, y: .94},\r\n    AccelerateS: 60,\r\n    MaxSpeed: 9,\r\n    CollisionDistance: 10\r\n}\r\nexport const BeanPhysics = {\r\n    Brake: { x: .94, y: .94},\r\n    AccelerateS: 10,\r\n    MaxSpeed: 4,\r\n    CollisionDistance: 10\r\n}\r\nexport const MaxHedonHistory = 5;\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface ITile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'rocket'|'music'|'dragon'|'noFaith';\r\nexport type TraitFood = 'starving'|'hungry'|'sated'|'stuffed';\r\nexport type TraitStamina = 'sleepy'|'awake'|'rested';\r\nexport type TraitHousing = 'homeless'|'housed';\r\nexport type TraitHealth = 'sick'|'sickly'|'bruised'|'fresh';\r\nexport type TraitSanity = 'psychotic'|'disturbed'|'stressed'|'sane';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless'|'cop';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitStamina|TraitHealth|TraitSanity|TraitHousing;\r\n\r\nexport const TraitIcon: {[key in Trait]: string} = {\r\n    'state': '🕊️', 'ego': '🦅',\r\n    'prog': '⚖️', 'trad': '👑',\r\n    'circle': '🤎', 'square': '💛', 'triangle': '🧡',\r\n    'rocket': '🚀', 'music': '🎵', 'dragon': '🐲',\r\n    'noFaith': '⚫️',\r\n    'starving': '🍴', 'hungry': '🍽️', 'sated': '🥜', 'stuffed': '🥩',\r\n    'homeless': '🌨️', 'housed': '🚪', 'sleepy': '🌙', 'awake': '☀️', 'rested': '🌞',\r\n    'sick': '🤢', 'sickly': '😷', 'bruised': '🩹', 'fresh': '💪',\r\n    'psychotic': '🤪', 'disturbed': '🤤', 'stressed':'', 'sane': '🧠',\r\n}\r\nexport enum MaslowHappinessScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport interface IThreshold {warning: number, sufficient: number, abundant: number}\r\nexport const GoodToThreshold: {[key in TraitGood]: IThreshold} = {\r\n    'food': {warning: 0.5, sufficient: 1, abundant: 3},\r\n    'medicine': {warning: 0.5, sufficient: 1, abundant: 3},\r\n    'fun': {warning: 0.1, sufficient: 1, abundant: 3},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'medicine'|'fun';\r\nexport const GoodIcon: {[key in TraitGood]: string} ={\r\n    'food': '🥪',\r\n    'medicine': '💊', \r\n    'fun': '👏'\r\n};\r\n\r\nexport type TraitEmote = 'happiness'|'unhappiness'|'love'|'hate';\r\nexport const EmoteIcon: {[key in TraitEmote]: string} ={\r\n    'love': '💛',\r\n    'happiness': '👍',\r\n    'unhappiness': '💢',\r\n    'hate': '💔'\r\n};\r\nexport const EmotionWorth: {[key in TraitEmote]: number} ={\r\n    'love': 5,\r\n    'happiness': 1,\r\n    'unhappiness': -1,\r\n    'hate': -5\r\n};\r\nexport const EmotionSanity: {[key in TraitEmote]: number} ={\r\n    'love': 1,\r\n    'happiness': 0.2,\r\n    'unhappiness': 0,\r\n    'hate': -1\r\n};\r\n\r\nexport function WorldInflate(world: IWorldState){\r\n    const beans = world.beans.allIDs.reduce((arr, key) => { arr.push(world.beans.byID[key]); return arr;}, [] as IBean[])\r\n    const allMoney = beans.reduce((sum, b) => sum+b.cash, 0);\r\n    const percent = allMoney / 100;\r\n    const yearlyInflationDollars = Math.round(percent * 1);\r\n    if (yearlyInflationDollars > 0){\r\n        const richest = beans.reduce((obj: {winner?: IBean, max: number}, b) => {\r\n            if (b.cash > obj.max){\r\n                obj.winner = b;\r\n                obj.max = b.cash;\r\n            }\r\n            return obj;\r\n        }, {max: 0});\r\n        if (richest.winner){\r\n            richest.winner.cash += yearlyInflationDollars;\r\n        }\r\n    }\r\n}","import { MoverStore } from \"./simulation/MoverBus\";\r\n\r\nexport const MoverStoreInstance = new MoverStore();","import { PubSub } from \"../events/Events\";\r\nimport { HexPoint, IAccelerator, OriginAccelerator } from \"./Geography\";\r\n\r\nexport type MoverType = 'ufo'|'bean'|'pickup';\r\ntype MoverCache = {\r\n    [key in MoverType]: {\r\n        [k2: number]: PubSub<IAccelerator>;\r\n    };\r\n};\r\ntype HexMoverBin = {\r\n    [mType in MoverType]: {\r\n        [hexStr: string]: number[]\r\n    }\r\n};\r\n\r\n/**\r\n * boy this is an odd class!\r\n * this is for storing and publishing the pixel positions of the tiny physics simulation\r\n * \r\n * it's outside of the redux store because it is updated all the time!\r\n * \r\n * it also takes care of \"binning\" the things by hex string\r\n */\r\nexport class MoverStore{\r\n    private cache: MoverCache = {\r\n        'ufo': {},\r\n        'bean': {},\r\n        'pickup': {}\r\n    };\r\n    private bins: HexMoverBin = {\r\n        'ufo': {},\r\n        'bean': {},\r\n        'pickup': {}\r\n    }\r\n    public Get(type: MoverType, key: number): PubSub<IAccelerator>{\r\n        if (!this.cache[type][key])\r\n            this.cache[type][key] = new PubSub<IAccelerator>();\r\n        return this.cache[type][key];\r\n    }\r\n    /**\r\n     * publish new pixel positions and update the hex-to-ID bin\r\n     * @param type \r\n     * @param key \r\n     * @param newPos \r\n     * @param oldHex \r\n     */\r\n    public UpdatePosition(type: MoverType, key: number, newPos: IAccelerator, oldHex: HexPoint){\r\n        this.Get(type, key).publish(newPos);\r\n        if (oldHex.q != newPos.hex.q || oldHex.r != newPos.hex.r){\r\n            const oldBin = this.bins[type][oldHex.q+','+oldHex.r];\r\n            if (oldBin){\r\n                const oldI = oldBin.indexOf(key);\r\n                if (oldI > -1)\r\n                    oldBin.splice(oldI, 1);\r\n            }\r\n            const newHexStr = newPos.hex.q+','+newPos.hex.r;\r\n            if (this.bins[type][newHexStr] == null)\r\n                this.bins[type][newHexStr] = [];\r\n            this.bins[type][newHexStr].push(key);\r\n        }\r\n    }\r\n    public GetOtherKeysInHexBin(type: MoverType, selfKey: number, hex: HexPoint): number[]{\r\n        const allKeysInBin = this.bins[type][hex.q+','+hex.r];\r\n        if (Array.isArray(allKeysInBin))\r\n            return allKeysInBin.filter(keyInBin => keyInBin != selfKey);\r\n        return [];\r\n    }\r\n    public GetOthersInHexBin(type: MoverType, selfKey: number, hex: HexPoint): IAccelerator[]{\r\n        return this.GetOtherKeysInHexBin(type, selfKey, hex).map(otherKey => this.cache[type][otherKey]?.current || OriginAccelerator);\r\n    }\r\n}","import { TraitCommunity, TraitFood, TraitGood, TraitHealth, TraitIdeals } from \"../World\";\r\nimport { IBean } from \"./Agent\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { IEconomicAgent } from \"./Economy\";\r\n\r\nexport type LawGroup = 'Taxation'|'Welfare'|'Economics'|'Crime'|'Culture';\r\nexport type LawAxis = 'wel_food'|'wel_house'|'wel_health'|'tax_basic'|'tax_second'|'econ_sub'|'cul_rel'|'cul_theo';\r\n\r\nexport type LawType = 'civil'|'criminal';\r\n\r\nexport type LawKey = 'food_aid'\r\n|'medical_aid'\r\n|'poll_tax'\r\n// |'wealth_tax'\r\n// |'food_bank'\r\n// |'univ_rations'\r\n// |'housing_subsidy'\r\n// |'state_apartments'\r\n// |'clinics'\r\n// |'grain_sub'\r\n// |'arts'\r\n// |'theocracy'\r\n// |'secularism'\r\n// |'atheism'\r\n// |'mythology'\r\n// |'futurism'\r\n// |'drama'\r\n|'sales_tax'\r\n// |'vice_tax'\r\n// |'prop_tax'\r\n|'death_tax';\r\n\r\nexport type CrimePersonal = 'rob'|'murder'|'hurt';\r\nexport type CrimeProperty = 'steal'|'destroy';\r\nexport type CrimeSociety = 'profanity';\r\nexport type CrimeKey = CrimePersonal|CrimeProperty|CrimeSociety;\r\nexport const AllCrimes: CrimeKey[] = ['destroy', 'hurt', 'murder', 'profanity', 'rob', 'steal'];\r\nexport type CrimePunishment = 'fine'|'jail'|'death';\r\n\r\nexport type LawPrereq = TraitBelief|TraitBelief[];\r\nexport const DollarPerBeanRebateThreshold = 1;\r\nexport const PollTaxWeeklyAmount = 0.1;\r\n\r\nexport function PlayerCanSeePrereqs(prereqs: LawPrereq[], seen: {[belief: string]: boolean}){\r\n    return prereqs.length === 0 || prereqs.some((x) => PlayerKnowsPrereq(x, seen));\r\n}\r\nexport function PlayerMeetsPrereqs(prereqs: LawPrereq[], seen: {[belief: string]: boolean}){\r\n    return prereqs.length === 0 || prereqs.every((x) => PlayerKnowsPrereq(x, seen));\r\n}\r\nexport function PlayerKnowsPrereq(prereq: LawPrereq, seen: {[belief: string]: boolean}){\r\n    return Array.isArray(prereq) ? prereq.some((x) => PlayerKnowsBelief(x, seen)) : PlayerKnowsBelief(prereq, seen);\r\n}\r\nexport function PlayerKnowsBelief(prereq: TraitBelief, seen: {[belief: string]: boolean}){\r\n    return seen[prereq];\r\n}\r\nexport function PrereqKey(prereq: LawPrereq){\r\n    return Array.isArray(prereq) ? prereq.join('/') : prereq;\r\n}\r\nexport function PrereqString(prereq: LawPrereq){\r\n    return Array.isArray(prereq) ? prereq.map(x => BeliefString(x)).join(' / ') : BeliefString(prereq);\r\n}\r\nexport function BeliefString(prereq: TraitBelief){\r\n    return SecondaryBeliefData[prereq].icon+' '+SecondaryBeliefData[prereq].noun;\r\n}\r\n\r\n\r\nexport interface IGovPolicy{\r\n    /**\r\n     * convenience grouping property\r\n     */\r\n    group: LawGroup;\r\n    /**\r\n     * \"slot\" for law\r\n     */\r\n    axis: LawAxis;\r\n    /**\r\n     * specific law selected\r\n     */\r\n    key: LawKey;\r\n}\r\nexport interface IGovernment{\r\n    laws: IGovPolicy[];\r\n    lawTree: {[key in LawAxis]: IGovPolicy|undefined};\r\n    crimes: {[key in CrimeKey]: CrimePunishment|undefined}\r\n    cash: number;\r\n    ticksSinceLastSale: number;\r\n}\r\nexport interface ILawData{\r\n    prereqs: LawPrereq[];\r\n    name: string;\r\n    hint?: string;\r\n    description?: string;\r\n    icon?: string;\r\n}\r\nexport interface IPolicyData extends ILawData, IGovPolicy{\r\n    prereqs: LawPrereq[];\r\n    name: string;\r\n    hint?: string;\r\n    description?: string;\r\n    icon?: string;\r\n}\r\nexport interface ICrimeData extends ILawData{\r\n    key: CrimeKey;\r\n}\r\nexport const LawData: {[key in LawKey]: IPolicyData} = {\r\n    'food_aid':{\r\n        key: 'food_aid', group: 'Welfare', name: 'Food Aid', axis: 'wel_food', icon: '👨‍🌾',\r\n        description: 'The government buys Hungry Subjects food.', prereqs: [['Gluttony','Parochialism'], ['Charity', 'Socialism']]},\r\n    'medical_aid':{\r\n        key: 'medical_aid', group: 'Welfare', name: 'Med Aid', axis: 'wel_health', icon: '👩‍⚕️',\r\n        description: 'The government buys Sick Subjects medicine.', prereqs: ['Charity', 'Cosmopolitanism']},\r\n    // 'food_bank':{\r\n    //     key: 'food_bank', group: 'Welfare', name: 'Food Bank', axis: 'wel_food',\r\n    //     description: 'Hungry Subjects are provided food purchased by the government.'\r\n    // },\r\n    // 'food_stamps':{\r\n    //     key: 'food_stamps', group: 'Welfare', name: 'Food Stamps', axis: 'wel_food',\r\n    //     description: 'Hungry Subjects are provided money by the government to purchase food.'},\r\n    // 'univ_rations':{\r\n    //     key: 'univ_rations', group: 'Welfare', name: 'Universal Rations', axis: 'wel_food',\r\n    //     description: 'All Subjects are provided small amounts of food from the government.'},\r\n    // 'outside':{\r\n    //     key: 'outside', group: 'Welfare', name: 'Sleep Outside', axis: 'wel_house',\r\n    //     description: 'Homeless Subjects must sleep in the cold.'},\r\n    // 'homeless_shelters':{\r\n    //     key: 'homeless_shelters', group: 'Welfare', name: 'Homeless Shelters', axis: 'wel_house',\r\n    //     description: 'Homeless Subjects are provided shelter purchased by the government.'},\r\n    // 'housing_subsidy':{\r\n    //     key: 'housing_subsidy', group: 'Welfare', name: 'Housing Subsidy', axis: 'wel_house',\r\n    //     description: 'Homeless Subjects are provided money by the government to purchase shelter.'},\r\n    // 'state_apartments':{\r\n    //     key: 'state_apartments', group: 'Welfare', name: 'State Apartments', axis: 'wel_house'},\r\n    // 'stay_healthy':{\r\n    //     key: 'stay_healthy', group: 'Welfare', name: 'Stay Healthy', axis: 'wel_health',\r\n    //     description: 'Sick Subjects must pay for their own medical care.'},\r\n    // 'clinics':{\r\n    //     key: 'clinics', group: 'Welfare', name: 'Charity Clinics', axis: 'wel_health',\r\n    //     description: 'Sick Subjects are provided medicine purchased by the government.'},\r\n    // 'medical_aid':{\r\n    //     key: 'medical_aid', group: 'Welfare', name: 'Medical Aid', axis: 'wel_health',\r\n    //     description: 'Sick Subjects are provided money by the government to pay for medical care.'},\r\n    // 'univ_health':{\r\n    //     key: 'univ_health', group: 'Welfare', name: 'Universal Healthcare', axis: 'wel_health',\r\n    //     description: 'All Subjects are provided medical care by the government.'},\r\n    // 'hands_off':{\r\n    //     key: 'hands_off', group: 'Economics', name: 'Laissez-faire', axis: 'econ_sub',\r\n    //     description: 'No industries receive subsidies.'},\r\n    // 'grain_sub':{\r\n    //     key: 'grain_sub', group: 'Economics', name: 'Grain Subsidy', axis: 'econ_sub',\r\n    //     description: 'Farmers are provided money.'},\r\n    // 'arts':{\r\n    //     key: 'arts', group: 'Economics', name: 'Arts Patronage', axis: 'econ_sub'},\r\n    // 'theocracy':{\r\n    //     key: 'theocracy', group: 'Crime', name: 'Illegal Narratives', axis: 'crime_theo',\r\n    //     description: \"It is illegal for subjects to speak about other universal narratives.\"},\r\n    // 'secularism':{\r\n    //     key: 'secularism', group: 'Culture', name: 'Secularism', axis: 'cul_theo',\r\n    //     description: \"The government does not endorse a particular universal narrative.\"},\r\n    // 'atheism':{\r\n    //     key: 'atheism', group: 'Culture', name: 'State Nihilism', axis: 'cul_theo'},\r\n    // 'mythology':{\r\n    //     key: 'mythology', group: 'Culture', name: 'State Mythology 🐲', axis: 'cul_theo'},\r\n    // 'futurism':{\r\n    //     key: 'futurism', group: 'Culture', name: 'State Futurism 🚀', axis: 'cul_theo'},\r\n    // 'drama':{\r\n    //     key: 'drama', group: 'Culture', name: 'State Drama 🎵', axis: 'cul_theo'},\r\n    // '':{key: // , group: '', name: 'Religious Schooling', 'state', idealPro: [ 'trad', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'University Grants', 'ego', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'College For All', 'state', idealPro: [ 'prog', axis: 'cul_ed'},\r\n    'poll_tax':{\r\n        key: 'poll_tax', group: 'Taxation', name: 'Head Tax', axis: 'tax_basic', prereqs: [], icon: '👑',\r\n        description: 'Subjects must pay a flat tax.'},\r\n    'sales_tax':{\r\n        key: 'sales_tax', group: 'Taxation', name: 'Sales Tax', axis: 'tax_basic', prereqs: [], icon: '💸',\r\n        description: 'Subjects must pay a percentage tax for every transaction.'},\r\n    // 'wealth_tax':{\r\n    //     key: 'wealth_tax', group: 'Taxation', name: 'Wealth Tax', axis: 'tax_basic',\r\n    //     description: 'Rich subjects must pay a percentage tax on their excess cash.'},\r\n    // 'vice_tax':{\r\n    //     key: 'vice_tax', group: 'Taxation', name: 'Vice Tax', axis: 'tax_second',\r\n    //     description: 'Entertainment goods have a flat tax.'},\r\n    // 'prop_tax':{\r\n    //     key: 'prop_tax', group: 'Taxation', name: 'Property Tax', axis: 'tax_second',\r\n    //     description: 'Subjects must pay a tax on housing.'},\r\n    'death_tax':{\r\n        key: 'death_tax', group: 'Taxation', name: 'Death Tax', axis: 'tax_second', prereqs: [], icon: '☠️',\r\n        description: 'Dead subjects pay a portion of their cash to the government.'},\r\n    }\r\n    \r\nexport const CrimeData: {[key in CrimeKey]:ICrimeData} = {\r\n    'murder': {\r\n        key: 'murder', name: 'Murder', prereqs: [], icon: '👿',\r\n        description: 'Ceasing brain function.'\r\n    },\r\n    'hurt': {\r\n        key: 'hurt', name: 'Assault', prereqs: [], icon: '😈',\r\n        description: 'Damaging biological matter.'\r\n    },\r\n    'rob': {\r\n        key: 'rob', name: 'Robbery', prereqs: [], icon: '🔫',\r\n        description: 'Taking of scarcity tokens.'\r\n    },\r\n    'steal': {\r\n        key: 'steal',  name: 'Theft', prereqs: [], icon: '🛒',\r\n        description: 'Taking of inanimate objects.'\r\n    },\r\n    'profanity': {\r\n        key: 'profanity', name: 'Profanity', prereqs: [], icon: '🤬',\r\n        description: 'Uttering abnormal syllables.'\r\n    },\r\n    'destroy': {\r\n        key: 'destroy', name: 'Vandalism', prereqs: [], icon: '🔨',\r\n        description: 'Damaging inanimate objects.'\r\n    }\r\n}\r\n\r\nexport const SalesTaxPercentage = 0.05;\r\n\r\nexport function IsLaw(gov: IGovernment, l: LawKey){\r\n    return gov.lawTree[LawData[l].axis]?.key === l;\r\n}\r\nexport function IsActionIllegal(gov: IGovernment, c: CrimeKey){\r\n    return gov.crimes[c] != null;\r\n}\r\nexport function MaybeRebate(gov: IGovernment, beans: IBean[]){\r\n    const allowedTreasury = beans.length * DollarPerBeanRebateThreshold;\r\n    if (gov.cash > allowedTreasury){\r\n        const overage = gov.cash - allowedTreasury;\r\n        const perBean = overage / beans.length;\r\n        gov.cash = allowedTreasury;\r\n        beans.forEach((b) => b.cash += perBean);\r\n    }\r\n}\r\nfunction AgentIsPhysical(bean: any): bean is {food: TraitFood, health: TraitHealth} {\r\n    return bean['food'] != undefined && bean['sick'] != undefined;\r\n}\r\nexport function GovPurchaseQualifiesForWelfare(law: IGovernment, buyer: IEconomicAgent, good: TraitGood){\r\n    if (AgentIsPhysical(buyer)){\r\n        switch(good){\r\n            case 'food':\r\n                return (buyer.food === 'starving' || buyer.food === 'hungry') && IsLaw(law, 'food_aid');\r\n            case 'medicine':\r\n                return (buyer.health === 'sick' || buyer.health === 'sickly') && IsLaw(law, 'medical_aid');\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function GovCanPayWelfare(law: IGovernment, price: number): boolean{\r\n    return law.cash >= price;\r\n}","import { TraitGood, TraitJob, GoodToJob, Trait } from \"../World\";\r\nimport { IEnterprise } from \"./Institutions\";\r\nimport { GovCanPayWelfare, GovPurchaseQualifiesForWelfare, IGovernment, IGovPolicy, IsLaw, SalesTaxPercentage } from \"./Government\";\r\nimport { IBean } from \"./Agent\";\r\nimport { DistrictKind } from \"./Geography\";\r\nimport { BeanBelievesIn } from \"./Bean\";\r\n\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    ticksSinceLastSale: number;\r\n}\r\nexport function BeanDistrictIdeologyBonus(b: IBean, kind: DistrictKind): number{\r\n    if (kind === 'rural')\r\n        return BeanBelievesIn(b, 'Parochialism') ? 1 : BeanBelievesIn(b, 'Cosmopolitanism') ? -1 : 0;\r\n    else if (kind === 'urban')\r\n        return BeanBelievesIn(b, 'Parochialism') ? -1 : BeanBelievesIn(b, 'Cosmopolitanism') ? 1 : 0;\r\n    return 0;\r\n}\r\nexport interface IListing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerEnterpriseKey?: number;\r\n    price: number;\r\n    seller?: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'medicine', 'fun'];\r\n\r\nexport interface IEconomy{\r\n    unfulfilledMonthlyDemand: {[key in TraitGood]: number};\r\n    monthlyDemand: {[key in TraitGood]: number};\r\n    monthlySupply: {[key in TraitGood]: number};\r\n    market: IMarket;\r\n}\r\nexport interface IMarket{\r\n    listings: {[key in TraitGood]: IListing[]};\r\n}\r\nexport interface IMarketReceipt{\r\n    bought: number, \r\n    price: number, \r\n    tax: number\r\n}\r\nexport function MarketTransact(\r\n    market: IMarket, \r\n    listing: IListing, \r\n    good: TraitGood, \r\n    demand: number, \r\n    buyer: IEconomicAgent, \r\n    seller: ISeller, \r\n    salesTaxPercentage: number){    \r\n    MarketListingSubtract(market, listing, good, demand);\r\n    const listPrice = listing.price * demand;\r\n    const tax = listPrice * salesTaxPercentage;\r\n    const grossPrice = listPrice + tax;\r\n    buyer.cash -= grossPrice;\r\n    seller.cash += listPrice;\r\n    seller.ticksSinceLastSale = 0;\r\n    return {\r\n        bought: demand,\r\n        price: listPrice,\r\n        tax: tax\r\n    }\r\n}\r\nexport function MarketGovernmentTransact(market: IMarket, gov: IGovernment, listing: IListing, good: TraitGood, demand: number, seller: ISeller){\r\n    MarketListingSubtract(market, listing, good, demand);\r\n    const listPrice = listing.price * demand;\r\n    const grossPrice = listPrice;\r\n    gov.cash -= grossPrice;\r\n    seller.cash += listPrice;\r\n    seller.ticksSinceLastSale = 0;\r\n    return {\r\n        bought: demand,\r\n        price: listPrice,\r\n        tax: 0\r\n    }\r\n}\r\nexport function MarketListingSubtract(market: IMarket, listing: IListing, good: TraitGood, demand: number){     \r\n    listing.quantity -= demand;\r\n    if (listing.quantity <= 0){\r\n        market.listings[good].splice(0, 1);\r\n    }\r\n}\r\n\r\nexport function EconomyTryTransact(\r\n    economy: IEconomy,\r\n    gov: IGovernment,\r\n    buyer: IEconomicAgent, \r\n    good: TraitGood,\r\n    getSeller: (l: IListing) => ISeller,\r\n    minDemand: number = 1,\r\n    maxDemand: number = 1\r\n    ): IMarketReceipt|undefined {\r\n    economy.monthlyDemand[good] += maxDemand;\r\n    const listing = MarketLowestPriceListing(economy.market, good, minDemand);\r\n    if (listing == null){\r\n        //console.log('agent could not find '+good);\r\n        economy.unfulfilledMonthlyDemand[good] += maxDemand;\r\n        return undefined;\r\n    }\r\n    const actualDemand = Math.min(listing.quantity, maxDemand);\r\n    const salesTaxPercent = IsLaw(gov, 'sales_tax') ? SalesTaxPercentage : 0;\r\n    if ((listing.price * (1 + salesTaxPercent)) <= buyer.cash * actualDemand){ \r\n        const receipt = MarketTransact(economy.market, listing, good, actualDemand, buyer, getSeller(listing), salesTaxPercent);\r\n        if (receipt.tax){\r\n            gov.cash += receipt.tax;\r\n        }\r\n        return receipt;\r\n    } else {\r\n        if (GovPurchaseQualifiesForWelfare(gov, buyer, good) && GovCanPayWelfare(gov, listing.price)){\r\n            return MarketGovernmentTransact(economy.market, gov, listing, good, actualDemand, getSeller(listing));\r\n        }\r\n    }\r\n    economy.unfulfilledMonthlyDemand[good] += actualDemand;\r\n    return undefined;\r\n}\r\nexport function EconomyMostInDemandJob(economy: IEconomy){\r\n    const goods: TraitGood[] = AllGoods;\r\n    const max = goods.reduce((last, good) => {\r\n        if (economy.unfulfilledMonthlyDemand[good] > last.max){\r\n            last.max = economy.unfulfilledMonthlyDemand[good];\r\n            last.job = GoodToJob(good);\r\n        }\r\n        return last;\r\n    }, {max: 0, job: null as TraitJob|null})\r\n\r\n    return max.job;\r\n}\r\nconst MaximumListingQuantity = 20;\r\nexport function EconomyProduceAndPrice(economy: IEconomy, seller: IBean, good: TraitGood, quantity: number, price: number) {\r\n    economy.monthlySupply[good] += quantity;\r\n    const existing = economy.market.listings[good].find((x) => x.sellerBeanKey == seller.key);\r\n    if (existing){\r\n        existing.quantity += quantity;\r\n        existing.price = price;\r\n        existing.quantity = Math.min(existing.quantity, MaximumListingQuantity);\r\n    } else {\r\n        economy.market.listings[good].push({\r\n            sellerBeanKey: seller.key,\r\n            sellerCityKey: seller.cityKey,\r\n            price: price,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    economy.market.listings[good].sort((a, b) => a.price - b.price);\r\n}\r\nexport function EconomyEmployAndPrice(econ: IEconomy, seller: IEnterprise, good: TraitGood, quantity: number, price: number) {\r\n    econ.monthlySupply[good] += quantity;\r\n    const existing = econ.market.listings[good].find((x) => x.sellerEnterpriseKey == seller.key);\r\n    if (existing){\r\n        existing.quantity += quantity;\r\n        existing.price = price;\r\n        existing.quantity = Math.min(existing.quantity, MaximumListingQuantity);\r\n    } else {\r\n        econ.market.listings[good].push({\r\n            sellerEnterpriseKey: seller.key,\r\n            price: price,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    econ.market.listings[good].sort((a, b) => a.price - b.price);\r\n}\r\nexport function GetFairGoodPrice(econ: IEconomy, good: TraitGood){\r\n    const supply = econ.monthlySupply[good] || 1;\r\n    const demand = econ.monthlyDemand[good];\r\n    return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n}\r\nexport function GetCostOfLiving(econ: IEconomy){\r\n    return GetFairGoodPrice(econ, 'food')+GetFairGoodPrice(econ,'medicine');\r\n}\r\nexport function EconomyCanBuy(econ: IEconomy, gov: IGovernment, buyer: IEconomicAgent, good: TraitGood,\r\n    minDemand: number = 1,\r\n    maxDemand: number = 1): 'yes'|'nosupply'|'pricedout'{\r\n    const listing = MarketLowestPriceListing(econ.market, good, minDemand);\r\n    if (listing == null){\r\n        return 'nosupply';\r\n    }\r\n    const actualDemand = Math.min(listing.quantity, maxDemand);\r\n    if (listing.price <= buyer.cash * actualDemand)\r\n        return 'yes';\r\n    if (GovPurchaseQualifiesForWelfare(gov, buyer, good) && GovCanPayWelfare(gov, listing.price)){\r\n        return 'yes';\r\n    }\r\n    return 'pricedout';\r\n\r\n}\r\n\r\nfunction MarketLowestPriceListing(market: IMarket, good: TraitGood, demand: number): IListing|null{\r\n    const fullListings =  market.listings[good].filter((l) => {\r\n        return l.quantity >= demand;\r\n    });\r\n    if (fullListings.length > 0){\r\n        let numberOfSamePriceListings = 1;\r\n        const lowPrice = fullListings[0].price;\r\n        for (let i = 1; i < fullListings.length; i++) {\r\n            const list = fullListings[i];\r\n            if (list.price > lowPrice)\r\n                break;\r\n            numberOfSamePriceListings++;\r\n        }\r\n        const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n        if (i >= fullListings.length)\r\n            throw \"invalid index\";\r\n        return fullListings[i];\r\n    }\r\n    return null;\r\n}","import { MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { TraitEmote } from \"../World\";\r\nimport { IBean } from \"./Agent\";\r\nimport { OriginAccelerator, Point, Vector } from \"./Geography\";\r\n\r\nexport interface IPickup{\r\n    key: number, \r\n    point: Point, \r\n    type: TraitEmote,\r\n    velocity: Vector\r\n}\r\n\r\nexport function GenerateEmoteFromBean(bean: IBean, emote: TraitEmote): IPickup {\r\n    return {\r\n        key: 0,\r\n        point: {\r\n            ...(MoverStoreInstance.Get('bean', bean.key).current || OriginAccelerator).point\r\n        },\r\n        type: emote,\r\n        velocity: { x: 0, y: 0 }\r\n    };\r\n}","import { IEvent } from \"../events/Events\";\r\nimport { BeanResources, IDifficulty } from \"../Game\";\r\nimport { MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { EmotionSanity, EmotionWorth, GoodToThreshold, JobToGood, TraitEmote, TraitFood, TraitGood, TraitHealth, TraitSanity, TraitStamina } from \"../World\";\r\nimport { GetRandom, GetRandomFloat, GetRandomNumber, GetRandomRoll } from \"../WorldGen\";\r\nimport { IBean, IChatData } from \"./Agent\";\r\nimport { GetInsanityFromBrainwashing, InsanityTraits, SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { GetFairGoodPrice, IEconomy } from \"./Economy\";\r\nimport { OriginAccelerator } from \"./Geography\";\r\nimport { IGovernment } from \"./Government\";\r\nimport { GenerateEmoteFromBean, IPickup } from \"./Pickup\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nconst BabyChance = 0.008;\r\nexport const DaysUntilSleepy = 7;\r\nconst ChatCooldownMS = 4000;\r\n/**\r\n * beans with belief # < this are more likely to be persuaded\r\n * with belief # > this are less likely to be persuaded\r\n */\r\nconst PersuasionBeliefTarget = 2; \r\n\r\nexport const HedonismExtraChance = 0.1;\r\nexport const ParanoidUnhappyChance = 0.05;\r\nexport const HedonismHateWorkChance = 0.15;\r\nexport const DiligenceHappyChance = 0.25;\r\nexport const ParochialHappyChance = 0.25;\r\nexport const CosmopolitanHappyChance = 0.25;\r\nconst ExtrovertChatExtraChance = 0.25;\r\nconst IntrovertChatExtraChance = -.15;\r\nconst AntagonismBullyChance = 0.45;\r\nconst GossipBullyChance = 0.35;\r\nconst EnthusiasmPraiseChance = 0.45;\r\nexport const GermophobiaHospitalWorkChance = 0.25;\r\nconst NatalismExtraBabyChance = 0.04;\r\nconst AntinatalismExtraBabyChance = -0.002;\r\nconst CharismaExtraPersuasionStrength = 2; //d20 based, so 10% extra strength\r\nexport const LibertarianTaxUnhappyChance = 0.1;\r\nexport const ProgressivismTaxHappyChance = 0.1;\r\n\r\nconst MaxGraceTicks = 6;\r\n\r\nexport function BeanMaybePersuaded(bean: IBean, seed: string, belief: TraitBelief, strength: number): boolean{\r\n    if (BeanBelievesIn(bean, 'Dogmatism'))\r\n        return false;\r\n\r\n    if (!bean.beliefs.includes(belief)){\r\n        let defense = 10 + GetRandomNumber(seed, 1, 6);\r\n        defense += bean.beliefs.length - PersuasionBeliefTarget;\r\n        let offense = GetRandomNumber(seed, 1, 20) + strength;\r\n\r\n        return (offense > defense);\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function BeanCalculateHealth(bean: IBean, difficulty: IDifficulty): TraitHealth{\r\n    if (bean.discrete_health >= GoodToThreshold['medicine'].abundant)\r\n        bean.health = 'fresh';\r\n    else if (bean.discrete_health >= GoodToThreshold['medicine'].sufficient)\r\n        bean.health =  'bruised'\r\n    else if (bean.discrete_health >= GoodToThreshold['medicine'].warning)\r\n        bean.health =  'sickly'\r\n    else\r\n        bean.health =  'sick';\r\n\r\n    return bean.health;\r\n}\r\n\r\nexport function BeanCalculateStamina(bean: IBean, difficulty: IDifficulty): TraitStamina{\r\n    if (bean.discrete_stamina < 0)\r\n        bean.stamina = 'sleepy';\r\n    else if (bean.discrete_stamina <= 4)\r\n        bean.stamina =  'awake';\r\n    else\r\n        bean.stamina = 'rested';\r\n    \r\n    return bean.stamina;\r\n}\r\n\r\nexport function BeanCalculateSanity(bean: IBean, difficulty: IDifficulty): TraitSanity{\r\n    if (bean.discrete_sanity >= 8)\r\n        bean.sanity = 'sane';\r\n    else if (bean.discrete_sanity >= 5)\r\n        bean.sanity =  'stressed'\r\n    else if (bean.discrete_sanity >= 3)\r\n        bean.sanity =  'disturbed'\r\n    else\r\n        bean.sanity =  'psychotic';\r\n    return bean.sanity;\r\n}\r\nexport function BeanCalculateFood(bean: IBean, difficulty: IDifficulty): TraitFood{\r\n    if (bean.discrete_food >= GoodToThreshold['food'].abundant)\r\n    bean.food = 'stuffed';\r\n    else if (bean.discrete_food >= GoodToThreshold['food'].sufficient)\r\n    bean.food = 'sated'\r\n    else if (bean.discrete_food >= GoodToThreshold['food'].warning)\r\n    bean.food = 'hungry'\r\n    else\r\n    bean.food = 'starving';\r\n\r\n    return bean.food;\r\n}\r\n\r\nexport function BeanCalculateBeliefs(bean: IBean, econ: IEconomy, difficulty: IDifficulty, law: IGovernment){\r\n    bean.hedonFiveDayRecord = {\r\n        min: Math.min(bean.hedonFiveDayRecord.min, bean.happiness.flatAverage),\r\n        max: Math.max(bean.hedonFiveDayRecord.max, bean.happiness.flatAverage)  \r\n    };\r\n    if (bean.happiness.flatAverage === 0){\r\n        bean.lastHappiness = 0;\r\n    } else {\r\n        bean.lastHappiness = bean.happiness.flatAverage >= 0 ? (\r\n            bean.happiness.flatAverage / Math.abs(bean.hedonFiveDayRecord.max)) * 100 : (\r\n            bean.happiness.flatAverage / Math.abs(bean.hedonFiveDayRecord.min)) * 100;\r\n    }\r\n    \r\n    BeanCalculateFood(bean, difficulty);\r\n    BeanCalculateHealth(bean, difficulty);\r\n    BeanCalculateSanity(bean, difficulty);\r\n    BeanCalculateStamina(bean, difficulty);\r\n\r\n    if (bean.job === 'jobless'){\r\n        bean.fairGoodPrice = 1;\r\n    } else {\r\n        bean.fairGoodPrice = GetFairGoodPrice(econ, JobToGood(bean.job))\r\n    }\r\n}\r\nexport function BeanMaybeChat(bean: IBean): boolean {\r\n        if (bean.lastChatMS + ChatCooldownMS > Date.now()) \r\n            return false;\r\n        if (bean.action === 'chat')\r\n            return false;\r\n        const roll = Math.random();\r\n        let chance = (bean.community === 'state') ? 0.2 : 0.1;\r\n        if (BeanBelievesIn(bean, 'Extroversion')) \r\n            chance += ExtrovertChatExtraChance;\r\n        if (BeanBelievesIn(bean, 'Introversion')) \r\n            chance += IntrovertChatExtraChance;\r\n        return roll < chance;\r\n}\r\nexport function BeanGetRandomChat(bean: IBean, seed: string, findNeedy: () => IBean|undefined): IChatData{\r\n    const canPreach = bean.beliefs.length;\r\n    if (canPreach){\r\n        if (BeanBelievesIn(bean, 'Charity') && bean.cash >= 2){\r\n            //find a bean with less money than self, poorest in sight\r\n            const needy = findNeedy();\r\n            if (needy) {\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'gift',\r\n                    targetBeanKey: needy.key\r\n                }\r\n            }\r\n        } else if(BeanBelievesIn(bean, 'Enthusiasm') && Math.random() < EnthusiasmPraiseChance){\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'praise',\r\n                preachBelief: 'Enthusiasm'\r\n            }\r\n        } else if(BeanBelievesIn(bean, 'Antagonism') && Math.random() < AntagonismBullyChance){\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'bully',\r\n                preachBelief: 'Antagonism'\r\n            }\r\n        } else if(BeanBelievesIn(bean, 'Gossip') && Math.random() < GossipBullyChance){\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'bully',\r\n                preachBelief: 'Gossip'\r\n            }\r\n        }\r\n        return {\r\n            participation: 'speaker',\r\n            type: 'preach',\r\n            preachBelief: GetRandom(seed, bean.beliefs),\r\n            persuasionStrength: 1 + (BeanBelievesIn(bean, 'Charisma') ? CharismaExtraPersuasionStrength : 0)\r\n        }\r\n    } else {\r\n        return {\r\n            participation: 'speaker',\r\n            type: 'praise'\r\n        }\r\n    }\r\n}\r\n\r\nexport function BeanAge(bean: IBean, seed: string, diff: IDifficulty): {death?: IEvent, emotes?: IPickup[]}|undefined {\r\n    if (bean.lifecycle != 'alive') return undefined;\r\n    const emotes: IPickup[] = [];\r\n\r\n    const wasNotHungry = bean.food !== 'starving';\r\n    const wasNotSick = bean.health !== 'sick';\r\n\r\n    bean.discrete_food -= diff.bean_life.degrade_per_tick.food;\r\n    if (bean.discrete_food < 0)\r\n        bean.discrete_health -= diff.bean_life.penalty.starving_health;\r\n\r\n    BeanCalculateFood(bean, diff);\r\n    const starve = BeanMaybeDie(bean, seed, 'starvation', bean.food === 'starving', 0.6);\r\n    if (starve)\r\n        return starve;\r\n    else if (bean.food === 'starving' && wasNotHungry){\r\n        emotes.push(...BeanEmote(bean, 'unhappiness', 'Starving'));\r\n        if (BeanBelievesIn(bean, 'Gluttony')){\r\n            emotes.push(...BeanEmote(bean, 'unhappiness', 'Gluttony'));\r\n            emotes.push(...BeanEmote(bean, 'unhappiness', 'Gluttony'));\r\n        }\r\n    }\r\n        \r\n    bean.discrete_stamina -= diff.bean_life.degrade_per_tick.stamina;\r\n\r\n    BeanCalculateStamina(bean, diff);\r\n    // const exposure = BeanMaybeDie(bean, seed, 'exposure', bean.housing === 'homeless', 0.2);\r\n    // if (exposure)\r\n    //     return exposure;\r\n\r\n    bean.discrete_health -= diff.bean_life.degrade_per_tick.health;\r\n    bean.discrete_health = Math.min(bean.discrete_health, 3);\r\n\r\n    BeanCalculateHealth(bean, diff);\r\n    const sick = BeanMaybeDie(bean, seed, 'sickness', bean.health === 'sick', 0.4);\r\n    if (sick)\r\n        return sick;\r\n    else if (bean.health === 'sick' && wasNotSick){\r\n        emotes.push(...BeanEmote(bean, 'unhappiness', 'Sick'));\r\n        if (BeanBelievesIn(bean, 'Germophobia')){\r\n            emotes.push(...BeanEmote(bean, 'unhappiness', 'Germophobia'));\r\n        }\r\n    }\r\n\r\n    bean.discrete_fun -= diff.bean_life.degrade_per_tick.fun;\r\n    bean.discrete_fun = Math.max(0, bean.discrete_fun);\r\n\r\n    if (!BeanIsInCrisis(bean))\r\n        bean.graceTicks = MathClamp(bean.graceTicks+1, 0, MaxGraceTicks);\r\n    \r\n    if (emotes.length)\r\n        return {\r\n            emotes: emotes\r\n        };\r\n    else \r\n        return undefined;\r\n}\r\n\r\nexport function BeanEmote(bean: IBean, emote: TraitEmote, source: string): IPickup[]{\r\n    bean.discrete_sanity = MathClamp(bean.discrete_sanity + EmotionSanity[emote], 0, 10);\r\n    bean.hedonHistory[0][source] = (bean.hedonHistory[0][source] || 0) + EmotionWorth[emote];\r\n    const out = [\r\n        GenerateEmoteFromBean(bean, emote)\r\n    ];\r\n    if (BeanBelievesIn(bean, 'Hedonism') && (emote === 'happiness' || emote === 'love') && Math.random() < HedonismExtraChance){\r\n        out.push(...BeanEmote(bean, 'happiness', 'Hedonism'));\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function BeanBelievesIn(bean: IBean, trait: TraitBelief): boolean{\r\n    return bean.beliefs.indexOf(trait) !== -1;\r\n}\r\nexport function BeanMaybeBaby(bean: IBean, seed: string, costOfLiving: number): IEvent|undefined{\r\n    if (BeanCanBaby(bean, costOfLiving) &&\r\n        GetRandomRoll(seed, BeanBabyChance(bean))) {\r\n        if (BeanBelievesIn(bean, 'Natalism')){\r\n            BeanEmote(bean, 'love', 'Natalist Parent');\r\n        } else if (BeanBelievesIn(bean, 'Antinatalism')) {\r\n            BeanEmote(bean, 'hate', 'Antinatalism');\r\n        } else {\r\n            BeanEmote(bean, 'happiness', 'Proud Parent');\r\n        }\r\n        return {\r\n            icon: '🎉', trigger: 'birth', message: `${bean.name} has a baby!`,\r\n            key: 0,\r\n        }\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\nexport function BeanMaybeCrime(bean: IBean, seed: string, good: TraitGood): boolean {\r\n    if (good === 'fun') return false;\r\n    const roll = GetRandomFloat(seed);\r\n    let chance = 0.05;\r\n    if (bean.community === 'ego'){\r\n        chance += .1;\r\n    }\r\n    if (BeanIsInCrisis(bean)){\r\n        chance += .1;\r\n    }\r\n    if (BeanBelievesIn(bean, 'Greed')){\r\n        chance += .25;\r\n    }\r\n    if (BeanBelievesIn(bean, 'Anarchism')){\r\n        chance += .33;\r\n    }\r\n    if (BeanBelievesIn(bean, 'Authority')){\r\n        chance += -.25;\r\n    }\r\n    if (good === 'food' && bean.food === 'starving'){\r\n        chance += .25;\r\n    }\r\n    else if (good === 'medicine' && bean.health === 'sick'){\r\n        chance += .25;\r\n    }\r\n    return chance <= roll;\r\n}\r\nexport function BeanMaybeParanoid(bean: IBean) {\r\n    if (BeanBelievesIn(bean, 'Paranoia') && Math.random() < ParanoidUnhappyChance){\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function BeanMaybeScarcity(bean: IBean, good: TraitGood){\r\n    let scarce = false;\r\n    if (good === 'food' && (bean.food === 'starving' || bean.food === 'hungry'))\r\n        scarce = true;\r\n    else if (good === 'medicine' && (bean.health === 'sick' || bean.health === 'sickly'))\r\n        scarce = true;\r\n    return scarce;\r\n}\r\nexport function BeanCanBaby(bean: IBean, costOfLiving: number): boolean{\r\n    return bean.lifecycle === 'alive' && \r\n        bean.cash > costOfLiving * 3 &&\r\n        !BeanIsInCrisis(bean);\r\n}\r\nexport function BeanBabyChance(bean: IBean): number{\r\n    let base = BabyChance;\r\n    if (BeanBelievesIn(bean, 'Natalism'))\r\n        base += NatalismExtraBabyChance;\r\n    if (BeanBelievesIn(bean, 'Antinatalism'))\r\n        base += AntinatalismExtraBabyChance;\r\n    return base;\r\n}\r\nexport function BeanMaybeDie(bean: IBean, seed: string, cause: string, isDire: boolean, chance: number): {death: IEvent, emotes: IPickup[]}|undefined{\r\n    if (isDire && Math.random() <= chance) {\r\n        if (bean.graceTicks <= 0){\r\n            return BeanDie(bean, seed, cause);\r\n        }\r\n        bean.graceTicks--;\r\n    }\r\n    return undefined;\r\n}\r\nexport function BeanDie(bean: IBean, seed: string, cause: string): {death: IEvent, emotes: IPickup[]}{\r\n    bean.lifecycle = 'dead';\r\n    const pains = GetRandomNumber(seed, 2, 3);\r\n    const emotes = (new Array(pains)).map(\r\n        x => GenerateEmoteFromBean(bean, 'hate')\r\n    );\r\n    return {\r\n        death: {\r\n            icon: '☠️', trigger: 'death', message: `${bean.name} died of ${cause}!`, \r\n            beanKey: bean.key, cityKey: bean.cityKey,\r\n            point: (MoverStoreInstance.Get('bean', bean.key).current || OriginAccelerator).point,\r\n            key: 0,\r\n        },\r\n        emotes: emotes\r\n    }\r\n}\r\n\r\nexport function BeanLoseSanity(bean: IBean, amount: number){\r\n    const multiplier = BeanBelievesIn(bean, 'Neuroticism') ? 2 : 1;\r\n    bean.discrete_sanity -= multiplier * amount;\r\n}\r\n\r\nexport function BeanGetSpeech(bean: IBean): string|undefined { \r\n    if (bean.action === 'chat'){\r\n        if (bean.actionData.chat?.participation === 'speaker' && bean.actionData.chat.preachBelief){\r\n            return '💬'+SecondaryBeliefData[bean.actionData.chat.preachBelief].icon;\r\n        }\r\n    }\r\n}\r\n\r\nexport function BeanIsInCrisis(bean: IBean): boolean{\r\n    return bean.food === 'starving' ||\r\n    // bean.stamina === 'homeless' ||\r\n    bean.health === 'sick';\r\n}\r\n\r\nexport function BeanCanPurchase(bean: IBean, cost: BeanResources, sanityBonus: number){\r\n    return (cost.sanity === undefined || bean.discrete_sanity >= cost.sanity + sanityBonus);\r\n}\r\n\r\nexport function BeanGetFace(bean: IBean): string{\r\n    switch (bean.lifecycle){\r\n        case 'dead':\r\n            return '💀';\r\n        case 'incarcerated':\r\n            return '🤐';\r\n    }\r\n    if (bean.actionData.act === 'sleep'){\r\n        return bean.housing === 'housed' ? '😴' : '🥶';\r\n    }\r\n    if (bean.faceOverride){\r\n        return bean.faceOverride;\r\n    }\r\n    if (bean.actionData.act === 'crime'){\r\n        return '😈';\r\n    }\r\n    if (bean.actionData.act === 'chase' || bean.actionData.act === 'assault'){\r\n        if (bean.key === bean.actionData?.assault?.victimBeanKey)\r\n            return '😰';\r\n        switch(bean.actionData.assault?.assaultType ?? bean.actionData.chase?.type){\r\n            case 'arrest':\r\n                return '🤠';\r\n            case 'assault':\r\n                return '😡';\r\n            case 'murder':\r\n                return '👿';\r\n            case 'rob':\r\n                return '😈';\r\n        }\r\n    }\r\n    if (bean.actionData.act === 'relax'){\r\n        return '😎';\r\n    }\r\n    if (bean.actionData.act === 'chat'){\r\n        if (bean.actionData.chat?.participation === 'speaker'){\r\n            switch(bean.actionData?.chat?.type){\r\n                default: return '😃';\r\n                case 'gift': return '😇';\r\n                case 'praise': return '🥳';\r\n                case 'bully': return '😈';\r\n            }\r\n        }\r\n        return '🤨';\r\n    }\r\n    if (bean.food === 'starving')\r\n        return '😫';\r\n    if (bean.health === 'sick')\r\n        return '🤢';\r\n    if (bean.job === 'jobless')\r\n        return '😧';\r\n    if (bean.lastHappiness < 0)\r\n        return '☹️';\r\n    if (bean.lastHappiness >= 50)\r\n        return '🙂';\r\n    return '😐';\r\n}\r\n\r\nexport function BeanMaybeGetInsanity(seed: string, bean: IBean): {beanKey: number, newInsanity: InsanityTraits}|undefined{\r\n    const insanity = GetInsanityFromBrainwashing(seed, bean.sanity, bean.beliefs);\r\n    if (insanity){\r\n        return {\r\n            beanKey: bean.key,\r\n            newInsanity: insanity\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nconst CrimeWitnessChance = 0.33;\r\nexport function BeanDidWitnessCrime(bean: IBean, seed: string, perpBeanKey: number): boolean {\r\n    if (bean.action === 'sleep')\r\n        return false;\r\n    let chance = CrimeWitnessChance;\r\n    if (BeanBelievesIn(bean, 'Anarchism'))\r\n        chance -= 0.25;\r\n    if (BeanBelievesIn(bean, 'Authority'))\r\n        chance += 0.25;\r\n    return GetRandomFloat(seed) <= chance;\r\n}","import { ChangePubSub, IEvent, PubSub } from \"./events/Events\";\r\n\r\nexport class SignalStore {\r\n    alienEnergy = new ChangePubSub();\r\n    alienBots = new ChangePubSub();\r\n    alienHedons = new ChangePubSub();\r\n    newTraitSeen = new PubSub<{k: string, v: boolean}>();\r\n    events = new PubSub<IEvent>();\r\n    autosave = new PubSub<boolean>();\r\n}\r\n\r\nexport const SignalStoreInstance = new SignalStore();","import { DefaultDifficulty, IDifficulty, PlayerResources } from \"../Game\";\r\nimport { SignalStoreInstance } from \"../SignalStore\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { Number_Starting_City_Pop } from \"../WorldGen\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\nimport { IDate } from \"./Time\";\r\n\r\n\r\nexport interface IPlayerData{\r\n    scanned_bean: {[beanKey: number]: boolean};\r\n    abductedBeanKeys: number[];\r\n    seenBeliefs: {[key: string]: boolean};\r\n    speechcrimes: {[year: number]: number};\r\n    next_grade: IDate;\r\n    pastReportCards: IReportCard[];\r\n    energy: IResource;\r\n    bots: IResource;\r\n    hedons: IResource;\r\n    workingReportCard: IReportCard;\r\n    techProgress: TechProgress;\r\n    currentlyResearchingTech: Tech|undefined;\r\n    difficulty: IDifficulty;\r\n    beliefInventory: BeliefInventory[];\r\n    goalProgress: {[key: string]: IGoalProgress};\r\n    goals: GoalKey[]\r\n}\r\n\r\nexport interface IResource{\r\n    amount: number;\r\n    income: number;\r\n}\r\n\r\nexport type GoalKey = 'found_utopia'|'build_house_n_farm'|'beam_3'|'scan'|'set_policy'|'brainwash'|'c+_grade';\r\nexport interface IGoal{\r\n    key: GoalKey;\r\n    text: string;\r\n    tooltip?: string;\r\n    reward?: PlayerResources,\r\n    check: (world: IWorldState) => boolean\r\n}\r\nexport interface IGoalProgress {\r\n    done: boolean,\r\n    step: number\r\n}\r\nexport interface IProgressable{\r\n    goalProgress: {[key: string]: IGoalProgress},\r\n    goals: Array<GoalKey>\r\n}\r\nexport const Goals: {[key in GoalKey]: IGoal} = {\r\n    found_utopia: {\r\n        key: 'found_utopia', text: 'Found your Utopia',\r\n       check: (world) => world.buildings.allIDs.length > 0\r\n    },\r\n    build_house_n_farm: {\r\n        key: 'build_house_n_farm', text: 'Build a house and farm',\r\n        check: (world) => {\r\n            return world.buildings.allIDs.find(k => world.buildings.byID[k].type == 'farm') != null &&\r\n            world.buildings.allIDs.find(k => world.buildings.byID[k].type == 'house') != null;\r\n        },\r\n        reward: {\r\n            energy: 3, bots: 3\r\n        }\r\n    }, \r\n    beam_3: {\r\n        key: 'beam_3', text: 'Beam in 3 new beings', \r\n        check: (world) => {\r\n            return world.beans.allIDs.filter(k => !world.beans.byID[k].bornInPetri).length >= (3 + Number_Starting_City_Pop)\r\n        }\r\n    }, \r\n    scan: {\r\n        key: 'scan', text: 'Scan a Subject',\r\n        check: (world) => Object.keys(world.alien.scanned_bean).length > 0\r\n    }, \r\n    set_policy: {\r\n        key: 'set_policy', text: 'Set a Gov Policy',\r\n        check: (world) => false\r\n    }, \r\n    brainwash: {\r\n        key: 'brainwash', text: 'Brainwash a Subject',\r\n        check: (world) => false\r\n    }, \r\n    'c+_grade': {\r\n        key: 'c+_grade', text: 'Receive a C+ Grade',\r\n        check: (world) => false\r\n    } \r\n};\r\n\r\nexport type Grade = 'F'|'D'|'C'|'B'|'A';\r\nexport type RubricKeys = 'Happiness'|'Prosperity'|'Stability'|'Dogma';\r\nexport type IReportCard = {[key in RubricKeys]: Grade}\r\nexport type GradingFunc = (world: IWorldState) => IReportCard;\r\nexport interface ICurriculum {\r\n    GradeWorld: GradingFunc,\r\n    RubricDescription: {[key in RubricKeys]: string} \r\n}\r\nexport const Curriculums: {[difficulty: string]: ICurriculum} = {\r\n    Default: {\r\n        GradeWorld: (world: IWorldState) => {return{\r\n            Happiness: BooleanAverageGrader(world.beans.allIDs.map(x => world.beans.byID[x]), (o) => o.lastHappiness >- .2),\r\n            Prosperity: BooleanAverageGrader(world.beans.allIDs.map(x => world.beans.byID[x]), (o) => o.food !== 'hungry'),\r\n            Stability: BooleanAverageGrader(world.beans.allIDs.map(x => world.beans.byID[x]), (o) => o.sanity === 'sane'),\r\n            Dogma: GradeUpToNumber((world.alien.speechcrimes[world.date.year] || 0), 10, 10),\r\n        }},\r\n        RubricDescription: {\r\n            Happiness: 'Subjects are at least 20% happy',\r\n            Prosperity: 'Subjects are not hungry',\r\n            Stability: 'Subjects are all sane',\r\n            Dogma: 'Up to 10 Speechcrimes'\r\n        }\r\n    }\r\n}\r\n/**\r\n * \r\n * @param number number of bad events\r\n * @param allowance number of allowed events\r\n * @param maximum range of \"overflow\" events\r\n */\r\nfunction GradeUpToNumber(number: number, allowance: number, maximum: number): Grade{\r\n    const normalized = 1 - Math.min(1, Math.max(0, number - allowance) / maximum);\r\n    return NormalizedScoreToGrade(normalized);\r\n}\r\nfunction BooleanAverageGrader<T>(array: T[], grade: (o: T) => boolean): Grade{\r\n    if (array.length < 1) return 'F';\r\n    return NormalizedScoreToGrade(array.filter(grade).length / array.length);\r\n}\r\nfunction NormalizedScoreToGrade(normNumber: number): Grade{\r\n    if (normNumber < .58) return 'F';\r\n    if (normNumber < .68) return 'D';\r\n    if (normNumber < .78) return 'C';\r\n    if (normNumber < .88) return 'B';\r\n    return 'A';\r\n}\r\nconst GradeWeights: {[key in Grade]: number} ={\r\n    A: 5,\r\n    B: 4,\r\n    C: 3,\r\n    D: 2,\r\n    F: 1\r\n}\r\nexport function GetAverage(reportCard: IReportCard): Grade{\r\n    return NormalizedScoreToGrade((GradeWeights[reportCard.Happiness] + \r\n        GradeWeights[reportCard.Prosperity] + \r\n        GradeWeights[reportCard.Stability] +\r\n        GradeWeights[reportCard.Dogma] \r\n    ) / 20);\r\n}\r\n\r\nexport type Tech = 'sanity_bonus'|'fast_resources'|'trauma_nanobots'|'neural_duplicator';\r\nexport interface ITechInfo{\r\n    tech: Tech,\r\n    /**\r\n     * number of tech points required to complete research\r\n     */\r\n    techPoints: number,\r\n    name: string,\r\n    description: string\r\n}\r\nexport const TechData: {[key in Tech]: ITechInfo} = {\r\n    'sanity_bonus': {\r\n        tech: 'sanity_bonus',\r\n        name: 'Surgical Psychops',\r\n        techPoints: 30,\r\n        description: 'Brainwashing causes -1 🧠 Sanity damage'\r\n    },\r\n    'fast_resources': {\r\n        tech: 'fast_resources',\r\n        name: '0 Dimensional Supersiphons',\r\n        techPoints: 30,\r\n        description: 'Faster ⚡️ and 🤖 accumulation'\r\n    },\r\n    'trauma_nanobots': {\r\n        tech: 'trauma_nanobots',\r\n        name: 'Trauma Nanobots',\r\n        techPoints: 30,\r\n        description: 'Spend 🤖 to stop Subject from dying'\r\n    },\r\n    'neural_duplicator': {\r\n        tech: 'neural_duplicator',\r\n        name: 'Level 2 Neural Duplication',\r\n        techPoints: 30,\r\n        description: 'Copy 🧠 Traits 1 additional time'\r\n    }\r\n}\r\nexport interface IPlayerTechProgress{\r\n    /**\r\n     * number of research points\r\n     */\r\n    researchPoints: number\r\n}\r\nexport type TechProgress = {[key: string]: IPlayerTechProgress};\r\nexport interface BeliefInventory{\r\n    trait: TraitBelief,\r\n    gems: number\r\n}\r\n\r\nexport function PlayerReward(player: IPlayerData, reward: PlayerResources){\r\n    if (reward.bots){\r\n        player.bots.amount += reward.bots;\r\n        SignalStoreInstance.alienBots.publish({change: reward.bots});\r\n    }\r\n    if (reward.energy){\r\n        player.energy.amount += reward.energy;\r\n        SignalStoreInstance.alienEnergy.publish({change: reward.energy});\r\n    }\r\n    if (reward.hedons){\r\n        player.hedons.amount += reward.hedons;\r\n        SignalStoreInstance.alienHedons.publish({change: reward.hedons});\r\n    }\r\n}\r\n\r\nexport function CheckGoals(world: IWorldState, player: IPlayerData){\r\n    for (let i = 0; i < player.goals.length; i++) {\r\n        const goal = player.goals[i];\r\n        if (player.goalProgress[goal] == null){\r\n            player.goalProgress[goal] = {done: false, step: 0};\r\n        }\r\n        if (!player.goalProgress[goal].done) {\r\n            const done = Goals[goal].check(world);\r\n            const reward = Goals[goal].reward;\r\n            player.goalProgress[goal].done = done;\r\n            if (done && reward != null){\r\n                PlayerReward(player, reward);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function CheckReportCard(world: IWorldState, player: IPlayerData) {\r\n    player.workingReportCard = Curriculums.Default.GradeWorld(world);\r\n}\r\nexport function HasResearched(techProgress: TechProgress, tech: Tech){\r\n    return techProgress[tech] != null && techProgress[tech].researchPoints >= TechData[tech].techPoints\r\n}\r\nexport function PlayerCanAfford(player: IPlayerData, cost: PlayerResources, qty: number = 1): boolean{\r\n    return (cost.bots === undefined || player.bots.amount >= cost.bots * qty) &&\r\n    (cost.energy === undefined || player.energy.amount >= cost.energy * qty) && \r\n    (cost.hedons === undefined || player.hedons.amount >= cost.hedons * qty);\r\n}\r\nexport function PlayerUseTraitGem(alien: IPlayerData, t: TraitBelief){\r\n    const all = alien.beliefInventory;\r\n    const existing = all.find(x => x.trait === t);\r\n    if (existing){\r\n        existing.gems -= 1;\r\n        alien.beliefInventory = [...all.filter(x => x.gems > 0)];\r\n    }\r\n}\r\nexport function PlayerTryPurchase(player: IPlayerData, cost: PlayerResources, qty: number = 1): boolean{\r\n    if (PlayerCanAfford(player, cost, qty)){\r\n        PlayerPurchase(player, cost, qty);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function PlayerPurchase(player: IPlayerData, cost: PlayerResources, qty: number = 1): void{\r\n    if (cost.bots){\r\n        player.bots.amount -= cost.bots * qty;\r\n        SignalStoreInstance.alienBots.publish({change: -cost.bots * qty});\r\n    }\r\n    if (cost.energy){\r\n        player.energy.amount -= cost.energy * qty;\r\n        SignalStoreInstance.alienEnergy.publish({change: -cost.energy * qty});\r\n    }\r\n    if (cost.hedons){\r\n        player.hedons.amount -= cost.hedons * qty;\r\n        SignalStoreInstance.alienHedons.publish({change: -cost.hedons * qty});\r\n    }\r\n}","import { EntityAddToSlice } from \"../state/entity.state\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { ICity } from \"./City\";\r\nimport { IEconomy } from \"./Economy\";\r\nimport { BuildingToGood, BuildingTypes, HexPoint, Point } from \"./Geography\";\r\n\r\nexport type DwellingKind = 'apartment'|// communal urban\r\n'townhouse'| // individual urban\r\n'house'| // (detached) rural\r\n'loft' // mixedUse urban\r\n;\r\n\r\nexport const DwellingKindToIcon = {\r\n    apartment: '🚪',\r\n    house: '🏡',\r\n    townhouse: '🏘️',\r\n    loft: '🚪'\r\n}\r\n\r\nexport interface IBuilding{\r\n    key: number;\r\n    hex: HexPoint,\r\n    point: Point;\r\n    type: BuildingTypes;\r\n    employeeBeanKeys: number[];\r\n    upgradedJobs: boolean, // more jobs in 1 place\r\n    upgradedStorage: boolean, //store more goods\r\n    upgradedLoft: boolean, //add 1 dwelling\r\n    enterpriseKey?: number,\r\n    lotKey: number,\r\n    dwellingKeys?: number[],\r\n    interredBeanKeys?: number[]\r\n}\r\n\r\nexport interface IDwelling{\r\n    key: number,\r\n    occupantKey?: number,\r\n    buildingKey: number,\r\n    kind: DwellingKind\r\n}\r\n\r\nconst EnterpriseBuildings: BuildingTypes[] = ['farm', 'hospital', 'theater'];\r\n\r\nexport function BuildingNumOfOpenJobs(b: IBuilding): number{\r\n    return BuildingMaximumJobs(b) - b.employeeBeanKeys.length;\r\n}\r\nexport const BuildingJobs: {[key in BuildingTypes]: number} = {\r\n    'church': 0,\r\n    'jail': 3,\r\n    'graveyard': 0,\r\n    'park': 0,\r\n    'house': 0,\r\n    'farm': 3,\r\n    'hospital': 3,\r\n    'theater': 3,\r\n    'nature': 0\r\n};\r\nexport function BuildingMaximumJobs(b: IBuilding): number{\r\n    const multiplier = b.upgradedJobs ? 2: 1;\r\n    return BuildingJobs[b.type] * multiplier;\r\n}\r\n\r\nexport function BuildingTryFreeBean(b: IBuilding, beanKey: number): boolean{\r\n    const oldLen = b.employeeBeanKeys.length;\r\n    b.employeeBeanKeys = b.employeeBeanKeys.filter(x => x != beanKey);\r\n    return oldLen === b.employeeBeanKeys.length+1;\r\n}\r\nexport function GenerateIBuilding(world: IWorldState, city: ICity, type: BuildingTypes, hex: HexPoint, point: Point, lotKey: number, econ: IEconomy): IBuilding{\r\n    const newBuilding: IBuilding = {\r\n        type: type,\r\n        key: world.buildings.nextID++,\r\n        hex: hex,\r\n        point: {...point},\r\n        lotKey: lotKey,\r\n        employeeBeanKeys: [],\r\n        upgradedLoft: false,\r\n        upgradedJobs: false,\r\n        upgradedStorage: false\r\n    }\r\n    world.buildings.allIDs.push(newBuilding.key);\r\n    world.buildings.byID[newBuilding.key] = newBuilding;\r\n    city.buildingKeys.push(newBuilding.key);\r\n    const lot = world.lots.byID[lotKey];\r\n    lot.buildingKey = newBuilding.key;\r\n\r\n    if (EnterpriseBuildings.some(x => x === type)){\r\n        newBuilding.enterpriseKey = newBuilding.key;\r\n        world.enterprises.allIDs.push(newBuilding.key);\r\n        world.enterprises.byID[newBuilding.key] = {\r\n            cash: 0,\r\n            cityKey: city.key,\r\n            enterpriseType: \"company\",\r\n            buildingKey: newBuilding.key,\r\n            key: newBuilding.key,\r\n            ticksSinceLastSale: 0\r\n        }\r\n    }\r\n    if (type === 'house'){\r\n        const kind = world.districts.byID[lot.districtKey].kind === 'urban' ? 'townhouse' : 'house';\r\n        const dwellingKeys: number[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            const newDwell: IDwelling = {\r\n                key: 0,\r\n                buildingKey: newBuilding.key,\r\n                kind: kind\r\n            };\r\n            EntityAddToSlice(world.dwellings, newDwell);\r\n            dwellingKeys.push(newDwell.key);\r\n        }\r\n        newBuilding.dwellingKeys = dwellingKeys;\r\n    }\r\n    if (type === 'graveyard'){\r\n        newBuilding.interredBeanKeys = [];\r\n    }\r\n    const good = BuildingToGood[type];\r\n    \r\n    if (good && good != 'fun')\r\n    {\r\n        world.economy.market.listings[good].push({\r\n            price: 1,\r\n            quantity: 3,\r\n            sellerCityKey: city.key,\r\n            sellerEnterpriseKey: newBuilding.key\r\n        });\r\n    }\r\n    return newBuilding;\r\n}","import { PubSub } from \"../events/Events\";\r\nimport { MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { Trait, TraitEmote } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IBean } from \"./Agent\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { GetCostOfLiving, IEconomy } from \"./Economy\";\r\nimport { BuildingTypes, HexPoint, Point, Vector } from \"./Geography\";\r\nimport { IPickup } from \"./Pickup\";\r\nimport { BuildingTryFreeBean, IBuilding } from \"./RealEstate\";\r\n\r\n\r\nexport function reportIdeals(beans: IBean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: IBean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: IBean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: IBean[], defWin: Trait, beanPropGet: (bean: IBean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}\r\n\r\nexport class UFO{\r\n    constructor(public key: number, public point: HexPoint, public action: string){}\r\n}\r\nexport class Pickup implements IPickup{\r\n    constructor(public key: number, public point: Point, public type: TraitEmote){}\r\n    public velocity: Vector = {x: 0, y: 0};\r\n    public onMove = new PubSub<Point>();\r\n}\r\nexport interface IHexPlane{\r\n    petriRadius: number,\r\n    petriOrigin: Point,\r\n    district_hex_size: Point,\r\n}\r\nexport interface ICity extends IHexPlane{\r\n    key: number,\r\n    name: string,\r\n    deadBeanKeys: number[],\r\n    beanKeys: number[],\r\n    ufoKeys: number[],\r\n    buildingKeys: number[],\r\n    pickupMagnetPoint: Point|undefined,\r\n    hexes: HexPoint[],\r\n    districtKeys: number[],\r\n    buildingMap: {[hexKey: string]: number},\r\n    pickupKeys: number[],\r\n    costOfLiving: number\r\n}\r\n\r\nexport function CalculateCityComputed(city: ICity, economy: IEconomy){\r\n    city.costOfLiving = GetCostOfLiving(economy);\r\n}\r\n/**\r\n * SIDE-EFFECTS\r\n * @param bean \r\n * @param world \r\n */\r\nexport function BeanLoseJob(bean: IBean, world: IWorldState){\r\n    if (bean.employerEnterpriseKey != null){\r\n        const building = world.buildings.byID[bean.employerEnterpriseKey];\r\n        const enterprise = world.enterprises.byID[bean.employerEnterpriseKey];\r\n        if (enterprise.ownerBeanKey == bean.key){\r\n            enterprise.ownerBeanKey = building.employeeBeanKeys.find(x => x != bean.key);\r\n        }\r\n        BuildingUnsetJob(building, bean);\r\n    }\r\n}\r\nexport function BuildingUnsetJob(building: IBuilding, bean: IBean){\r\n    if (bean.job === 'jobless') return;\r\n    if (BuildingTryFreeBean(building, bean.key)){\r\n        bean.employerEnterpriseKey = undefined;\r\n        bean.job = 'jobless';\r\n    }\r\n}\r\nexport function CityGetPopulationTraitsList(scannedBeans: {[beanKey: number]: boolean}, beans: IBean[]): {icon: string, noun: string, count: number}[]{\r\n    return Array.from(\r\n        beans.reduce((m, b) => {\r\n            if (scannedBeans[b.key]){\r\n                b.beliefs.forEach((t) => {\r\n                    const prev = m.get(t) || 0;\r\n                    m.set(t, prev+1);\r\n                });\r\n            } else {\r\n                m.set('Unknown', (m.get('Unknown') || 0) + 1);\r\n            }\r\n            return m;\r\n        }, new Map<TraitBelief|'Unknown', number>()).entries()\r\n    ).sort(([aT, aC], [bT, bC]) => bC - aC).map(([t, c]) => {\r\n        return t === 'Unknown' ? {\r\n            icon: '❔',\r\n            noun: 'Unknown',\r\n            count: c\r\n        } : {\r\n            icon: SecondaryBeliefData[t].icon,\r\n            noun: SecondaryBeliefData[t].noun,\r\n            count: c\r\n        }\r\n    });\r\n}\r\nexport function CityGetRandomBuildingOfType(city: ICity, world: IWorldState, buildingType: BuildingTypes): IBuilding|undefined{\r\n    const keysOfType: number[] = city.buildingKeys.filter(x => world.buildings.byID[x].type === buildingType);\r\n    if (keysOfType.length < 1)\r\n        return undefined;\r\n    const r = GetRandom(world.seed, keysOfType);\r\n    return world.buildings.byID[r]\r\n}\r\nexport function CityGetRandomHomelessSleepingBuilding(city: ICity, world: IWorldState): IBuilding|undefined{\r\n    const keysOfType: number[] = city.buildingKeys.filter(x => world.buildings.byID[x].type !== 'house');\r\n    if (keysOfType.length < 1)\r\n        return undefined;\r\n    const r = GetRandom(world.seed, keysOfType);\r\n    return world.buildings.byID[r]\r\n}\r\nexport function CityGetRandomEntertainmentBuilding(city: ICity, world: IWorldState): IBuilding|undefined{\r\n    const keysOfType: number[] = city.buildingKeys.filter(x => world.buildings.byID[x].type === 'nature' || world.buildings.byID[x].type === 'park' || world.buildings.byID[x].type === 'theater');\r\n    if (keysOfType.length < 1)\r\n        return undefined;\r\n    const r = GetRandom(world.seed, keysOfType);\r\n    return world.buildings.byID[r]\r\n}\r\nexport function CityGetNearestNeighbors(city: ICity, source: IBean): number[]{\r\n    const q = MoverStoreInstance.Get('bean', source.key).current;\r\n    if (!q)\r\n        return [];\r\n    return city.beanKeys.filter((bKey) => {\r\n        if (bKey == source.key) return false;\r\n\r\n        const p = MoverStoreInstance.Get('bean', bKey).current;\r\n        if (!p)\r\n            return false;\r\n        const squared = Math.pow(p.point.x - q.point.x, 2)+Math.pow(p.point.y - q.point.y, 2);\r\n\r\n        return squared < 1600 && squared > 600;\r\n    });\r\n}","import { AnyAction } from \"@reduxjs/toolkit\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { MoverStoreInstance as MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { getRandomSlotOffset } from \"../petri-ui/Building\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { beanArrest, beanBePersuaded, beanBuy, beanCrime, beanEmote, beanHitDestination, beanRelax, beanWork, changeState } from \"../state/features/world.reducer\";\r\nimport { BeanPhysics, GoodIcon, JobToGood, TraitCommunity, TraitEmote, TraitEthno, TraitFaith, TraitFood, TraitGood, TraitHealth, TraitHousing, TraitIdeals, TraitJob, TraitSanity, TraitStamina } from \"../World\";\r\nimport { GetRandomNumber } from \"../WorldGen\";\r\nimport { WorldSfxInstance } from \"../WorldSound\";\r\nimport { BeanBelievesIn, BeanEmote, BeanGetRandomChat, BeanMaybeChat, BeanMaybeCrime, BeanMaybeParanoid, BeanMaybePersuaded, BeanMaybeScarcity } from \"./Bean\";\r\nimport { HedonExtremes, HedonReport, HedonSourceToVal, TraitBelief } from \"./Beliefs\";\r\nimport { CityGetNearestNeighbors, CityGetRandomBuildingOfType, CityGetRandomEntertainmentBuilding, CityGetRandomHomelessSleepingBuilding, ICity } from \"./City\";\r\nimport { EconomyCanBuy, IMarketReceipt, ISeller } from \"./Economy\";\r\nimport { accelerate_towards, BuildingTypes, GoodToBuilding, HexPoint, hex_linedraw, hex_to_pixel, ILot, JobToBuilding, OriginAccelerator, pixel_to_hex, Point, point_normalize } from \"./Geography\";\r\nimport { CrimeKey } from \"./Government\";\r\nimport { IBuilding } from \"./RealEstate\";\r\nimport { IDate } from \"./Time\";\r\nimport { MathClamp, SampleNormalDistribution, StatsNormalDev, StatsNormalMean } from \"./Utils\";\r\n\r\nexport type Act = 'travel'|'work'|'sleep'|'chat'|'soapbox'|'craze'|'idle'|'buy'|'crime'|'relax'|'chase'|'assault';\r\n\r\n/**\r\n * cruise == interruptible travel towards destination\r\n * \r\n * approach == uninterruptible travel into destination slot\r\n export type Travel = 'cruise'|'approach';\r\n */\r\n\r\nexport type RecreationActivity = 'performance'|'artistry'|'sport'|'music'|'outdoors';\r\n\r\n\r\n// 🎤 🩰 🎭\r\n// 🎨 🖋️ 🏺\r\n// ⚽️ 🏒 🎾\r\n// 🎹 🥁 🎸\r\n// 🎣 🤿 🎒\r\n// losers: 🏏 🏐 🏀\r\n\r\nexport interface IActivityData {\r\n    act: Act;\r\n    elapsed?: number;\r\n    // location?: Point, //FROM Point\r\n    destinations?: Point[]; //point to travel to??\r\n    destinationIndex?: number; //which point are we heading towards\r\n    intent?: IActivityData; //when travelling, what do you intend to do next\r\n    good?: TraitGood; //good to buy or work\r\n    crimeGood?: 'food'|'medicine';\r\n    // travel?: Travel;\r\n    chat?: IChatData;\r\n    buyAttempts?: number;\r\n    buyReceipt?: IMarketReceipt;\r\n    chase?: {\r\n        targetBeanKey?: number,\r\n        type: 'arrest'|'rob'|'murder'|'assault',\r\n        crime: CrimeKey\r\n    },\r\n    assault? : {\r\n        perpBeanKey: number;\r\n        victimBeanKey: number;\r\n        assaultType: 'arrest'|'rob'|'murder'|'assault';\r\n        crime: CrimeKey\r\n    }\r\n}\r\n\r\nexport interface IPrioritizedActivityData extends IActivityData{\r\n    priority: number;\r\n}\r\n\r\nexport interface IChatData{\r\n    participation: 'speaker'|'listener';\r\n    type: 'praise'|'bully'|'preach'|'gift';\r\n    preachBelief?: TraitBelief;\r\n    /**\r\n     * strength of the preacher's persuasion\r\n     */\r\n    persuasionStrength?: number;\r\n    /**\r\n     * target key of the bean who is targeted for praise or bully\r\n     */\r\n    targetBeanKey?: number;\r\n}\r\n\r\nexport interface IBeanAgent{\r\n    key: number;\r\n    action: Act;\r\n    actionData: IActivityData;\r\n    priorities: IPrioritizedActivityData[]\r\n}\r\nexport interface StateFunctions {\r\n    enter: (agent: IBean) => AnyAction|undefined;\r\n    act: (agent: IBean, world: IWorldState, elapsed: number, deltaMS: number) => {action?: AnyAction|AnyAction[], newActivity?: IActivityData};\r\n    exit: (agent: IBean, seed: string) => AnyAction|undefined;\r\n}\r\nconst RelaxationDurationMS = 3000;\r\nconst CrimeDurationMS = 1500;\r\nconst TransactMaximumDurationMS = 1100;\r\nconst ChatDurationMS = 1000;\r\nconst WorkDurationMS = 3000;\r\nconst SleepDurationMS = 3000;\r\nconst AssaultDurationMS = 2000;\r\nconst CatatoniaWalkSpeedPercentage = 0.4;\r\n\r\nconst ChaseGiveUpTimeMS = 15000;\r\nconst AvoidanceScale = 0.78;\r\nconst AvoidanceClamp = 0.07;\r\nexport const BeanActions: {[act in Act]: StateFunctions} = {\r\n    'travel': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number, deltaMS: number) => {\r\n            const city = world.cities.byID[agent.cityKey];\r\n            const destinationTargetIndex = agent.actionData.destinationIndex || 0;\r\n            if (agent.actionData.destinations == null || \r\n                agent.actionData.destinations.length === 0 || \r\n                destinationTargetIndex >= agent.actionData.destinations.length){\r\n                if (agent.actionData.intent)\r\n                    return {\r\n                        newActivity: agent.actionData.intent\r\n                    }\r\n                else\r\n                    return {\r\n                        newActivity: {\r\n                            act: 'idle'\r\n                        }\r\n                    }\r\n            }\r\n            const target = agent.actionData.destinations[destinationTargetIndex];\r\n\r\n            if (isNaN(target.x) || isNaN(target.y)) {\r\n                //sanity check\r\n                console.warn('NaN destination, resetting to idle')\r\n                return {\r\n                    newActivity: {\r\n                        act: 'idle'\r\n                    }\r\n                };\r\n            }\r\n            const oldAccelerator = MoverStoreInstance.Get('bean', agent.key).current || OriginAccelerator;\r\n            const newAccelerator = {\r\n                ...oldAccelerator\r\n            };\r\n\r\n            const collide = accelerate_towards(\r\n                newAccelerator,\r\n                city,\r\n                target,\r\n                BeanPhysics.AccelerateS * (BeanBelievesIn(agent, 'Catatonia') ? CatatoniaWalkSpeedPercentage : 1) * deltaMS/1000, \r\n                BeanPhysics.MaxSpeed, \r\n                BeanPhysics.CollisionDistance,\r\n                BeanPhysics.Brake, () => {\r\n                    return MoverStoreInstance.GetOthersInHexBin('bean', agent.key, oldAccelerator.hex).reduce((vec, sib) => {\r\n                        const delta = {\r\n                            x: sib.point.x - oldAccelerator.point.x, \r\n                            y: sib.point.y - oldAccelerator.point.y\r\n                        };\r\n                        point_normalize(delta);\r\n                        vec.x = MathClamp(delta.x * AvoidanceScale + vec.x, -AvoidanceClamp, AvoidanceClamp);\r\n                        vec.y = MathClamp(delta.y * AvoidanceScale + vec.y, -AvoidanceClamp, AvoidanceClamp);\r\n                        return vec;\r\n                    }, {x: 0, y: 0} as Point)\r\n                });\r\n\r\n            MoverStoreInstance.UpdatePosition('bean', agent.key, newAccelerator, oldAccelerator.hex);\r\n            \r\n            if (collide){\r\n                return {\r\n                    action: beanHitDestination({beanKey: agent.key})\r\n                };\r\n            }\r\n            \r\n            if (city) {\r\n                const nearbyBeanKeys = CityGetNearestNeighbors(city, agent);\r\n                if (nearbyBeanKeys.length && BeanMaybeChat(agent)){\r\n                    const targets = nearbyBeanKeys.filter((bKey) => BeanMaybeChat(world.beans.byID[bKey]));\r\n                    if (targets.length < 1)\r\n                        return {};\r\n                    const chat: IChatData = BeanGetRandomChat(agent, world.seed, () => {\r\n                        return targets.map(\r\n                                x => world.beans.byID[x]\r\n                            ).filter(\r\n                                x => x.cash <= agent.cash-1\r\n                            ).reduce(\r\n                                (least: IBean|undefined, bean) => {\r\n                                    if (least == null || (bean.cash < least.cash))\r\n                                        return bean;\r\n                                    return least;\r\n                        }, undefined);\r\n                    });\r\n                    return {\r\n                        newActivity: {\r\n                            act: 'chat',\r\n                            chat: chat,\r\n                            intent: agent.actionData \r\n                        },\r\n                        action: targets.map(t => changeState({beanKey: t, newState: {\r\n                            act: 'chat',\r\n                            chat: {\r\n                                ...chat,\r\n                                participation: 'listener'\r\n                            },\r\n                            intent: world.beans.byID[t].actionData\r\n                        }}))\r\n                    };\r\n                } else if (BeanBelievesIn(agent, 'Wanderlust') && Math.random() < WanderlustEmoteChance) {\r\n                    return {\r\n                        action: beanEmote({beanKey: agent.key, emote: 'happiness', source: 'Wanderlust'})\r\n                    };\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n            // if (agent instanceof Bean){\r\n            //     agent.velocity = {x: 0, y: 0};\r\n            // }\r\n        },\r\n    }, \r\n    'work': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number) => {\r\n            if (elapsed > WorkDurationMS && agent.actionData.good){\r\n                return {\r\n                    action: beanWork({beanKey: agent.key}),\r\n                    newActivity: {\r\n                        act: 'idle'\r\n                    }\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'sleep':{\r\n        enter: (agent: IBean) => {\r\n            if (agent.housing === 'homeless')\r\n                return beanEmote({beanKey: agent.key, emote: 'unhappiness', source: 'Homelessness'});\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world, elapsed) => {\r\n            if (elapsed > SleepDurationMS){\r\n                return {\r\n                    newActivity: {\r\n                        act: 'idle'\r\n                    }\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'chat': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, state, elapsed: number) => {\r\n            if (elapsed > ChatDurationMS && agent.actionData.intent){\r\n                return {\r\n                    newActivity: {\r\n                        act: 'travel',\r\n                        intent: agent.actionData.intent\r\n                    }\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean, seed: string) => {\r\n            if (agent.actionData.chat){\r\n                if (agent.actionData.chat.participation === 'listener'){\r\n                    switch(agent.actionData.chat.type){\r\n                        case 'bully':\r\n                            return beanEmote({beanKey: agent.key, emote: 'unhappiness', source: 'Antagonism'});\r\n                        case 'praise':\r\n                            return beanEmote({beanKey: agent.key, emote: 'happiness', source: 'Enthusiasm'});\r\n                        case 'preach':\r\n                            if (agent.actionData.chat.preachBelief && \r\n                                agent.actionData.chat.persuasionStrength && \r\n                                BeanMaybePersuaded(agent, seed, agent.actionData.chat.preachBelief, agent.actionData.chat.persuasionStrength)){\r\n                                return beanBePersuaded({beanKey: agent.key, belief: agent.actionData.chat.preachBelief})\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n            return undefined;\r\n        },\r\n    }, \r\n    'soapbox': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean) => {\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'craze': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean) => {\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'idle': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number) => {\r\n            if (agent.lifecycle === 'incarcerated')\r\n                return {};\r\n            if (elapsed < 200)\r\n                return {};\r\n            \r\n            const priorities = agent.priorities.slice(0);\r\n            let top: IPrioritizedActivityData|undefined = priorities[0];\r\n            let travelState: IActivityData|undefined = undefined;\r\n            let sideEffect: AnyAction|undefined = undefined;\r\n\r\n            //loop through possible destinations\r\n            while (top && travelState == null){\r\n                const substitute = SubstituteIntent(agent, world, top);\r\n                if (substitute?.intent){\r\n                    travelState = CreateTravelFromIntent(agent, world.cities.byID[agent.cityKey], substitute.intent, world);\r\n                    if (travelState != null)\r\n                        return {\r\n                            newActivity: travelState,\r\n                            action: sideEffect\r\n                        };\r\n                } else if (substitute?.sideEffect){\r\n                    sideEffect = substitute.sideEffect;\r\n                }\r\n                top = priorities.shift();\r\n            }\r\n            return {\r\n                action: sideEffect\r\n            };\r\n        },\r\n        exit: (agent: IBean) => {\r\n            if (BeanMaybeParanoid(agent))\r\n                return beanEmote({beanKey: agent.key, emote: 'unhappiness', source:'Paranoia'});\r\n        },\r\n    }, \r\n    'chase':{\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world, elapsed: number, deltaMS: number) => {\r\n            if (agent.actionData.chase?.targetBeanKey != null && elapsed < ChaseGiveUpTimeMS){\r\n                const targetPos = (MoverStoreInstance.Get('bean', agent.actionData.chase.targetBeanKey).current?.point || world.beans.byID[agent.actionData.chase.targetBeanKey].lastPoint);\r\n                if (targetPos == null || isNaN(targetPos.x) || isNaN(targetPos.y)) {\r\n                    //sanity check\r\n                    console.warn('NaN destination, resetting to idle')\r\n                    return {\r\n                        newActivity: {\r\n                            act: 'idle'\r\n                        }\r\n                    };\r\n                }\r\n                const oldAccelerator = MoverStoreInstance.Get('bean', agent.key).current || OriginAccelerator;\r\n                const newAccelerator = {\r\n                    ...oldAccelerator\r\n                };\r\n    \r\n    \r\n                const collide = accelerate_towards(\r\n                    newAccelerator,\r\n                    world.cities.byID[agent.cityKey],\r\n                    targetPos,\r\n                    BeanPhysics.AccelerateS * (BeanBelievesIn(agent, 'Catatonia') ? CatatoniaWalkSpeedPercentage : 1) * deltaMS/1000, \r\n                    BeanPhysics.MaxSpeed, \r\n                    BeanPhysics.CollisionDistance,\r\n                    BeanPhysics.Brake);\r\n    \r\n                MoverStoreInstance.UpdatePosition('bean', agent.key, newAccelerator, oldAccelerator.hex);\r\n\r\n                if (collide){\r\n                    const arrest = beanArrest({criminalBeanKey: agent.actionData.chase.targetBeanKey, crime: agent.actionData.chase.crime});\r\n                    if (agent.actionData.intent){\r\n                        return {\r\n                            newActivity : {\r\n                                ...agent.actionData.intent,\r\n                            },\r\n                            action: arrest\r\n                        };\r\n                    } else {\r\n                        return {\r\n                            newActivity: {act: 'idle'},\r\n                            action: arrest\r\n                        }\r\n                    }\r\n                } else {\r\n                    return {};\r\n                }\r\n            } else { //no-one to chase or ran out of time\r\n                // intent is arrest/murder, so look for intent after that one\r\n                if (agent.actionData.intent?.intent){\r\n                    return {\r\n                        newActivity: {\r\n                            ...agent.actionData.intent.intent\r\n                        }\r\n                    }\r\n                } else {\r\n                    return {newActivity: {act: 'idle'}};\r\n                }\r\n            }\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'assault':{\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world, elapsed) => {\r\n            if (elapsed > AssaultDurationMS){\r\n                if (agent.actionData.intent){\r\n                    return {\r\n                        newActivity: {\r\n                            ...agent.actionData.intent\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    newActivity: {\r\n                        act: 'idle'\r\n                    }\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'buy': {\r\n        // static MaximumBuyDuration = 1100;\r\n        // private sinceLastAttemptMS: number = 0;\r\n        // tryBuy(agent: IAgent){\r\n        //     if (agent instanceof Bean && agent.actionData.good && agent.city?.economy)\r\n        //     {\r\n        //         this._bought = agent.buy[agent.actionData.good](agent.city.economy);\r\n        //     }\r\n        //     this.sinceLastAttemptMS = 0;\r\n        // }\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number) => {\r\n            if (agent.actionData.buyReceipt){\r\n                if (elapsed > 750)\r\n                    return {\r\n                        newActivity: {\r\n                            act: 'idle'\r\n                        }\r\n                    }\r\n            } else {\r\n                if (elapsed > TransactMaximumDurationMS){\r\n                    return {\r\n                        newActivity: {act:'idle'}\r\n                    }\r\n                }\r\n                if ((agent.actionData.buyAttempts || 0) >= 3){\r\n                    return {\r\n                        newActivity: {act:'idle'}\r\n                    }\r\n                }\r\n                if (elapsed > 100 && agent.actionData.good){\r\n                    return {\r\n                        action: beanBuy({beanKey: agent.key, good: agent.actionData.good})\r\n                    };\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'crime': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed) => {\r\n            if (elapsed > CrimeDurationMS){\r\n                return {\r\n                    newActivity: {act: 'idle'},\r\n                    action: beanCrime({beanKey: agent.key, good: agent.actionData.crimeGood || 'food'})\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n    }, \r\n    'relax': {\r\n        enter: (agent: IBean) => {\r\n            return undefined;\r\n        },\r\n        act: (agent: IBean, world: IWorldState, elapsed: number) => {\r\n            let durationMS = RelaxationDurationMS;\r\n            if (BeanBelievesIn(agent, 'Naturalism'))\r\n                durationMS *= 3;\r\n            if (elapsed > durationMS){\r\n                return {\r\n                    newActivity: {\r\n                        act: 'idle'\r\n                    }\r\n                }\r\n            }\r\n            return {};\r\n        },\r\n        exit: (agent: IBean) => {\r\n            return beanRelax({beanKey: agent.key});\r\n        },\r\n    }\r\n}\r\n\r\nfunction SubstituteIntent(bean: IBean, world: IWorldState, intent: IActivityData): {\r\n    intent?: IActivityData,\r\n    sideEffect?: AnyAction\r\n}|undefined{\r\n    if (intent.act === 'buy' && intent.good != null){\r\n        const desiredGoodState = EconomyCanBuy(world.economy, world.law, bean, intent.good);\r\n        if (desiredGoodState != 'yes' && intent.good === 'fun'){ //if you can't buy happiness, go somewhere to relax{\r\n            return {\r\n                intent: {\r\n                    act: 'relax'\r\n                }\r\n            }\r\n        } else if (desiredGoodState === 'pricedout') {\r\n            if ((intent.good == 'food' || intent.good == 'medicine') && BeanMaybeCrime(bean, world.seed, intent.good)){\r\n                return {\r\n                    intent: {\r\n                        act: 'crime',\r\n                        crimeGood: intent.good\r\n                    }\r\n                }\r\n            } else {\r\n                const isPhysical = intent.good === 'food' || intent.good === 'medicine';\r\n                if (isPhysical){\r\n                    return {\r\n                        sideEffect: beanEmote({beanKey: bean.key, emote: 'unhappiness', source: GoodIcon[intent.good] + ' Poverty'})\r\n                    }\r\n                }\r\n                return undefined; //don't travel to buy something that you can't afford\r\n            }\r\n        } else if (desiredGoodState === 'nosupply'){\r\n            if (intent.good && BeanMaybeScarcity(bean, intent.good)){\r\n                return {\r\n                    sideEffect: beanEmote({beanKey: bean.key, emote: 'unhappiness', source:'Scarcity'}) \r\n                }\r\n            }\r\n            return undefined; //don't travel to buy something that doesn't exist\r\n        }\r\n        return {\r\n            intent: {\r\n                ...intent,\r\n                buyAttempts: 0\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        intent: intent\r\n    };\r\n}\r\n\r\nexport function IntentToDestination(agent: IBean, city: ICity, intent: IActivityData, world: IWorldState): Point[]|null{\r\n    switch(intent.act){\r\n        case 'buy':\r\n            if (intent.good)\r\n                return RouteRandomBuildingOfType(city, world, agent, GoodToBuilding[intent.good]);\r\n        case 'sleep': {\r\n            if (agent.dwellingKey !== undefined){\r\n                const dwelling = world.dwellings.byID[agent.dwellingKey];\r\n                const building = world.buildings.byID[dwelling.buildingKey];\r\n                const lot = world.lots.byID[building.lotKey];\r\n                const district = world.districts.byID[lot.districtKey];\r\n                return RouteToHexAndPoint(world.seed, city, agent, {q: district.q, r: district.r}, lot.point);\r\n            } else {\r\n                return RouteRandomHomelessSleepingBuilding(city, world, agent);\r\n            }\r\n        }\r\n        case 'work':\r\n            return RouteRandomBuildingOfType(city, world, agent, JobToBuilding[agent.job]);\r\n        case 'relax': {\r\n            const buildingDest = CityGetRandomEntertainmentBuilding(city, world);\r\n            if (buildingDest){\r\n                return Route(world.seed, city, agent, buildingDest);\r\n            } else {\r\n                const nature = world.districts.allIDs.map(x => world.districts.byID[x]).find(y => y.kind === 'nature');\r\n                if (nature){\r\n                    return RouteToHexAndPoint(world.seed, city, agent, {q: nature.q,r: nature.r}, {\r\n                        x: nature.point.x + (Math.random() * 150) - 75,\r\n                        y: nature.point.y + (Math.random() * 150) - 75\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction CreateTravelFromIntent(agent: IBean, city: ICity, intent: IActivityData, world: IWorldState): IActivityData|undefined{\r\n    const destination = IntentToDestination(agent, city, intent, world);\r\n    \r\n    if (destination)\r\n        return {\r\n            act: 'travel',\r\n            destinations: destination,\r\n            destinationIndex: 0,\r\n            intent: intent\r\n        }\r\n    else\r\n        return undefined;\r\n}\r\n\r\nconst WanderlustEmoteChance = 0.002;\r\n\r\n/**\r\n * returns a priority. Higher is more important\r\n */\r\nexport const GetPriority = {\r\n    work: function(bean: IBean, seed: string, city: ICity): number{\r\n        const deviation = BeanBelievesIn(bean, 'Delirium') ? StatsNormalDev*2 : StatsNormalDev;\r\n        if (bean.job == 'jobless' || BeanBelievesIn(bean, 'Catatonia')){\r\n            return 0;\r\n        }\r\n        else if (bean.cash === 0){\r\n            return SampleNormalDistribution(seed, StatsNormalMean + (StatsNormalDev * 2), deviation);\r\n        }\r\n        else if (city){\r\n            return SampleNormalDistribution(seed, StatsNormalMean + \r\n                (StatsNormalDev * Math.min(1, city.costOfLiving / bean.cash), deviation)\r\n            );\r\n        }\r\n        return SampleNormalDistribution(seed, StatsNormalMean, deviation);\r\n    },\r\n    food: function(bean: IBean, seed: string, difficulty: IDifficulty): number{\r\n        const deviation = BeanBelievesIn(bean, 'Delirium') ? StatsNormalDev*2 : StatsNormalDev;\r\n        return SampleNormalDistribution(seed, StatsNormalMean + (\r\n            StatsNormalDev * 6 * Math.min(1, difficulty.bean_life.vital_thresh.food.warning / bean.discrete_food),\r\n            deviation\r\n        ));\r\n    },\r\n    stamina: function(bean: IBean, seed: string, difficulty: IDifficulty): number{\r\n        const deviation = BeanBelievesIn(bean, 'Delirium') ? StatsNormalDev*2 : StatsNormalDev;\r\n        return SampleNormalDistribution(seed, StatsNormalMean + (\r\n            StatsNormalDev * 4 * Math.min(1, difficulty.bean_life.vital_thresh.shelter.warning / bean.discrete_stamina),\r\n            deviation\r\n        ));\r\n    },\r\n    medicine:function(bean: IBean, seed: string, difficulty: IDifficulty): number{\r\n        const deviation = BeanBelievesIn(bean, 'Delirium') ? StatsNormalDev*2 : StatsNormalDev;\r\n        return SampleNormalDistribution(seed, StatsNormalMean + (\r\n            StatsNormalDev * 2 * Math.min(1, difficulty.bean_life.vital_thresh.medicine.warning / bean.discrete_health),\r\n            deviation\r\n        ));\r\n    },\r\n    fun:function(bean: IBean, seed: string, difficulty: IDifficulty): number{\r\n        const deviation = BeanBelievesIn(bean, 'Delirium') ? StatsNormalDev*2 : StatsNormalDev;\r\n        return SampleNormalDistribution(seed, StatsNormalMean + (\r\n            StatsNormalDev * Math.min(1, -bean.lastHappiness / 100),\r\n            deviation\r\n        ));\r\n    }\r\n}\r\n\r\nexport function GetPriorities(bean: IBean, seed: string, city: ICity, difficulty: IDifficulty): IPrioritizedActivityData[]{\r\n    const priors: IPrioritizedActivityData[] = [\r\n        {act: 'work', good: JobToGood(bean.job), priority: GetPriority.work(bean, seed, city)} as IPrioritizedActivityData,\r\n        {act: 'sleep', priority: GetPriority.stamina(bean, seed, difficulty)} as IPrioritizedActivityData,\r\n        {act: 'buy', good: 'food', priority: GetPriority.food(bean, seed, difficulty)} as IPrioritizedActivityData,\r\n        {act: 'buy', good: 'medicine', priority: GetPriority.medicine(bean, seed, difficulty)} as IPrioritizedActivityData,\r\n        {act: 'buy', good: 'fun', priority: GetPriority.fun(bean, seed, difficulty)} as IPrioritizedActivityData,\r\n    ];\r\n    priors.sort((a, b) => b.priority - a.priority);\r\n    return priors;\r\n}\r\n\r\nexport function ActivityIcon(data: IActivityData): string{\r\n    switch(data.act){\r\n        case 'sleep':\r\n            return '😴';\r\n        case 'work':\r\n            if (data.good)\r\n                return '💪 '+ GoodIcon[data.good];\r\n            else\r\n                return '💪';\r\n        case 'buy':\r\n            if (data.good)\r\n                return '💸 '+ GoodIcon[data.good];\r\n            else\r\n                return '💸';\r\n    }\r\n    return '';\r\n}\r\nexport function ActivityDisplay(data: IActivityData): string{    \r\n    switch(data.act){\r\n        case 'chat':\r\n            return `chatting`;\r\n        case 'crime':\r\n            return `stealing ${data?.crimeGood}`;\r\n        case 'sleep':\r\n            return `sleeping 😴`;\r\n        case 'relax':\r\n            return `relaxing`;\r\n        case 'travel':\r\n            return `travelling to ` + data.intent?.act || '';\r\n        case 'chase':\r\n            return `in a chase to ` + data.chase?.type || '';\r\n        case 'assault':\r\n            return `in the middle of a ` + data?.assault?.assaultType || '';\r\n        case 'work':\r\n            if (data.good)\r\n                return 'working to make '+ GoodIcon[data.good];\r\n            else\r\n                return 'working';\r\n        case 'buy':\r\n            if (data.good)\r\n                return 'buying '+ GoodIcon[data.good];\r\n            else\r\n                return 'buying';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean extends ISeller, IBeanAgent{    \r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith: TraitFaith;\r\n    stamina: TraitStamina;\r\n    health: TraitHealth;\r\n    food: TraitFood;\r\n    discrete_food: number;\r\n    discrete_health: number;\r\n    discrete_sanity: number;\r\n    discrete_stamina: number;\r\n    discrete_fun: number;\r\n    housing: TraitHousing;\r\n    graceTicks: number;\r\n    cash: number;\r\n    dob: IDate;\r\n    sanity: TraitSanity;\r\n    beliefs: TraitBelief[];\r\n    lifecycle: 'alive'|'dead'|'abducted'|'incarcerated',\r\n    hedonHistory: HedonSourceToVal[],\r\n    job: TraitJob,\r\n    happiness: HedonReport,\r\n    lastHappiness: number,\r\n    hedonFiveDayRecord: HedonExtremes,\r\n    fairGoodPrice: number,\r\n    employerEnterpriseKey?: number,\r\n    dwellingKey?: number,\r\n    activity_duration: {[act in Act]: number},\r\n    bornInPetri: boolean,\r\n    ticksSinceLastRelax: number,\r\n    lastChatMS: number,\r\n    lastPoint?: Point,\r\n    lastHex?: HexPoint,\r\n    titleKey?: number,\r\n    badge?: string,\r\n    hat?: string,\r\n    faceOverride?: string,\r\n    faceOverrideTicks?: number,\r\n    jailTicksLeft?: number\r\n}\r\n\r\n/**\r\n * fills out \"markers\" and \"destinationKey\" with random building of type\r\n * @param city \r\n * @param bean \r\n * @param buildingType \r\n */\r\nexport function RouteRandomBuildingOfType(city: ICity, world: IWorldState, bean: IBean, buildingType: BuildingTypes): Point[]|null{\r\n    const destination: IBuilding|undefined = CityGetRandomBuildingOfType(city, world, buildingType);\r\n    if (destination === undefined) \r\n        return null;\r\n    return Route(world.seed, city, bean, destination);\r\n}\r\nexport function RouteRandomHomelessSleepingBuilding(city: ICity, world: IWorldState, bean: IBean): Point[]|null{\r\n    const destination: IBuilding|undefined = CityGetRandomHomelessSleepingBuilding(city, world);\r\n    if (destination === undefined) \r\n        return null;\r\n    return Route(world.seed, city, bean, destination);\r\n}\r\n\r\n/**\r\n * fills out \"markers\" property with points to walk to destination\r\n * @param city \r\n * @param bean \r\n * @param buildingType \r\n */\r\nexport function Route(seed: string, city: ICity, bean: IBean, destination: IBuilding): Point[]{\r\n    return RouteToHexAndPoint(seed, city, bean, destination.hex, destination.point);\r\n}\r\nexport function RouteToHexAndPoint(seed: string, city: ICity, bean: IBean, hex: HexPoint, point: Point): Point[]{\r\n    const start = MoverStoreInstance.Get('bean', bean.key).current || {...OriginAccelerator};\r\n    const nearestHex = pixel_to_hex(city.district_hex_size, city.petriOrigin, start.point);\r\n    return hex_linedraw(nearestHex, hex).map(\r\n        (h) => hex_to_pixel(city.district_hex_size, city.petriOrigin, h)\r\n        ).map((x, i, a) => {\r\n        if (i === a.length-1){\r\n            return {\r\n                x: point.x + GetRandomNumber(seed, -20, 20),\r\n                y: point.y + GetRandomNumber(seed, -20, 20)\r\n            }\r\n        } else {\r\n            return x;\r\n        }\r\n    });\r\n}","\r\nexport type AgentDurationType = 'bean'|'ufo';\r\nexport interface IAgentDuration {elapsed: number, duration: number};\r\ntype AgentDurationCache = {\r\n    [key in AgentDurationType]: {\r\n        [k2: number]: {elapsed: number, duration: number};\r\n    };\r\n};\r\n\r\nexport class AgentDurationStore{\r\n    private cache: AgentDurationCache = {\r\n        'bean': {},\r\n        'ufo': {}\r\n    }\r\n    public Get(type: AgentDurationType, key: number): IAgentDuration{\r\n        if (!this.cache[type][key])\r\n            this.cache[type][key] = {elapsed: 0, duration: 0};\r\n        return this.cache[type][key];\r\n    }\r\n}","import { IWorldState } from \"../state/features/world\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\nexport const TicksPerHour = 2;\r\nexport const TicksPerDay = TicksPerHour * 4;\r\nexport enum PartOfDay {Midnight = 0, Morning = TicksPerHour, Noon = TicksPerHour*2, Evening = TicksPerHour*3}\r\n\r\nexport interface IDate{\r\n    day: number;\r\n    season: Season;\r\n    year: number;\r\n    /**\r\n     * analogous to ticks\r\n     * \r\n     * zero based, ranges from 0 to `HoursPerDay -1`\r\n     */\r\n    hour: number;\r\n}\r\n\r\nexport function Now(world: IWorldState): IDate{\r\n    return {year: world.date.year, season: world.date.season, day: world.date.day, hour: world.date.hour};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","import { AgentDurationStore } from \"./AgentDuration\";\r\n\r\nexport const AgentDurationStoreInstance = new AgentDurationStore();","import { IWorldState } from \"../state/features/world\";\r\nimport { TraitJob } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IBean } from \"./Agent\";\r\nimport { BuildingUnsetJob } from \"./City\";\r\nimport { BeanDistrictIdeologyBonus } from \"./Economy\";\r\nimport { BuildingToJob, JobToBuilding } from \"./Geography\";\r\nimport { IEnterprise } from \"./Institutions\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { BuildingNumOfOpenJobs, IBuilding } from \"./RealEstate\";\r\nimport { shuffle } from \"./Utils\";\r\n\r\nexport function BeanTryFindJob(world: IWorldState, bean: IBean, previousEmployerKey: number|null = null): boolean{\r\n    const city = world.cities.byID[bean.cityKey];\r\n    const employableBuildingKeys = city.buildingKeys.filter(x => BuildingNumOfOpenJobs(world.buildings.byID[x]) > 0);\r\n    if (employableBuildingKeys.length < 1)\r\n        return false;\r\n    const employableBuildings = employableBuildingKeys.map(x => world.buildings.byID[x]);\r\n    const jobs = employableBuildings.map(x => {\r\n        return {\r\n            ideologyBonus: BeanDistrictIdeologyBonus(bean, world.districts.byID[world.lots.byID[x.lotKey].districtKey].kind),\r\n            isEmpty: x.employeeBeanKeys.length === 0,\r\n            openJobs: BuildingNumOfOpenJobs(x),\r\n            building: x\r\n        }\r\n    });\r\n    jobs.sort((a, b) => {\r\n        if (a.isEmpty != b.isEmpty)\r\n            return a.isEmpty ? -1 : 1;\r\n        else if (a.ideologyBonus != b.ideologyBonus)\r\n            return a.ideologyBonus - b.ideologyBonus;\r\n        return a.openJobs - b.openJobs;\r\n    });\r\n    \r\n    if (jobs.length > 0){\r\n        const {building} = jobs[0];\r\n        if (bean.employerEnterpriseKey != null){\r\n            BuildingUnsetJob(world.buildings.byID[bean.employerEnterpriseKey], bean);\r\n        }\r\n        BeanSetJob(bean, building, world.enterprises.byID[building.key]);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function BeanSetJob(bean: IBean, building: IBuilding, enterprise: IEnterprise){\r\n    building.employeeBeanKeys.push(bean.key);\r\n    bean.employerEnterpriseKey = building.key;\r\n    if (enterprise && enterprise.ownerBeanKey == null){\r\n        enterprise.ownerBeanKey = bean.key;\r\n    }\r\n    bean.job = BuildingToJob[building.type];\r\n}","export type SFXFile = 'drop.mp3'|'ding_soft.mp3'|'ding_bad.wav'|'death_bell.wav'|'digital_beeping.mp3'|\r\n'squish_pop.mp3'|'squish_suck.mp3'|'baby_squeak.wav'|'mhmm.mp3'|'cow-moo.wav'|'pill-shake.wav'|'door-open.wav'|\r\n'teleport.wav'|'cash_ding.mp3'|'crazy_laugh.mp3'|'handcuffs_ratchet.wav'|'crime_uncaught.mp3'|'siren_double.mp3'|\r\n'wood_saw.mp3'|'nail_saw.mp3'|\r\n'crow.wav';\r\nexport type SFX = 'drop'|'happiness'|'unhappiness'|'love'|'hate'|'death'|'scan'|'wash_in'|'wash_out'|\r\n'squeak'|'mhmm'|'moo'|'door'|'pills'|'teleport'|'cash'|'crazy_laugh'|'handcuffs'|'crime'|'siren'|\r\n'develop'|'urbanize'|\r\n'graveyard';\r\n\r\nconst SFXToFile: {[sfx in SFX]: SFXFile} = {\r\n    drop: \"drop.mp3\",\r\n    love: \"ding_soft.mp3\",\r\n    happiness: \"ding_soft.mp3\",\r\n    unhappiness: \"ding_bad.wav\",\r\n    hate: \"ding_bad.wav\",\r\n    death: \"death_bell.wav\",\r\n    scan: 'digital_beeping.mp3',\r\n    wash_in: 'squish_pop.mp3',\r\n    wash_out: 'squish_suck.mp3',\r\n    squeak: 'baby_squeak.wav',\r\n    mhmm: 'mhmm.mp3',\r\n    pills: 'pill-shake.wav',\r\n    moo: 'cow-moo.wav',\r\n    door: 'door-open.wav',\r\n    teleport: 'teleport.wav',\r\n    cash: 'cash_ding.mp3',\r\n    crazy_laugh: 'crazy_laugh.mp3',\r\n    handcuffs: 'handcuffs_ratchet.wav',\r\n    crime: 'crime_uncaught.mp3',\r\n    siren: 'siren_double.mp3',\r\n    graveyard: 'crow.wav',\r\n    develop: 'wood_saw.mp3',\r\n    urbanize: 'nail_saw.mp3'\r\n};\r\n\r\ntype SFXMap = {[sfx in SFX]: SoundBuffer};\r\n\r\nclass SoundBuffer{\r\n    constructor(private file: SFXFile, private volume: number = 1){}\r\n\r\n    private buffer: HTMLAudioElement[] = [];\r\n    play(){\r\n        if (this.buffer.length > 0 && this.buffer[0].ended){\r\n            const audio = this.buffer.shift();\r\n            audio?.play();\r\n            if (audio)\r\n                this.buffer.push(audio);\r\n        } else {\r\n            const aud = new Audio(process.env.PUBLIC_URL+'/'+this.file);\r\n            aud.volume = this.volume;\r\n            aud.play();\r\n            this.buffer.push(aud);\r\n        }\r\n    }\r\n}\r\nexport class WorldSound{\r\n    private lib: SFXMap = {\r\n        'drop': new SoundBuffer(SFXToFile['drop'], 0.2),\r\n        'love': new SoundBuffer(SFXToFile['happiness']),\r\n        'happiness': new SoundBuffer(SFXToFile['happiness']),\r\n        'unhappiness': new SoundBuffer(SFXToFile['unhappiness']),\r\n        'hate': new SoundBuffer(SFXToFile['unhappiness']),\r\n        'death': new SoundBuffer(SFXToFile['death']),\r\n        'scan': new SoundBuffer(SFXToFile['scan'], 0.3),\r\n        'wash_in': new SoundBuffer(SFXToFile['wash_in']),\r\n        'wash_out': new SoundBuffer(SFXToFile['wash_out']),\r\n        'squeak': new SoundBuffer(SFXToFile['squeak'], 0.3),\r\n        'mhmm': new SoundBuffer(SFXToFile['mhmm'], 0.5),\r\n        'moo': new SoundBuffer(SFXToFile['moo'], 1),\r\n        'pills': new SoundBuffer(SFXToFile['pills'], 1),\r\n        'door': new SoundBuffer(SFXToFile['door'], 1),\r\n        'teleport': new SoundBuffer(SFXToFile['teleport'], 0.6),\r\n        'cash': new SoundBuffer(SFXToFile['cash'], 0.23),\r\n        'crazy_laugh': new SoundBuffer(SFXToFile['crazy_laugh'], 0.5),\r\n        'handcuffs': new SoundBuffer(SFXToFile['handcuffs'], 0.85),\r\n        'crime': new SoundBuffer(SFXToFile['crime'], 0.55),\r\n        'siren': new SoundBuffer(SFXToFile['siren'], 0.20),\r\n        'graveyard': new SoundBuffer(SFXToFile['graveyard'], 0.60),\r\n        'urbanize': new SoundBuffer(SFXToFile['urbanize'], 0.60),\r\n        'develop': new SoundBuffer(SFXToFile['develop'], 0.60),\r\n    }\r\n\r\n    public play(sfx: SFX){\r\n        this.lib[sfx].play();\r\n    }\r\n}\r\n\r\nexport const WorldSfxInstance = new WorldSound();","import { PlayerResources } from \"../Game\";\r\nimport { GetRandom, GetRandomNumber } from \"../WorldGen\";\r\nimport { BeliefCommonality, RandomBeliefBucket, SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\n\r\nexport interface MarketTraitListing {\r\n    cost: PlayerResources;\r\n    trait: TraitBelief;\r\n}\r\nexport const CommonalityBaseCost: {[b in BeliefCommonality]: number} = {\r\n    'common': 3,\r\n    'uncommon': 5,\r\n    'rare': 7,\r\n    'unique': 99,\r\n};\r\nexport const CommonalityRandomMaxCost: {[b in BeliefCommonality]: number} = {\r\n    'common': 3,\r\n    'uncommon': 5,\r\n    'rare': 7,\r\n    'unique': 99,\r\n};\r\n\r\nexport function GetMarketTraits(seed: string): MarketTraitListing[]{\r\n    const newTraits: MarketTraitListing[] = [];\r\n    for (let i = 0; i < 3; i++) {\r\n        const b = GetRandom(seed, RandomBeliefBucket);\r\n        newTraits.push(getMarketTraitListing(seed, b));\r\n    }\r\n    return newTraits;\r\n}\r\n\r\nfunction getMarketTraitListing(seed: string, b: TraitBelief): MarketTraitListing{\r\n    const rare = SecondaryBeliefData[b].rarity;\r\n    return {\r\n        trait: b,\r\n        cost: {\r\n            hedons: CommonalityBaseCost[rare] + GetRandomNumber(seed, 0, CommonalityRandomMaxCost[rare])\r\n        }\r\n    }\r\n}","import { AnyAction } from \"redux\";\r\nimport { EventBufferLength, IEvent } from \"../events/Events\";\r\nimport { MoverStoreInstance } from \"../MoverStoreSingleton\";\r\nimport { SignalStoreInstance } from \"../SignalStore\";\r\nimport { EntityAddToSlice } from \"../state/entity.state\";\r\nimport { IWorldState } from \"../state/features/world\";\r\nimport { changeState, pickUpPickup, remove_ufo, selectBeansByCity } from \"../state/features/world.reducer\";\r\nimport { MaxHedonHistory, PickupPhysics, WorldInflate } from \"../World\";\r\nimport { GenerateBean, GetRandom } from \"../WorldGen\";\r\nimport { WorldSfxInstance } from \"../WorldSound\";\r\nimport { BeanActions, IBean } from \"./Agent\";\r\nimport { AgentDurationStoreInstance } from \"./AgentDurationInstance\";\r\nimport { BeanAge, BeanMaybeBaby, BeanCalculateBeliefs, BeanEmote } from \"./Bean\";\r\nimport { BeanTryFindJob } from \"./BeanAndCity\";\r\nimport { GetHedonReport } from \"./Beliefs\";\r\nimport { BeanLoseJob, CalculateCityComputed } from \"./City\";\r\nimport { GetCostOfLiving } from \"./Economy\";\r\nimport { accelerate_towards, accelerator_coast, OriginAccelerator } from \"./Geography\";\r\nimport { IsLaw, MaybeRebate, PollTaxWeeklyAmount } from \"./Government\";\r\nimport { GetMarketTraits } from \"./MarketTraits\";\r\nimport { GenerateEmoteFromBean, IPickup } from \"./Pickup\";\r\nimport { CheckGoals, CheckReportCard, HasResearched, TechData } from \"./Player\";\r\nimport { TicksPerDay } from \"./Time\";\r\n\r\nconst OwnerProfitPercentage = 0.15;\r\n\r\nexport function simulate_world(world: IWorldState){\r\n    world.date.hour++\r\n    if (world.date.hour % 2 === 0){\r\n        simulate_every_other_tick(world);\r\n    }\r\n    if (world.date.hour >= TicksPerDay){\r\n        world.date.hour = 0;\r\n        world.date.day++;\r\n        simulate_every_day(world);\r\n        if (world.date.day % 7 === 0){\r\n            simulate_every_week(world);\r\n        }\r\n    }\r\n    if (world.date.day > 30){\r\n        world.date.day = 1;\r\n        simulate_every_month(world)\r\n        world.date.season++;\r\n    }\r\n    if (world.date.season > 3){\r\n        world.date.year++;\r\n        simulate_every_year(world);\r\n        world.date.season = 0;\r\n    }\r\n\r\n    world.alien.bots.amount += world.alien.bots.income;\r\n    world.alien.energy.amount += world.alien.energy.income;\r\n    if (HasResearched(world.alien.techProgress, 'fast_resources')){\r\n        world.alien.bots.amount += world.alien.bots.income*0.5;\r\n        world.alien.energy.amount += world.alien.energy.income*0.5;\r\n    }\r\n    if (world.alien.currentlyResearchingTech){\r\n        const tech = world.alien.currentlyResearchingTech;\r\n        if(world.alien.techProgress[tech] == null){\r\n            world.alien.techProgress[tech] = {\r\n                researchPoints: 0\r\n            }\r\n        }\r\n        const max = TechData[tech].techPoints;\r\n        const current = world.alien.techProgress[tech].researchPoints;\r\n        if (current < max)\r\n            world.alien.techProgress[tech].researchPoints += world.alien.abductedBeanKeys.length *  1/TicksPerDay;\r\n        if (current >= max){\r\n            if (world.alien.currentlyResearchingTech === 'neural_duplicator')\r\n                world.alien.beliefInventory.forEach((x) => x.gems += 1);\r\n            world.alien.currentlyResearchingTech = undefined;\r\n\r\n        }\r\n    }\r\n\r\n    const CoL = GetCostOfLiving(world.economy);\r\n    world.beans.allIDs.forEach((bKey: number, i: number) => {\r\n        const b = world.beans.byID[bKey];\r\n\r\n        const ticks = b.faceOverrideTicks;\r\n        if (ticks != null){\r\n            if (ticks <= 1){\r\n                b.faceOverrideTicks = undefined;\r\n                b.faceOverride = undefined;\r\n            } else {\r\n                b.faceOverrideTicks = ticks - 1;\r\n            }\r\n        }\r\n        if (b.jailTicksLeft != null){\r\n            b.jailTicksLeft = b.jailTicksLeft - 1;\r\n            if (b.jailTicksLeft <= 0){\r\n                b.jailTicksLeft = undefined;\r\n                b.lifecycle = 'alive';\r\n            }\r\n        }\r\n        if (b.lifecycle != 'alive')\r\n            return;\r\n        \r\n        const ageResult = BeanAge(b, world.seed, world.alien.difficulty);\r\n        if (ageResult?.emotes){\r\n            ageResult.emotes.map(x => EntityAddToSlice(world.pickups, x));\r\n        }\r\n        const death = ageResult?.death;\r\n        if (death){\r\n            WorldOnBeanDie(world, b, death, []);\r\n        }\r\n        // todo: on bean death\r\n        const e = BeanMaybeBaby(b, world.seed, CoL);\r\n        if (e) {\r\n            const newBean = GenerateBean(world, world.cities.byID[b.cityKey], b);\r\n            if (b.lastPoint && b.lastHex){\r\n                newBean.lastPoint = b.lastPoint;\r\n                MoverStoreInstance.Get('bean', newBean.key).publish({\r\n                    point: {x: b.lastPoint.x, y: b.lastPoint.y}, \r\n                    hex: {q: b.lastHex.q, r: b.lastHex.r}, \r\n                    velocity: {x: 0, y: 0}\r\n                });\r\n            }\r\n            world.beans.byID[newBean.key] = newBean;\r\n            world.beans.allIDs.push(newBean.key);\r\n            world.cities.byID[b.cityKey].beanKeys.push(newBean.key);\r\n            WorldAddEvent(world, e);\r\n            WorldSfxInstance.play('squeak');\r\n        }\r\n        if (b.job === 'jobless'){\r\n            const gotJob = BeanTryFindJob(world, b);\r\n            if (!gotJob){\r\n                WorldAddEvent(world, {icon: '🏚️', trigger: 'nojobslots', message: `A subject cannot find a job; build or upgrade more buildings.`, key: 0});\r\n            }\r\n        }\r\n        if (b.dwellingKey === undefined){\r\n            const openDwellingKey = world.dwellings.allIDs.find(dKey => world.dwellings.byID[dKey].occupantKey === undefined);\r\n            if (openDwellingKey != null){\r\n                world.dwellings.byID[openDwellingKey].occupantKey = b.key;\r\n                b.dwellingKey = openDwellingKey;\r\n                b.housing = \"housed\";\r\n            }\r\n        }\r\n        \r\n        b.happiness = GetHedonReport(b.hedonHistory);\r\n    });\r\n    world.cities.allIDs.forEach(cityID => {\r\n        const c = world.cities.byID[cityID];\r\n        CalculateCityComputed(c, world.economy);\r\n    });\r\n    world.beans.allIDs.forEach((k: number) => {\r\n        const b = world.beans.byID[k];\r\n        if (!b || b.lifecycle != 'alive')\r\n            return;\r\n        BeanCalculateBeliefs(b, world.economy, world.alien.difficulty, world.law);\r\n    });\r\n    CheckGoals(world, world.alien);\r\n    CheckReportCard(world, world.alien);\r\n    return world;\r\n}\r\nexport function simulate_every_year(world: IWorldState){\r\n    WorldInflate(world);\r\n}\r\nexport function simulate_every_month(world: IWorldState){\r\n    //resetMonthlyDemand\r\n    world.economy.unfulfilledMonthlyDemand = { food: 0, medicine: 0, fun: 0, };\r\n    world.economy.monthlyDemand = { food: 0, medicine: 0, fun: 0, };\r\n    world.economy.monthlySupply = { food: 0, medicine: 0, fun: 0, };\r\n}\r\nexport function simulate_every_week(world: IWorldState){\r\n    world.marketTraitsForSale = GetMarketTraits(world.seed);\r\n    WorldAddEvent(world, {key: 0, message: 'New traits in the Emotion Market!', icon: '🛍️', trigger: 'marketrefresh'});\r\n    if (IsLaw(world.law, 'poll_tax')){\r\n        let collected = 0;\r\n        world.cities.allIDs.forEach((cityID: number) => {\r\n            selectBeansByCity(world, cityID).forEach((y: IBean) => {\r\n                if (y.cash >= PollTaxWeeklyAmount){\r\n                    y.cash -= PollTaxWeeklyAmount;\r\n                    collected += PollTaxWeeklyAmount;\r\n                }\r\n            });\r\n        });\r\n        world.law.cash = (world.law.cash + collected);\r\n    }\r\n    MaybeRebate(world.law, Object.values(world.beans.byID));\r\n}\r\nexport function simulate_every_day(world: IWorldState){\r\n    world.beans.allIDs.forEach((beanKey) => {\r\n        const x = world.beans.byID[beanKey];\r\n        if (x.hedonHistory.length >= MaxHedonHistory) {\r\n            x.hedonHistory.pop();\r\n        }\r\n        x.hedonHistory.unshift({});\r\n    });\r\n}\r\nexport function simulate_every_other_tick(world: IWorldState){\r\n    //pay beans\r\n    world.enterprises.allIDs.forEach((eKey) => {\r\n        const enterprise = world.enterprises.byID[eKey];\r\n        const building = world.buildings.byID[eKey];\r\n        const workers = building.employeeBeanKeys.map(x => world.beans.byID[x]);\r\n        //distribute cash\r\n        switch(enterprise.enterpriseType){\r\n            case 'company':\r\n                if (workers.length < 1) {\r\n                    //noop;\r\n                } else if (workers.length === 1){\r\n                    workers[0].cash += enterprise.cash;\r\n                    if (enterprise.cash > 0)\r\n                        workers[0].ticksSinceLastSale = 0;\r\n                    enterprise.cash = 0;\r\n                }\r\n                else {\r\n                    const share = enterprise.cash / (workers.length + OwnerProfitPercentage);\r\n                    enterprise.cash = 0;\r\n                    let owner = workers.find(x => x.key === enterprise.ownerBeanKey);\r\n                    if (owner == null){\r\n                        owner = workers[0];\r\n                        enterprise.ownerBeanKey = owner.key;\r\n                    }\r\n                    workers.forEach(bean => {\r\n                        const pay = (bean === owner) ? share * (1+OwnerProfitPercentage) : share;\r\n                        bean.cash += pay;\r\n                        if (pay > 0)\r\n                            bean.ticksSinceLastSale = 0;\r\n                    });\r\n                }\r\n                break;\r\n            case 'co-op':\r\n                const share = enterprise.cash / workers.length;\r\n                enterprise.cash = 0;\r\n                workers.forEach(bean => {\r\n                    bean.cash += share;\r\n                    if (share > 0)\r\n                        bean.ticksSinceLastSale = 0;\r\n                });\r\n                break;\r\n            case 'commune':\r\n                const commShare = enterprise.cash / workers.length;\r\n                enterprise.cash = 0;\r\n                workers.forEach(bean => {\r\n                    bean.cash += commShare;\r\n                    if (commShare > 0)\r\n                        bean.ticksSinceLastSale = 0;\r\n                });\r\n                break;\r\n        }\r\n    });\r\n}\r\nexport function WorldAddEvent(world: IWorldState, e: IEvent){\r\n    e.key = world.events.nextID++;\r\n    world.events.byID[e.key] = e;\r\n    world.events.allIDs.push(e.key);\r\n    SignalStoreInstance.events.publish(e);\r\n    while (world.events.allIDs.length > EventBufferLength){\r\n        const removedID = world.events.allIDs[0];\r\n        if (removedID != null) {\r\n            world.events.allIDs = world.events.allIDs.slice(1);\r\n            world.events.byID = {\r\n                removedID,\r\n                ...world.events.byID\r\n            } as any;\r\n        }\r\n    }\r\n}\r\nexport function WorldOnBeanDie(world: IWorldState, b: IBean, deathEvent: IEvent, emotes: IPickup[]){\r\n    EntityAddToSlice(world.events, deathEvent);\r\n    emotes.map(e => EntityAddToSlice(world.pickups, e));\r\n    BeanLoseJob(b, world);\r\n    if (b.dwellingKey != null){\r\n        const house = world.dwellings.byID[b.dwellingKey];\r\n        if (house)\r\n            house.occupantKey = undefined;\r\n        b.dwellingKey = undefined;\r\n    }\r\n    const luckyBeanKey = GetRandom(world.seed, world.beans.allIDs.filter(x => x !== b.key));\r\n    if (luckyBeanKey != null)\r\n        world.beans.byID[luckyBeanKey].cash = b.cash;\r\n    WorldSfxInstance.play('death');\r\n}\r\nexport function animate_ufos(world: IWorldState, deltaMS: number): Array<AnyAction>{\r\n    const actions: AnyAction[] = [];\r\n    world.ufos.allIDs.forEach((ufoKey) => {\r\n        const ufo = world.ufos.byID[ufoKey];\r\n        AgentDurationStoreInstance.Get('ufo', ufoKey).elapsed += deltaMS;\r\n\r\n        if (AgentDurationStoreInstance.Get('ufo', ufoKey).elapsed > 4000)\r\n        {\r\n            actions.push(remove_ufo({ufoKey}))\r\n        }\r\n    });\r\n    return actions;\r\n}\r\nexport function animate_beans(world: IWorldState, deltaMS: number): Array<AnyAction>{\r\n    const actions: AnyAction[] = [];\r\n    world.beans.allIDs.forEach((beanKey) => {\r\n        const bean = world.beans.byID[beanKey];\r\n\r\n        if (bean.lifecycle != 'alive')\r\n            return;\r\n        \r\n        const ADS = AgentDurationStoreInstance.Get('bean', bean.key); \r\n        ADS.elapsed += deltaMS;\r\n        const actResult = BeanActions[bean.action].act(bean, world, ADS.elapsed, deltaMS);\r\n        if (Array.isArray(actResult.action)){\r\n            actions.push(...actResult.action);\r\n        } else if (actResult.action){\r\n            actions.push(actResult.action);\r\n        }\r\n        if (actResult.newActivity){\r\n            const exitAction = BeanActions[bean.action].exit(bean, world.seed);\r\n            if (exitAction)\r\n                actions.push(exitAction);\r\n            actions.push(changeState({beanKey: beanKey, newState: actResult.newActivity}));\r\n            const enterAction = BeanActions[actResult.newActivity.act].enter(bean);\r\n            if (enterAction)\r\n                actions.push(enterAction);\r\n        }\r\n        //TODO: fix on chat\r\n        // if (result.data.act === 'chat' && result.data.chat?.participation === 'speaker'){\r\n        //     listener.onChat(agent as Bean, result.data.chat);\r\n        // }\r\n    });\r\n    return actions;\r\n}\r\nexport function animate_pickups(world: IWorldState, deltaMS: number): Array<AnyAction>{\r\n    const pickupIDs = world.pickups.allIDs;\r\n    const city = world.cities.byID[0];\r\n    const actions: AnyAction[] = [];\r\n    //go backwards because we'll modify the array as we go\r\n    for(let i = pickupIDs.length - 1; i >= 0; i--) {\r\n        const pickupID = pickupIDs[i];\r\n        let collide = false;\r\n        const magnet = city.pickupMagnetPoint;\r\n        const newAccelerator = {\r\n            ...(MoverStoreInstance.Get('pickup', pickupID).current || OriginAccelerator)\r\n        };\r\n        if (magnet){\r\n            const collide = accelerate_towards(\r\n                newAccelerator,\r\n                city,\r\n                magnet,\r\n                PickupPhysics.AccelerateS * deltaMS/1000, \r\n                PickupPhysics.MaxSpeed, \r\n                PickupPhysics.CollisionDistance,\r\n                PickupPhysics.Brake);\r\n            if (collide){\r\n                actions.push(pickUpPickup({cityKey: city.key, pickupKey: pickupID}));\r\n            }\r\n        } else {\r\n            accelerator_coast(newAccelerator, PickupPhysics.Brake);\r\n        }\r\n        if (!collide)\r\n            MoverStoreInstance.Get('pickup', pickupID).publish(newAccelerator);\r\n    }\r\n    return actions;\r\n}","import { BeliefCommonality } from \"./simulation/Beliefs\";\r\nimport { BuildingTypes } from \"./simulation/Geography\";\r\nimport { RubricKeys } from \"./simulation/Player\";\r\nimport { TicksPerDay } from \"./simulation/Time\";\r\nimport { IThreshold, TraitGood } from \"./World\";\r\n\r\nexport type PlayerEmptyHexAction = 'build';\r\nexport type PlayerHexAction = 'beam'|'upgrade'|'fallow_2_rural'|'rural_2_urban'|'add_loft';\r\nexport type PlayerBeanAction = 'scan'|'abduct'|'vaporize'|'siphon'|'empower'|'gift';\r\nexport type PlayerBeanBrainAction = 'brainwash_ideal'|'brainimplant_secondary'|'brainwash_secondary';\r\nexport type PlayerMarketAction = 'energy'|'bots';\r\nexport type PlayerGovernmentAction = '';\r\nexport type PlayerAction = PlayerHexAction|PlayerBeanAction;\r\n\r\nexport interface PlayerResources{\r\n    energy?: number;\r\n    bots?: number;\r\n    hedons?: number;\r\n    tortrons?: number;\r\n}\r\nexport interface BeanResources{\r\n    sanity?: number;\r\n}\r\nexport type BeanDeathCause = 'vaporization'|'exposure'|'starvation'|'sickness';\r\nexport function triadToString(cost: PlayerResources, sign: '+'|''|'-', qty: number = 1){\r\n    const costs = [];\r\n    if (cost.energy){\r\n        costs.push(sign+(cost.energy*qty)+' Energy');\r\n    }\r\n    if (cost.bots){\r\n        costs.push(sign+(cost.bots*qty)+' Bots');\r\n    }\r\n    if (cost.hedons){\r\n        costs.push(sign+(cost.hedons*qty)+' Hedons');\r\n    }\r\n    if (cost.tortrons){\r\n        costs.push(sign+(cost.tortrons*qty)+' Antihedons');\r\n    }\r\n    return costs.join(' ');\r\n}\r\nexport interface SecondaryResources{\r\n    research?: number;\r\n    leadership?: number;\r\n}\r\nexport interface IDifficulty{\r\n    cost: {\r\n        emptyHex: {[key in PlayerEmptyHexAction]: {\r\n            [key in BuildingTypes]: PlayerResources}\r\n        },\r\n        hex: {[key in PlayerHexAction]: PlayerResources} \r\n        bean: {[key in PlayerBeanAction]: PlayerResources},\r\n        bean_brain: {[key in PlayerBeanBrainAction]: BeanResources}\r\n        market: {\r\n            scrubHedons: PlayerResources,\r\n            resource: {[key in PlayerMarketAction]: PlayerResources},\r\n            beliefs: {[key in BeliefCommonality]: PlayerResources}\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {[key in (TraitGood|'shelter')]: IThreshold},\r\n        degrade_per_tick: {\r\n            food: number,\r\n            health: number,\r\n            stamina: number,\r\n            fun: number\r\n        },\r\n        penalty: {\r\n            homeless_health: number,\r\n            starving_health: number\r\n        },\r\n        death_chance: {\r\n            [cause in BeanDeathCause]: number\r\n        }\r\n    },\r\n    report_card_progression: RubricKeys[]\r\n}\r\nexport const DefaultDifficulty: IDifficulty = {\r\n    cost: {\r\n        emptyHex: {\r\n            build: {\r\n                house: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                farm: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                theater: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                hospital: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                church: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                jail: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                graveyard: {\r\n                    energy: 1,\r\n                    bots: 1\r\n                },\r\n                park: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                nature: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                }\r\n            }\r\n        },\r\n        hex: {\r\n            beam: {\r\n                energy: 3\r\n            },\r\n            upgrade: {\r\n                energy: 1,\r\n                bots: 4,\r\n            },\r\n            fallow_2_rural: {\r\n                bots: 1,\r\n            },\r\n            rural_2_urban: {\r\n                bots: 2,\r\n            },\r\n            add_loft: {\r\n                bots: 1,\r\n                energy: 1\r\n            }\r\n        },\r\n        bean_brain: {\r\n            brainwash_ideal: { sanity: 4},\r\n            brainimplant_secondary: { sanity: 1},\r\n            brainwash_secondary: {sanity: 2},\r\n        },\r\n        bean: {\r\n            scan: {\r\n                energy: 1\r\n            },\r\n            abduct: {\r\n                bots: 3\r\n            },\r\n            gift: {},\r\n            empower: {},\r\n            vaporize: {\r\n                energy: 2,\r\n                bots: 4\r\n            },\r\n            siphon: {},\r\n        },\r\n        market: {\r\n            scrubHedons: {\r\n                energy: 5\r\n            },\r\n            resource: {\r\n                bots: {\r\n                    hedons: 6\r\n                },\r\n                energy: {\r\n                    hedons: 5\r\n                }\r\n            },\r\n            beliefs: {\r\n                common: {},\r\n                uncommon: {},\r\n                rare: {},\r\n                unique: {}\r\n            },\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {\r\n            'food': {warning: 0.6, sufficient: 1, abundant: 3},\r\n            'shelter': {warning: 2, sufficient: 3, abundant: 7},\r\n            'medicine': {warning: 0.6, sufficient: 1, abundant: 3},\r\n            'fun': {warning: 0.1, sufficient: 1, abundant: 3},\r\n        },\r\n        degrade_per_tick: {\r\n            food: 1/(TicksPerDay*3),\r\n            health: 1/(TicksPerDay*5),\r\n            stamina: 1/TicksPerDay,\r\n            fun: 1/(TicksPerDay*5)\r\n        },\r\n        penalty: {\r\n            homeless_health: 1/(TicksPerDay*7),\r\n            starving_health: 1/(TicksPerDay*7)\r\n        },\r\n        death_chance: {\r\n            starvation: 1/8,\r\n            sickness: 1/8,\r\n            exposure: 1/8,\r\n            vaporization: 1\r\n        }\r\n    },\r\n    report_card_progression: []\r\n};","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { WritableDraft } from '@reduxjs/toolkit/node_modules/immer/dist/types/types-external'\nimport { PlayerResources } from '../../Game'\nimport { GameStorageInstance } from '../../GameStorage'\nimport { MoverStoreInstance } from '../../MoverStoreSingleton'\nimport { SignalStoreInstance } from '../../SignalStore'\nimport { Act, GetPriorities, IActivityData, IBean } from '../../simulation/Agent'\nimport { AgentDurationStoreInstance } from '../../simulation/AgentDurationInstance'\nimport { BeanBelievesIn, BeanCalculateSanity, BeanCalculateStamina, BeanCanPurchase, BeanDidWitnessCrime, BeanDie, BeanLoseSanity, BeanMaybeGetInsanity, CosmopolitanHappyChance, DiligenceHappyChance, GermophobiaHospitalWorkChance, HedonismExtraChance, HedonismHateWorkChance, LibertarianTaxUnhappyChance, ParochialHappyChance, ProgressivismTaxHappyChance } from '../../simulation/Bean'\nimport { BeanTryFindJob } from '../../simulation/BeanAndCity'\nimport { BeliefsAll, SecondaryBeliefData, TraitBelief } from '../../simulation/Beliefs'\nimport { BeanLoseJob, BuildingUnsetJob } from '../../simulation/City'\nimport { EconomyEmployAndPrice, EconomyMostInDemandJob, EconomyProduceAndPrice, EconomyTryTransact, IListing, IMarketReceipt, MarketListingSubtract } from '../../simulation/Economy'\nimport { BuildingTypes, HexPoint, hex_to_pixel, OriginAccelerator, Point, polarToPoint } from '../../simulation/Geography'\nimport { CrimeKey, CrimePunishment, IsActionIllegal, LawData, LawKey } from '../../simulation/Government'\nimport { EnterpriseType } from '../../simulation/Institutions'\nimport { MarketTraitListing } from '../../simulation/MarketTraits'\nimport { IPickup } from '../../simulation/Pickup'\nimport { HasResearched, PlayerCanAfford, PlayerPurchase, PlayerTryPurchase, PlayerUseTraitGem, Tech } from '../../simulation/Player'\nimport { BuildingTryFreeBean, GenerateIBuilding, IBuilding, IDwelling } from '../../simulation/RealEstate'\nimport { GetSeedName } from '../../simulation/SeedGen'\nimport { TicksPerDay } from '../../simulation/Time'\nimport { ITitle } from '../../simulation/Titles'\nimport { IUFO } from '../../simulation/Ufo'\nimport { MathClamp } from '../../simulation/Utils'\nimport { simulate_world, WorldAddEvent, WorldOnBeanDie } from '../../simulation/WorldSim'\nimport { EmotionSanity, EmotionWorth, GoodToThreshold, JobToGood, TraitEmote, TraitFaith, TraitGood } from '../../World'\nimport { DistrictAddLots, GenerateBean, GenerateDistrictsAndLots, GetRandom, GetRandomCityName, GetRandomFloat, GetRandomNumber } from '../../WorldGen'\nimport { WorldSfxInstance } from '../../WorldSound'\nimport { EntityAddToSlice } from '../entity.state'\nimport { GetBlankWorldState, IWorldState } from './world'\n\nconst ChargePerMarket = 3;\nconst ChargePerExtract = 1;\n\nconst UnderemploymentThresholdTicks = 8\nconst BeanJailSentenceInDays = 2\nexport const worldSlice = createSlice({\n    name: 'world',\n    initialState: GetBlankWorldState(),\n    reducers: {\n      refreshMarket: state => {\n          \n      },\n      magnetChange: (state, action: PayloadAction<{cityKey: number, px?: Point}>) => {\n        state.cities.byID[action.payload.cityKey].pickupMagnetPoint = action.payload.px;\n      },\n      worldTick: state => {\n        simulate_world(state);\n      },\n      newGame: (state, action: PayloadAction<{seed: string}>) => {\n        const city = state.cities.byID[0];\n        state.seed = action.payload.seed;\n        city.name = GetRandomCityName(state.seed);\n        const dls = GenerateDistrictsAndLots(city);\n        state.districts = dls.ds;\n        state.lots = dls.lots;\n        const natureID = GetRandom(state.seed, state.districts.allIDs.slice(1));\n        state.districts.byID[natureID].kind = 'nature';\n        // GenerateIBuilding(state, city, 'courthouse', {q: 0, r: 0}, state.economy);\n        // GenerateIBuilding(state, city, 'nature', city.hexes[GetRandomNumber(state.seed, 15, 20)], state.economy);\n        // GenerateIBuilding(state, city, 'nature', city.hexes[GetRandomNumber(state.seed, 21, 25)], state.economy);\n        // GenerateIBuilding(state, city, 'nature', city.hexes[GetRandomNumber(state.seed, 26, 60)], state.economy);\n      },\n      loadGame: (state, action:PayloadAction<{newState: IWorldState}>) => {\n        action.payload.newState.beans.allIDs.map(k => {\n          const bean = action.payload.newState.beans.byID[k];\n          if (bean){\n            MoverStoreInstance.UpdatePosition('bean', k, {\n              point: {\n                x: bean.lastPoint?.x || 0,\n                y: bean.lastPoint?.y || 0\n              }, \n              velocity: {\n                x: 0, \n                y: 0\n              },\n              hex: {\n                q: bean.lastHex?.q || 0,\n                r: bean.lastHex?.r || 0\n              }\n            }, {q: 0, r: 0});\n          }\n        })\n        return action.payload.newState\n      },\n      build: (state, action: PayloadAction<{city: number, lot: number, what: BuildingTypes}>) => {\n        const cost: PlayerResources = state.alien.difficulty.cost.emptyHex.build[action.payload.what];\n        if (PlayerTryPurchase(state.alien, cost)) {\n          const lot = state.lots.byID[action.payload.lot];\n          const district = state.districts.byID[lot.districtKey];\n          GenerateIBuilding(state, state.cities.byID[action.payload.city], action.payload.what, district, lot.point, lot.key, state.economy);\n          switch(action.payload.what){\n            case 'farm':\n              WorldSfxInstance.play('moo');\n              break;\n            case 'hospital':\n              WorldSfxInstance.play('pills');\n              break;\n            case 'house':\n              WorldSfxInstance.play('door');\n              break;\n            case 'jail':\n              WorldSfxInstance.play('siren');\n              break;\n            case 'graveyard':\n              WorldSfxInstance.play('graveyard');\n              break;\n          }\n        }\n      },\n      upgradeDistrict: (state, action: PayloadAction<{city: number, district: number}>) => {\n        const district = state.districts.byID[action.payload.district];\n        if (!district)\n          return;\n        const newKind = district.kind === 'rural' ? 'urban' : 'rural';\n        if (newKind === 'rural'){\n          const cost: PlayerResources = state.alien.difficulty.cost.hex.fallow_2_rural;\n          if (PlayerTryPurchase(state.alien, cost)) {\n            DistrictAddLots(district, state.lots, 'rural');\n            district.kind = 'rural';\n            WorldSfxInstance.play('develop');\n          }\n        } else {\n          const cost: PlayerResources = state.alien.difficulty.cost.hex.rural_2_urban;\n          if (PlayerTryPurchase(state.alien, cost)) {\n            DistrictAddLots(district, state.lots, 'urban');\n            district.kind = 'urban';\n            WorldSfxInstance.play('urbanize');\n          }\n        }\n      },\n      changeEnterprise: (state, action: PayloadAction<{enterpriseKey: number, newType: EnterpriseType}>) => {\n        state.enterprises.byID[action.payload.enterpriseKey].enterpriseType = action.payload.newType;\n      },\n      fireBean: (state, action: PayloadAction<{cityKey: number, beanKey: number}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        BeanLoseJob(bean, state);\n      },\n      upgrade: (state, action: PayloadAction<{buildingKey: number}>) => {\n        const cost = state.alien.difficulty.cost.hex.upgrade;\n        const what = state.buildings.byID[action.payload.buildingKey];\n        if (PlayerTryPurchase(state.alien, cost)) {\n          what.upgradedJobs = true;\n        }\n      },\n      upgradeLoft: (state, action: PayloadAction<{buildingKey: number}>) => {\n        const cost = state.alien.difficulty.cost.hex.add_loft;\n        const what = state.buildings.byID[action.payload.buildingKey];\n        if (PlayerTryPurchase(state.alien, cost)) {\n          what.upgradedLoft = true;\n          const loft: IDwelling = {\n            key: 0,\n            buildingKey: action.payload.buildingKey,\n            kind: 'loft'\n          }\n          EntityAddToSlice(state.dwellings, loft);\n          what.dwellingKeys = [loft.key];\n        }\n      },\n      upgradeStorage: (state, action: PayloadAction<{buildingKey: number}>) => {\n        const cost = state.alien.difficulty.cost.hex.upgrade;\n        const what = state.buildings.byID[action.payload.buildingKey];\n        if (PlayerTryPurchase(state.alien, cost)) {\n          what.upgradedStorage = true;\n        }\n      },\n      beam: (state, action: PayloadAction<{cityKey: number, where: HexPoint}>) => {\n        const cost = state.alien.difficulty.cost.hex.beam;\n        if (PlayerCanAfford(state.alien, cost)) {\n          PlayerPurchase(state.alien, cost);\n          const ufo: IUFO = {\n            key: state.ufos.nextID++,\n            action: 'beam-in',\n            duration: 0,\n            hex: {...action.payload.where},\n            cityKey: action.payload.cityKey\n          };\n          state.ufos.allIDs.push(ufo.key);\n          state.ufos.byID[ufo.key] = ufo;\n          state.cities.byID[action.payload.cityKey].ufoKeys.push(ufo.key);\n        }\n      },\n      remove_ufo: (state, action: PayloadAction<{ufoKey: number}>) => {\n        const ufo = state.ufos.byID[action.payload.ufoKey];\n        const newBean = GenerateBean(state, state.cities.byID[0], undefined, ufo.hex);\n        newBean.priorities = GetPriorities(newBean, state.seed, state.cities.byID[newBean.cityKey], state.alien.difficulty);\n        delete state.ufos.byID[action.payload.ufoKey];\n        state.ufos.allIDs = state.ufos.allIDs.filter(x => x != action.payload.ufoKey);\n        state.cities.byID[ufo.cityKey].ufoKeys = state.cities.byID[ufo.cityKey].ufoKeys.filter(x => x != action.payload.ufoKey);\n        \n        state.beans.byID[newBean.key] = newBean;\n        state.beans.allIDs.push(newBean.key);\n        state.cities.byID[ufo.cityKey].beanKeys.push(newBean.key);\n        MoverStoreInstance.Get('bean', newBean.key).current = {\n          point: hex_to_pixel(state.cities.byID[ufo.cityKey].district_hex_size, state.cities.byID[ufo.cityKey].petriOrigin, ufo.hex), \n          hex: {\n            ...ufo.hex\n          },\n          velocity: {x: 0, y: 0}\n        };\n      },\n      abduct: (state, action: PayloadAction<{beanKey: number}>) => {\n        if (PlayerTryPurchase(state.alien, state.alien.difficulty.cost.bean.abduct)) {\n          const bean = state.beans.byID[action.payload.beanKey];\n          if (bean.lifecycle === 'alive'){\n            bean.lifecycle = 'abducted';\n            if (bean.employerEnterpriseKey){\n              const building = state.buildings.byID[bean.employerEnterpriseKey];\n              BuildingUnsetJob(building, bean);\n            }\n            state.cities.byID[bean.cityKey].beanKeys = state.cities.byID[bean.cityKey].beanKeys.filter(x => x != bean.key);\n            state.alien.abductedBeanKeys.push(bean.key);\n          }\n        }\n      },\n      cheatAdd: (state) => {\n        state.alien.energy.amount += 10;\n        state.alien.bots.amount += 10;\n        state.alien.hedons.amount += 10;\n      },\n      release: (state) => {\n        if (state.alien.abductedBeanKeys.length > 0) {\n          const lucky_bean_key = state.alien.abductedBeanKeys.shift();\n          if (lucky_bean_key != null){\n            const luckyBean = state.beans.byID[lucky_bean_key];\n            luckyBean.lifecycle = 'alive';\n            state.cities.byID[luckyBean.cityKey].beanKeys.push(lucky_bean_key);\n          }\n        }\n\n      },\n      washCommunity: (state, action: PayloadAction<{beanKey: number, faith: TraitFaith}>) => {\n        // if (bean.canPurchase(state.alien.difficulty.cost.bean_brain.brainwash_ideal, 0)) {\n        //   bean.loseSanity(state.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\n        //   if (bean.community === 'ego')\n        //     bean.community = 'state';\n        //   else bean.community = 'ego';\n        //   return true;\n        // }\n      },\n      washMotive: () => {\n\n        // if (bean.canPurchase(state.alien.difficulty.cost.bean_brain.brainwash_ideal, 0)) {\n        //   bean.loseSanity(state.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\n        //   if (bean.ideals === 'prog')\n        //     bean.ideals = 'trad';\n        //   else bean.ideals = 'prog';\n        //   this.setState({ world: state });\n        //   return true;\n        // }\n      },\n      washNarrative: (state, action: PayloadAction<{beanKey: number, faith: TraitFaith}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        if (BeanCanPurchase(bean, state.alien.difficulty.cost.bean_brain.brainwash_ideal, 0)) {\n          BeanLoseSanity(bean, state.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\n          const oldFaith = bean.faith;\n          while (bean.faith === oldFaith){\n            bean.faith = GetRandom(state.seed, ['rocket', 'dragon', 'music', 'noFaith']);\n          }\n        }\n      },\n      washBelief: (state, action: PayloadAction<{beanKey: number, trait: TraitBelief}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        const sanityCostBonus = HasResearched(state.alien.techProgress, 'sanity_bonus') ? -1 : 0;\n        if (BeanCanPurchase(bean, state.alien.difficulty.cost.bean_brain.brainwash_secondary, sanityCostBonus)) {\n          BeanLoseSanity(bean, state.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0);\n          bean.sanity = BeanCalculateSanity(bean, state.alien.difficulty);\n          bean.beliefs.splice(\n            bean.beliefs.indexOf(action.payload.trait), 1\n          );\n          state.insanityEvent = BeanMaybeGetInsanity(state.seed, bean);\n          if (state.insanityEvent){\n            bean.beliefs = [...bean.beliefs, state.insanityEvent.newInsanity];\n            WorldSfxInstance.play('crazy_laugh');\n          } else {\n            WorldSfxInstance.play('wash_out');\n          }\n        }\n      },\n      extractBelief: (state, action: PayloadAction<{beanKey: number, trait: TraitBelief}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        const sanityCostBonus = HasResearched(state.alien.techProgress, 'sanity_bonus') ? -1 : 0;\n        if (BeanCanPurchase(bean, state.alien.difficulty.cost.bean_brain.brainwash_secondary, sanityCostBonus)) {\n          BeanLoseSanity(bean, state.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0);\n          bean.sanity = BeanCalculateSanity(bean, state.alien.difficulty);\n          const existing = state.alien.beliefInventory.find((x) => x.trait === action.payload.trait);\n          const chargeBonus = HasResearched(state.alien.techProgress, 'neural_duplicator') ? 1 : 0;\n          if (existing) {\n            existing.gems += ChargePerExtract + chargeBonus;\n          } else {\n            state.alien.beliefInventory.push({trait: action.payload.trait, gems: ChargePerExtract + chargeBonus});\n          }\n          state.insanityEvent = BeanMaybeGetInsanity(state.seed, bean);\n          if (state.insanityEvent){\n            bean.beliefs = [...bean.beliefs, state.insanityEvent.newInsanity];\n            WorldSfxInstance.play('crazy_laugh');\n          } else {\n            WorldSfxInstance.play('wash_out');\n          }\n        }\n      },\n      acknowledgeNewInsanity: (state) =>{\n        state.insanityEvent = undefined;\n      },\n      setResearch: (state, action: PayloadAction<{t: Tech}>) => {\n        state.alien.currentlyResearchingTech = action.payload.t;\n      },\n      implant: (state, action: PayloadAction<{beanKey: number, trait: TraitBelief}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        const sanityCostBonus = HasResearched(state.alien.techProgress, 'sanity_bonus') ? -1 : 0;\n        if (BeanCanPurchase(bean, state.alien.difficulty.cost.bean_brain.brainimplant_secondary, sanityCostBonus) && \n          state.alien.beliefInventory.filter(x => x.trait == action.payload.trait && x.gems > 0)) {\n          bean.beliefs.push(action.payload.trait);\n          PlayerUseTraitGem(state.alien, action.payload.trait);\n          BeanLoseSanity(bean, state.alien.difficulty.cost.bean_brain.brainimplant_secondary.sanity || 0); \n          bean.sanity = BeanCalculateSanity(bean, state.alien.difficulty);\n          state.insanityEvent = BeanMaybeGetInsanity(state.seed, bean);\n          if (state.insanityEvent){\n            bean.beliefs = [...bean.beliefs, state.insanityEvent.newInsanity];\n            WorldSfxInstance.play('crazy_laugh');\n          } else {\n            WorldSfxInstance.play('wash_in');\n          }\n        }\n      },\n      scan: (state, action: PayloadAction<{beanKey: number}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        if (PlayerTryPurchase(state.alien, state.alien.difficulty.cost.bean.scan)) {\n          state.alien.scanned_bean[bean.key] = true;\n          bean.beliefs.forEach((b) => {\n            if (!state.alien.seenBeliefs[b]){\n              state.alien.seenBeliefs[b] = true;\n              SignalStoreInstance.newTraitSeen.publish({k: SecondaryBeliefData[b].noun, v: true});\n            }\n          });\n          bean.faceOverrideTicks = 4;\n          bean.faceOverride = '😨';\n          WorldSfxInstance.play('scan');\n        }\n      },\n      vaporize: (state, action: PayloadAction<{beanKey: number}>) => {\n        if (PlayerTryPurchase(state.alien, state.alien.difficulty.cost.bean.vaporize)) {\n          const bean = state.beans.byID[action.payload.beanKey];\n          const d = BeanDie(bean, state.seed, 'vaporization');\n          WorldOnBeanDie(state, bean, d.death, d.emotes);\n        }\n      },\n      setCrimeLegality: (state, action: PayloadAction<{crime: CrimeKey, legality: CrimePunishment|'none'|undefined}>) => {\n        if (action.payload.legality === 'none')\n          action.payload.legality = undefined;\n        state.law.crimes[action.payload.crime] = action.payload.legality;\n      },\n      pickUpPickup: (state, action: PayloadAction<{cityKey: number, pickupKey: number}>) => {\n        const pickup = state.pickups.byID[action.payload.pickupKey];\n\n        const amt = EmotionWorth[pickup.type];\n        state.alien.hedons.amount += amt;\n        state.cities.byID[action.payload.cityKey].pickupKeys = state.cities.byID[action.payload.cityKey].pickupKeys.filter(x => x != action.payload.pickupKey);\n        state.pickups.allIDs = state.pickups.allIDs.filter(x => x != action.payload.pickupKey);\n        delete state.pickups.byID[action.payload.pickupKey];\n        \n        SignalStoreInstance.alienHedons.publish({change: amt});\n        WorldSfxInstance.play(pickup.type);\n      },\n      changeState: (state, action: PayloadAction<{beanKey: number, newState: IActivityData}>) => {\n        _changeState(state, action)\n      },\n      beanHitDestination: (state, action: PayloadAction<{beanKey: number}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        if (bean.actionData.destinationIndex != null){\n          bean.actionData.destinationIndex++;\n        }\n      },\n      beanBePersuaded: (state, action: PayloadAction<{beanKey: number, belief: TraitBelief}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        \n        bean.beliefs.push(action.payload.belief);\n        WorldAddEvent(state, {\n            key: 0,\n            icon: '🗣️', \n            trigger: 'persuasion', \n            message: `${bean.name} now believes in ${SecondaryBeliefData[action.payload.belief].icon} ${SecondaryBeliefData[action.payload.belief].noun}!`, \n            beanKey: bean.key, cityKey: bean.cityKey,\n            point: bean.lastPoint\n        });\n        WorldSfxInstance.play('mhmm')\n      },\n      beanGiveCharity: (state, action: PayloadAction<{senderBeanKey: number, needyBeanKey: number}>) => {\n        const bean = state.beans.byID[action.payload.senderBeanKey];\n        bean.cash -= 0.5;\n        _emote(bean, state, {emote: 'happiness', source: 'Charity'});\n        const needy = state.beans.byID[action.payload.needyBeanKey];\n        needy.cash += 0.5;\n        _emote(needy, state, {emote: 'happiness', source: 'Charity'});\n      },\n      beanWork: (state, action: PayloadAction<{beanKey: number}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        if (bean.job === 'jobless'){\n        } else {\n            switch(bean.job){\n                case 'farmer':\n                    bean.discrete_food = Math.min(bean.discrete_food+1, GoodToThreshold.food.sufficient*2);\n                    _ifBelievesInMaybeEmote(state, bean, 'Parochialism', 'happiness', ParochialHappyChance);\n                    break;\n                case 'doc':\n                    bean.discrete_health = Math.min(bean.discrete_health+1, GoodToThreshold.medicine.sufficient*2);\n                    _ifBelievesInMaybeEmote(state, bean, 'Germophobia', 'unhappiness', GermophobiaHospitalWorkChance);\n                    break;\n                case 'builder': \n                    bean.stamina = 'awake';\n                    bean.discrete_stamina = 7;\n                    break;\n                case 'entertainer':\n                    _ifBelievesInMaybeEmote(state, bean, 'Cosmopolitanism', 'happiness', CosmopolitanHappyChance);\n                break;\n            }\n            _ifBelievesInMaybeEmote(state, bean, 'Diligence', 'happiness', DiligenceHappyChance);\n            _ifBelievesInMaybeEmote(state, bean, 'Hedonism', 'unhappiness', HedonismHateWorkChance);\n            bean.ticksSinceLastSale++;\n            if (bean.ticksSinceLastSale > UnderemploymentThresholdTicks && bean.employerEnterpriseKey != null){\n                // const cityHasOtherWorkers = state.cities.byID[bean.cityKey].beans.get.filter(x => x.job === bean.job).length > 1 : false;\n                // cityHasOtherWorkers &&\n                const employer = state.enterprises.byID[bean.employerEnterpriseKey];\n                // underemployment\n                if (employer.ownerBeanKey != bean.key && Math.random() > 0.5) {\n                    const newJob = EconomyMostInDemandJob(state.economy);\n                    if (newJob){\n                      BeanTryFindJob(state, bean, bean.employerEnterpriseKey);\n                      bean.ticksSinceLastSale = 0;\n                    }\n                }\n            }\n            let workedForEmployer = false;\n            if (bean.employerEnterpriseKey){\n                const employer = state.enterprises.byID[bean.employerEnterpriseKey];\n                if (employer){\n                    EconomyEmployAndPrice(state.economy, employer, JobToGood(bean.job), 4, bean.fairGoodPrice);\n                    workedForEmployer = true;\n                    switch(employer.enterpriseType){\n                        case 'company':\n                            _ifBelievesInMaybeEmote(state, bean, 'Communism', 'unhappiness', 0.1);\n                            if (employer.ownerBeanKey === bean.key)\n                              _ifBelievesInMaybeEmote(state, bean, 'Capitalism', 'happiness', 0.1);\n                            break;\n                        case 'co-op':                            \n                            _ifBelievesInMaybeEmote(state, bean, 'Capitalism', 'unhappiness', 0.1);\n                                \n                            _ifBelievesInMaybeEmote(state, bean, 'Socialism', 'happiness', 0.1);\n                            break;\n                        case 'commune':                            \n                          _ifBelievesInMaybeEmote(state, bean, 'Capitalism', 'unhappiness', 0.1);\n                            break;\n                    }\n                }\n            }\n            if (!workedForEmployer)\n              EconomyProduceAndPrice(state.economy, bean, JobToGood(bean.job), 4, bean.fairGoodPrice);\n        }\n      },\n      beanEmote: (state, action: PayloadAction<{beanKey: number, emote: TraitEmote, source: string}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        \n        _emote(bean, state, action.payload);\n        if (BeanBelievesIn(bean, 'Hedonism') && (\n          action.payload.emote === 'happiness' || action.payload.emote === 'love'\n          ) && Math.random() < HedonismExtraChance){\n            _emote(bean, state, {emote: 'happiness', source: 'Hedonism'});\n        }\n      },\n      beanCrime: (state, action: PayloadAction<{beanKey: number, good: 'food'|'medicine'}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        const crime: CrimeKey = 'steal';\n        \n        const listing = GetRandom(state.seed, state.economy.market.listings[action.payload.good]);\n        if (listing == null){\n        } else {\n          //give the stealer stolen goods\n          const stolen = Math.min(listing.quantity, 3);\n          MarketListingSubtract(state.economy.market, listing, action.payload.good, stolen);\n          switch(action.payload.good){\n              case 'food':\n                  bean.discrete_food += stolen;\n                  break;\n              case 'medicine':\n                  bean.discrete_health += stolen;\n                  break;\n          }\n          //make the stolen-from bean sad\n          if (listing.sellerEnterpriseKey != null){\n            const enterprise = state.enterprises.byID[listing.sellerEnterpriseKey];\n            let unluckyBean: IBean|undefined = undefined;\n            if (enterprise.enterpriseType === 'company'){\n              const ownerKey = enterprise.ownerBeanKey;\n              if (ownerKey != null && action.payload.beanKey != ownerKey){\n                unluckyBean = state.beans.byID[ownerKey];\n              }\n            } else {\n              const beanKeys = state.beans.allIDs.filter(b => b != action.payload.beanKey && state.beans.byID[b].lifecycle === 'alive' && state.beans.byID[b].employerEnterpriseKey === listing.sellerEnterpriseKey);\n              const unluckyBeanKey = GetRandom(state.seed, beanKeys);\n              unluckyBean = state.beans.byID[unluckyBeanKey];\n            }\n            if (unluckyBean){\n              unluckyBean.faceOverride = '🥺';\n              unluckyBean.faceOverrideTicks = 4;\n              _emote(unluckyBean, state, {emote: 'unhappiness', source: 'Theft Victim'});\n            }\n          }\n          if (IsActionIllegal(state.law, crime)){\n            // see if the stealer is caught\n            const bucket = bean.lastHex ? MoverStoreInstance.GetOtherKeysInHexBin('bean', action.payload.beanKey, bean.lastHex) : state.beans.allIDs.filter(b => b != action.payload.beanKey);\n            const witnessCandidateBeanKeys = bucket.filter(b => state.beans.byID[b].lifecycle === 'alive');\n            const witnesses: IBean[] = witnessCandidateBeanKeys.reduce((arr, bK) => {\n              const person = state.beans.byID[bK];\n              const wasWitness = BeanDidWitnessCrime(person, state.seed, action.payload.beanKey);\n              if (wasWitness)\n                arr.push(person);\n              return arr;\n            }, [] as Array<IBean>);\n            if (witnesses.length){\n              WorldAddEvent(state, {\n                icon: '🤠',\n                key: 0,\n                message: `${bean.name} was caught stealing ${action.payload.good}!`,\n                trigger: 'crimecrime',\n                beanKey: bean.key\n              });\n              WorldSfxInstance.play('siren');\n            } else {\n              WorldSfxInstance.play('crime');\n            }\n            witnesses.forEach((witness) => {\n              _changeState(state, {\n                payload: {\n                  beanKey: witness.key,\n                  newState: {\n                    act: 'chase',\n                    chase: {\n                      targetBeanKey: action.payload.beanKey,\n                      type: 'arrest',\n                      crime: crime\n                    },\n                    intent: {\n                      act: 'assault',\n                      assault: {\n                        perpBeanKey: witness.key,\n                        assaultType: 'arrest',\n                        victimBeanKey: action.payload.beanKey,\n                        crime: crime\n                      },\n                      intent: witness.actionData\n                    }\n                  }\n                }, type: ''\n              });\n            });\n          }\n        }\n      },\n      beanArrest: (state, action: PayloadAction<{criminalBeanKey: number, crime: CrimeKey}>) => {\n        const criminal = state.beans.byID[action.payload.criminalBeanKey];\n        const punishment = state.law.crimes[action.payload.crime];\n        if (punishment){\n          switch(punishment){\n            case 'death': {\n              const d = BeanDie(criminal, state.seed, 'execution');\n              WorldOnBeanDie(state, criminal, d.death, d.emotes);\n              break;\n            }\n            case 'jail': {\n              WorldSfxInstance.play('handcuffs');\n              criminal.lifecycle = 'incarcerated';\n              criminal.jailTicksLeft = TicksPerDay * BeanJailSentenceInDays;\n              const randAngle = GetRandomFloat(state.seed) * Math.PI * 2;\n              const point = polarToPoint({ az: randAngle, r: 30});\n              const jailPoint = {\n                x: state.districts.byID[1].point.x + point.x,\n                y: state.districts.byID[1].point.y + point.y\n              };\n              criminal.lastPoint = jailPoint;\n              const hexes = state.districts.byID[1].hexString.split(',').map(x => parseInt(x));\n              const jailHex = {\n                q: hexes[0],\n                r: hexes[1]\n              };\n              MoverStoreInstance.UpdatePosition('bean', criminal.key, {\n                point: {...jailPoint}, \n                velocity: {...OriginAccelerator.velocity},\n                hex: { ... jailHex },\n              }, criminal.lastHex || {q: 0, r: 0});\n              criminal.lastHex = jailHex;\n              break;\n            }\n          }\n        }\n        state.beans.allIDs.forEach((b) => {\n          const bean = state.beans.byID[b];\n          if (bean.actionData.act === 'chase' && \n            bean.actionData.chase &&\n            bean.actionData.chase.targetBeanKey === criminal.key){\n            bean.actionData.chase.targetBeanKey = undefined; //make the other beans give up the chase\n          }\n        })\n      },\n      beanRelax: (state, action: PayloadAction<{beanKey: number}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        bean.discrete_fun += 1;\n        _emote(bean, state, {emote: 'happiness', source: 'Relaxation'});\n        if (BeanBelievesIn(bean, 'Naturalism'))\n          _emote(bean, state, {emote: 'happiness', source: 'Naturalism'});\n      },\n      enactLaw: (state, action: PayloadAction<{lawKey: LawKey}>) => {\n        const data = LawData[action.payload.lawKey];\n        state.law.lawTree[data.axis] = data;\n      },\n      repealLaw: (state, action: PayloadAction<{lawKey: LawKey}>) => {\n        const data = LawData[action.payload.lawKey];\n        delete state.law.lawTree[data.axis];\n      },\n      beanInter: (state, action: PayloadAction<{bean: number, graveyard: number}>) => {\n        const grave = state.buildings.byID[action.payload.graveyard];\n        const bean = state.beans.byID[action.payload.bean]\n        if (grave && bean && grave.interredBeanKeys){\n          grave.interredBeanKeys.push(bean.key);\n          const city = state.cities.byID[bean.cityKey];\n          city.beanKeys = city.beanKeys.filter(x => x != bean.key);\n        }\n      },\n    buyBots: (state, action: PayloadAction<{amount: number}>) => {\n      const cost = state.alien.difficulty.cost.market.resource.bots;\n      if (PlayerTryPurchase(state.alien, cost, action.payload.amount)) {\n        state.alien.bots.amount += action.payload.amount;\n      }\n    },\n    buyEnergy: (state, action: PayloadAction<{amount: number}>) => {\n      const cost = state.alien.difficulty.cost.market.resource.bots;\n      if (PlayerTryPurchase(state.alien, cost, action.payload.amount)) {\n        state.alien.energy.amount += action.payload.amount;\n      }\n    },\n    scrubHedons: (state) => {\n      const cost = state.alien.difficulty.cost.market.scrubHedons;\n      if (PlayerTryPurchase(state.alien, cost)) {\n        const old = state.alien.hedons.amount;\n        state.alien.hedons.amount = 0;\n      }\n    },\n    buyTrait: (state, action: PayloadAction<{l: MarketTraitListing}>) => {\n      if (PlayerTryPurchase(state.alien, action.payload.l.cost)) {\n        const existing = state.alien.beliefInventory.find((x) => x.trait === action.payload.l.trait);\n        if (existing) {\n          existing.gems += ChargePerMarket;\n        } else\n          state.alien.beliefInventory.push({trait: action.payload.l.trait, gems: ChargePerMarket});\n      }\n    },\n      beanBuy: (state, action: PayloadAction<{beanKey: number, good: TraitGood}>) =>{\n        const bean = state.beans.byID[action.payload.beanKey];\n        const getSeller = (l: IListing) => {\n          if (l.sellerEnterpriseKey != null)\n            return state.enterprises.byID[l.sellerEnterpriseKey];\n          else if (l.sellerBeanKey)\n            return state.beans.byID[l.sellerBeanKey];\n          else\n            return state.law;\n        }\n        let receipt: IMarketReceipt|undefined;\n        switch(action.payload.good){\n          case 'food':\n            receipt = EconomyTryTransact(state.economy, state.law, bean, 'food', getSeller, 0.5, 3);\n            if (receipt?.bought) {\n                bean.discrete_food += receipt.bought;\n                if (bean.food === 'stuffed'){\n                    _emote(bean, state, {emote:'happiness', source: 'Stuffed'});\n                    _ifBelievesInMaybeEmote(state, bean, 'Gluttony', 'happiness', 1);\n                }\n            }\n            break;\n          // case 'shelter':\n          //   receipt = EconomyTryTransact(state.economy, state.law, bean, 'shelter', getSeller);\n          //   if (receipt?.bought) {\n          //       bean.discrete_stamina = 10;\n          //       bean.stamina = 'awake';\n          //   } else if (bean.discrete_stamina <= 0){\n          //       bean.stamina = 'homeless';\n          //   }\n          //   break;\n          case 'medicine':\n            receipt = EconomyTryTransact(state.economy, state.law, bean, 'medicine', getSeller, 0.5, 3);\n            if (receipt?.bought){\n                bean.discrete_health += receipt.bought;\n                if (bean.health === 'fresh')\n                    _emote(bean, state, {emote:'happiness', source: 'Robust'});\n            }\n            break;\n          case 'fun':\n            receipt = EconomyTryTransact(state.economy, state.law, bean, 'fun', getSeller);\n            if (receipt?.bought) {\n                bean.discrete_fun = 1;\n                _emote(bean, state, {emote:'happiness', source:'Entertainment'});\n                _emote(bean, state, {emote:'happiness', source:'Entertainment'});\n            }\n            break;\n        }\n        bean.actionData.buyAttempts = (bean.actionData.buyAttempts || 0) + 1;\n        if (receipt){\n          WorldSfxInstance.play('cash');\n          if (receipt.tax){\n            _ifBelievesInMaybeEmote(state, bean, 'Libertarianism', 'unhappiness', LibertarianTaxUnhappyChance);\n            _ifBelievesInMaybeEmote(state, bean, 'Progressivism', 'happiness', ProgressivismTaxHappyChance);\n          }\n          bean.actionData.buyReceipt = receipt;\n        }\n      },\n      addTitle: (state, action: PayloadAction<{}>) => {\n        EntityAddToSlice(state.titles, {\n          key: 0,\n          name: 'Title',\n          privileges: []\n        })\n      },\n      editTitle: (state, action: PayloadAction<{newT: ITitle}>) => {\n        const oldTitle = state.titles.byID[action.payload.newT.key];\n        state.titles.byID[action.payload.newT.key] = action.payload.newT;\n        if (oldTitle && oldTitle.badge != action.payload.newT.badge){\n          state.beans.allIDs.forEach((x) => {\n            if (state.beans.byID[x].titleKey === oldTitle.key)\n              state.beans.byID[x].badge = action.payload.newT.badge;\n          });\n        }\n        if (oldTitle && oldTitle.headwear != action.payload.newT.headwear){\n          state.beans.allIDs.forEach((x) => {\n            if (state.beans.byID[x].titleKey === oldTitle.key)\n              state.beans.byID[x].hat = action.payload.newT.headwear;\n          });\n        }\n      },\n      manualSave: (state) => {\n        GameStorageInstance.SaveGame(state);\n      },\n      beanSetTitle: (state, action: PayloadAction<{beanKey: number, titleKey: number}>) => {\n        const bean = state.beans.byID[action.payload.beanKey];\n        bean.titleKey = action.payload.titleKey;\n        const title = state.titles.byID[action.payload.titleKey];\n        bean.badge = title.badge;\n        bean.hat = title.headwear;\n      }\n    }\n  });\n\nfunction _changeState(state: WritableDraft<IWorldState>, action: { payload: { beanKey: number; newState: IActivityData }; type: string }) {\n  const oldAct = state.beans.byID[action.payload.beanKey].action;\n  const bean = state.beans.byID[action.payload.beanKey];\n  const ADS = AgentDurationStoreInstance.Get('bean', bean.key);\n  if (oldAct === 'chat')\n    bean.lastChatMS = Date.now()\n  if (oldAct === 'sleep') {\n    bean.discrete_stamina = 7\n    BeanCalculateStamina(bean, state.alien.difficulty)\n  }\n  if (action.payload.newState.act === 'idle') {\n    bean.priorities = GetPriorities(bean, state.seed, state.cities.byID[bean.cityKey], state.alien.difficulty)\n  }\n  bean.activity_duration[oldAct] += ADS.elapsed;\n  bean.action = action.payload.newState.act;\n  bean.actionData = action.payload.newState;\n  const p = MoverStoreInstance.Get('bean', bean.key).current?.point;\n  if (p && !isNaN(p.x) && !isNaN(p.y)) {\n    bean.lastPoint = {\n      ...p\n    };\n  }\n  ADS.elapsed = 0;\n}\n\n  function _ifBelievesInMaybeEmote(state: IWorldState, bean: IBean, source: TraitBelief, emote: TraitEmote, chance: number){\n    if (BeanBelievesIn(bean, source) && Math.random() < chance){\n      _emote(bean, state, {emote: emote, source: source});\n    }\n  }\n  function _emote(bean: IBean, state: IWorldState, payload: {emote: TraitEmote, source: string}){\n    bean.discrete_sanity = MathClamp(bean.discrete_sanity + EmotionSanity[payload.emote], 0, 10);\n    bean.hedonHistory[0][payload.source] = (bean.hedonHistory[0][payload.source] || 0) + EmotionWorth[payload.emote];\n    \n    const beanPosition = MoverStoreInstance.Get('bean', bean.key).current || OriginAccelerator;\n\n    const pickup: IPickup = {\n        key: state.pickups.nextID++,\n        point: {\n          x: beanPosition.point.x,\n          y: beanPosition.point.y\n        },\n        type: payload.emote,\n        velocity: {x: 0, y: 0}\n    };\n    state.cities.byID[bean.cityKey].pickupKeys.push(pickup.key);\n    state.pickups.byID[pickup.key] = pickup; \n    state.pickups.allIDs.push(pickup.key);\n    MoverStoreInstance.Get('pickup', pickup.key).publish({\n      point: {\n        x: beanPosition.point.x,\n        y: beanPosition.point.y\n      },\n      hex: {\n        q: beanPosition.hex.q,\n        r: beanPosition.hex.r\n      },\n      velocity: {x: 0, y: 0}\n    });\n  }\n  \n  export const { \n    refreshMarket, magnetChange, worldTick, \n    remove_ufo, upgradeDistrict,\n    newGame, loadGame, build, changeEnterprise, fireBean, upgrade, upgradeLoft, upgradeStorage, beam,\n    abduct, release, scan, vaporize, pickUpPickup,\n    implant, washBelief, washNarrative, washCommunity, washMotive,extractBelief,\n    changeState, beanEmote, beanGiveCharity, beanHitDestination, beanWork, beanRelax, beanBuy, beanCrime,beanArrest,\n    beanBePersuaded, cheatAdd, manualSave, setCrimeLegality, beanInter,\n    addTitle, editTitle, beanSetTitle, acknowledgeNewInsanity,\n    enactLaw, repealLaw, setResearch, buyBots, buyEnergy, buyTrait, scrubHedons\n  } = worldSlice.actions\n  \n  export const selectCityBeanIDs = (state: IWorldState, cityKey: number) => state.cities.byID[cityKey].beanKeys;\n  export const selectBeans = (state: IWorldState) => state.beans.byID;\n  export const selectBeansByCity = createSelector(\n    selectCityBeanIDs,\n    selectBeans,\n    (cityBeanIDs, beansByID) => cityBeanIDs.reduce((all, cityBeanKey) => {\n      all.push(beansByID[cityBeanKey])\n      return all;\n    }, [] as IBean[])\n  );\n  export const selectCity = (state: IWorldState, cityKey: number) => state.cities.byID[cityKey];\n  export const selectBuilding = (state: IWorldState, buildingKey: number) => state.buildings.byID[buildingKey];\n  export const selectCityBuildingByHex = (state: IWorldState, cityKey: number, hexKey: string) => {\n    const buildingKey = state.cities.byID[cityKey].buildingMap[hexKey];\n    if (buildingKey != null)\n      return selectBuilding(state, buildingKey);\n    else\n      return undefined;\n  }\n  export const selectBuildingKeysByCity = (state: IWorldState, cityKey: number) => {\n    return state.cities.byID[cityKey].buildingKeys;\n  }\n  export const selectBuildingsByCity = (state: IWorldState, cityKey: number) => {\n    return selectBuildingKeysByCity(state, cityKey).reduce((x: IBuilding[], id) => {\n      x.push(state.buildings.byID[id]);\n      return x;\n    }, [] as IBuilding[]);\n  }\n  \n  export const selectMajorityEthnicity = createSelector(selectBeansByCity, (cityBeans) => {\n    const c = cityBeans.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\n        switch(bean.ethnicity){\n            case 'circle': count.circle++;break;\n            case 'square': count.square++;break;\n            case 'triangle': count.triangle++;break;\n        }\n        return count;\n    }, {circle: 0, square: 0, triangle: 0});\n    if (c.circle > c.square && c.circle > c.triangle){\n      return 'circle';\n    } else if (c.square > c.circle && c.square > c.triangle){\n      return 'square';\n    } else {\n      return 'triangle';\n    }\n  });\n  \n  export default worldSlice.reducer;\n\n  \n","import { IEvent } from '../../events/Events'\r\nimport { DefaultDifficulty } from '../../Game'\r\nimport { IBean } from '../../simulation/Agent'\r\nimport { InsanityTraits } from '../../simulation/Beliefs'\r\nimport { ICity } from '../../simulation/City'\r\nimport { IEconomy } from '../../simulation/Economy'\r\nimport { IDistrict, ILot } from '../../simulation/Geography'\r\nimport { CrimeKey, CrimePunishment, IGovernment, IGovPolicy, LawAxis } from '../../simulation/Government'\r\nimport { IEnterprise } from '../../simulation/Institutions'\r\nimport { MarketTraitListing } from '../../simulation/MarketTraits'\r\nimport { IPickup } from '../../simulation/Pickup'\r\nimport { IPlayerData } from '../../simulation/Player'\r\nimport { IBuilding, IDwelling } from '../../simulation/RealEstate'\r\nimport { IDate, Season } from '../../simulation/Time'\r\nimport { ITitle } from '../../simulation/Titles'\r\nimport { IUFO } from '../../simulation/Ufo'\r\nimport { GenerateCity } from '../../WorldGen'\r\nimport { CreateEmptyEntitySlice, CreateEntitySlice, IEntitySlice } from '../entity.state'\r\n\r\nexport interface IWorldState {\r\n  buildings: IEntitySlice<IBuilding>,\r\n  enterprises: IEntitySlice<IEnterprise>,\r\n  cities: IEntitySlice<ICity>,\r\n  beans: IEntitySlice<IBean>,\r\n  ufos: IEntitySlice<IUFO>,\r\n  events: IEntitySlice<IEvent>,\r\n  pickups: IEntitySlice<IPickup>,\r\n  districts: IEntitySlice<IDistrict>,\r\n  lots: IEntitySlice<ILot>,\r\n  titles: IEntitySlice<ITitle>,\r\n  dwellings: IEntitySlice<IDwelling>,\r\n  economy: IEconomy,\r\n  law: IGovernment,\r\n  marketTraitsForSale: MarketTraitListing[],\r\n  date: IDate,\r\n  alien: IPlayerData,\r\n  spotlightEvent: IEvent | undefined,\r\n  insanityEvent: {beanKey: number, newInsanity: InsanityTraits}|undefined,\r\n  /**\r\n   * 1-based ID of save slot (1-3)\r\n   */\r\n  saveSlot: number,\r\n  seed: string\r\n}\r\n\r\nexport function GetBlankWorldState(seed: string = 'abcdef'): IWorldState{\r\n  return {\r\n    buildings: CreateEmptyEntitySlice<IBuilding>(),\r\n    enterprises: CreateEmptyEntitySlice<IEnterprise>(),\r\n    cities: CreateEntitySlice<ICity>([\r\n      GenerateCity()\r\n    ]),\r\n    beans: CreateEmptyEntitySlice<IBean>(),\r\n    ufos: CreateEmptyEntitySlice<IUFO>(),\r\n    events: CreateEmptyEntitySlice<IEvent>(),\r\n    pickups: CreateEmptyEntitySlice<IPickup>(),\r\n    lots: CreateEmptyEntitySlice<ILot>(),\r\n    districts: CreateEmptyEntitySlice<IDistrict>(),\r\n    titles: CreateEmptyEntitySlice<ITitle>(),\r\n    dwellings: CreateEmptyEntitySlice<IDwelling>(),\r\n    economy: {\r\n      unfulfilledMonthlyDemand: { food: 0, medicine: 0, fun: 0, },\r\n      monthlyDemand: { food: 0, medicine: 0, fun: 0, },\r\n      monthlySupply: { food: 0, medicine: 0, fun: 0, },\r\n      market: {\r\n        listings: {\r\n          food: [], fun: [], medicine: []\r\n          //, shelter: []\r\n        }\r\n      }\r\n    },\r\n    law: {\r\n      cash: 0,\r\n      lawTree: {} as {[key in LawAxis]: IGovPolicy|undefined},\r\n      crimes: {\r\n        'murder': 'jail',\r\n        'destroy': 'jail',\r\n        'hurt': 'jail',\r\n        'rob': 'jail',\r\n        'steal': 'jail',\r\n      } as {[key in CrimeKey]: CrimePunishment|undefined},\r\n      laws: [] as IGovPolicy[],\r\n      ticksSinceLastSale: 0\r\n    },\r\n    date: {year: 1, season: Season.Spring, day: 1, hour: 1},\r\n    marketTraitsForSale: [],\r\n    alien: {\r\n      scanned_bean: {},\r\n      seenBeliefs: {},\r\n      beliefInventory: [],\r\n      speechcrimes: {},\r\n      abductedBeanKeys: [],\r\n      energy: { amount: 16, income: 2/30},\r\n      bots: { amount: 10, income: 2/30},\r\n      hedons: { amount: 0, income: 0},\r\n      // tortrons: { amount: 0, income: 0},\r\n      next_grade: { year: 1, season: 3, day: 1, hour: 0 },\r\n      difficulty: {...DefaultDifficulty},\r\n      goals: ['found_utopia', 'build_house_n_farm',  'beam_3', 'scan', 'brainwash', 'set_policy', 'c+_grade'],\r\n      goalProgress: {},\r\n      pastReportCards: [],\r\n      workingReportCard: {\r\n          Happiness: 'D',\r\n          Prosperity: 'D',\r\n          Stability: 'D',\r\n          Dogma: 'D',\r\n      },\r\n      techProgress: {},\r\n      currentlyResearchingTech: undefined\r\n    },\r\n    spotlightEvent: undefined,\r\n    insanityEvent: undefined,\r\n    saveSlot: 1,\r\n    seed: seed\r\n  }\r\n}","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './state'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { HexPoint } from \"../../simulation/Geography\"\r\n\r\nexport interface ISelectedSlice{\r\n    selectedCityKey: number|undefined;\r\n    selectedBeanKey: number|undefined;\r\n    selectedDistrictKey: number|undefined;\r\n    selectedLotKey: number|undefined;\r\n    selectedBuildingKey: number|undefined;\r\n}\r\nexport const selectedSlice = createSlice({\r\n    name: 'selected',\r\n    initialState: {\r\n        selectedCityKey: undefined,\r\n        selectedBeanKey: undefined\r\n    } as ISelectedSlice,\r\n    reducers: {\r\n      doSelectCity: (state, action: PayloadAction<{cityKey: number}>) => {\r\n        return {\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: undefined,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: undefined,\r\n            selectedLotKey: undefined\r\n        }\r\n      },\r\n      doSelectDistrict: (state, action: PayloadAction<{cityKey: number, district: number}>) => {\r\n        return {\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: undefined,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: action.payload.district,\r\n            selectedLotKey: undefined\r\n        }\r\n      },\r\n      doSelectLot: (state, action: PayloadAction<{cityKey: number, district: number, lot: number}>) => {\r\n        return {\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: undefined,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: action.payload.district,\r\n            selectedLotKey: action.payload.lot\r\n        }\r\n      },\r\n      doSelectBuilding: (state, action: PayloadAction<{cityKey: number, buildingKey: number}>) => {\r\n        return {\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: undefined,\r\n            selectedBuildingKey: action.payload.buildingKey,\r\n            selectedLotKey: undefined,\r\n            selectedDistrictKey: undefined\r\n        }\r\n      },\r\n      doSelectBean: (state, action: PayloadAction<{cityKey: number, beanKey: number}>) => {\r\n        return {\r\n            selectedHexKey: undefined,\r\n            selectedCityKey: action.payload.cityKey,\r\n            selectedBeanKey: action.payload.beanKey,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: undefined,\r\n            selectedLotKey: undefined\r\n        }\r\n      },\r\n      doSelectNone: (state) => {\r\n        return {\r\n            selectedBeanKey: undefined, \r\n            selectedCityKey: undefined,\r\n            selectedHexKey: undefined,\r\n            selectedBuildingKey: undefined,\r\n            selectedDistrictKey: undefined,\r\n            selectedLotKey: undefined\r\n        }\r\n      },\r\n    }\r\n  })\r\n  \r\n  export const { doSelectDistrict, doSelectNone, doSelectBean, doSelectCity, doSelectBuilding, doSelectLot  } = selectedSlice.actions;","import { combineReducers, configureStore, createSelector, getDefaultMiddleware, Middleware } from '@reduxjs/toolkit';\r\nimport { GameStorageInstance } from '../GameStorage';\r\nimport { ISelectedSlice, selectedSlice } from './features/selected.reducer';\r\nimport { IWorldState } from './features/world';\r\nimport { selectBeans, worldSlice } from './features/world.reducer';\r\n\r\n// export type RootState = ReturnType<typeof store.getState>;\r\nexport type RootState = {\r\n  world: IWorldState,\r\n  selected: ISelectedSlice\r\n};\r\nexport const autosaveSignalMiddleware: Middleware<\r\n  {}, // Most middleware do not modify the dispatch return value\r\n  RootState\r\n> = storeApi => next => action => {\r\n  \r\n  switch (action.type){\r\n    case 'world/magnetChange':\r\n      break;\r\n    default:\r\n      if (!action.type.startsWith('selected')){\r\n        GameStorageInstance.Dirty.publish(true);\r\n      }\r\n  }\r\n  \r\n  return next(action)\r\n}\r\nexport const store = configureStore({\r\n  reducer: {\r\n    world: worldSlice.reducer,\r\n    selected: selectedSlice.reducer\r\n  },\r\n  middleware: getDefaultMiddleware().concat([autosaveSignalMiddleware])\r\n})\r\n\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const selectBeanById = (state: RootState, beanKey: number) => state.world.beans.byID[beanKey];\r\nexport const selectCityById = (state: RootState, cityKey: number) => state.world.cities.byID[cityKey];\r\nexport const selectSelectedCity = (state: RootState) => {\r\n  return state.selected.selectedCityKey != null ? state.world.cities.byID[state.selected.selectedCityKey] : undefined;\r\n}\r\nexport const selectSelectedBean = (state: RootState) => {\r\n  return state.selected.selectedBeanKey != null ? state.world.beans.byID[state.selected.selectedBeanKey] : undefined;\r\n}\r\nexport const selectSelectedBuilding = (state: RootState) => {\r\n  const city = state.selected.selectedCityKey != null && state.world.cities.byID[state.selected.selectedCityKey];\r\n  if (city && state.selected.selectedLotKey != null)\r\n  {\r\n    const buildingID = state.world.lots.byID[state.selected.selectedLotKey].buildingKey;\r\n    if (buildingID != null)\r\n      return state.world.buildings.byID[buildingID];\r\n  }\r\n  return undefined;\r\n}\r\nexport const selectEventIDs = (state: RootState) => {\r\n  return state.world.events.allIDs;\r\n};","import React from \"react\";\r\n\r\nexport class ConfirmButton extends React.Component<{\r\n    confirmText: string,\r\n    onConfirm: () => void,\r\n    disabled?: boolean,\r\n    className?: string\r\n}, {\r\n    confirming: boolean\r\n}> {\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {\r\n            confirming: false\r\n        }\r\n    }\r\n    click(){\r\n        if (this.state.confirming){\r\n            this.props.onConfirm();\r\n            this.setState({confirming: false});\r\n        } else {\r\n            this.setState({confirming: true});\r\n        }\r\n    }\r\n    render(){\r\n        return <button className={this.props.className} onClick={() => this.click()} disabled={this.props.disabled}>\r\n            { this.state.confirming ? this.props.confirmText : this.props.children}\r\n        </button>\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\n\r\nexport interface StringDropdownPS{\r\n    options: Array<string>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any,\r\n    titleCase?: boolean\r\n}\r\ninterface StringDropdownS{\r\n    key: any;\r\n}\r\n\r\nexport class StringDropdown extends React.Component<StringDropdownPS, StringDropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n        this.setState({key: e.target.value})\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    protected getTextForOption(data: string): string{\r\n        if (this.props.titleCase){\r\n            data = data[0].toUpperCase()+data.slice(1);\r\n        }\r\n        return data;\r\n    }\r\n    options(){\r\n        return this.props.options.map((str) => {\r\n            return <option value={str} key={str} title={this.getTitleForOption(str)}>\r\n                {this.getTextForOption(str)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: string): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\n","import React, { ReactElement } from \"react\";\r\nimport { BeliefsAll, IBeliefData, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { StringDropdown } from \"../widgets/StringDropdown\";\r\nimport { TraitIcon } from \"../World\";\r\nimport './beliefs.css';\r\n\r\n\r\n\r\nexport const BeliefWidget: React.FC<{\r\n    data: IBeliefData,\r\n    cost?: number,\r\n    leftButton?: ReactElement,\r\n    titleView: ReactElement,\r\n    bottomView: ReactElement\r\n}> = (props) => {\r\n    return <div className=\"belief\">\r\n        <div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {props.data.icon}\r\n                </div>\r\n                {\r\n                    props.leftButton\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    {\r\n                        props.titleView\r\n                    }\r\n                    {\r\n                        props.cost ? \r\n                        <span className=\"pull-r\">{props.cost}🧠</span>\r\n                        : null\r\n                    }\r\n                </div>\r\n                {\r\n                props.data.description ? props.data.description.split(';').map((x, i) => \r\n                    <small className=\"marg-b-6\" key={i}> {x}\r\n                    </small>\r\n                    ) : null\r\n                }\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                       props.bottomView\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const EditBeliefInput: React.FC<{\r\n    data: IBeliefData,\r\n    frozen?: boolean,\r\n    divergent?: boolean,\r\n    available: number,\r\n    cost: number,\r\n    wash: () => void,\r\n    extract: () => void,\r\n}> = (props) => {\r\n    return <div className=\"belief\">\r\n        <div className=\"horizontal edit badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {props.data.icon}\r\n                </div>\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    <strong title={props.data.description} className={props.divergent ? 'divergent marg-r-6': 'marg-r-6'}>\r\n                        {props.data.noun}\r\n                    </strong>\r\n                    <span className=\"pull-r\">{props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{props.data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"horizontal\">\r\n            {\r\n                props.frozen ? null : <ConfirmButton className=\"callout pad-4 marg-0\"\r\n                    confirmText={'-'+props.cost.toString()+'🧠?'} disabled={props.available < props.cost} onConfirm={props.wash}>\r\n                🚿 <small>Wash Out</small>\r\n                </ConfirmButton>\r\n            }\r\n            {\r\n                <ConfirmButton className=\"callout pad-4 marg-0\"\r\n                    confirmText={'-'+props.cost.toString()+'🧠?'} disabled={props.available < props.cost} onConfirm={props.extract}>\r\n                💎 <small>Copy to Gem</small>\r\n                </ConfirmButton>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst SortedBeliefs = BeliefsAll.slice().sort((a, b) => a.localeCompare(b));\r\nexport class AddBeliefInput extends React.Component<{\r\n    available: number,\r\n    cost: number,\r\n    add: (b: TraitBelief) => void\r\n}, {\r\n    belief: TraitBelief,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            belief: 'Neuroticism'\r\n        }\r\n    }\r\n    render(){\r\n        const data = SecondaryBeliefData[this.state.belief]\r\n        return <div className=\"belief\"><div className=\"horizontal badger add\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {data.icon}\r\n                </div>\r\n                <ConfirmButton className=\"callout grow-0 pad-4 marg-0\" disabled={this.props.available < this.props.cost} \r\n                    confirmText={'-'+this.props.cost.toString()+'🧠?'} onConfirm={() => this.props.add(this.state.belief)}>\r\n                    💉 <small>Implant</small>\r\n                </ConfirmButton>\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">                    \r\n                    <StringDropdown titleCase={true}\r\n                    options={SortedBeliefs} \r\n                    value={this.state.belief}\r\n                    onChange={(a: string) => {\r\n                        this.setState({belief: a as TraitBelief})\r\n                    }}\r\n                    ></StringDropdown>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        (data.idealPro || []).map((x) => <span className=\"pos badge align-mid\" key={x}>+{TraitIcon[x]}</span>)\r\n                    }\r\n                    {\r\n                        (data.idealCon || []).map((x) => <span className=\"neg badge align-mid\" key={x}>-{TraitIcon[x]}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}","import React from \"react\";\r\nimport { BeanBelievesIn, BeanGetFace } from \"../simulation/Bean\";\r\nimport { NarrativeBeliefData, SecondaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { HasResearched } from \"../simulation/Player\";\r\nimport { acknowledgeNewInsanity, extractBelief, implant, washBelief, washNarrative } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { selectSelectedBean } from \"../state/state\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { EmoteIcon } from \"../World\";\r\nimport { BeliefWidget, EditBeliefInput } from \"./BeliefRow\";\r\nimport './modals.css';\r\n\r\nexport const TraitInventoryList: React.FC<{\r\n    dogmatic: boolean,\r\n    beanKey: number\r\n}> = (props) => {\r\n    const beliefInventory = useAppSelector(x => x.world.alien.beliefInventory);\r\n    const dispatch = useAppDispatch();\r\n    return <>\r\n        {beliefInventory.map((x) => <BeliefWidget \r\n        key={x.trait} data={SecondaryBeliefData[x.trait]} titleView={<strong>{SecondaryBeliefData[x.trait].noun}</strong>}\r\n        leftButton={\r\n            <ConfirmButton onConfirm={() => dispatch(implant({beanKey: props.beanKey, trait: x.trait}))} className=\"callout marg-0\" confirmText=\"-1 🧠?\" disabled={x.gems < 1 || props.dogmatic}>\r\n                Implant\r\n            </ConfirmButton>\r\n        }\r\n        bottomView={<span><span className=\"trait-gem\"></span>x{x.gems}</span>}>\r\n        </BeliefWidget>)}\r\n    </>\r\n};\r\n\r\nexport const BrainwashingContent: React.FC<{\r\n}> = () => {\r\n    const bean = useAppSelector(selectSelectedBean);\r\n    const isScanned = useAppSelector(s => bean?.key != null && s.world.alien.scanned_bean[bean.key]);\r\n    const difficulty = useAppSelector(s => s.world.alien.difficulty);\r\n    const techProgress = useAppSelector(s => s.world.alien.techProgress);\r\n    const insanityEvent = useAppSelector(s => s.world.insanityEvent);\r\n    const dispatch = useAppDispatch();\r\n    const sanityCostBonus = HasResearched(techProgress, 'sanity_bonus') ? -1 : 0;\r\n    if (bean == null) return <div></div>;\r\n    const dogmatic = BeanBelievesIn(bean, 'Dogmatism');\r\n    const brains = [];\r\n    for (let i = 1; i < 11; i++) {\r\n        brains.push(bean.discrete_sanity >= i ? '🧠': '😵');\r\n    }\r\n    return <div>\r\n        <div className=\"horizontal fancy-header\">\r\n            <div>\r\n            🧠🚿 BRAINWASH\r\n            </div>\r\n            <div>\r\n                <strong>{BeanGetFace(bean)} {bean.name}</strong>\r\n            </div>\r\n            <div>\r\n                <table className=\"trait-measure\">\r\n                    <tbody>\r\n                    <tr>\r\n                        {\r\n                            brains.map((x, i) => <td key={i} className={x === '😵' ? 'grey' : ''}>{x}</td>)\r\n                        }\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan={2} className=\"set-1\"><small>Psychotic</small></td>\r\n                        <td colSpan={2} className=\"set-2\"><small>Disturbed</small></td>\r\n                        <td colSpan={3} className=\"set-3\"><small>Stressed</small></td>\r\n                        <td colSpan={3} className=\"set-4\"><small>Sane</small></td>\r\n                        <td></td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <p className=\"pad-4p text-center\">\r\n            {\r\n                bean.sanity != 'sane' ?\r\n                    <small>Brainwashing subjects with low sanity 🧠 has a 🎲 to add extremely negative traits!</small>\r\n                : null\r\n            }\r\n        </p>\r\n        {\r\n            insanityEvent && insanityEvent.beanKey === bean.key ? <div className=\"pad-4p text-center red-alert\">\r\n                <h2>\r\n                    {bean.name} is inflicted with {SecondaryBeliefData[insanityEvent.newInsanity].icon} {SecondaryBeliefData[insanityEvent.newInsanity].noun} due to brainwashing!\r\n                    <button onClick={() => dispatch(acknowledgeNewInsanity())}>❌</button>\r\n                </h2>\r\n            </div> : null\r\n        }\r\n        <div style={{clear: 'both'}}>\r\n            {\r\n                dogmatic ? <div className=\"text-center\">\r\n                    🐶 Dogmatic subjects cannot change their minds\r\n                </div> : null\r\n            }\r\n            { isScanned ? <div className=\"horizontal scroll\">\r\n                <EditBeliefInput\r\n                    available={bean.discrete_sanity} frozen={dogmatic}\r\n                    wash={() => dispatch(washNarrative({beanKey: bean.key, faith:bean.faith}))} \r\n                    extract={() => {\r\n                        \r\n                    }} \r\n                    cost={difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                    data={NarrativeBeliefData[bean.faith]}\r\n                ></EditBeliefInput>\r\n                {\r\n                    bean.beliefs.map((b) => <EditBeliefInput key={b}\r\n                    available={bean.discrete_sanity} frozen={dogmatic && b != 'Dogmatism'}\r\n                    divergent={false}\r\n                    wash={() => dispatch(washBelief({beanKey: bean.key, trait: b}))} \r\n                    extract={() => dispatch(extractBelief({beanKey: bean.key, trait: b}))} \r\n                        cost={(difficulty.cost.bean_brain.brainwash_secondary.sanity || 0) + sanityCostBonus}\r\n                        data={SecondaryBeliefData[b]}\r\n                    >\r\n                    </EditBeliefInput>)\r\n                }\r\n            </div> : <div className=\"text-center\">🛰️ Scan this subject to reveal its Traits! </div>}\r\n            <h3 className=\"pad-4p\">\r\n                <span className=\"trait-gem\"></span> Trait Gems\r\n            </h3>\r\n            <div className=\"horizontal scroll\">\r\n                <TraitInventoryList beanKey={bean.key}\r\n                    dogmatic={dogmatic}></TraitInventoryList>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\n\r\nexport const Subtabs: React.FC<{\r\n    additionalClasses?: string,\r\n    active: string,\r\n    options: {icon: string, value: string, text: string, onClick: () => void}[]    \r\n}> = (props) => {\r\n\r\n    return <div className={'horizontal blue-orange cylinder f-size-125em marg-t-20'+(props.additionalClasses||'')}>\r\n        {\r\n            props.options.map((x) => <button type=\"button\" key={x.value} onClick={() => x.onClick()}  className={props.active === x.value ? 'active': ''}>\r\n                {x.icon} {x.text}\r\n            </button>)\r\n        }\r\n    </div>\r\n}","\r\nexport type TitleHeadwear = '👑'|'👒'|'🎩'|'🎓'|'🧢';\r\nexport type TitleBadge = '⭐'|'🛡️'|'⚖️'|'📋'|'🏅'|'🎀'|'🌸';\r\nexport type TitlePrivilege = 'social_deference'|'criminal_immunity'|'tax_exemption'|'hereditary'|'gentility';\r\nexport const PrivilegeData = {\r\n    social_deference: {\r\n        description: '🎲 that nearby subjects emit 💢; 🎲 that this subject gains 👍'\r\n    },\r\n    criminal_immunity: {\r\n        description: 'This subject will never be penalized due to crime.'\r\n    }, \r\n    tax_exemption: {\r\n        description: 'This subject will never pay taxes.'\r\n    }, \r\n    hereditary: {\r\n        description: 'Children of this subject automatically gain this title.'\r\n    }, \r\n    gentility: {\r\n        description: 'This subject will not work but will still be paid.'\r\n    }\r\n};\r\n\r\nexport interface ITitle{\r\n    key: number;\r\n    name: string;\r\n    headwear?: TitleHeadwear;\r\n    badge?: TitleBadge;\r\n    privileges: Array<TitlePrivilege|undefined>;\r\n}","import React, { useState } from \"react\";\r\nimport { Subtabs } from \"../chrome/Subtab\";\r\nimport { ITitle, TitleBadge, TitleHeadwear, TitlePrivilege, PrivilegeData } from \"../simulation/Titles\";\r\nimport { addTitle, editTitle } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\n\r\nexport const SocietyPanel: React.FC<{\r\n\r\n}> = (props) => {\r\n    const titles = useAppSelector(s => s.world.titles.allIDs.reduce( (all, id)=>{all.push(s.world.titles.byID[id]); return all;}, [] as ITitle[]));\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"pad-4p\">\r\n        <Subtabs active={'titles'} options={[{icon: '👑',text:'Titles',value:'titles',onClick:() => {}},{icon:'🔖',text:'Names',value:'names',onClick:() => {}}]}></Subtabs>\r\n        {/* <div className=\"subheader\">\r\n            <h3>Other</h3>\r\n        </div>\r\n        <div>\r\n\r\n        </div> */}\r\n        <div className=\"subheader\">\r\n            <h2>\r\n                👑 Titles\r\n                <button \r\n                    className=\"callout marg-0 pull-r\"\r\n                    onClick={() => {\r\n                        dispatch(addTitle({}));\r\n                    }}\r\n                >➕ Title</button>\r\n            </h2>\r\n        </div>\r\n        <div className=\"title-row\">\r\n            {\r\n                titles.map(y => <TitleEdit key={y.key} title={y} onEdit={(t) => {\r\n                    dispatch(editTitle({newT: t}))\r\n                }}></TitleEdit>)\r\n            }\r\n            {\r\n                titles.length === 0 ? <div>\r\n                    <p>\r\n                    <i>No Titles</i>\r\n                    </p>\r\n                    <p>\r\n                        Titles are cosmetic items and privileges that can be awarded to subjects.\r\n                    </p>\r\n                </div> : null\r\n            }\r\n        </div>\r\n      </div>\r\n}\r\n\r\n\r\nexport const TitleEdit: React.FC<{\r\n    title: ITitle,\r\n    onEdit: (newT: ITitle) => void\r\n}> = (props) => {\r\n    return <div className=\"title-box\">\r\n        <div>\r\n            <label>\r\n                Title:&nbsp;\r\n                <input type=\"text\" value={props.title.name} onChange={(ev) => props.onEdit({...props.title, name: ev.target.value})} />\r\n            </label>\r\n        </div>\r\n        <div>\r\n            <label>\r\n                Headwear:&nbsp;\r\n                <select value={props.title.headwear} onChange={(e) => props.onEdit({\r\n                    ...props.title,\r\n                    headwear: e.target.value as TitleHeadwear\r\n                })}>\r\n                    <option value={undefined}>None</option>\r\n                    <option value='👑'>👑</option>\r\n                    <option value='👒'>👒</option>\r\n                    <option value='🎩'>🎩</option>\r\n                    <option value='🎓'>🎓</option>\r\n                    <option value='🧢'>🧢</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                &nbsp;Badge:&nbsp;\r\n                <select value={props.title.badge} onChange={(e) => props.onEdit({\r\n                    ...props.title,\r\n                    badge: e.target.value as TitleBadge\r\n                })}>\r\n                    <option value={undefined}>None</option>\r\n                    <option value='⭐'>⭐</option>\r\n                    <option value='🛡️'>🛡️</option>\r\n                    <option value='⚖️'>⚖️</option>\r\n                    <option value='📋'>📋</option>\r\n                    <option value='🏅'>🏅</option>\r\n                    <option value='🎀'>🎀</option>\r\n                    <option value='🌸'>🌸</option>\r\n                </select>\r\n            </label>\r\n        </div>\r\n        <h3>\r\n            Privileges\r\n            <button \r\n                className=\"callout marg-0 pull-r\"\r\n                onClick={() => {\r\n                    const c = props.title.privileges.slice();\r\n                    c.push(undefined);\r\n                    props.onEdit({...props.title, privileges: c})\r\n                }}\r\n            >➕ Privilege</button>\r\n        </h3>\r\n        {\r\n            props.title.privileges.map((p,i) => <div key={p}>\r\n                <select key={i} value={p} onChange={(ev) => {\r\n                    const newArray = props.title.privileges.slice();\r\n                    if (ev.target.value === 'None'){\r\n                        newArray.splice(i, 1);\r\n                    } else {\r\n                        newArray.splice(i, 1, ev.target.value as TitlePrivilege);\r\n                    }\r\n                    props.onEdit({...props.title, privileges: newArray})\r\n                }}>\r\n                    <option value={undefined}>None</option>\r\n                    <option value={'social_deference'}>Social Deference</option>\r\n                    <option value={'criminal_immunity'}>Criminal Immunity</option>\r\n                    <option value={'tax_exemption'}>Tax Exemption</option>\r\n                    <option value={'hereditary'}>Hereditary</option>\r\n                    <option value={'gentility'}>Gentility</option>\r\n                </select>\r\n                {\r\n                    (p != null && PrivilegeData[p]) ? <div>{PrivilegeData[p].description}</div> : null\r\n                }\r\n            </div>)\r\n        }\r\n    </div>\r\n}","import { BuildingTypes } from \"../simulation/Geography\";\r\nimport { Trait } from \"../World\";\r\n\r\nexport const keyToName: { [key in Trait | BuildingTypes]: string } = {\r\n    state: 'Collectivist', ego: 'Independent',\r\n    trad: 'Elitist', prog: 'Progressive',\r\n    circle: 'Brunette', square: 'Blonde', triangle: 'Redhead',\r\n    rocket: 'Futuristic', dragon: 'Mythical', music: 'Dramatic', noFaith: 'Nihilistic',\r\n    starving: 'Starving', hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\r\n    homeless: 'Homeless', sleepy: 'Sleepy', awake: 'Awake', rested: 'Rested',\r\n    sick: 'Sick', sickly: 'Sickly', bruised: 'Bruised', fresh: 'Robust',\r\n    sane: 'Sane', stressed: 'Confused', disturbed: 'Disturbed', 'psychotic': 'Psychotic',\r\n    housed: 'Housed', \r\n    graveyard: 'Graveyard',\r\n    house: 'House', hospital: 'Hospital', farm: 'Farm', theater: 'Theater', church: 'Church', jail: 'Jail', park: 'Park', nature: 'Elysian Scenery'\r\n  };","import React from \"react\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../i18n/text\";\r\nimport { IBean } from \"../simulation/Agent\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: IBean[], \r\n    need: (b: IBean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport { TraitJob } from \"../World\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { GetCostOfLiving, IListing } from \"../simulation/Economy\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { selectBeansByCity } from \"../state/features/world.reducer\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport const EconomyReport: React.FC<{}> = () => {\r\n    const beans = useAppSelector(s => selectBeansByCity(s.world, 0));\r\n    const economy = useAppSelector(s => s.world.economy);\r\n    const numDwellings = useAppSelector(s => s.world.dwellings.allIDs.length);\r\n    const food_median = median(beans.map(x => x.discrete_food));\r\n    const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n    const shelter_median = median(beans.map(x => x.discrete_stamina)).toFixed(1);\r\n    const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n    const wealth_avg = wealth_total / (beans.length || 1);\r\n    const wealth_median = median(beans.map(x => x.cash));\r\n    const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n    const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n    const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n    const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n    const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n    const jobs = beans.reduce((obj, b) => {\r\n      obj[b.job] = (obj[b.job] || 0)+1;\r\n      return obj;\r\n    }, {} as {[key in TraitJob]: number});\r\n    const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n    function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: IListing){\r\n      obj.supply += l.quantity;\r\n      obj.price += l.price;\r\n      obj.count++;\r\n      obj.avg = obj.price / obj.count;\r\n      return obj;\r\n    }\r\n    const food = economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n    const meds = economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n    return (\r\n      <div>\r\n        <div className=\"pad-4p\">\r\n          <h2>State of the Utopia</h2>\r\n        </div>\r\n        {/* <div className=\"pad-4p\">\r\n          <h3>Subject's Health</h3>\r\n        </div> */}\r\n        <div className=\"col-2\">\r\n          <div>\r\n            <strong>🍞 Food Security</strong>\r\n            <NeedReadout beans={beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n            <table className=\"width-100p\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Median {food_median.toFixed(1)} 🍞</td>\r\n                  <td className=\"text-center\">\r\n                    Supply: {food.supply} 🍞 @ ${food.avg.toFixed(2)}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    Deficit: {economy.unfulfilledMonthlyDemand.food} 🍞\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div>\r\n            <strong>🩺 Healthcare</strong>\r\n            <NeedReadout beans={beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n            <table className=\"width-100p\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Median {health_median} 🩺</td>\r\n                  <td className=\"text-center\">\r\n                    Supply: {meds.supply} 🩺 @ ${meds.avg.toFixed(2)}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    Deficit: {economy.unfulfilledMonthlyDemand.medicine} 🩺\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <div>\r\n            <strong>🏡 Housing</strong> <br/>\r\n            <NeedReadout beans={beans} need={(b) => b.housing} dire=\"homeless\" abundant=\"housed\" className=\"big\"></NeedReadout>\r\n            <table className=\"width-100p\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Median {shelter_median} 🏡</td>\r\n                  <td className=\"text-center\">\r\n                    Supply: {numDwellings} 🏡\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"pad-4p\">\r\n          <h3>Economic Health</h3>\r\n        </div> */}\r\n        <div className=\"col-2\">\r\n          <div>\r\n            <strong>💰 Wealth</strong> <br/>\r\n            {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${GetCostOfLiving(economy).toFixed(2)} <br/>\r\n            <table className=\"width-100p\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Total ${wealth_total.toFixed(2)}</td>\r\n                  <td className=\"text-center\">\r\n                    Median: ${wealth_median.toFixed(2)} \r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    Avg: ${wealth_avg.toFixed(2)}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            Top {wealthy_percentage.toFixed(1)}% of subjects own {wealthy_ownership.toFixed(1)}% of the wealth\r\n          </div>\r\n          <span>\r\n            <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n            <ul className=\"boxes\">\r\n              <li>{jobs.farmer || 0} farmers</li>\r\n              <li>{jobs.builder || 0} builders</li>\r\n              <li>{jobs.doc || 0} doctors</li>\r\n              <li>{jobs.entertainer || 0} entertainers</li>\r\n            </ul>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }","import React from 'react';\r\n\r\nexport const EscapeMenu: React.FC<{}> = (props) => {\r\n    return <div>\r\n        \r\n    </div>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\n\r\n\r\nexport const TreasuryReport: React.FC<{\r\n\r\n}> = (props) => {\r\n    const coin = useAppSelector(s => s.world.law.cash);\r\n\r\n    return <div className=\"pad-4p\">\r\n        <div>\r\n            <strong>💰 Treasury: {coin.toFixed(2)}</strong>\r\n        </div>\r\n    </div>\r\n}","import React, { useState } from \"react\";\r\nimport { Subtabs } from \"../chrome/Subtab\";\r\nimport { SecondaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { AllCrimes, CrimeData, CrimeKey, CrimePunishment, IsLaw, LawData, LawGroup, LawKey, PlayerCanSeePrereqs, PlayerKnowsPrereq, PlayerMeetsPrereqs, PrereqKey, PrereqString } from \"../simulation/Government\";\r\nimport { BeliefInventory } from \"../simulation/Player\";\r\nimport { enactLaw, repealLaw, setCrimeLegality } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { TreasuryReport } from \"../widgets/TreasuryReport\";\r\n\r\nexport const GovernmentPanel: React.FC<{\r\n}> = (props) => {\r\n    const [view, setView] = useState<LawGroup|'funds'>('Welfare');\r\n    return <div>\r\n        <div className=\"col-2\">\r\n            <h2 className=\"marg-b-0\">Utopia Government</h2>\r\n            <div>\r\n                <div className=\"horizontal blue-orange cylinder f-size-125em marg-t-20\">\r\n                    <button type=\"button\" onClick={() => setView('Welfare')} className={view === 'Welfare' ? 'active' : ''}>\r\n                        🤲 Welfare\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setView('Crime')} className={view === 'Crime' ? 'active' : ''}>\r\n                        🚨 Crime\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setView('Taxation')} className={view === 'Taxation' ? 'active' : ''}>\r\n                        💰 Taxes\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setView('funds')} className={view === 'funds' ? 'active' : ''}>\r\n                        💸 Funds\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {\r\n            view === 'funds' ? <div className=\"col-2\">\r\n                <div>\r\n                    <TreasuryReport></TreasuryReport>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </div> : view === 'Crime' ? <div>\r\n                <CrimeDetailList></CrimeDetailList>\r\n            </div> : <LawDetailList \r\n                group={view}\r\n            ></LawDetailList>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport const CrimeDetailList: React.FC<{\r\n\r\n}> = (props) => {\r\n    const topRow: CrimeKey[] = ['steal', 'rob', 'profanity'];\r\n    const bRow: CrimeKey[] = ['murder', 'hurt', 'destroy'];\r\n    return <div className=\"pad-4p\">\r\n        <strong>Criminal Laws</strong>\r\n        <div className=\"horizontal scroll\">\r\n            {\r\n                topRow.map(c => {\r\n                    return <CrimeDetail key={c} crime={c}></CrimeDetail>\r\n                })\r\n            }\r\n        </div>\r\n        <br/>\r\n        <div className=\"horizontal scroll\">\r\n            {\r\n                bRow.map(c => {\r\n                    return <CrimeDetail key={c} crime={c}></CrimeDetail>\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nconst CrimeDetail: React.FC<{\r\n    crime: CrimeKey\r\n}> = (props) => {\r\n    return <div key={props.crime}>\r\n    <div className=\"horizontal\">\r\n        <div className=\"circular\">\r\n            {CrimeData[props.crime].icon} \r\n        </div>\r\n        <div>\r\n            <strong>\r\n            {CrimeData[props.crime].name}\r\n            </strong><br/>\r\n            <small>\r\n            {CrimeData[props.crime].description}\r\n            </small>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <LegalitySwitch crime={props.crime}></LegalitySwitch>\r\n    </div>\r\n</div>\r\n}\r\nconst legalOptions: Array<{\r\n    icon: string,\r\n    text: string,\r\n    value: CrimePunishment|'none',\r\n    onClick: () => void\r\n}> = [\r\n    {\r\n        icon: '✔️',\r\n        text: 'Legal',\r\n        value: 'none',\r\n        onClick: () => {}\r\n    },\r\n    {\r\n        icon: '💸',\r\n        text: 'Fine',\r\n        value: 'fine',\r\n        onClick: () => {}\r\n    },\r\n    {\r\n        icon: '🚨',\r\n        text: 'Jail',\r\n        value: 'jail',\r\n        onClick: () => {}\r\n    },\r\n    {\r\n        icon: '☠️',\r\n        text: 'Death',\r\n        value: 'death',\r\n        onClick: () => {}\r\n    },\r\n]\r\nexport const LegalitySwitch: React.FC<{\r\n    crime: CrimeKey\r\n}> = (props) => {\r\n    const legality = useAppSelector(x => x.world.law.crimes[props.crime]);\r\n    const dispatch = useAppDispatch()\r\n    const opts = legalOptions.map(x => {\r\n        return {\r\n            ...x,\r\n            onClick: () => {\r\n                dispatch(setCrimeLegality({\r\n                    crime: props.crime,\r\n                    legality: x.value\r\n                }));\r\n            }\r\n        }\r\n    });\r\n    return <Subtabs active={legality || 'none'} options={opts}></Subtabs>\r\n}\r\n\r\nexport const LawDetailList: React.FC<{\r\n    group: LawGroup\r\n}> = (props) => {\r\n    const laws = Object.values(LawData).filter(x => x.group === props.group);\r\n    const seenBeliefs = useAppSelector(s => s.world.alien.seenBeliefs);\r\n    const beliefs = useAppSelector(s => s.world.alien.beliefInventory);\r\n    const law = useAppSelector(s => s.world.law);\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"pad-4p\">\r\n        <strong>{props.group} Laws</strong>\r\n        <div className=\"horizontal scroll\">\r\n        {\r\n            laws.map((x) => <LawFormula seenBeliefs={seenBeliefs} id={x.key} beliefs={beliefs} key={x.key} enacted={IsLaw(law, x.key)}\r\n                enactLaw={(lKey) => dispatch(enactLaw({lawKey: lKey}))} revokeLaw={(l) => dispatch(repealLaw({lawKey: l}))}>\r\n            </LawFormula>)\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport const LawFormula: React.FC<{\r\n    id: LawKey,\r\n    seenBeliefs: {[belief: string]: boolean},\r\n    beliefs: BeliefInventory[],\r\n    enacted: boolean,\r\n    enactLaw: (l: LawKey) => void\r\n    revokeLaw: (l: LawKey) => void\r\n}> = (props) => {\r\n    const law = LawData[props.id];\r\n    const canSeeName = PlayerCanSeePrereqs(law.prereqs, props.seenBeliefs);\r\n    const unlocked = PlayerMeetsPrereqs(law.prereqs, props.seenBeliefs);\r\n    return <div className=\"vertical law-formula\">\r\n        <div className=\"horizontal\">\r\n            <div className=\"circular\">\r\n                {canSeeName ? law.icon : '❔'}\r\n            </div>\r\n            <div>\r\n                <strong>\r\n                    {canSeeName ? law.name : 'Unknown'}\r\n                </strong>\r\n                <div>\r\n                    {\r\n                        canSeeName ? <small> {law.description} </small> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"vertical\">\r\n            {\r\n                law.prereqs.map((x) => {\r\n                    const has = PlayerKnowsPrereq(x, props.seenBeliefs);\r\n                    const key = PrereqKey(x);\r\n                    return !has ? <span className=\"law-formula-ingredient unknown\" key={key}>\r\n                        ❔ Unknown\r\n                    </span> : <span className=\"law-formula-ingredient\" key={key}>\r\n                        {PrereqString(x)}\r\n                    </span>\r\n                })\r\n            }\r\n        </div>\r\n        {\r\n            props.enacted ? <button className=\"callout\"  onClick={() => props.revokeLaw(props.id)}>\r\n                🗑️&nbsp;Revoke Active Law\r\n            </button> : <button className=\"callout\" disabled={!unlocked} onClick={() => props.enactLaw(props.id)}>\r\n                {\r\n                    unlocked ? '✒️' : <span className=\"grey\">🔒</span>\r\n                }\r\n                &nbsp;Enact\r\n            </button>\r\n        }\r\n        {props.children}\r\n    </div>;\r\n}","import React from 'react';\r\nimport { EmoteIcon } from '../World';\r\n\r\nexport const GreetingPanel: React.FC<{\r\n    seed: string,\r\n    changeSeed: (s: string) => void\r\n}> = (props) => {\r\n    return <div>\r\n        <div className=\"col-2\">\r\n            <div>\r\n                <h3>Welcome to the</h3>\r\n                <h2>👽 Alien 🌍 Utopia 🔬 Laboratory</h2>\r\n                <div>\r\n                    Thank you for joining the <select><option>Human</option></select> Cultivation Division of the <strong>🌌&nbsp;Galactic Xenosensation Federation!</strong> Interdimensional petri dish <span style={{whiteSpace:'nowrap'}}>#<input type=\"text\" value={props.seed} onChange={(e) => props.changeSeed(e.currentTarget.value)} maxLength={19} style={{width:'115px', fontFamily:'monospace', fontSize:'11px'}} /></span> is ready for farming.\r\n                </div>\r\n                <p>\r\n                    As a <select><option>Human Emotion Farmer</option></select>, you are required to execute the following duties:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        Construct <strong>🏠 Buildings</strong> for your <select><option>Human</option></select> subjects.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🛸 Beam In</strong> <select><option>Human</option></select> subjects for cultivation.\r\n                    </li>\r\n                    <li>\r\n                        Harvest your subject's positive <strong>{EmoteIcon['happiness']} Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Sell the Hedons on the <br/><strong>🌌 Galactic 😨 Emotion 💰 Market</strong>.\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p>\r\n                    The GXF's records indicate <select><option>Humans</option></select> are a<br/><u>mentally malleable</u> and <u>physically fragile</u> species. Try the following cultivation methods:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <strong>🛰️ Scan</strong> your subject's primitive minds for information on what pleases them.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🚿 Brainwash</strong> subjects to change their <strong>🧠&nbsp;Traits</strong>. Try to add Traits that emit more <strong>{EmoteIcon['happiness']}&nbsp;Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Avoid letting your subjects die or endure pain; this makes <strong>{EmoteIcon['unhappiness']}&nbsp;Antihedons</strong> which are less profitable.\r\n                    </li>\r\n                    <li>\r\n                        Use your knowledge of Traits to modify the farm's <strong>🗳️&nbsp;Government</strong> to maximize Hedon generation.\r\n                    </li>\r\n                    <li>\r\n                        Use the GXF's <strong>🧪 Research Lab</strong> to upgrade your farm, when stocked with <strong>👾 Abducted</strong> subjects.\r\n                    </li>\r\n                </ul>\r\n                <h3>\r\n                    🌌 Galactic Xenosensation Federation <br/>\r\n                    <div className=\"text-right\">\r\n                        <small>\r\n                        {/* <i>THE market leader in corporeal sensations.</i> */}\r\n                        <i>1 trillion sensations. 100% organic. 100% gourmet.</i>\r\n                        </small>\r\n                    </div>\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\n\r\nexport const LoadGameMenu: React.FC<{}> = (props) => {\r\n    return <div>\r\n        \r\n    </div>\r\n}","import React, { useState } from 'react';\r\nimport { GameStorageInstance } from '../GameStorage';\r\n\r\nexport const MainMenu: React.FC<{\r\n    startGame: () => void,\r\n    loadGame: (slot:number) => void\r\n}> = (props) => {\r\n    const [view, setView] = useState<'main'|'showslots'>('main');\r\n    const continueID = GameStorageInstance.HasContinueGame();\r\n    const slots = GameStorageInstance.GetGameSlots();\r\n    return <div>\r\n        <h1 className=\"text-center\">👽 Alien 🌍 Utopia 🔬 Lab</h1>\r\n        {\r\n            (view === 'main') ? <div>\r\n                {\r\n                    continueID != null ? <div className=\"text-center\">\r\n                        <button className=\"callout button f-size-15em\" onClick={() => props.loadGame(continueID)}>\r\n                        🧫 Continue Game\r\n                        </button>\r\n                    </div>: null\r\n                }\r\n                <div className=\"text-center\">\r\n                    <button className=\"callout button f-size-15em\" onClick={() => props.startGame()}>\r\n                    🛸 Start New Game\r\n                    </button>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <button className=\"callout button f-size-15em\" onClick={() => setView('showslots')} disabled={slots.every(x => x.brief == null)}>\r\n                    🗂️ Load Game\r\n                    </button>\r\n                </div>\r\n            </div> : <div className=\"card-parent vertical load-menu pad-4p\">\r\n                {\r\n                    slots.map(x => <div key={x.id} className=\"card marg-b-20\">\r\n                        <button disabled={x.brief == null} className=\"\" onClick={() => {\r\n                            if (x.brief)\r\n                                props.loadGame(x.id);\r\n                        }}>\r\n                        {\r\n                            x.brief ? <span className=\"f-size-125em\">\r\n                                <strong>{x.brief.Name}</strong>\r\n                                &nbsp;<span>Year {x.brief.Age.year}</span>\r\n                                &nbsp;<span>{x.brief.Population} 😐</span>\r\n                            </span> : <span className=\"f-size-125em\">\r\n                                Slot {x.id}\r\n                            </span> \r\n                        }\r\n                        </button>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nexport class RobotArm extends React.Component<{\r\n    tool: string,\r\n    classN: string\r\n}, {\r\n\r\n}> {\r\n    render(){\r\n        const style = {};\r\n        return <svg width=\"100\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\" style={style} className={this.props.classN+\" robot-arm\"}>\r\n        <g>\r\n         <title>robotarm</title>\r\n         <rect fill=\"transparent\" id=\"canvas_background\" height=\"302\" width=\"102\" y=\"-1\" x=\"-1\"/>\r\n         <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\r\n          <rect fill=\"url(#gridpattern)\" strokeWidth=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\"/>\r\n         </g>\r\n        </g>\r\n        <g>\r\n         <title>Layer 1</title>\r\n         <rect id=\"svg_2\" height=\"200\" width=\"48\" y=\"91.63545\" x=\"25\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#BBBBBB\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_1\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n         <ellipse ry=\"20\" rx=\"20\" id=\"svg_3\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_4\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n        <ellipse ry=\"20\" rx=\"20\" id=\"svg_5\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\">{this.props.tool}</ellipse>\r\n            \r\n        </g><text y=\"250\" x=\"-20\" fontSize=\"4em\">{this.props.tool}</text>\r\n       </svg>\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { IPlayerData, IPlayerTechProgress, ITechInfo, Tech, TechData, TechProgress } from \"../simulation/Player\";\r\nimport { release, setResearch } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { RobotArm } from \"../widgets/RobotArm\";\r\nimport './research.css';\r\n\r\nfunction renderTech(tech: ITechInfo, techProgress: TechProgress, currentlyResearchingTech: Tech|undefined, setResearch: (t: Tech) => void){\r\n  const unstarted = techProgress[tech.tech] == null;\r\n  const progress = unstarted ? 0 : techProgress[tech.tech].researchPoints;\r\n  const total = tech.techPoints;\r\n  const style = {width: (Math.min(progress/total*100, 100))+'%'};\r\n  const complete = progress >= total;\r\n  const isCurrent = currentlyResearchingTech === tech.tech;\r\n  const state: '⭕️'|'✅'|'🔬' = complete ? '✅' : isCurrent ? '🔬' : '⭕️';\r\n  const rootClassName = isCurrent ? 'active': 'inactive';\r\n  return <div className={\"card-parent \"+rootClassName} key={tech.tech}>\r\n    <button className=\"card button\" onClick={() => setResearch(tech.tech)}>\r\n      <strong>{tech.name}</strong>\r\n      <strong className=\"pull-r f-size-125em\">{state}</strong>\r\n      <div>\r\n        {tech.description}\r\n      </div>      \r\n      <div className=\"bar f-size-12 h-12\">\r\n          <div className=\"bar-inner text-center\" style={style}>\r\n          </div>\r\n          {progress}/{total} tech\r\n      </div>\r\n    </button>\r\n  </div>\r\n}\r\n\r\nconst tools = [\r\n'📡',\r\n'🗜️',\r\n'🔬',\r\n'💉',\r\n'🔎',\r\n'🧼',\r\n'🧲',\r\n'🎥',\r\n'🔧',\r\n];\r\nfunction loop(lastI: number){\r\n  let i = lastI + 1;\r\n  if (i === tools.length)\r\n    i = 0;\r\n  return i;\r\n}\r\nexport const ResearchPanel: React.FC<{}> = () => {\r\n  const abductedBeanKeys = useAppSelector(x => x.world.alien.abductedBeanKeys);\r\n  const techProgress = useAppSelector(x => x.world.alien.techProgress);\r\n  const currentTech = useAppSelector(x => x.world.alien.currentlyResearchingTech);\r\n  const dispatch = useAppDispatch();\r\n  const [tool1, setTool1] = useState(0);\r\n  const [tool2, setTool2] = useState(3);\r\n  const [tool3, setTool3] = useState(2);\r\n  const [tool4, setTool4] = useState(1);\r\n  useEffect(() => {\r\n    const interval = window.setInterval(() => {\r\n      if (Math.random() < .51)\r\n        setTool1(loop(tool1));\r\n      if (Math.random() < .51)\r\n        setTool2(loop(tool2));\r\n      if (Math.random() < .51)\r\n        setTool3(loop(tool3));\r\n      if (Math.random() < .51)\r\n        setTool4(loop(tool4));\r\n    }, 1000);\r\n    return () => {\r\n      window.clearInterval(interval);\r\n    }\r\n  });\r\n  const techs = Object.values(TechData);\r\n  return <div>\r\n      <div className=\"col-2\">\r\n        <div>\r\n          <h2>Research 🧪 Lab</h2>\r\n          <div className=\"vertical\">\r\n            {\r\n              techs.map((t) => renderTech(t, techProgress, currentTech, (t) => dispatch(setResearch({t: t}))))\r\n            }\r\n          </div>\r\n        </div>\r\n      <div className=\"vertical\">\r\n        <div>\r\n          <div className=\"robot\">\r\n            🤖\r\n            <RobotArm classN=\"far-left\" tool={tools[tool1]}></RobotArm>\r\n            <RobotArm classN=\"left\" tool={tools[tool2]}></RobotArm>\r\n            <RobotArm classN=\"near-right\" tool={tools[tool3]}></RobotArm>\r\n            <RobotArm classN=\"far-right\" tool={tools[tool4]}></RobotArm>\r\n          </div>\r\n        </div>\r\n        <div className=\"h-42em\">\r\n          {\r\n            abductedBeanKeys.map((b) => {\r\n              return <span key={b} className=\"victim bean triangle shake\">😨</span>\r\n            })\r\n          }\r\n        </div>\r\n\r\n        <div className=\"text-center\">\r\n          Currently probing {abductedBeanKeys.length} beings for {abductedBeanKeys.length} tech a day\r\n          <p>\r\n            <small>1 tech per research subject per day</small>\r\n          </p>\r\n        </div>\r\n        {\r\n          abductedBeanKeys.length > 0 ? <div className=\"text-right\">\r\n            <ConfirmButton className=\"callout\" onConfirm={() => {dispatch(release())}} confirmText=\"-1 Research Subject?\">\r\n            🎈 Release Research Subject\r\n            </ConfirmButton>\r\n          </div> : null\r\n        }\r\n      </div>\r\n    </div>\r\n    <div>\r\n\r\n    </div>\r\n  </div>\r\n}","import React, { ReactElement, useState } from \"react\";\r\nimport { BeliefsAll, IBeliefData, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { BeliefWidget } from \"./BeliefRow\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\n\r\nexport const TraitsReport: React.FC = () => {\r\n  const beliefInventory = useAppSelector(x => x.world.alien.beliefInventory);\r\n  const seenBeliefs = useAppSelector(x => x.world.alien.seenBeliefs);\r\n  const [hoveredBelief, setHoveredBelief] = useState<TraitBelief>();\r\n  const beliefs: IBeliefData[] = [];\r\n  Object.keys(seenBeliefs).forEach((key) => {\r\n    if (SecondaryBeliefData[key as TraitBelief] != null){\r\n      beliefs.push(SecondaryBeliefData[key as TraitBelief]);\r\n    }\r\n  });\r\n  beliefs.sort((a, b) => a.noun.localeCompare(b.noun));\r\n  return (\r\n    <div className=\"vertical\">\r\n      <div className=\"pad-4p\">\r\n        <h2>Subject 🧠 Traits</h2>\r\n      </div>\r\n      <div className=\"col-2-30-60\">\r\n        <div>\r\n          <div className=\"scroll\">\r\n            <div className=\"scoll-sticky-h\">\r\n              <strong>\r\n                <span className=\"trait-gem\"></span>\r\n                Trait Gems\r\n              </strong>\r\n            </div>\r\n            {\r\n              beliefInventory.length < 1 ? <div>\r\n                No Trait Gems! <br/>\r\n                😵 Brainwash your subjects  <br/>\r\n                or buy from the 🛍️ Market\r\n                </div> : beliefInventory.map((x) => <div key={x.trait}>\r\n                      <div>\r\n                        <strong>\r\n                          {SecondaryBeliefData[x.trait].icon} {SecondaryBeliefData[x.trait].noun}\r\n                        </strong>\r\n                      </div>\r\n                      <div>\r\n                        This can be implanted {x.gems} more times\r\n                      </div>\r\n                    </div>)\r\n            }\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"modal-scroll-v\">\r\n            <div className=\"sticky-t-0\">\r\n              <strong>Discovered {beliefs.length} of {BeliefsAll.length} Traits</strong>\r\n            </div>\r\n            {\r\n              beliefs.length < 1 ? <div>\r\n                No Traits Scanned! <br/>\r\n                🛰️ Scan some of your subjects.\r\n              </div> : beliefs.map((x) => <BeliefWidget key={x.noun} data={x} cost={0}\r\n              titleView={<strong>{x.noun}</strong>}\r\n              bottomView={<span></span>}\r\n            ></BeliefWidget>)\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { UFO } from \"../simulation/City\";\r\nimport { hex_to_pixel, origin_point, transformPoint } from \"../simulation/Geography\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { WorldSfxInstance } from \"../WorldSound\";\r\n\r\n\r\nexport const AnimatedUFO2:  React.FC<{\r\n    ufoKey: number,\r\n    cityKey: number\r\n}> = (props) => {\r\n    const [showBeam, setShowBeam] = useState(false);\r\n    const city = useAppSelector(state => state.world.cities.byID[props.cityKey]);\r\n    const ufo = useAppSelector(state => state.world.ufos.byID[props.ufoKey]);\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setShowBeam(true);\r\n            WorldSfxInstance.play('teleport');\r\n            setTimeout(() => {\r\n                setShowBeam(false)\r\n            }, 1800);\r\n        }, 1800);\r\n    }, []);\r\n    let style = {\r\n        ...transformPoint(hex_to_pixel(city.district_hex_size, city.petriOrigin, ufo.hex))\r\n    };\r\n    return <span style={style} className=\"ufo\">\r\n        🛸\r\n        {showBeam ? <span className=\"beam\"></span> : null}\r\n    </span>\r\n}","import { ISeller } from \"./Economy\";\r\n\r\nexport type EnterpriseType = 'company'|'co-op'|'commune';\r\nexport const EnterpriseTypes: EnterpriseType[] = ['company','co-op','commune'];\r\nexport const EnterpriseTypeIcon: {[e in EnterpriseType]: string} = {\r\n    'company': '🎩', \r\n    'co-op': '🤝', \r\n    'commune': '⚒️'\r\n};\r\n\r\nexport interface IEnterprise extends ISeller{\r\n    key: number;\r\n    cityKey: number;\r\n    buildingKey: number;\r\n    enterpriseType: EnterpriseType;\r\n    ownerBeanKey?: number;\r\n}","import React from \"react\";\r\nimport { PlayerResources, triadToString } from \"../Game\";\r\n\r\nexport class CostSmall extends React.Component<{\r\n    cost: PlayerResources,\r\n    rider?: string,\r\n    qty?: number\r\n}>{\r\n\r\n    render(){\r\n        return <small>\r\n            {triadToString(this.props.cost, '-', this.props.qty)} {this.props.rider}\r\n        </small>\r\n    }\r\n}","import React from \"react\";\r\nimport { DwellingKindToIcon } from \"../simulation/RealEstate\";\r\nimport { toTitleCase } from \"../simulation/Utils\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\n\r\nexport const DwellingList: React.FC<{\r\n    dwellingKeys: number[]\r\n}> = (props) => {\r\n    const dwellings = useAppSelector(state => props.dwellingKeys.map(y => state.world.dwellings.byID[y]));\r\n    const beanNames = useAppSelector(state => dwellings.reduce((x, d) => {\r\n        if (d.occupantKey != null)\r\n            x[d.key] = state.world.beans.byID[d.occupantKey].name;\r\n        return x;\r\n    }, {} as {[dKey: number]: string}))\r\n    return <div>\r\n        <div>\r\n            <strong>\r\n                Housing:\r\n            </strong>\r\n        </div>\r\n        {\r\n            dwellings.map((x,i) => <div key={x.key}>\r\n                {DwellingKindToIcon[x.kind]} {toTitleCase(x.kind)} #{i+1} {beanNames[x.key] || ''}\r\n            </div>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../i18n/text\";\r\nimport { Subtabs } from \"../chrome/Subtab\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { BuildingIcon, BuildingJobIcon, BuildingToGood, BuildingTypes, HexPoint, IDistrict } from \"../simulation/Geography\";\r\nimport { EnterpriseType, EnterpriseTypeIcon, EnterpriseTypes, IEnterprise } from \"../simulation/Institutions\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\nimport { BuildingJobs, BuildingNumOfOpenJobs, IBuilding } from \"../simulation/RealEstate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState, selectSelectedBuilding, selectSelectedCity } from \"../state/state\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { beam, build, changeEnterprise, fireBean, selectCity, upgrade, upgradeDistrict, upgradeLoft } from \"../state/features/world.reducer\";\r\nimport { doSelectCity, doSelectDistrict, doSelectNone } from \"../state/features/selected.reducer\";\r\nimport { BuildingJobSlot } from \"../simulation/Occupation\";\r\nimport { GoodIcon, TraitGood } from \"../World\";\r\nimport { DwellingList } from \"./DwellingList\";\r\n\r\nexport const BeamButton: React.FC<{\r\n    city: number,\r\n    hex: HexPoint,\r\n    difficulty: IDifficulty\r\n}> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"card-parent\">\r\n    <button className=\"card button\" type=\"button\" onClick={() => dispatch(beam({cityKey: props.city, where: props.hex}))}>\r\n        🛸 Beam In New Subject\r\n        <CostSmall cost={props.difficulty.cost.hex.beam} rider=\"+Subject\"></CostSmall>\r\n    </button>\r\n</div>\r\n}\r\nexport const BuildPanel: React.FC<{\r\n    cityKey: number,\r\n    selectedLotKey: number|undefined,\r\n    district: IDistrict,\r\n    difficulty: IDifficulty,\r\n}> = (props) => {\r\n    const districtLots = useAppSelector(x => props.district.lots.map(y => x.world.lots.byID[y]));\r\n    const targetLot = props.selectedLotKey ?? districtLots.find(z => z.buildingKey == null)?.key;\r\n    const dispatch = useAppDispatch();\r\n    const eHex = props.difficulty.cost.emptyHex;\r\n    if (targetLot != null){\r\n        return <div>\r\n\r\n        <h3>Build:</h3>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'house'}))}>\r\n                {BuildingIcon['house']} House\r\n                <CostSmall cost={eHex.build.house}></CostSmall>\r\n            </button>\r\n        </div>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'farm'}))}>\r\n                {BuildingIcon['farm']} Farm\r\n                <CostSmall cost={eHex.build.farm}></CostSmall>\r\n            </button>\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'hospital'}))}>\r\n                {BuildingIcon['hospital']} Hospital\r\n                <CostSmall cost={eHex.build.hospital}></CostSmall>\r\n            </button>\r\n        </div>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'theater'}))}>\r\n                {BuildingIcon['theater']} Theater\r\n                <CostSmall cost={eHex.build.theater}></CostSmall>\r\n            </button>\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'park'}))}>\r\n                {BuildingIcon['park']} Park\r\n                <CostSmall cost={eHex.build.park}></CostSmall>\r\n            </button>\r\n        </div>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'jail'}))}>\r\n                {BuildingIcon['jail']} Jail\r\n                <CostSmall cost={eHex.build.jail}></CostSmall>\r\n            </button>\r\n            <button className=\"card button\" type=\"button\" onClick={\r\n                () => dispatch(build({city: props.cityKey, lot: targetLot, what: 'graveyard'}))}>\r\n                {BuildingIcon['graveyard']} Graveyard\r\n                <CostSmall cost={eHex.build.graveyard}></CostSmall>\r\n            </button>\r\n        </div>\r\n        </div>\r\n    } else {\r\n        return <div></div>\r\n    }\r\n}\r\n\r\nexport const DistrictTypeIcon = {\r\n    urban: '⛲',\r\n    rural: '📪',\r\n    fallow: '🌳',\r\n    nature: '🏔️'\r\n}\r\nconst DistrictTypeText = {\r\n    urban: 'Urban',\r\n    rural: 'Rural',\r\n    fallow: 'Empty',\r\n    nature: 'Nature'\r\n}\r\n\r\nexport const HexPanel: React.FC<{\r\n    difficulty: IDifficulty\r\n}> = (props) => {\r\n    const districtKey = useSelector((state: RootState) => state.selected.selectedDistrictKey);\r\n    const district = useAppSelector((x) => districtKey != null ? x.world.districts.byID[districtKey]: undefined);\r\n    const lotKey = useAppSelector((x) => x.selected.selectedLotKey);\r\n    const building = useSelector(selectSelectedBuilding);\r\n    const city = useSelector(selectSelectedCity);\r\n    const dispatch = useAppDispatch();\r\n    if (city && district == null){\r\n        return <div></div>\r\n    }\r\n    else if (city && building && district){\r\n        return <HexBuildingPanel building={building} city={city} hex={district} difficulty={props.difficulty}></HexBuildingPanel>\r\n    } else if (city && district){\r\n        return <div>\r\n        <div>\r\n            <strong>{DistrictTypeIcon[district.kind]} {DistrictTypeText[district.kind]} District</strong> in <strong>{city.name}</strong>\r\n            <button type=\"button\" className=\"pull-r\" onClick={() => dispatch(doSelectCity({cityKey: city.key}))} >❌</button>\r\n        </div>\r\n        {\r\n            lotKey != null ? <span>Lot #{lotKey+1}</span> : <br/>\r\n        }\r\n        {\r\n            district.kind === 'fallow' ? <div><div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={\r\n                    () => dispatch(upgradeDistrict({city: city.key, district: district.key}))}>\r\n                    🚧 Develop\r\n                    <CostSmall cost={props.difficulty.cost.hex.fallow_2_rural}></CostSmall>\r\n                </button>\r\n            </div></div> : district.kind === 'rural' ? <div><div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={\r\n                    () => dispatch(upgradeDistrict({city: city.key, district: district.key}))}>\r\n                    🏗️ Urbanize\r\n                    <CostSmall cost={props.difficulty.cost.hex.rural_2_urban}></CostSmall>\r\n                </button>\r\n            </div></div> : null\r\n        }\r\n\r\n        <BuildPanel cityKey={city.key} district={district} selectedLotKey={lotKey} difficulty={props.difficulty}></BuildPanel>\r\n\r\n        <h3>Beings:</h3>\r\n        <BeamButton difficulty={props.difficulty} hex={district} city={city.key}></BeamButton>\r\n    </div>\r\n    } else {\r\n        return <div></div>\r\n    }\r\n}\r\n\r\nexport const HexBuildingPanel: React.FC<{\r\n    building: IBuilding,\r\n    difficulty: IDifficulty,\r\n    city: ICity,\r\n    hex: HexPoint\r\n}> = (props) => {\r\n    const b = props.building;\r\n    const enterprise = useAppSelector(s => b.enterpriseKey != null ? s.world.enterprises.byID[b.enterpriseKey]: undefined);\r\n    const good = BuildingToGood[b.type];\r\n    const dispatch = useAppDispatch();\r\n    const hasJobs = BuildingJobs[b.type] > 0;\r\n    const upgraded = props.building.upgradedJobs || props.building.upgradedStorage;\r\n    return <div>\r\n        <div>\r\n            <strong>{keyToName[b.type]}</strong>\r\n            <button type=\"button\" className=\"pull-r\" onClick={() => dispatch(doSelectNone())}>❌</button>\r\n        </div>\r\n        <div className=\"text-right\">\r\n            <small>\r\n            in&nbsp;<strong>{props.city.name}</strong>\r\n            </small>\r\n        </div>\r\n    {\r\n        (enterprise != null && good != null) ? <div>\r\n            <small>\r\n                ${enterprise.cash?.toFixed(2)} from sales today\r\n            </small>\r\n            <EnterpriseListings enterpriseKey={enterprise.key} good={good} buildingKey={b.key}></EnterpriseListings>\r\n        </div> : null\r\n    }\r\n    {\r\n        upgraded && hasJobs ? <div>\r\n            {renderDensityWarning(b.type)}\r\n        </div> : null\r\n    }\r\n    {\r\n        hasJobs && enterprise != null ?  <EnterpriseTypePicker \r\n            enter={enterprise} \r\n            changeEnterprise={(t) => dispatch(changeEnterprise({enterpriseKey: b.key, newType: t}))}>\r\n            </EnterpriseTypePicker> : null\r\n    }\r\n    {\r\n        hasJobs ? <WorkerList cityKey={props.city.key} building={b}></WorkerList> : null\r\n    }\r\n    {\r\n        !hasJobs ? null : <div>\r\n            <small>\r\n            This {keyToName[b.type]} can support {BuildingNumOfOpenJobs(b)} more jobs.\r\n            {\r\n                upgraded ? null : <span><br/>Add Worker Space to add 3 more job slots.</span>\r\n            }\r\n            </small>\r\n        </div>\r\n    }\r\n    {/* {renderDensityWarning(b.type)} */}\r\n    {\r\n        b.upgradedJobs || b.upgradedStorage || !hasJobs ? null : <div><div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => dispatch(upgrade({buildingKey: b.key}))}>\r\n                    🛠️ Add Worker Space\r\n                    <CostSmall cost={props.difficulty.cost.hex.upgrade}></CostSmall>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n    {\r\n        b.upgradedJobs || b.upgradedStorage || !hasJobs ? null : <div><div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => dispatch(upgrade({buildingKey: b.key}))}>\r\n                    📦 Add Storage Space\r\n                    <CostSmall cost={props.difficulty.cost.hex.upgrade}></CostSmall>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n    {\r\n        b.dwellingKeys != null && b.dwellingKeys.length ? <DwellingList dwellingKeys={b.dwellingKeys}></DwellingList> : null\r\n    }\r\n    {\r\n        b.upgradedLoft || !hasJobs ? null : <div><div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => dispatch(upgradeLoft({buildingKey: b.key}))}>\r\n                    🛌 Add Loft Housing\r\n                    <CostSmall cost={props.difficulty.cost.hex.add_loft}></CostSmall>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n    <BeamButton city={props.city.key} difficulty={props.difficulty} hex={props.hex}></BeamButton>\r\n    </div>\r\n}\r\n\r\nconst renderDensityWarning = (typ: BuildingTypes) => {\r\n    if (typ === 'house')\r\n    return <>\r\n        <div className=\"text-center\">\r\n        <small>\r\n        🐮 Parochial subjects may emit 👎<br/>when living in dense buildings\r\n        </small>\r\n    </div> \r\n    <div className=\"text-center\">\r\n        <small>\r\n        🍸 Cosmopolitan subjects may emit 👎<br/>when living in small buildings\r\n        </small>\r\n    </div>\r\n    </>;\r\n    else return <div>\r\n\r\n    </div>\r\n}\r\n\r\nexport const WorkerList: React.FC<{\r\n    cityKey: number,\r\n    building: IBuilding\r\n}> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const beans = useAppSelector(x => props.building.employeeBeanKeys.map((k) => x.world.beans.byID[k]));\r\n    const enterprise = useAppSelector(s => s.world.enterprises.byID[props.building.key]);\r\n    if (beans.length < 0) {\r\n        return <div>No Workers</div>\r\n    }\r\n    return <div>\r\n    <strong>Workers:</strong>\r\n    {\r\n        beans.map((x) => <div key={x.key}>\r\n            {BuildingJobIcon[props.building.type]} {x.name} {enterprise && enterprise.enterpriseType === 'company' && x.key === enterprise.ownerBeanKey ? '🎩' : ''}\r\n            <button title=\"Fire\" className=\"callout marg-0\" onClick={() => x ? dispatch(fireBean({cityKey: props.cityKey, beanKey: x.key})) : null}>\r\n                🔥\r\n            </button>\r\n        </div>)\r\n    }\r\n</div>\r\n}\r\nexport const EnterpriseTypePicker: React.FC<{\r\n    enter: IEnterprise,\r\n    changeEnterprise: (newType: EnterpriseType) => void,\r\n}> = (props) => {\r\n    const options = EnterpriseTypes.map((x) => {\r\n        return {\r\n            icon: EnterpriseTypeIcon[x],\r\n            text: x[0].toUpperCase()+x.substring(1),\r\n            value: x,\r\n            onClick: () => {\r\n                props.changeEnterprise(x);\r\n            }\r\n        }\r\n    }); \r\n    return <Subtabs active={props.enter.enterpriseType} options={options}></Subtabs>\r\n}\r\n\r\nexport const EnterpriseListings: React.FC<{\r\n    enterpriseKey: number,\r\n    buildingKey: number,\r\n    good: TraitGood\r\n}> = (props) => {\r\n    const listings = useAppSelector(s => s.world.economy.market.listings[props.good]);\r\n    const building = useAppSelector(s => s.world.buildings.byID[props.buildingKey]);\r\n    return <div className=\"horizontal\">\r\n        {\r\n            listings.filter(y => y.sellerEnterpriseKey === props.enterpriseKey).map((x,i) => <div key={i}>\r\n                {x.quantity} {GoodIcon[props.good]} @ ${x.price.toFixed(2)}\r\n            </div>)\r\n        }\r\n        <div>\r\n            📦 Storage x{building.upgradedStorage ? 20 : 10}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nfunction HexStringToHex(hex: string): HexPoint {\r\n    const split = hex.split(',');\r\n    return {\r\n        q: +split[0],\r\n        r: +split[1]\r\n    }\r\n}\r\n","\r\nimport React, { ReactElement } from \"react\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { BuildingIcon, hex_directions, transformPoint, hex_to_pixel, origin_point, HexPoint, BuildingJobIcon, UpgradedBuildingIcon, ILot, BuildingTypes, BuildingToGood, polarToPoint } from \"../simulation/Geography\";\r\nimport { BuildingJobSlot } from \"../simulation/Occupation\";\r\nimport { IBuilding } from \"../simulation/RealEstate\";\r\nimport { build } from \"../state/features/world.reducer\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { GoodIcon, TraitGood } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport './Building.css';\r\n\r\nconst slot_size = {\r\n    x: 25,\r\n    y: 25\r\n}\r\nexport function getSlotOffset(direction: HexPoint){\r\n    return hex_to_pixel(slot_size, origin_point, direction);\r\n}\r\nexport function getRandomSlotOffset(seed: string){\r\n    return getSlotOffset(GetRandom(seed, hex_directions));\r\n}\r\nconst hexDirectionToJobSlot: {[key: number]: number} = {\r\n    2: 0,\r\n    0: 1,\r\n    4: 2,\r\n    1: 3,\r\n    5: 4,\r\n    3: 5,\r\n}\r\n\r\nexport const BuildingToJobIcon: {[type in BuildingTypes]: string} = {\r\n    'farm':'🪕',\r\n    'house':'🧹',\r\n    'hospital':'🩺',\r\n    'church':'📿',\r\n    'theater':'👘',\r\n    'jail':'🚨',\r\n    'graveyard':'📿',\r\n    'park':'🎒',\r\n    'nature': '🎒'\r\n};\r\n\r\nexport const PetriGoods: React.FC<{\r\n    goodType: TraitGood,\r\n    enterpriseKey: number\r\n}> = (props) => {\r\n    const quantity = useAppSelector(state => state.world.economy.market.listings[props.goodType].filter(\r\n        x => x.sellerEnterpriseKey === props.enterpriseKey).reduce(\r\n        (sum, l) => sum + l.quantity, 0)\r\n    );\r\n    if (quantity < 1)\r\n        return null;\r\n    else {\r\n        const is: {row: number, col: number}[] = [];\r\n        for (let i = 0; i < quantity; i++) {\r\n            is.push({\r\n                row: Math.floor(i/2),\r\n                col: i % 2\r\n            });\r\n        }\r\n        return <>\r\n            {\r\n                is.map((i, ii) => <text x={270+(i.col*-12)+\"px\"} y={(85+(i.row*-12))+\"px\"} style={{fontSize:'11px'}} key={ii}>{GoodIcon[props.goodType]}</text>)\r\n            }\r\n        </>;\r\n    }\r\n}\r\nexport const PetriBuilding: React.FC<{\r\n    lotKey: number\r\n}> = (props) => {\r\n    const lot: ILot = useAppSelector(state => state.world.lots.byID[props.lotKey]);\r\n    const building: IBuilding|undefined = useAppSelector(state => lot.buildingKey != null ? state.world.buildings.byID[lot.buildingKey]: undefined);\r\n    if (building){\r\n        const good = BuildingToGood[building.type];\r\n        const upgraded = building.upgradedJobs || building.upgradedStorage;\r\n        const center = {x: 280, y: 77.859};\r\n        return <>\r\n        <text x={center.x} y={center.y} style={{fontSize:'36px'}}>{upgraded ? UpgradedBuildingIcon[building.type] : BuildingIcon[building.type]}</text>\r\n        {\r\n            building.employeeBeanKeys.map((y,i) => <text x=\"325px\" y={(85+(i*-14))+\"px\"} style={{fontSize:'11px'}} key={y}>{BuildingToJobIcon[building.type]}</text>)\r\n        }\r\n        {(building.enterpriseKey != null && good) ? <PetriGoods enterpriseKey={building.enterpriseKey} goodType={good}></PetriGoods> : null}\r\n        {\r\n            building.interredBeanKeys != null ? building.interredBeanKeys.map((x,i) => {\r\n                const p = polarToPoint({r: 40, az: (Math.PI/2) + (Math.PI*2*i/6)})\r\n                return <text x={center.x+p.x+10} y={center.y+p.y-10} style={{fontSize:'11px'}} key={x}>⚰️</text>\r\n            }) : null\r\n        }\r\n    </>\r\n    }\r\n    else \r\n        return <text x=\"280.931px\" y=\"77.859px\" style={{fontSize:'36px'}}>{lot.kind === 'rural' ? '🌼' : '🚏'}</text>\r\n}\r\n\r\nexport const UIBuilding: React.FC<{\r\n    building: IBuilding,\r\n    style: React.CSSProperties,\r\n    getStyle: (h: HexPoint) => React.CSSProperties\r\n}> = (props) => {\r\n    const upgraded = props.building.upgradedJobs || props.building.upgradedStorage;\r\n    return <div key={props.building.type+props.building.key} style={props.style} \r\n    className={\"building \"+props.building.type}>\r\n    {upgraded ? UpgradedBuildingIcon[props.building.type] : BuildingIcon[props.building.type]}\r\n    <UIBuildingSlots building={props.building} getStyle={props.getStyle}></UIBuildingSlots>\r\n    {props.children}\r\n    </div>\r\n}\r\nexport const UIBuildingSlots: React.FC<{\r\n    building: IBuilding,\r\n    getStyle: (h: HexPoint) => React.CSSProperties\r\n}> = (props) => {\r\n    return <>{hex_directions.map((d, i: number) => {\r\n        const jobSlot: BuildingJobSlot = hexDirectionToJobSlot[i];\r\n        const hasJob = props.building.employeeBeanKeys[jobSlot] != null;\r\n        return <span key={i} className=\"slot\" style={props.getStyle(d)}>\r\n            {hasJob ? BuildingJobIcon[props.building.type] : null}\r\n        </span>\r\n    })}</>\r\n}","import React, { useRef } from \"react\";\r\nimport { DistrictTypeIcon } from \"../right-panel/HexPanel\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { transformPoint } from \"../simulation/Geography\";\r\nimport { IBuilding } from \"../simulation/RealEstate\";\r\nimport { doSelectDistrict, doSelectLot } from \"../state/features/selected.reducer\";\r\nimport { magnetChange, selectBuildingsByCity } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { PetriBuilding, UIBuilding } from \"./Building\";\r\nimport { hex_style } from \"./WorldTile\";\r\n\r\nexport const PetriLot: React.FC<{\r\n    cityKey: number,\r\n    districtKey: number,\r\n    lotKey: number,\r\n    lotDrawn: string,\r\n    className: string\r\n}> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const selected = useAppSelector(state => state.selected.selectedLotKey === props.lotKey);\r\n\r\n    return <g className={\"lot \"+ props.className + (selected ? \" selected\": \"\")} transform=\"matrix(1.21104,0,0,0.901051,-221.832,-145.114)\" onClick={(e) => {dispatch(doSelectLot({cityKey: props.cityKey, district: props.districtKey, lot: props.lotKey})); e.preventDefault();return false;}}>\r\n        <path d={props.lotDrawn} />\r\n    </g>\r\n}\r\n\r\nexport const PetriHex: React.FC<{\r\n    cityKey: number,\r\n    districtKey: number\r\n}> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const district = useAppSelector(state => state.world.districts.byID[props.districtKey]);\r\n    const selected = useAppSelector(state => state.selected.selectedDistrictKey === props.districtKey);\r\n    const extraClasses = selected ? 'hex-selected' : ''; \r\n    return <div className={\"hex \"+extraClasses}\r\n        key={props.districtKey}\r\n        style={{ ...hex_style, ...transformPoint(district.point) }}\r\n        onMouseEnter={(e) => { dispatch(magnetChange({cityKey: props.cityKey, px: district.point})) }}\r\n        onClick={(e) => {\r\n            if (!e.isDefaultPrevented()){\r\n                dispatch(doSelectDistrict({cityKey: props.cityKey, district: props.districtKey})); \r\n                e.stopPropagation(); \r\n                return false;\r\n            }\r\n        }\r\n        }>\r\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 104 120\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" style={{position:'absolute',left:'0%',top:'0%',opacity:0.5}} className=\"svg-hex\">\r\n            <g transform=\"matrix(1,0,0,1,-233.288,0)\">\r\n            {\r\n            (district.kind === 'fallow') ? <g id=\"rural-circle-120\" transform=\"matrix(0.990588,0,0,1.33139,453.063,64.7779)\">\r\n                    <g id=\"circle\" transform=\"matrix(1.0095,0,0,0.751097,-457.368,-48.6545)\">\r\n                        <circle className=\"district-circle\"  cx=\"285.248\" cy=\"60.588\" r=\"17.271\"/>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"265.931px\" y=\"77.859px\" style={{fontSize:'46.631px'}}>🌳</text>\r\n                    </g>\r\n                </g>: (district.kind === 'rural') ? <g id=\"rural-circle-120\" transform=\"matrix(0.990588,0,0,1.33139,453.063,64.7779)\">\r\n                    <g transform=\"matrix(1.0095,0,0,0.751097,-457.368,-48.6545)\">\r\n                        <path className=\"district-circle\" d=\"M285.25,0L285.251,43.341M300.181,69.173L337.211,89.968L300.181,69.173ZM270.408,69.173L233.288,90.21M285.248,43.317C294.78,43.317 302.519,51.056 302.519,60.588C302.519,70.12 294.78,77.859 285.248,77.859C275.716,77.859 267.977,70.12 267.977,60.588C267.977,51.056 275.716,43.317 285.248,43.317Z\" />\r\n                    </g>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"rural_3\" lotKey={district.lots[2]} lotDrawn=\"M43.3,112.51L43.301,142.954L43.3,142.954C35.334,142.954 28.868,149.421 28.868,157.387C28.868,160.061 29.596,162.566 30.866,164.714L6.474,178.584C2.37,171.965 0,164.162 0,155.81C0,131.912 19.402,112.51 43.3,112.51L43.3,112.51Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"rural_2\" lotKey={district.lots[1]} lotDrawn=\"M55.735,164.713L80.126,178.583C72.489,190.9 58.846,199.11 43.3,199.11C27.754,199.11 14.111,190.9 6.474,178.584L30.866,164.714C33.378,168.965 38.009,171.819 43.3,171.819C48.592,171.819 53.223,168.964 55.735,164.713ZM0,155.81C0,155.81 0,155.81 0,155.81Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"rural_1\" lotKey={district.lots[0]} lotDrawn=\"M43.3,112.51C67.198,112.51 86.6,131.912 86.6,155.81C86.6,164.162 84.23,171.965 80.126,178.583L55.735,164.713C57.004,162.564 57.732,160.06 57.732,157.387C57.732,149.421 51.266,142.954 43.301,142.954L43.3,112.51Z\"></PetriLot>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-271.444,-46.211)\">\r\n                        <PetriBuilding lotKey={district.lots[0]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-271.444,1.20645)\">\r\n                        <PetriBuilding lotKey={district.lots[1]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-323.46,-21.9919)\">\r\n                        <PetriBuilding lotKey={district.lots[2]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"265.931px\" y=\"77.859px\" style={{fontSize:'36.631px'}}>\r\n                            📪\r\n                        </text>\r\n                    </g>\r\n                </g> : (district.kind === 'urban') ? <g id=\"rural-circle-120\" transform=\"matrix(0.990588,0,0,1.33139,453.063,64.7779)\">\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-271.444,-46.211)\">\r\n                        <PetriBuilding lotKey={district.lots[0]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-253.016,-21.9919)\">\r\n                        <PetriBuilding lotKey={district.lots[1]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-271.444,1.20645)\">\r\n                        <PetriBuilding lotKey={district.lots[2]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-306.821,1.20645)\">\r\n                        <PetriBuilding lotKey={district.lots[3]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-323.46,-21.9919)\">\r\n                        <PetriBuilding lotKey={district.lots[4]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-306.821,-46.211)\">\r\n                        <PetriBuilding lotKey={district.lots[5]}></PetriBuilding>\r\n                    </g>\r\n                    <g transform=\"matrix(1.0095,0,0,0.751097,-457.368,-48.6545)\">\r\n                        <path className=\"district-circle\" d=\"M285.25,0L285.251,43.341M300.181,69.173L337.211,89.968L300.181,69.173ZM270.408,69.173L233.288,90.21M285.248,43.317C294.78,43.317 302.519,51.056 302.519,60.588C302.519,70.12 294.78,77.859 285.248,77.859C275.716,77.859 267.977,70.12 267.977,60.588C267.977,51.056 275.716,43.317 285.248,43.317Z\"/>\r\n                    </g>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_9\" lotKey={district.lots[5]} lotDrawn=\"M5.135,135.352C12.441,121.76 26.798,112.51 43.3,112.51L43.3,112.51L43.301,142.954L43.3,142.954C37.962,142.954 33.298,145.858 30.801,150.17L5.135,135.352Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_8\" lotKey={district.lots[4]} lotDrawn=\"M5.158,135.317L30.861,150.068C29.594,152.215 28.868,154.717 28.868,157.387C28.868,160.061 29.596,162.566 30.866,164.714L6.474,178.584C2.37,171.965 0,164.162 0,155.81C0,148.284 1.774,141.487 5.158,135.317Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_7\" lotKey={district.lots[3]} lotDrawn=\"M43.3,171.819L43.3,199.11C27.754,199.11 14.111,190.9 6.474,178.584L30.866,164.714C33.378,168.965 38.009,171.819 43.3,171.819ZM0,155.81C0,155.81 0,155.81 0,155.81Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_6\" lotKey={district.lots[2]} lotDrawn=\"M43.3,171.819C48.592,171.819 53.223,168.964 55.735,164.713L80.126,178.583C72.489,190.9 58.846,199.11 43.3,199.11L43.3,171.819Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_5\" lotKey={district.lots[1]} lotDrawn=\"M81.453,135.317C84.837,141.487 86.6,148.284 86.6,155.81C86.6,164.162 84.23,171.965 80.126,178.583L55.735,164.713C57.004,162.564 57.732,160.06 57.732,157.387C57.732,154.717 57.006,152.215 55.739,150.068L81.453,135.317Z\"></PetriLot>\r\n                    <PetriLot cityKey={props.cityKey} districtKey={props.districtKey} className=\"urban_4\" lotKey={district.lots[0]} lotDrawn=\"M55.725,150.044C53.211,145.801 48.585,142.954 43.301,142.954L43.3,112.51C59.792,112.51 74.143,121.75 81.453,135.331L55.725,150.044Z\"></PetriLot>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"265.931px\" y=\"77.859px\" style={{fontSize:'46.631px'}}>\r\n                            {(district.q === 0 && district.r === 0) ? '🏫' : '⛲'}\r\n                        </text>\r\n                    </g>\r\n                </g>: <g transform=\"matrix(0.990588,0,0,1.33139,453.063,64.7779)\">\r\n                    <g id=\"circle\" transform=\"matrix(1.0095,0,0,0.751097,-457.368,-48.6545)\">\r\n                        <circle className=\"district-circle\" cx=\"285.248\" cy=\"60.588\" r=\"17.271\"/>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"265.931px\" y=\"77.859px\" style={{fontSize:'46.631px'}}>{DistrictTypeIcon['nature']}</text>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"270px\" y=\"-20px\" style={{fontSize:'36.631px'}}>🏕️</text>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"180.931px\" y=\"147.859px\" style={{fontSize:'36.631px'}}>🏕️</text>\r\n                    </g>\r\n                    <g transform=\"matrix(0.402264,0,0,0.299296,-287.943,-23.1242)\">\r\n                        <text x=\"365.931px\" y=\"147.859px\" style={{fontSize:'36.631px'}}>🏕️</text>\r\n                    </g>\r\n                </g>}\r\n            </g>\r\n        </svg> \r\n        {props.children}\r\n    </div>\r\n\r\n}\r\n\r\nexport const PetriHexes2: React.FC<{\r\n    cityKey: number\r\n}> = (props) => {\r\n    const city = useAppSelector(state => state.world.cities.byID[props.cityKey]);\r\n    const districtKeys = useAppSelector(state => state.world.cities.byID[props.cityKey]?.districtKeys);\r\n    return <>{districtKeys.map((dKey, i) => {\r\n        return <PetriHex cityKey={props.cityKey }key={dKey} districtKey={dKey}>\r\n        </PetriHex>\r\n    })}</>\r\n}\r\nexport const SocialBuildings: React.FC<{\r\n    city: ICity,\r\n    onClickBuilding: (b: IBuilding) => void;\r\n}> = (props) => {\r\n    const buildings = useAppSelector(state => selectBuildingsByCity(state.world, props.city.key));\r\n    return <>\r\n        {\r\n            buildings.map((x) => <div key={x.key} className=\"building-node\" onClick={() => props.onClickBuilding(x)}>\r\n                <UIBuilding building={x} style={{}} getStyle={() => {return{}}}></UIBuilding>\r\n            </div> )\r\n        }\r\n    </>\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\n\r\n\r\nexport const Magnet2: React.FC<{\r\n    cityKey: number\r\n}> = (props) => {\r\n    const el = useRef<HTMLDivElement|null>(null);\r\n    const magnetPoint = useAppSelector(state => state.world.cities.byID[props.cityKey].pickupMagnetPoint);\r\n\r\n    if (magnetPoint){\r\n        return <div className=\"magnet\" style={{transform: `translate(${magnetPoint.x}px, ${magnetPoint.y}px)`}}>🧲</div>\r\n    } else {\r\n        return null;\r\n    }\r\n}","import React from \"react\";\r\nimport { IBean } from \"../simulation/Agent\";\r\nimport { BeanGetFace, BeanGetSpeech } from \"../simulation/Bean\";\r\nimport { doSelectBean } from \"../state/features/selected.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { RootState } from \"../state/state\";\r\nimport { GoodIcon } from \"../World\";\r\n\r\ninterface AnimatedBeanP {\r\n  cityKey: number;\r\n  beanKey: number;\r\n  sitStill?: boolean;\r\n  static?: boolean;\r\n}\r\n\r\nfunction BeanIsBuying(bean: IBean){\r\n  return bean.actionData.act == 'buy';\r\n}\r\n\r\nexport const selectBeanAnimation = (state: RootState, beanKey: number) => {\r\n  const bean = state.world.beans.byID[beanKey];\r\n  const working = bean.actionData.act === 'work';\r\n  return {\r\n    speech: BeanGetSpeech(bean),\r\n    face: BeanGetFace(bean),\r\n    good: BeanIsBuying(bean) ? GoodIcon[bean.actionData.good || 'food'] : undefined,\r\n    classes: [bean.job, bean.ethnicity, bean.actionData.act != 'travel' || bean.lifecycle === 'dead' ? 'paused' : '', ].join(' '),\r\n    animationClasses: ['bean-walker', working ? 'spin' : '', ].join(' '),\r\n    badge: bean.badge,\r\n    hat: bean.hat\r\n  }\r\n}\r\n\r\nexport const AnimatedBean: React.FC<AnimatedBeanP> = (props) => {\r\n  const state = useAppSelector(st => selectBeanAnimation(st, props.beanKey));\r\n  const isSelected = useAppSelector(st => st.selected.selectedBeanKey === props.beanKey);\r\n  const classes = ['bean interactable', state.classes, props.sitStill ? '' : state.animationClasses, isSelected ? 'selected' : ''].join(' ');\r\n\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <span className={classes}\r\n      onClick={(e) => {e.stopPropagation(); dispatch(doSelectBean({cityKey: props.cityKey, beanKey: props.beanKey})) }}\r\n    >\r\n      {state.badge ? <span className={\"badge \"+state.badge}>{state.badge}</span>: null}{state.face} {state.good ? <span className=\"purchase\">\r\n        <span className=\"money\">💸</span>\r\n        <span className=\"purchase-good\">{state.good}</span>\r\n      </span>: null} {state.speech ? <span className=\"speech\">\r\n        <span className=\"\">{state.speech}</span>\r\n      </span>: null}{state.hat?<span className={\"hat \"+state.hat}>{state.hat}</span>:null}\r\n    </span>\r\n  )\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { SfxContext } from \"../App\";\r\nimport { UFO, Pickup } from \"../simulation/City\";\r\nimport { transformPoint, hex_to_pixel } from \"../simulation/Geography\";\r\nimport { IPickup } from \"../simulation/Pickup\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { EmoteIcon } from \"../World\";\r\n\r\nexport const AnimatedPickup: React.FC<{\r\n    pickupKey: number\r\n}> = (props) => {\r\n    const [played, setPlayed] = useState(false);\r\n    const pickup = useAppSelector(state => state.world.pickups.byID[props.pickupKey]);\r\n    const sfx = React.useContext(SfxContext);\r\n    useEffect(() => {\r\n        if (!played && sfx){\r\n            sfx.play('drop');\r\n            setPlayed(true);\r\n        }\r\n    })\r\n    return <span className=\"pickup bob\">\r\n        {EmoteIcon[pickup.type]}\r\n    </span>\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { MoverContext } from \"../App\";\r\nimport { IAccelerator } from \"../simulation/Geography\";\r\nimport { MoverType } from \"../simulation/MoverBus\";\r\nimport { selectCityBeanIDs } from \"../state/features/world.reducer\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport { AnimatedPickup } from \"./AnimatedPickup\";\r\n\r\nexport const Mover: React.FC<{\r\n    moverType: MoverType,\r\n    moverKey: number,\r\n}> = (props) => {\r\n    const mover = React.useContext(MoverContext);\r\n    const el = useRef<HTMLDivElement|null>(null);\r\n    const onMove = (p: IAccelerator) => {\r\n        if (el.current && p)\r\n            el.current.style.transform = `translate(${p.point.x}px, ${p.point.y}px)`;\r\n    }\r\n    useEffect(() => {\r\n        const pubsub = mover.Get(props.moverType, props.moverKey);\r\n        pubsub.subscribe(onMove);\r\n        if (pubsub.current)\r\n            onMove(pubsub.current);\r\n        return () => mover.Get(props.moverType, props.moverKey).unsubscribe(onMove)\r\n    }, []);\r\n    return <div ref={el}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport const PetriBeanList: React.FC<{\r\n    cityKey: number\r\n}> = (props) => {\r\n    const beanKeys = useAppSelector(state => selectCityBeanIDs(state.world, props.cityKey));\r\n    return <>\r\n        {\r\n            beanKeys.map((beanKey: number) => {\r\n                return <Mover moverKey={beanKey} key={beanKey} moverType='bean'>\r\n                    <AnimatedBean cityKey={props.cityKey} beanKey={beanKey}></AnimatedBean>\r\n                </Mover>\r\n            })\r\n        }\r\n    </>;\r\n}\r\n\r\n\r\nexport const PickupList2: React.FC<{\r\n    cityKey: number\r\n}> = (props) => {\r\n    const list = useAppSelector(state => state.world.cities.byID[props.cityKey].pickupKeys);\r\n    return <>\r\n        {\r\n            list.map((pKey: number) => {\r\n                return <Mover moverKey={pKey} key={pKey} moverType='pickup'>\r\n                    <AnimatedPickup pickupKey={pKey}></AnimatedPickup>\r\n                </Mover>\r\n            })\r\n        }\r\n    </>;\r\n}","import React from \"react\";\r\nimport { HexSizeR, polarToPoint, transformPoint } from \"../simulation/Geography\";\r\nimport { magnetChange } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { AnimatedUFO2 } from \"./AnimatedUFO2\";\r\nimport { PetriHexes2 } from \"./PetriHexes\";\r\nimport { Magnet2 } from \"./Magnet\";\r\nimport { PetriBeanList, PickupList2 } from \"./Mover\";\r\n\r\nexport const hex_style = {\r\n  width: HexSizeR + 'px', \r\n  height: HexSizeR + 'px', \r\n  top: (-HexSizeR/2)+'px',\r\n  left: (-HexSizeR/2)+'px'\r\n}\r\n\r\ninterface WorldTilePs {\r\n  // tileKey: number;\r\n  cityKey: number;\r\n  onClick: () => void;\r\n}\r\nexport const WorldTile2: React.FC<WorldTilePs> = (props) => {\r\n\r\n  // const tile = useAppSelector(state => state.world.tiles.byID[props.tileKey]);\r\n  const city = useAppSelector(state => state.world.cities.byID[props.cityKey]);\r\n  const ufos = useAppSelector(state => state.world.cities.byID[props.cityKey].ufoKeys);\r\n  const spotlight = useAppSelector(state => state.world.spotlightEvent);\r\n  const spotlightBean = useAppSelector(state => {\r\n    if (state.world.spotlightEvent && state.world.spotlightEvent.beanKey)\r\n      return state.world.beans.byID[state.world.spotlightEvent.beanKey];\r\n    return undefined;\r\n  });\r\n\r\n  const dispatch = useAppDispatch()\r\n  const mtn_transforms: { transform: string }[] = [];\r\n\r\n  const mtnRadius = city.petriRadius - 20;\r\n  for (let i = 0; i < 360 / 5; i++) {\r\n    const az = i * 5 * Math.PI / 180;\r\n    const pt = polarToPoint({ r: mtnRadius, az: az });\r\n    pt.x += city.petriRadius; pt.y += city.petriRadius;\r\n    mtn_transforms.push(transformPoint(pt));\r\n  }\r\n  const deaths = city.deadBeanKeys.map((bk: number, i) => {\r\n    return (\r\n      <span key={i} className=\"dead\" style={{ left: (i * 10) + 'px' }}>⚰️</span>\r\n    )\r\n  });\r\n  const style = {\r\n    height: (city.petriRadius * 2) + 'px',\r\n    width: (city.petriRadius * 2) + 'px',\r\n  }\r\n  return (\r\n    <div className=\"tile\" onClick={() => props.onClick()} onMouseLeave={() => { dispatch(magnetChange({ cityKey: city.key })) }} style={style}>\r\n      <svg style={{ width: '100%', height: '100%' }} className=\"petri-base\">\r\n        <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 1)\" />\r\n      </svg>\r\n      <PetriHexes2 cityKey={city.key}></PetriHexes2>\r\n      {mtn_transforms.map((x, i) => {\r\n        return <span key={i} style={x} className=\"mtn\">⛰️</span>\r\n      })}\r\n      <PickupList2 cityKey={props.cityKey}></PickupList2>\r\n      <PetriBeanList cityKey={props.cityKey}></PetriBeanList>\r\n      {ufos.map((uK: number, i: number) => {\r\n        return <AnimatedUFO2 ufoKey={uK} key={uK} cityKey={city.key}></AnimatedUFO2>\r\n      })}\r\n      <Magnet2 cityKey={props.cityKey}></Magnet2>\r\n      <svg style={{ width: '100%', height: '100%' }} className=\"petri-lid\">\r\n        <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 0.2)\" />\r\n      </svg>\r\n      {/* {\r\n        (spotlight && spotlightBean && spotlight.point) ? <AnimatedSpotlight event={spotlight} bean={bean}></AnimatedSpotlight>: null\r\n      } */}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../i18n/text\";\r\nimport { IBean } from \"../simulation/Agent\";\r\nimport { NarrativeBeliefData, PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { Trait, TraitIcon } from \"../World\";\r\n\r\nexport class CardButton extends React.Component<{\r\n    icon: string,\r\n    name: string,\r\n    onClick?: () => void,\r\n    title?: string,\r\n    subtext?: string,\r\n    thin?: boolean,\r\n    singleLine?: boolean,\r\n    disabled?: boolean\r\n}>{\r\n    render(){\r\n        let classes = \"card button\";\r\n        if (this.props.thin) classes += ' thin';\r\n        if (this.props.singleLine) classes += ' single';\r\n        return <button className={classes} title={this.props.title} onClick={() => {\r\n            if (this.props.onClick) this.props.onClick()\r\n        }} type=\"button\" disabled={this.props.disabled}>\r\n            {this.props.icon} {this.props.name}\r\n            {\r\n                (this.props.subtext != null) ? <small>{this.props.subtext}</small> : null\r\n            }\r\n        </button>\r\n    }\r\n}\r\n\r\nexport function TraitToCard(bean: IBean, trait: Trait, onClick?: () => void){\r\n    switch(trait){\r\n        case 'trad':\r\n        case 'prog':\r\n        case 'ego':\r\n        case 'state':\r\n            return <CardButton icon={TraitIcon[trait]} title={PrimaryBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'fresh':\r\n        case 'sick':\r\n        case 'hungry':\r\n        case 'starving':\r\n        case 'stuffed':\r\n        case 'homeless':\r\n        case 'rested':\r\n        case 'circle':\r\n        case 'square':\r\n        case 'triangle':\r\n        case 'sane':\r\n        case 'disturbed':\r\n        case 'stressed':\r\n            return <CardButton icon={TraitIcon[trait]} title={keyToName[trait]} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'noFaith':\r\n        case 'rocket':\r\n        case 'dragon':\r\n        case 'music':\r\n            return <CardButton icon={TraitIcon[trait]} title={NarrativeBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        default:\r\n            return null;\r\n    }\r\n} ","import React, { useState } from \"react\";\r\nimport { Act, ActivityDisplay, ActivityIcon, GetPriorities, IBean } from \"../simulation/Agent\";\r\nimport { BeanGetFace } from \"../simulation/Bean\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { IPlayerData, PlayerCanAfford } from \"../simulation/Player\";\r\nimport { ITitle } from \"../simulation/Titles\";\r\nimport { doSelectCity, doSelectNone } from \"../state/features/selected.reducer\";\r\nimport { abduct, beanInter, beanSetTitle, scan, vaporize } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { selectSelectedBean, selectSelectedCity } from \"../state/state\";\r\nimport { CardButton, TraitToCard } from \"../widgets/CardButton\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\nimport { EmoteIcon, IHappinessModifier, TraitIcon } from \"../World\";\r\nimport './BeanPanel.css';\r\n\r\n\r\ninterface BeanPanelP{\r\n    city: ICity,\r\n    bean: IBean,\r\n    alien: IPlayerData;\r\n    brainwash: () => void;\r\n    entitle: () => void;\r\n}\r\nfunction happyTable(mods: IHappinessModifier[]){\r\n    return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n        return <tr key={i}>\r\n            <td className=\"small text-right\">{x.reason}</td>\r\n            <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n        </tr>\r\n    });\r\n}\r\nfunction hedonTable(bean: IBean){\r\n    return Object.keys(bean.happiness.all).map((x, i) => {\r\n        return <tr key={i}>\r\n            <td className=\"small text-right\">{bean.happiness.all[x]} {bean.happiness.all[x] >= 0 ? EmoteIcon['happiness'] : EmoteIcon['unhappiness']} from </td>\r\n            <td className=\"small\">{x}</td>\r\n        </tr>\r\n    });\r\n}\r\nfunction actDurations(bean: IBean){\r\n    const acts = Object.keys(bean.activity_duration).map((x) => x as Act);\r\n    acts.sort((a, b) => bean.activity_duration[b] - bean.activity_duration[a]);\r\n    return acts;\r\n}\r\nfunction beliefTable(beliefs: TraitBelief[]): React.ReactNode {\r\n    return beliefs.map((b, i) => {\r\n        const classes = 'belief-name shadow text-left '+SecondaryBeliefData[b].rarity;\r\n        return <table className=\"width-100p\" key={b+i}><tbody><tr>\r\n        <th className={classes}>\r\n            {SecondaryBeliefData[b].icon} {SecondaryBeliefData[b].adj}\r\n        </th>\r\n        <td className=\"text-right\">\r\n            {(SecondaryBeliefData[b].idealPro || []).map(y => <span key={y}>+{TraitIcon[y]}</span>)}\r\n            {(SecondaryBeliefData[b].idealCon || []).map(y => <span key={y}>-{TraitIcon[y]}</span>)}\r\n        </td>\r\n    </tr><tr><td className=\"small text-center\" colSpan={2}>{\r\n        SecondaryBeliefData[b].description ? SecondaryBeliefData[b].description?.split(';').map((x, i) => <div key={i}>{x}</div>) : null\r\n    }</td></tr></tbody></table>});\r\n}\r\nfunction renderInner(scanned: boolean, innerView: string, bean: IBean, city: ICity, alien: IPlayerData){\r\n    if (!scanned){\r\n        return <div className=\"width-100p text-center\">\r\n            <small>\r\n                Subject needs a Scan to reveal their thoughts\r\n            </small>\r\n        </div>\r\n    }\r\n    switch(innerView){\r\n        case 'beliefs':\r\n            return scanned ? beliefTable(bean.beliefs) : null\r\n        case 'feelings':\r\n            return <table className=\"width-100p\"><tbody>\r\n                {scanned ? hedonTable(bean) : null}\r\n                </tbody>\r\n            </table>\r\n        default:\r\n        case 'priorities':\r\n            return <table className=\"width-100p\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            Currently {ActivityDisplay(bean.actionData)}\r\n                        </td>\r\n                    </tr>\r\n                    {\r\n                        bean.priorities.map((x) => {\r\n                            return <tr key={`p-${x.act}-${x.good}`}>\r\n                                <td>\r\n                                {x.priority.toFixed(2)} {ActivityIcon(x)}\r\n                                </td>\r\n                            </tr>\r\n                        })\r\n                    }\r\n                    {\r\n                        actDurations(bean).filter((x) => bean.activity_duration[x] > 0).map((x) => {\r\n                            const act = x as Act;\r\n                            return <tr key={act}>\r\n                                <td>{x}</td>\r\n                                <td>\r\n                                    {\r\n                                        (bean.activity_duration[act] / 1000).toFixed(1)\r\n                                    }s\r\n                                </td>\r\n                            </tr>\r\n                            \r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n    }\r\n}\r\nfunction renderTraits(scanned: boolean, bean: IBean, alien: IPlayerData, brainwash: () => void, scan: () => void){\r\n    if (scanned){\r\n        return <div>\r\n            <div className=\"card-parent\">\r\n                {TraitToCard(bean, bean.ethnicity, undefined)}\r\n                {TraitToCard(bean, bean.faith, brainwash)}\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                {\r\n                    bean.beliefs.map((b) => <CardButton key={b} icon={SecondaryBeliefData[b].icon} title={SecondaryBeliefData[b].adj} name='' thin={true} singleLine={true} onClick={() => {brainwash()}}></CardButton>)\r\n                }\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                {TraitToCard(bean, bean.food, undefined)}\r\n                {TraitToCard(bean, bean.stamina, undefined)}\r\n                {TraitToCard(bean, bean.health, undefined)}\r\n                {TraitToCard(bean, bean.housing, undefined)}\r\n            </div>\r\n        </div>\r\n    } else {\r\n        return <div className=\"card-parent\">\r\n            <CardButton icon=\"🛰️\" name=\"Scan\" subtext=\"-Energy +Info\" onClick={scan} disabled={!PlayerCanAfford(alien, alien.difficulty.cost.bean.scan)}></CardButton>\r\n        </div>\r\n    }\r\n}\r\nexport const BeanInnerPanel: React.FC<{\r\n    bean: IBean,\r\n    alien: IPlayerData,\r\n    city: ICity\r\n}> = (props) => {\r\n    const [innerView, setInnerView] = useState<'priorities'|'feelings'|'beliefs'>('beliefs');\r\n    return <div className=\"grow-1 pad-4 bean-panel-content\">\r\n        <div className=\"cylinder blue-orange horizontal\">\r\n            <button type=\"button\" className={innerView=='beliefs'?'active':''} onClick={()=>setInnerView('beliefs')}>\r\n                😇 Traits\r\n            </button>\r\n            <button type=\"button\" className={innerView=='feelings'?'active':''} onClick={()=>setInnerView('feelings')}>\r\n                😐 Feelings\r\n            </button>\r\n            <button type=\"button\" className={innerView=='priorities'?'active':''} onClick={()=>setInnerView('priorities')}>\r\n                💪 Priorities\r\n            </button>\r\n        </div>\r\n        {renderInner(props.alien.scanned_bean[props.bean.key], innerView, props.bean, props.city, props.alien)}\r\n    </div>\r\n}\r\nexport const DeadBeanActions: React.FC<{\r\n    beanKey: number\r\n}> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const graveyard = useAppSelector(s => s.world.buildings.allIDs.find(x => {\r\n        const build = s.world.buildings.byID[x]; \r\n        return build.type === 'graveyard' && build.interredBeanKeys && build.interredBeanKeys.length < 6\r\n    }));\r\n    return <div className=\"bean-action-card-parent\"> \r\n        {graveyard === undefined ? <div className=\"text-center\">\r\n            No ⚱️ Graveyard\r\n        </div>: null}\r\n        <div className=\"card-parent\">\r\n            <button type=\"button\" className=\"button card\" onClick={() => {\r\n                if (graveyard != null){\r\n                    dispatch(beanInter({\r\n                        bean: props.beanKey,\r\n                        graveyard: graveyard\r\n                    }));\r\n                }\r\n            }} disabled={graveyard === undefined}\r\n                title=\"Dispose of the body\"\r\n            >⚰️ Dispose\r\n                <small>-Body</small>\r\n            </button>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport const BeanPanel: React.FC<BeanPanelP> = (props) => {\r\n    const dispatch = useAppDispatch();\r\n    const alien = useAppSelector(state => state.world.alien);\r\n    const bean = useAppSelector(selectSelectedBean);\r\n    const city = useAppSelector(selectSelectedCity);\r\n    if (!bean || !city) \r\n        return null;\r\n    const classes = bean.job + ' ' + bean.ethnicity;\r\n    return (                \r\n    <div className=\"vertical bean-panel\">\r\n        <div className=\"bean-panel-header\">\r\n            <div>\r\n                <b>{bean.name}&nbsp;\r\n                {\r\n                    city ? <small> of {city.name} </small>\r\n                    : null\r\n                }\r\n                </b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => {\r\n                    dispatch(doSelectCity({cityKey:bean.cityKey}))\r\n                }} >❌</button>\r\n            </div>\r\n            <div className=\"bean-view\">                \r\n                <span className={classes+\" bean\"}>\r\n                    {\r\n                        BeanGetFace(bean)\r\n                    }\r\n                </span>\r\n            </div>\r\n            {\r\n                bean.titleKey != null ? <TitleView titleKey={bean.titleKey}></TitleView> : null\r\n            }\r\n            <div className=\"horizontal\">\r\n                <span className=\"text-center\">\r\n                    💰 ${bean.cash.toFixed(2)}\r\n                </span>\r\n                <span className=\"text-center\">\r\n                    🙂 {Math.round(bean.lastHappiness)}%\r\n                </span>\r\n                <span className=\"text-center\">\r\n                    {Math.round(bean.happiness.flatAverage)} {EmoteIcon['happiness']} /day\r\n                </span>\r\n            </div>\r\n            {renderTraits(alien.scanned_bean[bean.key], bean, alien, () => {\r\n                if (bean.lifecycle != 'dead')\r\n                    props.brainwash();\r\n            }, () => {\r\n                dispatch(scan({beanKey: bean.key}));\r\n            })}\r\n        </div>\r\n        {\r\n            bean.lifecycle === 'dead' ? <div className=\"bean-panel-content\">\r\n                <div className=\"text-center\">\r\n                    <small>\r\n                    This subject has ceased biological functions. <br/> The carbon shell requires disposal.\r\n                    </small>\r\n                </div>\r\n            </div> : <BeanInnerPanel bean={bean} city={city} alien={alien}></BeanInnerPanel>\r\n        }\r\n        {\r\n            bean.lifecycle === 'dead' ? <DeadBeanActions beanKey={bean.key}></DeadBeanActions> : <div className=\"bean-action-card-parent\">\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\" onClick={() => {\r\n                    props.brainwash()\r\n                }}\r\n                    title=\"Rewrite one of this being's traits\"\r\n                >😵 Brainwash\r\n                    <small>-Sanity +-Trait</small>\r\n                </button>\r\n            </div>\r\n            \r\n            <TitleButton beanKey={bean.key} entitle={props.entitle}></TitleButton>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\" onClick={() => {\r\n                    dispatch(vaporize({beanKey: bean.key}));\r\n                }}\r\n                    disabled={!PlayerCanAfford(alien, alien.difficulty.cost.bean.vaporize)}\r\n                    title=\"Delete this being from the experiment\"\r\n                >\r\n                    ☠️ Vaporize\r\n                    <CostSmall cost={alien.difficulty.cost.bean.vaporize}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\"\r\n                    disabled={bean.lifecycle != 'alive' || !PlayerCanAfford(alien, alien.difficulty.cost.bean.abduct)}\r\n                    onClick={() => dispatch(abduct({beanKey: bean.key}))}\r\n                    title=\"Remove this being for study\"\r\n                >\r\n                    👾 Abduct for Research\r\n                    <CostSmall cost={alien.difficulty.cost.bean.abduct} rider=\"+Tech\"></CostSmall>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport const TitleButton: React.FC<{\r\n    beanKey: number,\r\n    entitle: () => void\r\n}> = (props) => {\r\n    const titles = useAppSelector(s => s.world.titles.allIDs);\r\n    if (titles.length > 0){\r\n        return <div className=\"card-parent\">\r\n            <button type=\"button\" className=\"button card\"\r\n                // disabled={bean.lifecycle != 'alive' || !PlayerCanAfford(alien, alien.difficulty.cost.bean.abduct)}\r\n                onClick={() => props.entitle()}\r\n                title=\"Give this bean a title\"\r\n            >\r\n                👑 Give Title\r\n                <CostSmall cost={{}} rider=\"+Title\"></CostSmall>\r\n            </button>\r\n        </div>\r\n    }\r\n    return null\r\n}\r\n\r\nexport const TitleView: React.FC<{\r\n    titleKey: number\r\n}> = (props) => {\r\n    const title = useAppSelector(s => s.world.titles.byID[props.titleKey]);\r\n    return <div className=\"text-center\">\r\n        <strong>\r\n        {title.headwear} {title.name} {title.badge} \r\n        </strong>\r\n    </div>\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../i18n/text\";\r\nimport { CityGetPopulationTraitsList, ICity } from \"../simulation/City\";\r\nimport { IPlayerData } from \"../simulation/Player\";\r\nimport { selectBeansByCity } from \"../state/features/world.reducer\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\nimport { CardButton } from \"../widgets/CardButton\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { Trait } from \"../World\";\r\n\r\ninterface OverviewPanelP {\r\n    city: ICity,\r\n    alien: IPlayerData,\r\n    clearCity: () => void;\r\n}\r\n\r\nexport const OverviewPanel: React.FC<OverviewPanelP> = (props) => {\r\n    const beans = useAppSelector(x => selectBeansByCity(x.world, props.city.key));\r\n    let header = <div>\r\n        Human Emotion Farm\r\n        <div>\r\n            <small>Part of the 🌌 Galactic Xenosensation Federation</small>\r\n        </div>\r\n    </div>;\r\n    if (props.city) {\r\n        header = <div>\r\n            <div>\r\n                <b>{props.city.name}</b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => props.clearCity()} >❌</button>\r\n            </div>\r\n        </div>;\r\n    }\r\n    const avg_happy = beans.reduce((sum, x) => sum + x.lastHappiness, 0) / (beans.length || 1);\r\n    const avg_cash = beans.reduce((sum, x) => sum + x.cash, 0) / (beans.length || 1);\r\n    return (\r\n        <div>\r\n            {header}\r\n            {/* <div className=\"header\"><b>Demographics</b></div> */}\r\n            <div className=\"header\"><b>👥 Subjects</b></div>\r\n            <div>\r\n                <b>Population</b>&nbsp;\r\n                <span>{beans.length}</span>\r\n            </div>\r\n            {/* <AxisReadout report={reportEthno(beans)}>Ethnicity</AxisReadout> */}\r\n            <NeedReadout beans={beans} need={(b) => b.food} dire=\"starving\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n            <NeedReadout beans={beans} need={(b) => b.stamina} dire=\"homeless\" abundant=\"rested\">Housing</NeedReadout>\r\n            <NeedReadout beans={beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n            <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n            <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n            {\r\n                beans && beans.length ? <>\r\n                    <div className=\"header\"><b>🧠 Traits</b></div>\r\n                    <div className=\"max-w-300\">\r\n                        { \r\n                            CityGetPopulationTraitsList(props.alien.scanned_bean, beans).map((v) => \r\n                                <span key={v.noun} className=\"overview-belief\">\r\n                                    {v.icon}&nbsp;{v.noun}&nbsp;x{v.count}\r\n                                </span>)\r\n                        }\r\n                    </div>\r\n                </> : null\r\n            }\r\n            {\r\n                beans.length || 0 > 7 ? <div className=\"card-parent\">\r\n                    <CardButton icon=\"🛰️\" name=\"Scan All\" disabled={true} subtext=\"-Energy +Info\" onClick={() => {}}></CardButton>\r\n                </div> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{ report: { avg: number, winner: Trait } }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent + '%'\r\n        }\r\n        return (\r\n            <div>\r\n                <b>\r\n                    {this.props.children}\r\n                </b>&nbsp;&nbsp;\r\n                <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n                <div className=\"bar\">\r\n                    <div className=\"bar-inner\" style={style}>\r\n                        {percent}%\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { doSelectNone } from \"../state/features/selected.reducer\";\r\nimport { abduct } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { selectSelectedBean, selectSelectedCity } from \"../state/state\";\r\nimport { BeanPanel } from \"./BeanPanel\";\r\nimport { HexPanel } from \"./HexPanel\";\r\nimport { OverviewPanel } from \"./OverviewPanel\";\r\n\r\nexport const DetailPanel: React.FC<{\r\n    openBrainwash: () => void,\r\n    openEntitle: () => void,\r\n}> = (props) => {\r\n    const city = useAppSelector(selectSelectedCity);\r\n    const districtKey = useAppSelector((x) => x.selected.selectedDistrictKey);\r\n    const district = useAppSelector((x) => districtKey != null ? x.world.districts.byID[districtKey]: undefined);\r\n    const bean = useAppSelector(selectSelectedBean);\r\n    const alien = useAppSelector((x) => x.world.alien);\r\n    const dispatch = useAppDispatch();\r\n    if (bean && city){\r\n        return <BeanPanel bean={bean} city={city} alien={alien}\r\n        brainwash={() => props.openBrainwash()}\r\n        entitle={() => props.openEntitle()}\r\n        ></BeanPanel>\r\n    }\r\n    if (district) {\r\n        return <HexPanel difficulty={alien.difficulty}></HexPanel>\r\n    }\r\n    if (city) {\r\n        return <OverviewPanel city={city} clearCity={() => dispatch(doSelectNone())} alien={alien}></OverviewPanel>\r\n    }\r\n    return <div></div>\r\n}","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\nimport { doSelectBean } from \"../state/features/selected.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { selectEventIDs } from \"../state/state\";\r\n\r\nfunction shouldEventJumpToBean(e: IEvent): boolean{\r\n    return e.beanKey != null && (\r\n        e.trigger === 'speechcrime' ||\r\n        e.trigger === 'birth');\r\n}\r\n\r\nexport const EventsPanel: React.FC<{\r\n    \r\n}> = (props) => {\r\n    const eventIDs = useAppSelector(selectEventIDs);\r\n    const events = useAppSelector(state => eventIDs.slice().reverse().map(id => state.world.events.byID[id]));\r\n    const dispatch = useAppDispatch();\r\n    let elements = events.map((e, i) => {\r\n        const alert = e.icon === '🚨';\r\n        const tallTrigger = e.trigger === 'nojobslots' || e.trigger === 'persuasion';\r\n        return <div key={i} className={alert||tallTrigger ? 'tall': ''}>\r\n            <span className={alert ? 'police-siren': ''}>{e.icon}</span>&nbsp;\r\n            {\r\n                shouldEventJumpToBean(e) ? <a onClick={() => {\r\n                    if (e.beanKey && e.cityKey) {\r\n                        dispatch(doSelectBean({beanKey: e.beanKey, cityKey: e.cityKey}));\r\n                    }\r\n            }} href=\"javascript:void(0)\">{e.message}</a> : <span>{e.message}</span>\r\n            }\r\n        </div>\r\n    });\r\n    if (events.length === 0){\r\n        elements = [<div key={0}>\r\n            <small>No events yet</small>\r\n        </div>]\r\n    }\r\n    return (                \r\n    <div className=\"events-panel\">\r\n        <div>\r\n            <b>Events</b>\r\n        </div>\r\n        {elements}\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { DefaultDifficulty, triadToString } from \"../Game\";\r\nimport { Curriculums, GetAverage, Goals, IGoal, IGoalProgress, IPlayerData, IProgressable } from \"../simulation/Player\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\n\r\n\r\nfunction renderReward(g: IGoal){\r\n  return <div>\r\n    <small>\r\n    🎁 {triadToString(g.reward || {}, '+')}\r\n    </small>\r\n  </div>\r\n}\r\nfunction renderGoal(progress: IGoalProgress|undefined, g: IGoal){\r\n  return <li>\r\n    {progress?.done ? '☑️': '⭕️'}\r\n    {g.text}\r\n    {g.tooltip != null ? <small title={g.tooltip}>❔</small> : null}\r\n    {progress?.done || g.reward == null ? null : renderReward(g)}\r\n  </li>\r\n}\r\nexport const GoalsPanel: React.FC = () => {\r\n  const progress = useAppSelector(x => x.world.alien.goalProgress);\r\n  const goals = useAppSelector(x => x.world.alien.goals);\r\n  const workingReportCard = useAppSelector(x => x.world.alien.workingReportCard);\r\n  return (<div className=\"goals\">\r\n    <div><b>Goals</b></div>\r\n    <ul>\r\n      {goals.map((key) => {\r\n        return renderGoal(progress[key], Goals[key]);\r\n      })}\r\n    </ul>\r\n    <div><b>Report Card</b></div>\r\n    <p className=\"horizontal\">\r\n      <span>\r\n        Last Grade: <b>D</b>\r\n      </span>\r\n      <span>\r\n        Next Grade in: <b>2 mo.</b>\r\n      </span>\r\n    </p>\r\n    <p>\r\n    </p>\r\n    <table style={{margin: 'auto'}}>\r\n      <tbody>\r\n        <tr>\r\n          <th>🎯 Happiness\r\n          </th>\r\n          <td>\r\n            {workingReportCard.Happiness}\r\n          </td>\r\n          <td>\r\n            <small title=\"Are your subjects happy?\">❔</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"text-left\" colSpan={3}>\r\n            <small>\r\n          {Curriculums.Default.RubricDescription.Happiness}\r\n            </small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>🎯 Prosperity</th>\r\n          <td>\r\n            {workingReportCard.Prosperity}\r\n          </td>\r\n          <td>\r\n            <small title=\"Are your subjects fed and healthy?\">❔</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"text-left\" colSpan={3}>\r\n          <small>{Curriculums.Default.RubricDescription.Prosperity}</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>🎯 Stability\r\n          </th>\r\n          <td>\r\n            {workingReportCard.Stability}\r\n          </td>\r\n          <td>\r\n            <small title=\"Are your subjects sane and civil?\">❔</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"text-left\" colSpan={3}>\r\n          <small>{Curriculums.Default.RubricDescription.Stability}</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>🎯 Dogma\r\n          </th>\r\n          <td>\r\n            {workingReportCard.Dogma}\r\n          </td>\r\n          <td>\r\n            <small title=\"Do your society's rules match your utopian ideals?\">❔</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"text-left\" colSpan={3}>\r\n          <small>{Curriculums.Default.RubricDescription.Dogma}</small>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td colSpan={3}>\r\n            <hr />\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            Avg. Grade\r\n          </th>\r\n          <td>\r\n            {GetAverage(workingReportCard)}\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { PlayerCanAfford } from \"../simulation/Player\";\r\nimport { buyBots, buyEnergy, buyTrait, scrubHedons } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\nimport { EmoteIcon } from \"../World\";\r\n\r\n export const MarketPanel: React.FC<{\r\n }> = () => {\r\n     const player = useAppSelector(s => s.world.alien);\r\n     const dispatch = useAppDispatch();\r\n    return <div>\r\n        <div className=\"text-center\">\r\n            <strong>🌌 Galactic 😨 Emotion 💰 Market</strong>\r\n        </div>\r\n        <p>\r\n            <small>\r\n                The premier exchange for ⚡️, 🤖,  and {EmoteIcon['happiness']}!\r\n            </small>\r\n        </p>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" onClick={() => dispatch(buyEnergy({amount: 1}))}\r\n                disabled={!PlayerCanAfford(player, player.difficulty.cost.market.resource.energy)}>\r\n                +1 ⚡️ Energy\r\n                <CostSmall cost={player.difficulty.cost.market.resource.energy} qty={1} ></CostSmall>\r\n            </button>\r\n            <button className=\"card button\" onClick={() => dispatch(buyEnergy({amount: 5}))}\r\n                disabled={!PlayerCanAfford(player, player.difficulty.cost.market.resource.energy, 5)}>\r\n                +5 ⚡️ Energy\r\n                <CostSmall cost={player.difficulty.cost.market.resource.energy} qty={5} ></CostSmall>\r\n            </button>\r\n        </div>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" onClick={() => dispatch(buyBots({amount: 1}))}\r\n                disabled={!PlayerCanAfford(player, player.difficulty.cost.market.resource.bots)}>\r\n                +1 🤖 Bot\r\n                <CostSmall cost={player.difficulty.cost.market.resource.bots} qty={1} ></CostSmall>\r\n            </button>\r\n            <button className=\"card button\" onClick={() => dispatch(buyBots({amount: 5}))}\r\n                disabled={!PlayerCanAfford(player, player.difficulty.cost.market.resource.bots, 5)}>\r\n                +5 🤖 Bots\r\n                <CostSmall cost={player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n            </button>\r\n        </div>\r\n        <div className=\"card-parent\">\r\n            <button className=\"card button\" onClick={() => dispatch(scrubHedons())}\r\n                disabled={player.hedons.amount >= 0 || !PlayerCanAfford(player, player.difficulty.cost.market.scrubHedons)}>\r\n                Remove 💢 Negative Hedons\r\n                <CostSmall cost={player.difficulty.cost.market.scrubHedons} qty={1} ></CostSmall>\r\n            </button>\r\n            {/* <button className=\"card button\" onClick={() => buyBots(5)}\r\n                disabled={!PlayerCanAfford(player.difficulty.cost.market.resource.bots, 5)}>\r\n                +5 🤖 Bots\r\n                <CostSmall cost={player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n            </button> */}\r\n        </div>\r\n        <div>\r\n            \r\n            <small>\r\n                <i>Current <span className=\"trait-gem\"></span> Trait Gems for sale:</i>\r\n            </small>\r\n        </div>\r\n        <div className=\"short-scroll\">\r\n            {\r\n                <MarketTraits hedons={player.hedons.amount}></MarketTraits>\r\n            }\r\n        </div>\r\n    </div>\r\n }\r\n\r\n \r\nexport const MarketTraits: React.FC<{\r\n    hedons: number,\r\n}> = (props) => {\r\n    const list = useAppSelector(s => s.world.marketTraitsForSale);\r\n    const dispatch = useAppDispatch();\r\n    return <>\r\n    {\r\n    list.map((l, i) => {\r\n        const t = SecondaryBeliefData[l.trait];\r\n        const className = 'belief-name '+t.rarity;\r\n        return <div className=\"card-parent\" key={i}>\r\n            <button className=\"card button\" onClick={() => dispatch(buyTrait({l: l}))} disabled={props.hedons < (l.cost.hedons || 0)}>\r\n                <span className={className}>\r\n                    {t.icon} {t.noun}\r\n                </span>\r\n                <CostSmall cost={l.cost}></CostSmall>\r\n            </button>\r\n        </div>\r\n    })\r\n    }\r\n    </>\r\n}","const fourLetterWords = [\r\n'able','acid','aged','also','area','army','away','baby','back','ball','band','bank',\r\n'base','bath','bear','beat','been','beer','bell','belt','best','bill','bird','blow','blue','boat',\r\n'body','bomb','bond','bone','book','boom','born','boss','both','bowl','bulk','burn',\r\n'bush','busy','call','calm','came','camp','card','care','case','cash','cast','cell',\r\n'chat','chip','city','club','coal','coat','code','cold','come','cook','cool','cope',\r\n'copy','CORE','cost','crew','crop','dark','data','date','dawn','days','dead','deal',\r\n'dean','dear','debt','deep','deny','desk','dial','dick','diet','disc','disk','does',\r\n'done','door','dose','down','draw','drew','drop','drug','dual','duke','dust','duty',\r\n'each','earn','ease','east','easy','edge','else','even','ever','evil','exit','face',\r\n'fact','fail','fair','fall','farm','fast','fate','fear','feed','feel','feet','fell',\r\n'felt','file','fill','film','find','fine','fire','firm','fish','five','flat','flow',\r\n'food','foot','ford','form','fort','four','free','from','fuel','full','fund','gain',\r\n'game','gate','gave','gear','gene','gift','girl','give','glad','goal','goes','gold',\r\n'Golf','gone','good','gray','grew','grey','grow','gulf','hair','half','hall','hand',\r\n'hang','hard','harm','hate','have','head','hear','heat','held','hell','help','here',\r\n'hero','high','hill','hire','hold','hole','holy','home','hope','host','hour','huge',\r\n'hung','hunt','hurt','idea','inch','into','iron','item','jack','jane','jean','john',\r\n'join','jump','jury','just','keen','keep','kent','kept','kick','kill','kind','king',\r\n'knee','knew','know','lack','lady','laid','lake','land','lane','last','late','lead',\r\n'left','less','life','lift','like','line','link','list','live','load','loan','lock',\r\n'logo','long','look','lord','lose','loss','lost','love','luck','made','mail','main','make',\r\n'male','many','Mark','mass','matt','meal','mean','meat','meet','menu','mere','mike',\r\n'mile','milk','mill','mind','mine','miss','mode','mood','moon','more','most','move',\r\n'much','must','name','navy','near','neck','need','news','next','nice','nick','nine',\r\n'none','nose','note','okay','once','only','onto','open','oral','over','pace','pack',\r\n'page','paid','pain','pair','palm','park','part','pass','past','path','peak','pick',\r\n'pink','pipe','plan','play','plot','plug','plus','poll','pool','poor','port','post',\r\n'pull','pure','push','race','rail','rain','rank','rare','rate','read','real','rear',\r\n'rely','rent','rest','rice','rich','ride','ring','rise','risk','road','rock','role',\r\n'roll','roof','room','root','rose','rule','rush','ruth','safe','said','sake','sale',\r\n'salt','same','sand','save','seat','seed','seek','seem','seen','self','sell','send',\r\n'sent','sept','ship','shop','shot','show','shut','sick','side','sign','site','size',\r\n'skin','slip','slow','snow','soft','soil','sold','sole','some','song','soon','sort',\r\n'soul','spot','star','stay','step','stop','such','suit','sure','take','tale','talk',\r\n'tall','tank','tape','task','team','tech','tell','tend','term','test','text','than',\r\n'that','them','then','they','thin','this','thus','till','time','tiny','told','toll',\r\n'tone','tony','took','tool','tour','town','tree','trip','true','tune','turn','twin',\r\n'type','unit','upon','used','user','vary','vast','very','vice','view','vote','wage',\r\n'wait','wake','walk','wall','want','ward','warm','wash','wave','ways','weak','wear',\r\n'week','well','went','were','west','what','when','whom','wide','wife','wild','will',\r\n'wind','wine','wing','wire','wise','wish','with','wood','word','wore','work','yard',\r\n'yeah','year','your','zero','zone',\r\n];\r\n\r\nexport function GetSeedName(){\r\n    let seed = '';\r\n    for (let i = 0; i < 4; i++) {\r\n        if (i > 0)\r\n            seed += '-';\r\n        const rand = Math.random();\r\n        seed += fourLetterWords[Math.floor(rand * fourLetterWords.length)];\r\n    }\r\n    return seed;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { GameStorageInstance } from '../GameStorage';\r\nimport { manualSave } from '../state/features/world.reducer';\r\nimport { useAppDispatch } from '../state/hooks';\r\nexport const AutosaveWidget: React.FC<{}> = (props) => {\r\n    const [isDirty, setDirty] = useState(false);\r\n    const [isSaving, setSaving] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const onDirty = (dirty: boolean) => {\r\n        setDirty(dirty);\r\n    }\r\n    const onSaving = () => {\r\n        setSaving(true);\r\n        setTimeout(() => setSaving(false), 500);\r\n    }\r\n    const d = useEffect(() => {\r\n        GameStorageInstance.Dirty.subscribe(onDirty);\r\n        return () => GameStorageInstance.Dirty.unsubscribe(onDirty);\r\n    });\r\n    const s = useEffect(() => {\r\n        GameStorageInstance.Saving.subscribe(onSaving);\r\n        return () => GameStorageInstance.Saving.unsubscribe(onSaving);\r\n    });\r\n    return <button disabled={!isDirty || isSaving} onClick={() => {\r\n        dispatch(manualSave());\r\n    }}>\r\n            {\r\n                isSaving ? '💿' : isDirty ? '💾' : '✔️'\r\n            }\r\n        </button>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { ChangePubSub, PubSub } from \"../events/Events\";\r\n\r\ninterface Bubble {string: string, id: number, className?: string};\r\n\r\nfunction useBubbles<T>(sub: PubSub<T>, transform: (input: T) => {string: string, className: string}){\r\n    const [bubbles, setBubbles] = useState<Bubble[]>([]);\r\n    let bubbleSeed = 0;\r\n    const onEvent = (event: T) => {\r\n        const id = ++bubbleSeed;\r\n        setBubbles(bubbles.concat([{\r\n            id: id,\r\n            ...transform(event)\r\n        }]));\r\n        setTimeout(() => {\r\n            setBubbles(\r\n                bubbles.filter((b) => b.id != id)\r\n            )\r\n        }, 1500)\r\n    }\r\n    useEffect(() => {\r\n        sub.subscribe(onEvent);\r\n        return () => sub.unsubscribe(onEvent);\r\n    });\r\n    return bubbles;\r\n}\r\n\r\nexport class BubbleNumberText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<Bubble>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n    bubbleSeed = 0;\r\n    onChange = (ev: {change: number}) => {\r\n        const id = ++this.bubbleSeed;\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                string: (positive ? '+': '') + ev.change,\r\n                id: id,\r\n                className: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.id != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.id} className={[b.className, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.string}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}\r\n\r\nexport const BubbleSeenTraitsText: React.FC<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent: PubSub<{k: string, v: boolean}>\r\n}> = (props) => {\r\n    const bubbles = useBubbles(props.changeEvent, (input: {k: string, v: boolean}) => {\r\n        return {\r\n            string: `Discovered ${input.k}!`,\r\n            className: 'seen-belief'\r\n        }\r\n    })\r\n    return <span className=\"bubble-parent\">\r\n        {props.children}\r\n        {bubbles.map((b) => <span key={b.id} className={[b.className, props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {props.icon} {b.string}\r\n        </span>)}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { useAppSelector } from \"../state/hooks\";\r\n\r\nexport class CapsuleLabel extends React.Component<{\r\n    icon?: string,\r\n    label?: string\r\n}, {\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const classN = 'capsule-label '+this.props.label||'';\r\n        return <span className={classN}>\r\n            <span className=\"capsule-icon\">\r\n                {this.props.icon}\r\n            </span>\r\n            <span className=\"capsule-text\">\r\n                {this.props.label}:\r\n            </span>\r\n            <span className=\"capsule-value\">\r\n                {this.props.children}\r\n            </span>\r\n        </span>\r\n    }\r\n}\r\n\r\nexport const EnergyAmount: React.FC = () => {\r\n    const amt = useAppSelector(x => x.world.alien.energy.amount);\r\n    return <span>{amt.toFixed(1)}</span>\r\n}\r\nexport const BotsAmount: React.FC = () => {\r\n    const amt = useAppSelector(x => x.world.alien.bots.amount);\r\n    return <span>{amt.toFixed(1)}</span>\r\n}\r\nexport const HedonAmount: React.FC = () => {\r\n    const amt = useAppSelector(x => x.world.alien.hedons.amount);\r\n    return <span>{amt.toFixed(0)}</span>\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick?: () => void;\r\n    closeButtonText?: string;\r\n    className?: string;\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (!this.props.onClick)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick && this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n        <div className={\"modal \" + (this.props.className || '')}>\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport { PartOfDay, Season } from \"../simulation/Time\"\r\nimport { useAppSelector } from \"../state/hooks\"\r\n\r\nfunction SeasonHour(hour: number){\r\n    if (hour < PartOfDay.Morning)\r\n        return '🌙';\r\n    if (hour < PartOfDay.Noon)\r\n        return '🌄';\r\n    if (hour < PartOfDay.Evening)\r\n        return '☀️';\r\n    return '🌇';\r\n}\r\nexport const SeasonWidget: React.FC = () => {\r\n    const date = useAppSelector(s => s.world.date)\r\n    return <span>\r\n        &nbsp;Year {date.year},&nbsp;{Season[date.season]} {date.day} {SeasonHour(date.hour)}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { AnimatedBean } from \"../petri-ui/AnimatedBean\";\r\nimport { SocialBuildings } from \"../petri-ui/PetriHexes\";\r\nimport { IBean } from \"../simulation/Agent\";\r\nimport { ICity } from \"../simulation/City\";\r\nimport { IBuilding } from \"../simulation/RealEstate\";\r\nimport { doSelectBean } from \"../state/features/selected.reducer\";\r\nimport { selectCityBeanIDs } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\nimport \"./SocialGraph.css\";\r\n\r\ninterface SocialGraphP{\r\n    city: ICity,\r\n    onClick: (b: IBean) => void;\r\n    onClickBuilding: (b: IBuilding) => void;\r\n}\r\n\r\nexport const SocialGraph: React.FC<SocialGraphP> = (props) => {\r\n    const beanKeys = useAppSelector(state => selectCityBeanIDs(state.world, props.city.key));\r\n    const scannedBeans = useAppSelector(s => s.world.alien.scanned_bean)\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"social-graph\">\r\n        <div className=\"social-graph-row\">\r\n        {\r\n            beanKeys.map((b) => \r\n            <div key={b} className=\"bean-node\" onClick={() => dispatch(doSelectBean({cityKey:props.city.key, beanKey: b}))}>\r\n                <AnimatedBean beanKey={b} static={true} sitStill={true} cityKey={props.city.key}>\r\n                </AnimatedBean>\r\n                {\r\n                    scannedBeans[b] ? null : <span className=\"social-graph-unscanned prohibited-emoji\">🛰️</span>\r\n                }\r\n            </div>)\r\n        }\r\n        </div>\r\n        <div className=\"social-graph-row\">\r\n        {\r\n            <SocialBuildings city={props.city} onClickBuilding={props.onClickBuilding}></SocialBuildings>\r\n        }\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport \"./StopPlayFast.css\"\r\n\r\nexport class StopPlayFastButtons extends React.Component<{\r\n    timeScale: number,\r\n    setTimeScale: (s: number) => void\r\n}>{\r\n    render(){\r\n        return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n            ⌛️\r\n            <button type=\"button\" className={this.props.timeScale == 0 ? 'active': ''} onClick={() => this.props.setTimeScale(0)}>⏹</button>\r\n            <button type=\"button\" className={this.props.timeScale == 1 ? 'active': ''} onClick={() => this.props.setTimeScale(1)}>▶️</button>\r\n            <button type=\"button\" className={this.props.timeScale == 2 ? 'active': ''} onClick={() => this.props.setTimeScale(2)}>⏩</button>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport const GeoNetworkButtons: React.FC<{\r\n    activeMain: 'geo' | 'network';\r\n    setActiveMain: (v: 'geo' | 'network' ) => void\r\n}> = (props) => {\r\n    \r\n    return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n        👁️\r\n        <button type=\"button\" className={props.activeMain == 'geo' ? 'active': ''} onClick={() => props.setActiveMain('geo')}>🌎</button>\r\n        <button type=\"button\" className={props.activeMain == 'network' ? 'active': ''} onClick={() => props.setActiveMain('network')}>🌐</button>\r\n    </div>\r\n    \r\n}","import React from \"react\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\n\r\nexport class TimelyEventToggle extends React.Component<{\r\n    event: PubSub<IEvent>,\r\n    eventIcon: string,\r\n    eventClass: string\r\n}, {\r\n eventCount: number,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.props.event.subscribe(this.onEvent);\r\n        this.state = {\r\n            eventCount: 0\r\n        };\r\n    }\r\n    onEvent = (e: IEvent) => {\r\n        this.setState({eventCount: this.state.eventCount+1});\r\n        window.setTimeout(() => {\r\n            this.setState({\r\n                eventCount: this.state.eventCount-1\r\n            });\r\n        }, 3000);\r\n    }\r\n    render(){\r\n        return <span>\r\n            {this.state.eventCount < 1 ? this.props.children : <span className={this.props.eventClass}>{this.props.eventIcon}</span>}\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { ITitle } from \"../simulation/Titles\";\r\nimport { beanSetTitle } from \"../state/features/world.reducer\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/hooks\";\r\n\r\nexport const EntitleModalContent: React.FC<{\r\n    closeModal: () => void\r\n}> = (props) => {\r\n    const selectedBeanKey = useAppSelector(s => s.selected.selectedBeanKey);\r\n    const titles = useAppSelector(s => s.world.titles.allIDs.reduce( (all, id)=>{all.push(s.world.titles.byID[id]); return all;}, [] as ITitle[]));\r\n    const dispatch = useAppDispatch();\r\n    return <div className=\"pad-4p\">\r\n        <h1>Award Title</h1>\r\n        <div>\r\n        {\r\n            titles.map((x, i) => <div key={i} className=\"card-parent\">\r\n                <button className=\"button card\" onClick={() => {\r\n                    if (selectedBeanKey != null){\r\n                        dispatch(beanSetTitle({beanKey: selectedBeanKey, titleKey: x.key}))\r\n                        props.closeModal();\r\n                    }\r\n                }}>\r\n                    {x.headwear} {x.name} {x.badge}\r\n                </button>\r\n            </div>)\r\n        }\r\n        </div>\r\n    </div>\r\n};","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { TransformComponent, TransformWrapper } from \"react-zoom-pan-pinch\";\r\nimport './App.css';\r\nimport './chrome/chrome.css';\r\nimport { IEvent } from './events/Events';\r\nimport { GameStorageInstance, isGame } from './GameStorage';\r\nimport { BrainwashingContent } from './modal-content/Brainwashing';\r\nimport { SocietyPanel } from './modal-content/Society';\r\nimport { EconomyReport } from './modal-content/EconomyReport';\r\nimport { EscapeMenu } from './modal-content/EscapeMenu';\r\nimport { GovernmentPanel } from './modal-content/Gov';\r\nimport { GreetingPanel } from './modal-content/GreetingPanel';\r\nimport { LoadGameMenu } from './modal-content/LoadGameMenu';\r\nimport { MainMenu } from './modal-content/MainMenu';\r\nimport { ResearchPanel } from './modal-content/Research';\r\nimport { TraitsReport } from './modal-content/TraitsReport';\r\nimport { MoverStoreInstance } from './MoverStoreSingleton';\r\nimport { WorldTile2 } from './petri-ui/WorldTile';\r\nimport { DetailPanel } from './right-panel/DetailPanel';\r\nimport { EventsPanel } from './right-panel/Events';\r\nimport { GoalsPanel } from './right-panel/Goals';\r\nimport { MarketPanel } from './right-panel/MarketPanel';\r\nimport { SignalStoreInstance } from './SignalStore';\r\nimport { Point } from './simulation/Geography';\r\nimport { MoverStore } from './simulation/MoverBus';\r\nimport { GetSeedName } from './simulation/SeedGen';\r\nimport { animate_beans, animate_pickups, animate_ufos } from './simulation/WorldSim';\r\nimport { doSelectBean, doSelectBuilding, doSelectNone } from './state/features/selected.reducer';\r\nimport { cheatAdd, loadGame, newGame, worldTick } from './state/features/world.reducer';\r\nimport { RootState, store as StoreState } from './state/state';\r\nimport { AutosaveWidget } from './widgets/Autosave';\r\nimport { BubbleNumberText, BubbleSeenTraitsText } from './widgets/BubbleText';\r\nimport { BotsAmount, CapsuleLabel, EnergyAmount, HedonAmount } from './widgets/CapsuleLabel';\r\nimport { Modal } from './widgets/Modal';\r\nimport { SeasonWidget } from './widgets/Season';\r\nimport { SocialGraph } from './widgets/SocialGraph';\r\nimport { GeoNetworkButtons, StopPlayFastButtons } from './widgets/StopPlayFast';\r\nimport { TimelyEventToggle } from './widgets/TimelyEventToggle';\r\nimport { WorldSfxInstance, WorldSound } from './WorldSound';\r\nimport { EntitleModalContent } from './modal-content/Entitling';\r\n\r\nexport type ModalView = 'mainmenu'|'loadgame'|'escapemenu'|'greeting' | 'economy' | 'society' | 'gov' | 'polisci' | 'brainwash' | 'traits'|'entitle';\r\ninterface AppPs {\r\n}\r\ninterface AppState {\r\n  activeModal: ModalView | null;\r\n  activeMain: 'geo' | 'network';\r\n  activeRightPanel: 'events' | 'overview' | 'goals' | 'market';\r\n  timeScale: number;\r\n  spotlightEvent: IEvent | undefined;\r\n  cursor?: Point;\r\n  newGameSeed: string;\r\n}\r\nexport const SfxContext = React.createContext<WorldSound|undefined>(undefined);\r\nexport const MoverContext = React.createContext<MoverStore>(MoverStoreInstance);\r\n\r\nconst LogicTickMS = 2000;\r\nconst SpotlightDurationTimeMS = 5000;\r\nconst store = StoreState;\r\n\r\nconst AutosaveMilliseconds = 15 * 1000;\r\nclass App extends React.Component<AppPs, AppState>{\r\n  constructor(props: AppPs) {\r\n    super(props);\r\n    this.state = {\r\n      activeMain: 'geo',\r\n      activeModal: 'mainmenu',\r\n      activeRightPanel: 'overview',\r\n      timeScale: 0,\r\n      spotlightEvent: undefined,\r\n      newGameSeed: GetSeedName()\r\n    };\r\n  }\r\n  private previousTimeMS: DOMHighResTimeStamp = 0;\r\n  private logicTickAccumulatorMS: number = 0;\r\n  private millisecondsSinceLastSave: DOMHighResTimeStamp = 0;\r\n  private saveAccumulatorMS: number = 0;\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.keyupHandler, false);\r\n    window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n      this.previousTimeMS = time;\r\n      window.requestAnimationFrame(this.tick);\r\n    });\r\n    store.subscribe(() => {\r\n      const s = store.getState();\r\n      if ((s.selected.selectedBeanKey != null || s.selected.selectedBuildingKey != null || s.selected.selectedDistrictKey != null) && this.state.activeRightPanel != 'overview'){\r\n        this.setState({activeRightPanel: 'overview'});\r\n      }\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.keyupHandler);\r\n  }\r\n  tick = (timeMS: DOMHighResTimeStamp) => {\r\n    // Compute the delta-time against the previous time\r\n    const deltaTimeMS = (timeMS - this.previousTimeMS);\r\n    // Update the previous time\r\n    this.previousTimeMS = timeMS;\r\n\r\n    if (deltaTimeMS > 0) {\r\n      const gameDeltaTimeMS = deltaTimeMS * this.state.timeScale;\r\n\r\n      animate_ufos(store.getState().world, deltaTimeMS).map(x => store.dispatch(x));\r\n      if (gameDeltaTimeMS > 0){\r\n        this.logicTickAccumulatorMS += deltaTimeMS;\r\n        animate_pickups(store.getState().world, deltaTimeMS).map(x => store.dispatch(x));\r\n        animate_beans(store.getState().world, deltaTimeMS).map(x => store.dispatch(x));\r\n  \r\n        if (this.logicTickAccumulatorMS > LogicTickMS) {\r\n          store.dispatch(worldTick())\r\n          this.logicTickAccumulatorMS = 0;\r\n        }\r\n      }\r\n      this.millisecondsSinceLastSave += deltaTimeMS;\r\n      //save every 30 seconds\r\n      if(GameStorageInstance.Dirty.current && this.millisecondsSinceLastSave > AutosaveMilliseconds){\r\n        GameStorageInstance.SaveGame(store.getState().world);\r\n        this.millisecondsSinceLastSave = 0;\r\n      }\r\n    }\r\n    window.requestAnimationFrame(this.tick);\r\n  }\r\n  cheatMode: boolean = false;\r\n  keyupHandler = (event: KeyboardEvent) => {\r\n    if (event.key === ' ') {\r\n      if (this.state.timeScale > 0) {\r\n        this.setState({ timeScale: 0 });\r\n      } else {\r\n        this.setState({ timeScale: 1 });\r\n      }\r\n    } else if (event.key === 'Escape') {\r\n      if (this.state.activeModal === 'greeting')\r\n        store.dispatch(newGame({seed: this.state.newGameSeed}))\r\n      this.setState({activeModal: null});\r\n    } else if (this.cheatMode && event.key === 'A') {\r\n      store.dispatch(cheatAdd())\r\n    } else if (this.cheatMode && event.key === 'Q') {\r\n      // if (this.state.world.cities[0].book.getBuildings().filter(x => x.type === 'farm').length < 1){\r\n      //   this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.emptyHex.build.farm.energy || 0;\r\n      //   this.state.world.alien.bots.amount += this.state.world.alien.difficulty.cost.emptyHex.build.farm.bots || 0;\r\n      //   // this.build(this.state.world.cities[0], { q: 1, r: 1 }, 'farm');\r\n      //   this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.emptyHex.build.house.energy || 0;\r\n      //   this.state.world.alien.bots.amount += this.state.world.alien.difficulty.cost.emptyHex.build.house.bots || 0;\r\n      //   // this.build(this.state.world.cities[0], { q: 1, r: 0 }, 'house');\r\n      //   this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.emptyHex.build.hospital.energy || 0;\r\n      //   this.state.world.alien.bots.amount += this.state.world.alien.difficulty.cost.emptyHex.build.hospital.bots || 0;\r\n        // this.build(this.state.world.cities[0], { q: 0, r: 1 }, 'hospital');\r\n      // }\r\n      // this.state.world.alien.energy.amount += (this.state.world.alien.difficulty.cost.hex.beam.energy || 0) * 4;\r\n      // this.beam(this.state.world.cities[0], { q: 0, r: 0 });\r\n      // this.beam(this.state.world.cities[0], { q: 1, r: 0 });\r\n      // this.beam(this.state.world.cities[0], { q: 0, r: 1 });\r\n      // this.beam(this.state.world.cities[0], { q: 1, r: 1 });\r\n    } else if (this.cheatMode && event.key === 'S') {\r\n      // this.state.world.beans.get.forEach((b) => {\r\n      //   if (this.state.world.alien.difficulty.cost.bean.scan.energy){\r\n      //     if (this.state.world.alien.energy.amount < this.state.world.alien.difficulty.cost.bean.scan.energy)\r\n      //       this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.bean.scan.energy;\r\n      //   }\r\n      //   // this.scan(b);\r\n      // });\r\n    }\r\n    this.cheatMode = event.shiftKey && event.key === 'C';\r\n  }\r\n  onDeath = (event: IEvent) => {\r\n    WorldSfxInstance.play('death');\r\n    this.startSpotlight(event);\r\n  }\r\n  private timescaleBeforeSpotlight: number = 1;\r\n  startSpotlight(event: IEvent) {\r\n    this.timescaleBeforeSpotlight = this.state.timeScale;\r\n    this.setState({\r\n      spotlightEvent: event,\r\n      timeScale: 0\r\n    }, () => {\r\n      setTimeout(() => this.endSpotlight(), SpotlightDurationTimeMS);\r\n    });\r\n  }\r\n  endSpotlight() {\r\n    this.setState({\r\n      timeScale: this.timescaleBeforeSpotlight,\r\n      spotlightEvent: undefined\r\n    });\r\n  }\r\n  getPanel() {\r\n    switch (this.state.activeRightPanel) {\r\n      case 'overview':\r\n        return <DetailPanel \r\n          openBrainwash={() => this.setState({ activeModal: 'brainwash' })}\r\n          openEntitle={() => this.setState({activeModal: 'entitle'})}\r\n        ></DetailPanel>\r\n      case 'goals':\r\n        return <GoalsPanel></GoalsPanel>\r\n      case 'events':\r\n        return <EventsPanel></EventsPanel>\r\n      case 'market': \r\n        return <MarketPanel></MarketPanel>\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n      <SfxContext.Provider value={WorldSfxInstance}>\r\n      <MoverContext.Provider value={MoverStoreInstance}>\r\n        <div className=\"canvas\">\r\n          {\r\n            this.state.activeMain === 'network' ? <div className=\"canvas\">\r\n              <SocialGraph\r\n                city={store.getState().world.cities.byID[0]}\r\n                onClickBuilding={(b) => store.dispatch(doSelectBuilding({\r\n                  cityKey: store.getState().world.cities.allIDs[0], \r\n                  buildingKey: b.key,\r\n                 }))}\r\n                onClick={(b) => {\r\n                  store.dispatch(doSelectBean({cityKey: b.cityKey, beanKey: b.key }));\r\n                }} ></SocialGraph>\r\n            </div> : <TransformWrapper\r\n              minScale={.65}\r\n              centerZoomedOut={true}\r\n              centerOnInit={true}\r\n              initialPositionX={5000}\r\n              limitToBounds={false}\r\n              alignmentAnimation={{disabled:true}}\r\n              wheel={{ step: 0.05 }}>\r\n              <TransformComponent>\r\n                <div className=\"world\">\r\n                  {\r\n                  store.getState().world.cities.allIDs.map((t) => {\r\n                    return (\r\n                      <WorldTile2 cityKey={t} key={t}\r\n                        onClick={() => {\r\n                          \r\n                        }}\r\n                      ></WorldTile2>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </TransformComponent>\r\n            </TransformWrapper>\r\n          }\r\n          <div className=\"overlay\">\r\n            <Modal show={this.state.activeModal == 'mainmenu'}>\r\n              <MainMenu startGame={() => this.setState({activeModal: 'greeting'})} loadGame={(slot: number) => {\r\n                const game = GameStorageInstance.GetGame(slot);\r\n                if (isGame(game)){\r\n                  store.dispatch(loadGame({newState: game.game}));\r\n                  this.setState({activeModal: null});\r\n                }\r\n              }}></MainMenu>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'loadgame'} onClick={() => {\r\n              this.setState({ activeModal: null });\r\n              store.dispatch(newGame({seed: this.state.newGameSeed}));\r\n              }\r\n            }>\r\n              <LoadGameMenu></LoadGameMenu>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'escapemenu'} onClick={() => {\r\n              this.setState({ activeModal: null });\r\n              store.dispatch(newGame({seed: this.state.newGameSeed}));\r\n              }\r\n            }>\r\n              <EscapeMenu></EscapeMenu>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'greeting'} onClick={() => {\r\n              this.setState({ activeModal: null });\r\n              store.dispatch(newGame({seed: this.state.newGameSeed}));\r\n              }\r\n            }>\r\n              <GreetingPanel seed={this.state.newGameSeed} changeSeed={(s) => this.setState({newGameSeed: s})}></GreetingPanel>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'gov'} onClick={() => this.setState({ activeModal: null })}>\r\n              <GovernmentPanel></GovernmentPanel>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'polisci'} onClick={() => this.setState({ activeModal: null })}>\r\n              <ResearchPanel></ResearchPanel>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'society'} onClick={() => this.setState({ activeModal: null })}>\r\n              <SocietyPanel></SocietyPanel>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({ activeModal: null })}>\r\n              {(this.state.activeModal == 'economy' ? <EconomyReport></EconomyReport> : '')}\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'traits'} onClick={() => this.setState({ activeModal: null })}>\r\n              <TraitsReport></TraitsReport>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'brainwash'} onClick={() => this.setState({ activeModal: null })}>\r\n              <BrainwashingContent></BrainwashingContent>\r\n            </Modal>\r\n            <Modal show={this.state.activeModal == 'entitle'} onClick={() => this.setState({ activeModal: null })} className=\"modal-tiny\">\r\n              <EntitleModalContent closeModal={() => this.setState({activeModal: null})}></EntitleModalContent>\r\n            </Modal>\r\n            <div className=\"left\">\r\n              <div className=\"top\">\r\n                <span>👽 Alien 🌍 Utopia 🔬 Lab</span>\r\n                <SeasonWidget></SeasonWidget>\r\n                <StopPlayFastButtons timeScale={this.state.timeScale} setTimeScale={(n: number) => { this.setState({ timeScale: n }) }}></StopPlayFastButtons>\r\n                <GeoNetworkButtons setActiveMain={(v) => this.setState({ activeMain: v })} activeMain={this.state.activeMain} ></GeoNetworkButtons>\r\n                <AutosaveWidget></AutosaveWidget>\r\n              </div>\r\n              <div className=\"bottom\">\r\n                <BubbleNumberText changeEvent={SignalStoreInstance.alienEnergy} icon=\"⚡️\">\r\n                  <CapsuleLabel icon=\"⚡️\" label=\"Energy\">\r\n                    <EnergyAmount></EnergyAmount>\r\n                  </CapsuleLabel>\r\n                </BubbleNumberText>\r\n                <BubbleNumberText changeEvent={SignalStoreInstance.alienBots} icon=\"🤖\">\r\n                  <CapsuleLabel icon=\"🤖\" label=\"Bots\">\r\n                    <BotsAmount></BotsAmount>\r\n                  </CapsuleLabel>\r\n                </BubbleNumberText>\r\n                <BubbleNumberText changeEvent={SignalStoreInstance.alienHedons} icon=\"👍\">\r\n                  <CapsuleLabel icon=\"👍\" label=\"Hedons\">\r\n                    <HedonAmount></HedonAmount>\r\n                  </CapsuleLabel>\r\n                </BubbleNumberText>\r\n                {/* <BubbleText changeEvent={this.state.world.alien.tortrons.change} icon=\"💔\">\r\n                  <CapsuleLabel icon=\"💔\" label=\"Tortrons\">\r\n                    {this.state.world.alien.tortrons.amount.toFixed(0)}\r\n                  </CapsuleLabel>\r\n                </BubbleText> */}\r\n                <span>\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'economy' })}>📊 State of the Utopia</button>\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'gov' })}>🗳️ Gov</button>\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'polisci' })}>🧪 Research</button>\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'society' })}>👑 Society</button>\r\n                  <BubbleSeenTraitsText changeEvent={SignalStoreInstance.newTraitSeen} icon=\"🧠\">\r\n                    <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'traits' })}>🧠 Traits</button>\r\n                  </BubbleSeenTraitsText>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"right\">\r\n              <div className=\"full-width-tabs\">\r\n                <button onClick={() => {this.setState({ activeRightPanel: 'overview' });}}>📈 Info</button>\r\n                <button onClick={() => {this.setState({ activeRightPanel: 'market' }); store.dispatch(doSelectNone())}}>🛍️ Market</button>\r\n                <button onClick={() => {this.setState({ activeRightPanel: 'events' }); store.dispatch(doSelectNone())}}>\r\n                  <TimelyEventToggle event={SignalStoreInstance.events} eventIcon=\"🚨\" eventClass=\"police-siren\">📣</TimelyEventToggle> Events\r\n                </button>\r\n                <button onClick={() => {this.setState({ activeRightPanel: 'goals' }); store.dispatch(doSelectNone())}}>🏆 Goals</button>\r\n              </div>\r\n              <div className=\"right-panel\">\r\n                {this.getPanel()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n      </MoverContext.Provider>\r\n      </SfxContext.Provider>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}