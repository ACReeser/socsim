{"version":3,"sources":["simulation/Time.tsx","events/Events.tsx","simulation/Geography.tsx","petri-ui/Building.tsx","simulation/Priorities.tsx","simulation/Agent.tsx","simulation/Beliefs.tsx","simulation/Bean.tsx","WorldGen.tsx","simulation/Economy.tsx","World.tsx","simulation/Politics.tsx","simulation/Institutions.tsx","simulation/Government.tsx","Game.tsx","simulation/Player.tsx","simulation/Utils.tsx","simulation/City.tsx","widgets/Modal.tsx","widgets/NeedReadout.tsx","right-panel/OverviewPanel.tsx","petri-ui/AnimatedBean.tsx","petri-ui/WorldTile.tsx","modal-content/EconomyReport.tsx","right-panel/Events.tsx","widgets/CardButton.tsx","right-panel/BeanPanel.tsx","modal-content/FoundParty.tsx","widgets/Dropdown.tsx","widgets/PolicyDropdown.tsx","modal-content/PartyOverview.tsx","App.tsx","widgets/BubbleText.tsx","widgets/SocialGraph.tsx","widgets/CapsuleLabel.tsx","right-panel/Goals.tsx","modal-content/Campaigns.tsx","modal-content/Gov.tsx","modal-content/Research.tsx","widgets/StopPlayFast.tsx","widgets/CostSmall.tsx","right-panel/HexPanel.tsx","widgets/StringDropdown.tsx","modal-content/BeliefRow.tsx","modal-content/Brainwashing.tsx","serviceWorker.js","index.js"],"names":["Season","PubSub","onPublish","callbacks","args","this","forEach","c","callback","push","splice","indexOf","ChangePubSub","EventBus","speechcrime","birth","death","Now","world","year","date","season","day","withinLastYear","current","last","Hex","q","r","hex_directions","hex_direction","direction","hex_neighbor","hex","dir","hex_ring","center","radius","a","k","results","cube","b","hex_add","i","j","move_towards","target","maxDistanceDelta","x","y","magnitude","Math","sqrt","lerp","t","cube_lerp","z","cube_round","rx","round","ry","rz","x_diff","abs","y_diff","z_diff","cube_to_axial","axial_to_cube","cube_linedraw","N","cube_distance","layout_flat","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","origin_point","hex_to_pixel","size","origin","h","M","polarToPoint","p","cos","az","sin","getBuildingTransform","geo","type","key","byType","coordByID","transformPoint","hex_size","petriOrigin","background","transform","BuildingIcon","GoodToBuilding","JobToBuilding","Geography","byCoord","house","all","farm","hospital","theater","courthouse","church","movers","numberOfRings","hexes","concat","hex_spiral","petriRadius","length","where","building","undefined","slot_size","getSlotOffset","PetriBuilding","map","d","className","style","props","city","slots","React","Component","PriorityNode","value","priority","DumbPriorityQueue","_values","values","sort","shift","PriorityQueue","index1","index2","temp","index","parentIndex","floor","swap","bubbleUp","elementPriority","leftChildIndex","rightChildIndex","leftChildPriority","rightChildPriority","indexToSwap","poppedNode","pop","bubbleDown","AgentState","data","agent","elapsed","deltaMS","difficulty","newState","_act","Elapsed","IdleState","Bean","top","GetPriorities","dequeue","TravelState","createFromIntent","act","destinations","pos","newPos","speed","location","intent","ActToState","create","nearby","getNearestNeighbors","maybeChat","targets","filter","nn","chat","getRandomChat","state","ChatState","participation","createFromDestination","good","RouteRandom","job","IntentToDestination","WorkState","economy","law","work","BuyState","sinceLastAttemptMS","attempts","_bought","buy","tryBuy","getCrimeDecision","CrimeState","lastChatMS","Date","now","steal","GetPriority","bean","inventory_priority","market","getBeansListings","JobToGood","quantity","wealth_priority","cash","costOfLiving","min","discrete_food","bean_life","vital_thresh","food","sufficient","discrete_stamina","shelter","discrete_health","medicine","queue","node","enqueue","mover","buildingType","destination","GetRandom","destinationKey","address","start","pt","pixel_to_hex","offset","Route","PrimaryBeliefData","prog","noun","adj","icon","description","trad","ego","NarrativeBeliefData","rocket","dragon","music","noFaith","SecondaryBeliefData","Diligence","idealCon","idealPro","Greed","Neuroticism","Anarchism","Charity","Globalism","Natalism","Authority","Hedonism","Tribalism","Dogmatism","Mysticism","Pacifism","Paranoia","Evangelism","Fanaticism","Sadism","Antagonism","IsBeliefDivergent","belief","utopiaMotive","utopiaCommunity","reduce","isDivergent","con","IsIdealDivergent","BeliefsAll","Object","keys","cityKey","alive","dob","bornInPetri","name","sanity","discrete_sanity","activity_queue","markers","ethnicity","lastApproval","community","ideals","faith","beliefs","partyLoyalty","lastHappiness","lastSentiment","lastPartySentiment","ticksSinceLastSale","lastApprovalDate","lastInsultDate","fairGoodPrice","buyFood","buyMeds","fun","buyHousing","jobQueue","onAct","econ","homeCity","mods","TraitToModifier","health","majorityEthnicity","reason","mod","MaslowHappinessScore","Deficient","getCostOfLiving","party","result","environment","differingPolicies","policy","GetHappiness","getHappinessModifiers","sent","getSentimentModifiers","myGood","getFairGoodPrice","traits","policies","multiplier","fx","mag","bad","idea","canBaby","preachBelief","crimeReason","roll","random","chance","Boolean","tryFindRandomJob","GoodToThreshold","beans","newJob","mostInDemandJob","produceAndPrice","groceries","tryTransact","bought","housing","starve","maybeDie","exposure","meds","breedBean","trigger","message","isInCrisis","direct","canDonate","threshold","baseChance","cause","die","onCitizenDie","abundant","AllGoods","Economy","OrderBook","charity","unfulfilledSeasonalDemand","totalSeasonalDemand","totalSeasonalSupply","onBeanDie","deadBean","g","existing","lucky","getRandomCitizen","sellerCityKey","sellerBeanKey","seller","buyer","minDemand","maxDemand","listing","getLowestPriceListing","actualDemand","price","transact","listings","subtractFromListing","addNewListing","getOrgsListings","inventory","addNewOrgListing","max","GoodToJob","supply","demand","fullListings","l","numberOfSamePriceListings","lowPrice","find","sellerOrganizationKey","sale","org","BaseParty","playerKey","organizations","slogan","availablePolicies","proposedPolicy","availableCampaigns","activeCampaigns","politicalCapital","materialCapital","labor","activeHQs","platform","seasonalBudget","ax","policyTree","NoPolicy","axis","Policies","hint","PolicyTree","dict","pol","PolicyByKey","institutionKey","parentInstitution","beansHelped","addCharity","Government","triadToString","cost","sign","costs","energy","bots","psi","join","DefaultDifficulty","emptyHex","build","kidnap","scan","Goals","found_utopia","text","check","build_house_n_farm","cities","reward","kidnap_3","Number_Starting_City_Pop","alien","scanned_bean","set_policy","brainwash","Player","amount","income","change","next_grade","goals","goalProgress","publish","canAfford","purchase","goal","done","step","shuffle","array","counter","World","institutions","Spring","yearsEvents","bus","onChat","beanKey","calculate","calculateBeliefs","inflate","resetYearlyCounters","resetSeasonalDemand","fundOrganizations","e","age","maybeBaby","getTaxesAndDonations","calculateComputedState","checkGoals","listener","exit","enter","ChangeState","Act","percent","sum","o","yearlyInflationDollars","richest","obj","winner","yearsPartyDonations","budget","list","historicalBeans","institute","TraitIcon","hapMod","Sufficient","Abundant","GoodIcon","reportIdeals","_report","reportCommunity","defWin","beanPropGet","avg","stash","trait","City","url","houses","partyHQ","doOnCitizenDie","shuffled","parent","GenerateBean","donation","maybeDonate","count","circle","square","triangle","source","squared","pow","GetRandomNumber","randomBuffer","Uint32Array","window","crypto","getRandomValues","randomNumber","ceil","choices","PI","GenerateBuilding","newBuilding","numberOf","occupied_slots","empty_slots","addBuilding","GenerateWorld","wel_food","wel_house","wel_health","econ_ex","econ_labor","econ_sub","cul_rel","cul_theo","cul_ed","law_vote","law_bribe","law_imm","tax_basic","tax_second","GenerateCity","previousCityCount","newCity","cityPopulation","previousBeanCount","newBean","beanBeliefCount","base","StartingCash","Modal","show","hideCloseButton","onClick","closeButtonText","children","getButton","NeedReadout","dire","need","dire_style","width","full","full_style","header","keyToName","OverviewPanel","utopia","clearCity","avg_happy","avg_cash","avg_approval","report","toFixed","AxisReadout","maj","AnimatedBean","animate","setState","point","spin","face","getFace","speech","getSpeech","delaySeedSec","paused","static","subscribe","getIdea","classes","sitStill","animationDelay","title","stopPropagation","getPurchase","WorldTile","mtn_transforms","tile","activeTileID","onBeanClick","deaths","left","buildings","renderBuildings","regions","xy","onHexClick","mtns","height","cx","cy","stroke","fill","median","half","EconomyReport","food_median","health_median","wealth_total","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","s","jobs","unemployed","jobless","reducer","farmer","builder","doc","EventsPanel","events","selectBean","href","CardButton","thin","singleLine","subtext","TraitToCard","BeanPanel","faceOverride","_resetFace","insult","support","innerView","setTimeout","scanned","beliefTable","happyTable","ActivityIcon","divergent","colSpan","bind","chanceToDonate","renderTraits","renderInner","FoundParty","onName","onSlogan","onCity","ideal","members","val","onBigFourChange","checked","onChange","onCommunity","currentTarget","onIdeal","disabled","onFound","Dropdown","selected","hidden","options","getTitleForOption","getTextForOption","required","PolicyDropdown","PartyOverview","policyKey","setPolicy","magToTextSw","compass","BubbleText","ev","id","positive","bubbles","changeEvent","unsubscribe","bubbleClass","SocialGraph","CapsuleLabel","classN","label","GoalsPanel","progress","tooltip","renderReward","renderGoal","margin","CampaignsPanel","GovernmentPanel","ResearchPanel","StopPlayFastButtons","timeScale","setTimeScale","CostSmall","HexPanel","eHex","clearHex","lookupBuilding","buildingPanel","emptyPanel","StringDropdown","titleCase","toUpperCase","slice","str","EditBeliefInput","frozen","available","wash","SortedBeliefs","localeCompare","AddBeliefInput","add","console","log","BrainwashingContent","beanID","washCommunity","brainwash_ideal","washMotive","washNarrative","washBelief","brainwash_secondary","implantBelief","brainimplant_secondary","hungry","sated","stuffed","podless","crowded","homeowner","sick","bruised","fresh","sane","confused","mad","App","previousTimeMS","logicTickAccumulatorMS","tick","timeMS","deltaTimeMS","simulate_beans","simulate_world","requestAnimationFrame","keyupHandler","event","foundParty","activeModal","what","foundCharity","tryPurchase","oldFaith","activeCityID","activeBeanID","activeHex","activeMain","activeRightPanel","document","addEventListener","time","removeEventListener","gift","player","beankey","COL","renderNetwork","renderGeo","defaultScale","wheel","main","n","getPanel","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.577a481c.chunk.js","sourcesContent":["import { World } from \"../World\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\n\r\nexport interface IDate{\r\n    day: number;\r\n    season: Season;\r\n    year: number;\r\n}\r\n\r\nexport function Now(world: World){\r\n    return {year: world.date.year, season: world.date.season, day: world.date.day};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","import { IChatData } from \"../simulation/Agent\";\r\n\r\nexport type EventTrigger = 'speechcrime'|'birth'|'death';\r\n\r\nexport interface IEvent{\r\n    icon: string;\r\n    message: string;\r\n    beanKey?: number;\r\n    trigger: EventTrigger;\r\n}\r\n\r\nexport class PubSub<T>{\r\n    constructor(private onPublish?: (args: T) => void){}\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public publish(args: T){\r\n        if (this.onPublish)\r\n            this.onPublish(args);\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\nexport type IEventBus = {[key in EventTrigger]: PubSub<IEvent>};\r\n\r\nexport class EventBus implements IEventBus{\r\n    speechcrime = new PubSub<IEvent>();\r\n    birth = new PubSub<IEvent>();\r\n    death = new PubSub<IEvent>();\r\n}","import { TraitGood, TraitJob } from \"../World\";\r\n\r\nexport interface HexPoint{\r\n    q: number;\r\n    r: number;\r\n}\r\nexport class Hex implements HexPoint{\r\n    constructor(public q: number, public r: number){}\r\n}\r\nexport const hex_directions: HexPoint[] = [\r\n    new Hex(+1, 0), new Hex(+1, -1), new Hex(0, -1), \r\n    new Hex(-1, 0), new Hex(-1, +1), new Hex(0, +1), \r\n];\r\nexport function hex_direction(direction: number): HexPoint{\r\n    return hex_directions[direction]\r\n}\r\n\r\nexport function hex_neighbor(hex: HexPoint, direction: number): HexPoint{\r\n    var dir = hex_direction(direction)\r\n    return new Hex(hex.q + dir.q, hex.r + dir.r)\r\n}\r\nexport function hex_distance(a: HexPoint, b: HexPoint): number{\r\n    return (Math.abs(a.q - b.q) \r\n          + Math.abs(a.q + a.r - b.q - b.r)\r\n          + Math.abs(a.r - b.r)) / 2\r\n}\r\nexport function hex_add(a: HexPoint, b: HexPoint): HexPoint {\r\n    return new Hex(a.q + b.q, a.r + b.r);\r\n}\r\nexport function hex_scale(a: HexPoint, k: number): HexPoint {\r\n    return new Hex(a.q * k, a.r * k);\r\n}\r\nexport function hex_ring(center: HexPoint, radius: number): HexPoint[]{\r\n    var results: HexPoint[] = [];\r\n    // this code doesn't work for radius == 0; can you see why?\r\n    var cube = hex_add(center, \r\n                        hex_scale(hex_direction(4), radius));\r\n    for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < radius; j++) {\r\n            results.push(cube)\r\n            cube = hex_neighbor(cube, i);       \r\n        }\r\n    }\r\n    return results;\r\n}\r\nexport function hex_spiral(center: HexPoint, radius: number): HexPoint[]{\r\n    var results = [center];\r\n    for (let k = 0; k < radius; k++) {\r\n        results = results.concat(hex_ring(center, k));\r\n        //console.log(results);   \r\n    }\r\n    return results;\r\n}\r\n\r\nexport function move_towards(current: Point, target: Point, maxDistanceDelta: number)\r\n{\r\n    const a: Point = {x: target.x - current.x, y: target.y - current.y};\r\n    const magnitude = Math.sqrt(a.x * a.x + a.y * a.y);\r\n    if (magnitude <= maxDistanceDelta || magnitude == 0)\r\n    {\r\n        return target;\r\n    }\r\n    return {\r\n        x: current.x + a.x / magnitude * maxDistanceDelta,\r\n        y: current.y + a.y / magnitude * maxDistanceDelta,\r\n    };\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number{\r\n    return a + (b - a) * t\r\n}\r\n\r\nexport function vector_lerp(a: Point, b: Point, t: number): Point{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t)\r\n    };\r\n}\r\nfunction cube_lerp(a: CubicPoint, b: CubicPoint, t: number): CubicPoint{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t),\r\n        z: lerp(a.z, b.z, t)\r\n    };\r\n}\r\nfunction cube_distance(a: CubicPoint, b: CubicPoint): number{\r\n    return (Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z)) / 2\r\n}\r\nfunction cube_round(cube: CubicPoint): CubicPoint{\r\n    var rx = Math.round(cube.x);\r\n    var ry = Math.round(cube.y);\r\n    var rz = Math.round(cube.z);\r\n\r\n    var x_diff = Math.abs(rx - cube.x)\r\n    var y_diff = Math.abs(ry - cube.y)\r\n    var z_diff = Math.abs(rz - cube.z)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff)\r\n        rx = -ry-rz;\r\n    else if (y_diff > z_diff)\r\n        ry = -rx-rz;\r\n    else\r\n        rz = -rx-ry;\r\n\r\n    return {x: rx, y: ry, z: rz};\r\n}\r\nfunction round_point_to_hex(hex: HexPoint): HexPoint{\r\n    return cube_to_axial(cube_round(axial_to_cube(hex)))\r\n\r\n}\r\nfunction cube_to_axial(cube: CubicPoint){\r\n    var q = cube.x;\r\n    var r = cube.z;\r\n    return new Hex(q, r);\r\n}\r\nfunction axial_to_cube(hex: HexPoint): CubicPoint{\r\n    return {\r\n        x: hex.q,\r\n        z: hex.r,\r\n        y: -hex.q-hex.r\r\n    };\r\n}\r\nfunction cube_linedraw(a: CubicPoint, b: CubicPoint): HexPoint[]{\r\n    var N = cube_distance(a, b);\r\n    var results: HexPoint[] = [];\r\n    for (let i = 0; i <= N; i++) {\r\n        results.push(cube_to_axial(cube_round(cube_lerp(a, b, 1.0/N * i))))\r\n    }\r\n    return results;\r\n}\r\nexport function hex_linedraw(a: HexPoint, b: HexPoint): HexPoint[]{\r\n    return cube_linedraw(axial_to_cube(a), axial_to_cube(b));\r\n}\r\n\r\nclass Orientation {\r\n    // angle is in multiples of 60°\r\n    constructor(public f0: number, public f1: number, public  f2: number, public f3: number,\r\n        public b0: number, public b1: number,public b2: number,public b3: number,\r\n        public start_angle: number){}\r\n};\r\nexport const layout_flat: Orientation = new Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0),\r\n                2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0,\r\n                0.0);\r\nexport const origin_point: Point = {x: 0, y: 0};\r\nexport function hex_to_pixel(size: Point, origin: Point, h: HexPoint): Point {\r\n    const M: Orientation = layout_flat;\r\n    const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\r\n    const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\r\n    return {x: x + origin.x, y: y + origin.y};\r\n}\r\nexport function pixel_to_hex(size: Point, origin: Point, p: Point) {\r\n    const M = layout_flat;\r\n    const pt = {x: (p.x - origin.x) / size.x,\r\n                y: (p.y - origin.y) / size.y\r\n            };\r\n    const q = M.b0 * pt.x + M.b1 * pt.y;\r\n    const r = M.b2 * pt.x + M.b3 * pt.y;\r\n    return new Hex(q, r);\r\n}\r\n\r\n\r\nexport interface PolarPoint{\r\n    /**\r\n     * radius (in pixels)\r\n     */\r\n    r: number;\r\n    /**\r\n     * azimuth (radians)\r\n     */\r\n    az: number;\r\n}\r\n\r\nexport function polarToPoint(p: PolarPoint): Point{\r\n    return {\r\n        x: p.r * Math.cos(p.az),\r\n        y: p.r * Math.sin(p.az)\r\n    }\r\n}\r\n\r\nexport function distanceBetweenPolar(a: PolarPoint, b: PolarPoint): number{\r\n    const aCart = polarToPoint(a);\r\n    const bCart = polarToPoint(b)\r\n    return Math.sqrt(\r\n        Math.pow(aCart.x - aCart.x, 2) +\r\n        Math.pow(bCart.y - aCart.y, 2)\r\n    );\r\n}\r\n\r\nexport interface Point{\r\n    x: number; y: number;\r\n}\r\nexport interface Vector extends Point{\r\n}\r\nexport interface CubicPoint extends Point{\r\n    z: number;\r\n}\r\n\r\n\r\n/**\r\n * matter lookup, returns CSS transforms for translation\r\n * @param geo \r\n * @param type \r\n * @param key \r\n */\r\nexport function getBuildingTransform(geo: Geography, type: BuildingTypes, key: number){\r\n    const p = geo.byType[type].coordByID[key];\r\n    if (p)\r\n        return transformPoint(hex_to_pixel(geo.hex_size, geo.petriOrigin, p));\r\n    else\r\n        return {background: 'red'}\r\n}\r\nexport function transformPoint(p: Point){\r\n    return {transform:`translate(${p.x}px, ${p.y}px)`};\r\n}\r\n\r\nexport interface IBuilding{\r\n    key: number;\r\n    type: BuildingTypes;\r\n    occupied_slots: Point[],\r\n    empty_slots: Point[],\r\n    \r\n}\r\nexport class Building{\r\n    public key: number = 0;\r\n    public type: BuildingTypes = 'farm';\r\n    public occupied_slots: Point[] = [];\r\n    public empty_slots: Point[] = [];\r\n\r\n    public reserve_slot(): Point|undefined{\r\n        const s = this.empty_slots.pop();\r\n        if (s){\r\n            this.occupied_slots.push(s);\r\n        }\r\n        return s;\r\n    }\r\n    public free_slot(point: Point){\r\n        const i = this.occupied_slots.findIndex((x) => x.x == point.x && x.y == point.y);\r\n        if (i > -1)\r\n            this.occupied_slots.splice(i, 1);\r\n        this.empty_slots.push(point);\r\n    }\r\n}\r\n\r\n/**\r\n * address books allow lookups from entity \"name\" to location\r\n */\r\nexport interface AddressBookHex{\r\n    [entityKey: number]: HexPoint\r\n}\r\nexport interface AddressBookPoint{\r\n    [entityKey: number]: Point\r\n}\r\n/**\r\n * address grids allow lookups from location to entity\r\n * \r\n * note: coordinates are of form \"X,Y\"\r\n * and the map cannot distinguish between hex and cartesian points\r\n */\r\nexport interface AddressGrid<T>{\r\n    [coordinate: string]: T|undefined\r\n}\r\nexport interface AddressBuildingGrid extends AddressGrid<IBuilding>{}\r\n\r\nexport interface BuildingMap{\r\n    coordByID: AddressBookHex;\r\n    all: IBuilding[];\r\n}\r\n\r\nexport type BuildingTypes = 'farm'|'house'|'hospital'|'church'|'theater'|'courthouse';\r\nexport type MoverTypes = 'bean';\r\nexport type MatterTypes = MoverTypes|BuildingTypes;\r\n\r\nexport const BuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🎑',\r\n    'house': '🏡', 'hospital': '🏥', 'church': '⛪', 'theater': '🏟️', 'courthouse':'🏫'\r\n};\r\nexport const GoodToBuilding: {[key in TraitGood]: BuildingTypes} = {\r\n    'food': 'farm',\r\n    'shelter': 'house', 'medicine':'hospital', 'fun': 'theater'\r\n};\r\nexport const JobToBuilding: {[key in TraitJob]: BuildingTypes} = {\r\n    'farmer': 'farm',\r\n    'builder': 'house', 'doc':'hospital', 'entertainer': 'theater',\r\n    'cleric': 'church', 'jobless': 'house', 'polit': 'house'\r\n};\r\n\r\nexport class Geography{\r\n    public byCoord: AddressBuildingGrid = {};\r\n    public byType: {[type in BuildingTypes]: BuildingMap} = {\r\n        house: {coordByID: {}, all: []},\r\n        farm: {coordByID: {}, all: []},\r\n        hospital: {coordByID: {}, all: []},\r\n        theater: {coordByID: {}, all: []},\r\n        courthouse: {coordByID: {}, all: []},\r\n        church: {coordByID: {}, all: []},\r\n    }\r\n     \r\n    public movers: {[key in MoverTypes]: AddressBookPoint} = {\r\n        'bean': {}\r\n    };\r\n    public numberOf(type: BuildingTypes): number {\r\n        return this.byType[type].all.length;\r\n    }\r\n    lookupBuilding(hex: HexPoint): undefined|IBuilding {\r\n        return this.byCoord[hex.q+','+hex.r];\r\n    }\r\n    addBuilding(where: HexPoint, building: IBuilding) {\r\n        this.byType[building.type].all.push(building);\r\n        this.byType[building.type].coordByID[building.key] = where;\r\n        this.byCoord[where.q+','+where.r] = building;\r\n        return null;\r\n    }\r\n    removeBuilding(where: HexPoint, building: IBuilding) {\r\n        const i = this.byType[building.type].all.indexOf(building);\r\n        this.byType[building.type].all.splice(i, 1);\r\n        delete this.byType[building.type].coordByID[building.key];\r\n        this.byCoord[where.q+','+where.r] = undefined;\r\n        return null;\r\n    }\r\n    public numberOfRings = 5;\r\n    public hexes: HexPoint[] = hex_spiral({q:0, r:0}, this.numberOfRings);\r\n    public hex_size: Point = {x: 70, y: 70};\r\n    public readonly petriRadius = 550;\r\n    public readonly petriOrigin = {x: this.petriRadius, y: this.petriRadius};\r\n}","\r\nimport React from \"react\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, Geography, getBuildingTransform, hex_directions, transformPoint, hex_to_pixel, origin_point, HexPoint } from \"../simulation/Geography\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport './Building.css';\r\n\r\nconst slot_size = {\r\n    x: 25,\r\n    y: 25\r\n}\r\nexport function getSlotOffset(direction: HexPoint){\r\n    return hex_to_pixel(slot_size, origin_point, direction);\r\n}\r\nexport function getRandomSlotOffset(){\r\n    return getSlotOffset(GetRandom(hex_directions));\r\n}\r\n\r\nexport class PetriBuilding extends React.Component<{\r\n    city: Geography,\r\n    building: IBuilding\r\n}> {\r\n    slots() {\r\n        return hex_directions.map((d, i) => {\r\n            return <span key={i} className=\"slot\" style={transformPoint(getSlotOffset(d))}>\r\n\r\n            </span>\r\n        });\r\n    }\r\n    render() {\r\n        return <div key={this.props.building.type+this.props.building.key} style={getBuildingTransform(this.props.city, this.props.building.type, this.props.building.key)} \r\n        className={\"building \"+this.props.building.type}>\r\n        {BuildingIcon[this.props.building.type]}\r\n        {this.slots()}\r\n        </div>\r\n    }\r\n}","export class PriorityNode<T>{\r\n    constructor(public value: T, public priority: number){}\r\n}\r\nexport interface IPriorityQueue<T>{\r\n    enqueue(value: PriorityNode<T>): void;\r\n    values: PriorityNode<T>[];\r\n    dequeue(): PriorityNode<T>|undefined;\r\n}\r\nexport class DumbPriorityQueue<T> implements IPriorityQueue<T>{\r\n    \r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n    \r\n    enqueue(value: PriorityNode<T>): void{\r\n        this.values.push(value);\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n\r\n    enqueueMany(values: PriorityNode<T>[]){\r\n        this.values = values;\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n    \r\n    dequeue(): PriorityNode<T>|undefined{\r\n        return this.values.shift();\r\n    }\r\n}\r\n\r\nexport class PriorityQueue<T> implements IPriorityQueue<T>{\r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n\r\n    //helper method that swaps the values and two indexes of an array\r\n    swap(index1: number, index2: number){\r\n        let temp = this.values[index1];\r\n        this.values[index1] = this.values[index2];\r\n        this.values[index2] = temp;\r\n        return this.values;\r\n    }\r\n    //helper methods that bubbles up values from end\r\n    bubbleUp(){\r\n        //get index of inserted element\r\n        let index = this.values.length - 1\r\n        //loop while index is not 0 or element no loger needs to bubble\r\n        while(index > 0){\r\n            //get parent index via formula\r\n            let parentIndex = Math.floor((index - 1)/2);\r\n            //if values is greater than parent, swap the two\r\n            if(this.values[parentIndex].priority > this.values[index].priority){\r\n                //swap with helper method\r\n                this.swap(index, parentIndex);\r\n                //change current index to parent index\r\n                index = parentIndex;\r\n            } else{\r\n                break;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    // method that pushes new value onto the end and calls the bubble helper\r\n    enqueue(value: PriorityNode<T>){\r\n        this.values.push(value)\r\n        //calculate parent, if parent is greater swap\r\n        //while loop or recurse\r\n        this.bubbleUp();\r\n        return this.values\r\n    }\r\n\r\n    bubbleDown(){\r\n        let parentIndex = 0;\r\n        const length = this.values.length;\r\n        const elementPriority = this.values[0].priority;\r\n        //loop breaks if no swaps are needed\r\n        while (true){\r\n            //get indexes of child elements by following formula\r\n            const leftChildIndex = (2 * parentIndex) + 1;\r\n            const rightChildIndex = (2 * parentIndex) + 2;\r\n            let leftChildPriority = 999;\r\n            let rightChildPriority;\r\n            let indexToSwap = null;\r\n            // if left child exists, and is greater than the element, plan to swap with the left child index\r\n            if(leftChildIndex < length){\r\n                leftChildPriority = this.values[leftChildIndex].priority\r\n                if(leftChildPriority < elementPriority){\r\n                    indexToSwap = leftChildIndex;\r\n                }\r\n            }\r\n            //if right child exists\r\n            if(rightChildIndex < length){\r\n                rightChildPriority = this.values[rightChildIndex].priority;\r\n\r\n                if(\r\n                    //if right child is greater than element and there are no plans to swap\r\n                    (rightChildPriority < elementPriority && indexToSwap === null) ||\r\n                    //OR if right child is greater than left child and there ARE plans to swap\r\n                    (rightChildPriority < leftChildPriority && indexToSwap !== null))\r\n                {\r\n                    //plan to swap with the right child\r\n                    indexToSwap = rightChildIndex\r\n                }\r\n            }\r\n            //if there are no plans to swap, break out of the loop\r\n            if(indexToSwap === null){\r\n                break;\r\n            } \r\n            //swap with planned element\r\n            this.swap(parentIndex, indexToSwap);\r\n            //starting index is now index that we swapped with\r\n            parentIndex = indexToSwap;\r\n        }  \r\n    }\r\n\r\n    dequeue(): PriorityNode<T>|undefined{\r\n        //swap first and last element\r\n        this.swap(0, this.values.length - 1);\r\n        //pop max value off of values\r\n        let poppedNode = this.values.pop();\r\n        //re-adjust heap if length is greater than 1\r\n        if(this.values.length > 1){\r\n            this.bubbleDown();\r\n        }\r\n        \r\n        return poppedNode;\r\n    }\r\n}","import { Agent } from \"https\";\r\nimport { Bean, DaysUntilSleepy } from \"./Bean\";\r\nimport { getRandomSlotOffset } from \"../petri-ui/Building\";\r\nimport { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitGood, GoodToThreshold, JobToGood, TraitSanity, GoodIcon } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { BuildingTypes, Geography, GoodToBuilding, HexPoint, hex_linedraw, hex_to_pixel, IBuilding, JobToBuilding, move_towards, pixel_to_hex, Point, Vector } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { PubSub } from \"../events/Events\";\r\nimport { DumbPriorityQueue, IPriorityQueue, PriorityNode, PriorityQueue } from \"./Priorities\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\n\r\nexport type Act = 'travel'|'work'|'sleep'|'chat'|'soapbox'|'craze'|'idle'|'buy'|'crime';\r\n\r\n/**\r\n * cruise == interruptible travel towards destination\r\n * \r\n * approach == uninterruptible travel into destination slot\r\n */\r\nexport type Travel = 'cruise'|'approach';\r\n\r\nexport interface IActListener{\r\n    onChat: (b: Bean, speech: IChatData) => void;\r\n}\r\n\r\nexport interface IActivityData {\r\n    act: Act;\r\n    elapsed?: number;\r\n    location?: Point, //FROM Point\r\n    destinations?: Point[]; //point to travel to??\r\n    intent?: IActivityData; //when travelling, what do you intend to do next\r\n    good?: TraitGood; //good to buy or work\r\n    timeSpent?: number; //time spent on this action\r\n    travel?: Travel;\r\n    chat?: IChatData;\r\n}\r\n\r\nexport interface IChatData{\r\n    participation: 'speaker'|'listener';\r\n    type: 'praise'|'bully'|'preach';\r\n    preachBelief?: TraitBelief;\r\n    /**\r\n     * strength of the preacher's persuasion\r\n     */\r\n    persuasionStrength?: number;\r\n    /**\r\n     * target key of the bean who is targeted for praise or bully\r\n     */\r\n    targetBeanKey?: number;\r\n}\r\n\r\nexport interface IAgent {\r\n    state: AgentState;\r\n    onAct?: PubSub<number>;\r\n    jobQueue: PriorityQueue<AgentState>;\r\n}\r\nexport function ChangeState(agent: IAgent, newState: AgentState){\r\n    //if ((agent as any)['key'] === 0)\r\n    //console.log(`from ${agent.state.data.act} to ${newState.data.act} in ${agent.state.Elapsed}`);\r\n    agent.state.exit(agent);\r\n    agent.state = newState;\r\n    agent.state.enter(agent);\r\n}\r\nexport function Act(agent: IAgent, deltaMS: number, difficulty: IDifficulty, listener: IActListener): void{\r\n    const result = agent.state.act(agent, deltaMS, difficulty);\r\n    if (agent.onAct)\r\n        agent.onAct.publish(deltaMS);\r\n    if (result != agent.state){\r\n        ChangeState(agent, result);\r\n        if (result.data.act === 'chat' && result.data.chat?.participation === 'speaker'){\r\n            listener.onChat(agent as Bean, result.data.chat);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class AgentState{\r\n    constructor(public data: IActivityData){}\r\n    public get Elapsed(): number {return this.data.elapsed || 0;}\r\n    enter(agent: IAgent){\r\n        this.data.elapsed = 0;\r\n    }\r\n    act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        const newState = this._act(agent, deltaMS, difficulty);\r\n        this.data.elapsed = this.Elapsed + deltaMS;\r\n        return newState;\r\n    }\r\n    abstract _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState;\r\n    exit(agent: IAgent){\r\n\r\n    }\r\n}\r\nexport class IdleState extends AgentState{\r\n    static create(){ return new IdleState({act: 'idle'})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed < 200){\r\n            return this;\r\n        }\r\n        if (agent instanceof Bean && agent.city){\r\n            const priorities = GetPriorities(agent, difficulty);\r\n            const top = priorities.dequeue();\r\n            if (top){\r\n                return TravelState.createFromIntent(agent, top.value);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nexport function IntentToDestination(agent: IAgent, intent: IActivityData): Point[]{\r\n    if (!(agent instanceof Bean) || agent.city == null)\r\n        return [];\r\n\r\n    switch(intent.act){\r\n        case 'buy':\r\n            if (intent.good)\r\n                return RouteRandom(agent.city, agent, GoodToBuilding[intent.good]);\r\n        case 'work':\r\n            return RouteRandom(agent.city, agent, JobToBuilding[agent.job]);\r\n    }\r\n    return [];\r\n}\r\n\r\nexport class TravelState extends AgentState{\r\n    static createFromIntent(agent: IAgent, intent: IActivityData): TravelState{\r\n        return this.createFromDestination(IntentToDestination(agent, intent), intent);\r\n    }\r\n    static createFromDestination(destinations: Point[], intent: IActivityData): TravelState{ \r\n        return new TravelState({act: 'travel', destinations: destinations, intent: intent});\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (agent instanceof Bean && agent.city && this.data.destinations && this.data.destinations.length){\r\n            const pos = agent.city.movers['bean'][agent.key];\r\n            const target = this.data.destinations[0];\r\n            const newPos = move_towards(pos, target, deltaMS / 1000 * agent.speed);\r\n            \r\n            agent.city.movers['bean'][agent.key] = newPos;\r\n            if (newPos.x == target.x && newPos.y == target.y){\r\n                this.data.location = newPos;\r\n                this.data.destinations.shift();\r\n            }\r\n        }\r\n        if (this.data.destinations == null || this.data.destinations.length === 0){\r\n            if (this.data.intent)\r\n                return ActToState[this.data.intent.act](this.data.intent);\r\n            else\r\n                return IdleState.create();\r\n        } else if (agent instanceof Bean && agent.city) {\r\n            const nearby = agent.city.getNearestNeighbors(agent);\r\n            if (nearby.length && agent.maybeChat()){\r\n                const targets = nearby.filter((nn) => nn.maybeChat());\r\n                if (targets.length < 1)\r\n                    return this;\r\n                const chat: IChatData = agent.getRandomChat(targets);\r\n                targets.forEach((z) => z.state = ChatState.create(this.data.intent, {...chat, participation: 'listener'}));\r\n                return ChatState.create(this.data, chat);\r\n            } else {\r\n                return this;\r\n            }\r\n        } else {\r\n            return this;\r\n        }\r\n    }\r\n}\r\nexport class WorkState extends AgentState{\r\n    static create(good: TraitGood){ return new WorkState({act: 'work', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 2000 && agent instanceof Bean && this.data.good && agent.city?.economy && agent.city?.law){\r\n            agent.work(agent.city.law, agent.city.economy);\r\n            return IdleState.create();\r\n        }\r\n        \r\n        return this;\r\n    }\r\n}\r\nexport class BuyState extends AgentState{\r\n    static create(good: TraitGood){ return new BuyState({act: 'buy', good: good})}\r\n    private sinceLastAttemptMS: number = 0;\r\n    private attempts: number = 0;\r\n    tryBuy(agent: IAgent){\r\n        if (agent instanceof Bean && this.data.good && agent.city?.economy)\r\n        {\r\n            this._bought = agent.buy[this.data.good](agent.city.economy);\r\n        }\r\n        this.sinceLastAttemptMS = 0;\r\n        this.attempts++;\r\n    }\r\n    enter(agent: IAgent){\r\n        this.tryBuy(agent);\r\n    }\r\n    private _bought: boolean = false;\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (!this._bought){\r\n            if (this.sinceLastAttemptMS > 250)\r\n            {\r\n                this.tryBuy(agent);\r\n                if(this.attempts >= 3 && (this.data.good == 'food' || this.data.good == 'medicine') &&\r\n                    agent instanceof Bean &&\r\n                    agent.getCrimeDecision(this.data.good, 'desperation')){\r\n                    return CrimeState.create(this.data.good);\r\n                }\r\n            }\r\n        }\r\n        if (this.Elapsed > 1500)\r\n            return IdleState.create();\r\n        else\r\n            return this;\r\n    }\r\n}\r\nexport class ChatState extends AgentState{\r\n    static create(intent: IActivityData|undefined, chat: IChatData){ \r\n        return new ChatState({act: 'chat', intent: intent, chat: chat})\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (this.Elapsed > 1000 && this.data.intent){\r\n            return TravelState.createFromIntent(agent, this.data.intent);\r\n        }\r\n        return this;\r\n    }\r\n    exit(agent: IAgent){\r\n        if (agent instanceof Bean && this.data.chat){\r\n            agent.lastChatMS = Date.now();\r\n        }\r\n    }\r\n}\r\nexport class CrimeState extends AgentState{\r\n    static create(good: 'food'|'medicine'){ return new CrimeState({act: 'crime', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 1500 && agent instanceof Bean && agent.city?.economy && \r\n            (this.data.good === 'food' ||\r\n            this.data.good === 'medicine')){\r\n            agent.steal(this.data.good, agent.city?.economy);\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nconst ActToState: {[key in Act]: (data: IActivityData) => AgentState} = {\r\n    'idle': (data) => new IdleState(data),\r\n    'work': (data) => new WorkState(data),\r\n    'chat': (data) => new ChatState(data),\r\n    'travel': (data) => new TravelState(data),\r\n    'craze': (data) => new BuyState(data),\r\n    'buy': (data) => new BuyState(data),\r\n    'sleep': (data) => new BuyState(data),\r\n    'soapbox': (data) => new BuyState(data),\r\n    'crime': (data) => new BuyState(data)\r\n}\r\n\r\nexport const GetPriority = {\r\n    work: function(bean:Bean): number{\r\n        if (bean.job == 'jobless'){\r\n            return 0;\r\n        }\r\n        else if (bean.city){\r\n            //beans with no inventory prioritize work higher\r\n            let inventory_priority = 99;\r\n            if (bean.city.economy){\r\n                const quant = bean.city.economy.market.getBeansListings(bean, JobToGood(bean.job))?.quantity || 0;\r\n                inventory_priority = quant;\r\n            }\r\n            //beans with lots of cash prioritize work higher\r\n            const wealth_priority = bean.cash / bean.city.costOfLiving / 2;\r\n            return Math.min(inventory_priority, wealth_priority);\r\n        } else {\r\n            return 0;\r\n        }\r\n    },\r\n    food: function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 0.5 + (bean.discrete_food / difficulty.bean_life.vital_thresh.food.sufficient )\r\n    },\r\n    shelter: function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 1 + (bean.discrete_stamina / difficulty.bean_life.vital_thresh.shelter.sufficient )\r\n    },\r\n    medicine:function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 1 + (bean.discrete_health / difficulty.bean_life.vital_thresh.medicine.sufficient )\r\n    },\r\n}\r\n\r\nexport function GetPriorities(bean: Bean, difficulty: IDifficulty): IPriorityQueue<IActivityData>{\r\n    const queue = new DumbPriorityQueue<IActivityData>([]);\r\n    let node = new PriorityNode<IActivityData>({act: 'work', good: JobToGood(bean.job)} as IActivityData, GetPriority.work(bean));\r\n    queue.enqueue(node)\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'food'} as IActivityData, GetPriority.food(bean, difficulty));\r\n    queue.enqueue(node)\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'shelter'} as IActivityData, GetPriority.shelter(bean, difficulty));\r\n    queue.enqueue(node)\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'medicine'} as IActivityData, GetPriority.medicine(bean, difficulty));\r\n    queue.enqueue(node)\r\n    return queue;\r\n}\r\n\r\nexport function ActivityIcon(data: IActivityData): string{\r\n    switch(data.act){\r\n        case 'work':\r\n            if (data.good)\r\n                return '💪 '+ GoodIcon[data.good];\r\n            else\r\n                return '💪';\r\n        case 'buy':\r\n            if (data.good == 'shelter')\r\n                return '😴';\r\n            if (data.good)\r\n                return '💸 '+ GoodIcon[data.good];\r\n            else\r\n                return '💸';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean{    \r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith: TraitFaith;\r\n    shelter: TraitShelter;\r\n    health: TraitHealth;\r\n    discrete_food: number;\r\n    cash: number;\r\n    dob: IDate;\r\n    sanity: TraitSanity;\r\n}\r\n\r\nexport interface IMover{\r\n    key: number;\r\n    speed: number;\r\n    direction: Vector;\r\n    markers: Point[];\r\n    destinationKey: number;\r\n}\r\n\r\nexport function Step(geo: Geography, mover: IMover){\r\n    if (mover.markers.length){\r\n        const pos = geo.movers['bean'][mover.key];\r\n        const target = mover.markers[0];\r\n        const newPos = move_towards(pos, target, mover.speed);\r\n        geo.movers['bean'][mover.key] = newPos;\r\n        if (newPos.x == target.x && newPos.y == target.y){\r\n            mover.markers.pop();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * fills out \"markers\" and \"destinationKey\" with random building of type\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function RouteRandom(geo: Geography, mover: IMover, buildingType: BuildingTypes){\r\n    const destination: IBuilding = GetRandom(geo.byType[buildingType].all);\r\n    mover.destinationKey = destination.key;\r\n    return Route(geo, mover, destination);\r\n}\r\n\r\n/**\r\n * fills out \"markers\" property with points to walk to destination\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function Route(geo: Geography, mover: IMover, destination: IBuilding){\r\n    const address: HexPoint = geo.byType[destination.type].coordByID[destination.key];\r\n    const start = geo.movers['bean'][mover.key];\r\n    const nearestHex = pixel_to_hex(geo.hex_size, geo.petriOrigin, start);\r\n    return hex_linedraw(nearestHex, address).map((h) => hex_to_pixel(geo.hex_size, geo.petriOrigin, h)).map((x, i, a) => {\r\n        if (i === a.length-1){\r\n            const offset = getRandomSlotOffset();\r\n            return {\r\n                x: x.x + offset.x,\r\n                y: x.y + offset.y\r\n            }\r\n        } else {\r\n            return x;\r\n        }\r\n    });\r\n}\r\nexport function Approach(geo: Geography, mover: IMover){\r\n\r\n}","import { TraitCommunity, TraitFaith, TraitIdeals } from \"../World\";\r\n\r\nexport type TraitBelief = 'Diligence'| // happy from work\r\n'Natalism'| // increased % of having kids\r\n'Authority'| \r\n'Hedonism'| \r\n'Tribalism'| \r\n'Globalism'| \r\n'Pacifism'| \r\n'Neuroticism'| // takes extra sanity damage\r\n'Dogmatism'| \r\n'Mysticism'| \r\n'Paranoia'| \r\n'Evangelism'| \r\n'Fanaticism'| // doesn't like beings that don't share narrative \r\n'Anarchism'| // breaks rules easily\r\n'Sadism'| \r\n'Antagonism'|\r\n'Charity'| // % to donate\r\n'Greed'; // steal easier\r\n\r\n// 'talkative'|\r\n// 'friendly'| // likes all beings more\r\n// 'realistic'| // lower happiness\r\n// 'athletic'| // takes less health damage\r\n// 'open-minded'| // beliefs are easily changed\r\n\r\nexport type BeliefSubject = 'self'|'other';\r\nexport const BeliefSubjectText: {[key in BeliefSubject]: string} ={\r\n    other: 'People',\r\n    self: 'I'\r\n}\r\nexport const BeliefSubjectIcon: {[key in BeliefSubject]: string} ={\r\n    other: '👇',\r\n    self: '👀'\r\n}\r\nexport type BeliefVerb = 'are'|'arenot';\r\nexport type BeliefSubjectVerbTree = {[key in BeliefSubject]: {[key in BeliefVerb]: string}};\r\nexport const BeliefVerbIcon: {[key in BeliefVerb]: string} ={\r\n    are: '✔️',\r\n    arenot: '🛑'\r\n}\r\nexport const BeliefVerbText: BeliefSubjectVerbTree ={\r\n    self: {\r\n        are: 'can be',\r\n        arenot: \"shouldn't be\"\r\n    },\r\n    other: {\r\n        are: 'should be',\r\n        arenot: 'cannot be'\r\n    }\r\n}\r\nexport interface IBeliefData {\r\n    noun: string,\r\n    adj: string,\r\n    icon: string,\r\n    description?: string,\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>\r\n}\r\nexport const PrimaryBeliefData: {[key in TraitIdeals|TraitCommunity]: IBeliefData} = {\r\n    prog: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️',\r\n        description: \"Strives to help others\"\r\n    },\r\n    trad: {\r\n        noun: 'Elitism', adj: 'Elitist', icon: '👑',\r\n        description: \"Strives for individual power\"\r\n    },\r\n    state: {\r\n        noun: 'Collectivism', adj: 'Collectivist', icon: '🕊️',\r\n        description: \"Trusts in the social group\"\r\n    },\r\n    ego: {\r\n        noun: 'Independence', adj: 'Independent', icon: '🦅',\r\n        description: \"Trusts only in oneself\"\r\n    },\r\n}\r\nexport const NarrativeBeliefData: {[key in TraitFaith]: IBeliefData} = {\r\n    rocket: {\r\n        noun: 'Futurism', adj: 'Futuristic', icon: '🚀',\r\n        description: \"Loves stories of the far future\"\r\n    },\r\n    dragon: {\r\n        noun: 'Mythology', adj: 'Mythical', icon: '🐲',\r\n        description: \"Loves stories of the legendary past\"\r\n    },\r\n    music: {\r\n        noun: 'Drama', adj: 'Dramatic', icon: '🎵',\r\n        description: \"Loves stories of emotional bonding\"\r\n    },\r\n    noFaith: {\r\n        noun: 'Nihilism', adj: 'Nihilist', icon: '⚫️',\r\n        description: \"Hates fairy tales\"\r\n    },\r\n}\r\nexport const SecondaryBeliefData: {[key in TraitBelief]: IBeliefData} = {\r\n    Diligence: {\r\n        noun: 'Diligence', adj: 'Diligence', icon: '💪',\r\n        description: \"🎲 to gain 🙂 while working\",\r\n        idealCon: ['trad'], idealPro: ['state', 'ego']\r\n    },\r\n    Greed: {\r\n        noun: 'Greed', adj: 'Greedy', icon: '💰',\r\n        description: \"+10% Crime 🎲\",\r\n        idealCon: ['prog'], idealPro: ['trad']\r\n    },\r\n    Neuroticism: {\r\n        noun: 'Neuroticism', adj: 'Neurotic', icon: '😱',\r\n        description: \"+100% 🧠 damage\",\r\n        idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n    Anarchism: {\r\n        noun: 'Anarchism', adj: 'Anarchist', icon: '🖕',\r\n        description: \"+33% Crime 🎲\",\r\n        idealCon: ['state', 'prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Charity: {\r\n        noun: 'Charity', adj: 'Charitable', icon: '😇',\r\n        description: \"🎲 to gift 💰 to the penniless\",\r\n        idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Globalism: {\r\n        noun: 'Globalism', adj: 'Globalist', icon: '🌍',\r\n        description: \"🎲 to 👏 other hair colors\",\r\n        idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Natalism: {\r\n        noun: 'Natalism', adj: 'Natalist', icon: '👶',\r\n        description: \"+15% 🎲 for 👶\"\r\n    },\r\n    Authority: {\r\n        noun: 'Authority', adj: 'Authoritarian', icon: '👢',\r\n        description: \"-10% Crime 🎲\",\r\n        idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    Hedonism: {\r\n        noun: 'Hedonism', adj: 'Hedonistic', icon: '💋',\r\n        description: \"🎲 to skip work and gain 🙂\",\r\n        idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Tribalism: {\r\n        noun: 'Tribalism', adj: 'Tribal', icon: '🏰',\r\n        description: \"🎲 to 👎 other hair colors\",\r\n        idealCon: ['prog'], idealPro: ['state', 'ego']\r\n    },\r\n    Dogmatism: {\r\n        noun: 'Dogmatism', adj: 'Dogmatic', icon: '🐶',\r\n        description: \"cannot be persuaded\",\r\n        idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    Mysticism: {\r\n        noun: 'Mysticism', adj: 'Mystical', icon: '🔮',\r\n        description: \"🎲 to 👏 in any conversation\",\r\n        idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Pacifism: {\r\n        noun: 'Pacifism', adj: 'Pacifist', icon: '😘',\r\n        description: \"will never punish others\",\r\n        idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Paranoia: {\r\n        noun: 'Paranoia', adj: 'Paranoid', icon: '👽',\r\n        description: \"🎲 to 👎 in any conversation\",\r\n        idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n    Evangelism: {\r\n        noun: 'Evangelism', adj: 'Evangelist', icon: '📣',\r\n        description: \"+50% persuasion of 🎭\",\r\n        idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    Fanaticism: {\r\n        noun: 'Fanaticism', adj: 'Fanatical', icon: '👺',\r\n        description: \"🎲 to 👎 other 🎭\",\r\n        idealCon: ['prog'], idealPro: []\r\n    },\r\n    Sadism: {\r\n        noun: 'Sadism', adj: 'Sadistic', icon: '😈',\r\n        description: \"🎲 to ☠️ other when receiving 👎\"\r\n    },\r\n    Antagonism: {\r\n        noun: 'Antagonism', adj: 'Antagonistic', icon: '🤬',\r\n        description: \"+15% Crime 🎲, +25% walk speed\"\r\n    },\r\n};\r\n\r\nexport function IsIdealDivergent(con: TraitCommunity|TraitIdeals, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    switch(con){\r\n        case 'trad':\r\n        case 'prog':\r\n            return con == utopiaMotive;\r\n        case 'state':\r\n        case 'ego':\r\n            return con == utopiaCommunity;\r\n    }\r\n}\r\n\r\nexport function IsBeliefDivergent(belief: TraitBelief, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    const data = SecondaryBeliefData[belief];\r\n    return data.idealCon != null && data.idealCon.reduce((isDivergent: boolean, con) => {\r\n        return isDivergent || IsIdealDivergent(con, utopiaMotive, utopiaCommunity);\r\n    }, false);\r\n}\r\n\r\nexport interface BeliefSubjectOption {key: BeliefSubject};\r\nexport interface BeliefVerbOption {key: BeliefVerb};\r\nexport interface BeliefAdjOption {key: TraitBelief};\r\n\r\nexport const BeliefSubjectAll: BeliefSubject[] = ['self', 'other'];\r\nexport const BeliefVerbAll: BeliefVerb[] = ['are', 'arenot'];\r\nexport const BeliefsAll = Object.keys(SecondaryBeliefData).map((x) => x as TraitBelief);\r\n\r\nexport interface Belief{\r\n    subject: BeliefSubject;\r\n    verb: BeliefVerb;\r\n    adj: TraitBelief;\r\n}","import { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitFood, TraitJob, JobToGood, IHappinessModifier, TraitToModifier, MaslowHappinessScore, GetHappiness, GoodToThreshold, TraitGood, TraitSanity } from \"../World\";\r\nimport { RandomEthno, GetRandom } from \"../WorldGen\";\r\nimport { Economy, ISeller } from \"./Economy\";\r\nimport { Policy, Party } from \"./Politics\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\nimport { IDate, withinLastYear } from \"./Time\";\r\nimport { Government } from \"./Government\";\r\nimport { AgentState, IActivityData, IAgent, IBean, IChatData, IdleState, IMover } from \"./Agent\";\r\nimport { Point } from \"./Geography\";\r\nimport { City } from \"./City\";\r\nimport { PriorityQueue } from \"./Priorities\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\n\r\n\r\nconst BabyChance = 0.01;\r\nexport const DaysUntilSleepy = 7;\r\nconst ChatCooldownMS = 4000;\r\nexport class Bean implements IBean, ISeller, IMover, IAgent{\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public alive: boolean = true;\r\n    public dob: IDate = {year: 0, season: 0, day: 1};\r\n    public bornInPetri: boolean = false;\r\n    public name: string = 'Human Bean';\r\n    public sanity: TraitSanity = 'sane'\r\n    public discrete_sanity: number = 10;\r\n\r\n    public activity_queue: IActivityData[] = [];\r\n    public speed = 60;\r\n    public direction = {x: 0,y:0}; \r\n    public markers: Point[] = [];\r\n    public destinationKey = 0;\r\n\r\n\r\n    public city: City|null = null;\r\n\r\n    public ethnicity: TraitEthno = RandomEthno();\r\n    public lastApproval: IDate = {year: -1, season: 0, day: 0};\r\n\r\n    //maslow\r\n    public discrete_food: number = 1;\r\n    public get food(): TraitFood {\r\n        if (this.discrete_food >= GoodToThreshold['food'].abundant)\r\n        return 'stuffed';\r\n        else if (this.discrete_food >= GoodToThreshold['food'].sufficient)\r\n        return 'sated'\r\n        else\r\n        return 'hungry';\r\n    }\r\n    public shelter: TraitShelter = 'crowded';\r\n    public discrete_health: number = 2;\r\n    public get health(): TraitHealth {\r\n        if (this.discrete_health >= GoodToThreshold['medicine'].abundant)\r\n        return 'fresh';\r\n        else if (this.discrete_health >= GoodToThreshold['medicine'].sufficient)\r\n        return 'bruised'\r\n        else\r\n        return 'sick';\r\n    }\r\n    //values\r\n    public community: TraitCommunity = 'ego';\r\n    public ideals: TraitIdeals = 'trad';\r\n    //other\r\n    public job: TraitJob = 'jobless';\r\n    public faith: TraitFaith = 'noFaith';\r\n    public beliefs: TraitBelief[] = [];\r\n    public cash: number = 3;\r\n    public partyLoyalty: number = 0.2;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastHappiness: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastSentiment: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastPartySentiment: number = 0;\r\n    public ticksSinceLastSale: number = 0;\r\n    public discrete_stamina: number = 7;\r\n    public lastApprovalDate: IDate = {year: -1, season: 0, day: 0};\r\n    public lastInsultDate: IDate = {year: -1, season: 0, day: 0};\r\n    public fairGoodPrice: number = 1;\r\n    public lastChatMS: number = Date.now();\r\n    get isInCrisis(): boolean{\r\n        return this.food == 'hungry' ||\r\n        this.shelter == 'podless' ||\r\n        this.health == 'sick';\r\n    }\r\n    getHappinessModifiers(econ: Economy, homeCity: City, law: Government): IHappinessModifier[]{\r\n        const mods: IHappinessModifier[] = [\r\n            TraitToModifier[this.food],\r\n            TraitToModifier[this.shelter],\r\n            TraitToModifier[this.health],\r\n        ];\r\n        if (this.ideals == 'trad' && this.ethnicity != homeCity.majorityEthnicity) {\r\n            mods.push({reason: 'Xenophobic', mod: -.1});\r\n        }\r\n        if (this.cash < 1) {\r\n            mods.push({reason: 'Penniless', mod: MaslowHappinessScore.Deficient});\r\n        } else if (this.cash > econ.getCostOfLiving() * 3){\r\n            mods.push({reason: 'Upper Class', mod: 0.3});\r\n        } else if (this.cash > econ.getCostOfLiving() * 2){\r\n            mods.push({reason: 'Middle Class', mod: 0.15});\r\n        }\r\n        if (this.job == 'jobless') {\r\n            mods.push({reason: 'Unemployed', mod: MaslowHappinessScore.Deficient});\r\n        }\r\n\r\n        return mods;\r\n    }\r\n    getSentimentModifiers(econ: Economy, homeCity: City, law: Government, party: Party): {\r\n        party: IHappinessModifier[],\r\n        law: IHappinessModifier[]\r\n    }{\r\n        const result = {party: [] as IHappinessModifier[], law: [] as IHappinessModifier[]};\r\n\r\n        if (this.community == party.community){\r\n            result.party.push({reason: 'Same Community', mod: 0.15});\r\n        }\r\n        if (this.ideals == party.ideals){\r\n            result.party.push({reason: 'Same Ideals', mod: 0.15});\r\n        } else if (this.community != party.community){\r\n            result.party.push({reason: 'Incompatible Values', mod: -0.15});\r\n        }\r\n        if (homeCity.environment && withinLastYear(homeCity.environment, this.lastApprovalDate)){\r\n            result.party.push({reason: 'Public Endorsement', mod: 0.2});   \r\n        }\r\n        party.differingPolicies(law).forEach((policy) => {\r\n            if (policy.community && policy.community == this.community){\r\n                result.party.push({reason: 'Likes '+policy.name, mod: 0.1});\r\n            } else if (policy.ideals && policy.ideals == this.ideals){\r\n                result.party.push({reason: 'Likes '+policy.name, mod: 0.1});\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    calculateBeliefs(econ: Economy, homeCity: City, law: Government, party: Party): void{\r\n        this.lastHappiness = GetHappiness(this.getHappinessModifiers(econ, homeCity, law));\r\n        const sent = this.getSentimentModifiers(econ, homeCity, law, party);\r\n        this.lastSentiment = GetHappiness(sent.law);\r\n        this.lastPartySentiment = GetHappiness(sent.party);\r\n\r\n        if (this.job == 'jobless'){\r\n            this.fairGoodPrice = 1;\r\n        } else {\r\n            const myGood = JobToGood(this.job);\r\n            this.fairGoodPrice = econ.getFairGoodPrice(myGood);\r\n        }\r\n    }\r\n    /**\r\n     * non-normalized multiplier\r\n     */\r\n    getSentimentPolicies(traits: {[x:string]:boolean}, policies: Policy[]){\r\n        let multiplier = 100;\r\n        policies.forEach((policy) => {\r\n            policy.fx.forEach((fx) => {\r\n                if (traits[fx.key])\r\n                multiplier += fx.mag * 10; //-30 to +30\r\n            });\r\n        });\r\n        return multiplier / 100;\r\n    }\r\n    _getTraitMap(){\r\n        let traits = {[this.community]: true, [this.ideals]:  true, [this.ethnicity]: true};\r\n        if (this.faith != 'noFaith')\r\n            traits[this.faith] = true;\r\n        return traits;\r\n    }\r\n    getFace(): string{\r\n        if (!this.alive)\r\n            return '💀';\r\n        if (this.state.data.act == 'buy' && this.state.data.good == 'shelter'){\r\n            return '😴';\r\n        }\r\n        if (this.state.data.act == 'crime'){\r\n            return '😈';\r\n        }\r\n        if (this.state.data.act == 'chat'){\r\n            return this.state.data.chat?.participation === 'speaker' ? '😃' : '🤨';\r\n        }\r\n        if (this.food == 'hungry')\r\n            return '😫';\r\n        if (this.health == 'sick')\r\n            return '🤢';\r\n        if (this.shelter == 'podless')\r\n            return '🥶';\r\n        if (this.job == 'jobless')\r\n            return '😧';\r\n        if (this.lastHappiness < 0)\r\n            return '☹️';\r\n        if (this.lastHappiness >= 50)\r\n            return '🙂';\r\n        return '😐';\r\n    }\r\n    getIdea(costOfLiving: number): {bad: boolean, idea: string}|null {\r\n        if (this.food == 'hungry')\r\n            return {bad: true, idea: '🍗'};\r\n        if (this.health == 'sick')\r\n            return {bad: true, idea: '💊'};\r\n        if (this.shelter == 'podless')\r\n            return {bad: true, idea: '🏠'};\r\n        if (this.canBaby(costOfLiving))\r\n            return {bad: false, idea: '👶'};\r\n        return null;        \r\n    }\r\n    getSpeech(): string | undefined {\r\n        if (this.state.data.act === 'chat'){\r\n            if (this.state.data.chat?.participation === 'speaker' && this.state.data.chat.preachBelief){\r\n                return '💬'+SecondaryBeliefData[this.state.data.chat.preachBelief].icon;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getCrimeDecision(\r\n        good: TraitGood,\r\n        crimeReason: 'desperation'|'greed',\r\n    ){\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community == 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (crimeReason === 'desperation' && this.health === 'sick' || this.food === 'hungry'){\r\n            chance += .15;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    tryFindRandomJob(law: Government) {\r\n        if (Math.random() <= 0.5) {\r\n            this.job = GetRandom(['builder', 'doc', 'farmer']);\r\n        }\r\n    }\r\n    canInsult(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastInsultDate));\r\n    }\r\n    canSupport(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastApprovalDate));\r\n    }\r\n    public maybeChat(): boolean {\r\n        if (this.lastChatMS + ChatCooldownMS > Date.now()) \r\n            return false;\r\n        if (this.state.data.act === 'chat')\r\n            return false;\r\n        const roll = Math.random();\r\n        const chance = (this.community === 'state') ? 0.2 : 0.1;\r\n        return roll < chance;\r\n    }\r\n    public getRandomChat(nearby: Bean[]): IChatData {\r\n        const canPreach = this.beliefs.length;\r\n        if (canPreach){\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'preach',\r\n                preachBelief: GetRandom(this.beliefs)\r\n            }\r\n        } else {\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'praise'\r\n            }\r\n        }\r\n    }\r\n    work(law: Government, econ: Economy) {\r\n        if (this.job == 'jobless'){\r\n            this.tryFindRandomJob(law);\r\n        } else {\r\n            switch(this.job){\r\n                case 'farmer':\r\n                    this.discrete_food = Math.min(this.discrete_food+1, GoodToThreshold.food.sufficient*2);\r\n                    break;\r\n                case 'doc':\r\n                    this.discrete_health = Math.min(this.discrete_health+1, GoodToThreshold.medicine.sufficient*2);\r\n                    break;\r\n                case 'builder': \r\n                    this.shelter = 'crowded';\r\n                    this.discrete_stamina = 7;\r\n                    break;\r\n            }\r\n            this.ticksSinceLastSale++;\r\n            if (this.ticksSinceLastSale > 7){\r\n                const cityHasOtherWorkers = this.city ? this.city.beans.filter(x => x.job == this.job).length > 1 : false;\r\n                //underemployment\r\n                if (cityHasOtherWorkers && Math.random() > 0.5) {\r\n                    const newJob = econ.mostInDemandJob();\r\n                    if (newJob)\r\n                        this.job = newJob;\r\n                }\r\n            }\r\n            econ.produceAndPrice(this, JobToGood(this.job), 4, this.fairGoodPrice);\r\n        }\r\n    }\r\n    private buyFood(economy: Economy) {\r\n        const groceries = economy.tryTransact(this, 'food', 0.5, 3);\r\n        if (groceries)\r\n            this.discrete_food += groceries.bought;\r\n        return groceries;\r\n    }\r\n    public buy: {[key in TraitGood]: (econ: Economy)=> boolean} = {\r\n        food: (economy: Economy) =>{\r\n            return this.buyFood(economy) != null;\r\n        },\r\n        medicine:  (economy: Economy) =>{\r\n            return this.buyMeds(economy) != null;\r\n        },\r\n        fun:  (economy: Economy) =>{\r\n            return false;\r\n        },\r\n        shelter: (economy: Economy) => {\r\n            return this.buyHousing(economy);\r\n        }\r\n    }\r\n    public steal(good: 'food'|'medicine', econ: Economy){\r\n        econ.steal(good, 3);\r\n    }\r\n    private buyHousing(economy: Economy): boolean {\r\n        const housing = economy.tryTransact(this, 'shelter');\r\n        if (housing) {\r\n            this.discrete_stamina = 10;\r\n            this.shelter = 'crowded';\r\n        } else if (this.discrete_stamina <= 0){\r\n            this.shelter = 'podless';\r\n        }\r\n        return housing != null;\r\n    }\r\n\r\n    age(economy: Economy): IEvent|null {\r\n        if (!this.alive) return null;\r\n\r\n        this.discrete_food -= 1/7;\r\n        if (this.discrete_food < 0)\r\n            this.discrete_health -= 0.2;\r\n\r\n        const starve = this.maybeDie('starvation', 0.6);\r\n        if (starve)\r\n            return starve;\r\n            \r\n        if (this.shelter == 'podless')\r\n            this.discrete_health -= 1/14;\r\n        \r\n        this.discrete_stamina--;\r\n    \r\n        const exposure = this.maybeDie('exposure', 0.2);\r\n        if (exposure)\r\n            return exposure;\r\n\r\n        this.discrete_health -= 1/20;\r\n        this.discrete_health = Math.min(this.discrete_health, 3);\r\n        const sick = this.maybeDie('sickness', 0.4);\r\n        return sick;\r\n    }\r\n    private buyMeds(economy: Economy) {\r\n        const meds = economy.tryTransact(this, 'medicine', 0.5, 3);\r\n        if (meds)\r\n            this.discrete_health += meds.bought;\r\n        return meds;\r\n    }\r\n\r\n    maybeBaby(economy: Economy): IEvent | null {\r\n        if (this.canBaby(economy.getCostOfLiving()) &&\r\n            Math.random() <= BabyChance) {\r\n            if (this.city)\r\n                this.city.breedBean(this);\r\n            else\r\n                throw 'bean does not have city object';\r\n            return {icon: '🎉', trigger: 'birth', message: 'A new subject is born!'}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    canBaby(costOfLiving: number): boolean{\r\n        return this.cash > costOfLiving * 3 &&\r\n            !this.isInCrisis;\r\n    }\r\n    /**\r\n     * should return 0-1 float, with 1 meaning 100%\r\n     * @param economy \r\n     */\r\n    chanceToDonate(economy: Economy, direct: boolean = false): number{\r\n        const canDonate = this.cash > economy.getCostOfLiving() * 2 && !this.isInCrisis;\r\n        if (canDonate && this.lastPartySentiment > 0.5){\r\n            const threshold = direct ? 0.2 : 0.5;\r\n            const baseChance = this.lastPartySentiment - threshold;\r\n            return (baseChance) / 2;\r\n        }\r\n        return 0;\r\n    }\r\n    maybeDonate(economy: Economy, direct: boolean = false): number{\r\n        // const chance = this.chanceToDonate(economy, direct);\r\n        // if (chance > 0){\r\n        //     const willDonate = Math.random() < chance;\r\n        //     if (willDonate){\r\n        //         const donation = 1;\r\n        //         this.cash -= donation;\r\n        //         return donation;\r\n        //     }\r\n        // }\r\n        return 0;\r\n    }\r\n    maybeDie(cause: string, chance = 0.5): IEvent|null{\r\n        if (this.discrete_health < 0 && Math.random() <= chance) {\r\n            this.die();\r\n            return {icon: '☠️', trigger: 'death', message: `A bean died of ${cause}!`};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    die(){\r\n        this.alive = false;\r\n        this.city?.onCitizenDie(this);\r\n    }\r\n\r\n    state: AgentState = IdleState.create();\r\n    jobQueue: PriorityQueue<AgentState> = new PriorityQueue<AgentState>([]);\r\n    onAct = new PubSub<number>();\r\n}","import { TraitIdeals, TraitCommunity, TraitEthno, TraitFaith, World, TraitJob } from './World';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Policy, BaseParty, CityPartyHQ, Party, PolicyByKey, PolicyTree, IPolicy, NoPolicy } from './simulation/Politics';\r\nimport { IBuilding, BuildingTypes, Geography, PolarPoint, polarToPoint, hex_to_pixel, HexPoint } from './simulation/Geography';\r\nimport { City } from './simulation/City';\r\nimport { BeliefsAll } from './simulation/Beliefs';\r\n\r\nexport function GetRandomNumber(min: number, max: number): number{\r\n    const randomBuffer = new Uint32Array(1);\r\n    window.crypto.getRandomValues(randomBuffer);\r\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\nexport function GetRandomIndex(length: number): number{\r\n    return GetRandomNumber(0, length-1)\r\n}\r\nexport function GetRandom<S>(choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(choices.length);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(): TraitIdeals{\r\n    return GetRandom(['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(): TraitCommunity{\r\n    return GetRandom(['state', 'ego']);\r\n}\r\nexport function RandomEthno(): TraitEthno{\r\n    return GetRandom(['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(): TraitFaith{\r\n    return GetRandom(['rocket','music','dragon', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\nexport const MAX_PETRI_RADIUS = 200;\r\nexport const PI2 = Math.PI*2;\r\nexport function RandomPolar(r?: number): PolarPoint{\r\n    return {\r\n        r: r || GetRandomNumber(0, MAX_PETRI_RADIUS),\r\n        az: GetRandomNumber(0, PI2)\r\n    };\r\n}\r\nexport function GetBuildingR(type: BuildingTypes): number{\r\n    switch(type){\r\n        case 'farm':\r\n            return GetRandomNumber(200, 300);\r\n        default: \r\n            return GetRandomNumber(80, 200);\r\n    }\r\n}\r\nexport function GenerateBuilding(geo: Geography, type: BuildingTypes, hex: HexPoint){\r\n    const newBuilding: IBuilding = {\r\n        type: type,\r\n        key: geo.numberOf(type),\r\n        occupied_slots: [],\r\n        empty_slots: []\r\n    };\r\n    geo.addBuilding(hex, newBuilding);\r\n}\r\n\r\nconst Number_Starting_Cities = 1;\r\nexport function GenerateWorld(): World{\r\n    const world = new World();\r\n \r\n    world.law.policyTree = {\r\n        wel_food: PolicyByKey('0') as IPolicy,\r\n        wel_house: PolicyByKey('4') as IPolicy,\r\n        wel_health: PolicyByKey('8') as IPolicy,\r\n        econ_ex: PolicyByKey('13') as IPolicy,\r\n        econ_labor: PolicyByKey('15') as IPolicy,\r\n        econ_sub: NoPolicy,\r\n        cul_rel: PolicyByKey('21') as IPolicy,\r\n        cul_theo: NoPolicy,\r\n        cul_ed: NoPolicy,\r\n        law_vote: PolicyByKey('31') as IPolicy,\r\n        law_bribe: PolicyByKey('32') as IPolicy,\r\n        law_imm: PolicyByKey('35') as IPolicy,\r\n        tax_basic: PolicyByKey('38') as IPolicy,\r\n        tax_second: NoPolicy,\r\n        all: NoPolicy\r\n    };\r\n    world.party = new BaseParty();\r\n    world.institutions.push(world.party);\r\n    for (let i = 0; i < Number_Starting_Cities; i++) {\r\n        world.cities.push(GenerateCity(world.cities.length));\r\n        world.cities[i].doOnCitizenDie.push(world.economy.onBeanDie);\r\n        world.cities[i].environment = world.date;\r\n        world.cities[i].economy = world.economy;\r\n        world.cities[i].law = world.law;\r\n        for (let j = 0; j < world.cities[i].beans.length; j++) {\r\n            const bean = world.cities[i].beans[j];\r\n            bean.work(world.law, world.economy);\r\n            if (bean.job == 'farmer')\r\n                bean.work(world.law, world.economy);\r\n        }\r\n    }\r\n    world.economy.totalSeasonalDemand.food = world.beans.length;\r\n    world.economy.totalSeasonalDemand.shelter = world.beans.length;\r\n    world.economy.totalSeasonalDemand.medicine = world.beans.length;\r\n\r\n    return world;\r\n}\r\n\r\nexport function GeneratePartyHQ(city: City, party: Party) {\r\n    \r\n}\r\n\r\nexport const Number_Starting_City_Pop = 3;\r\nexport function GenerateCity(previousCityCount: number): City{\r\n    let newCity = new City();\r\n    newCity.key = previousCityCount;\r\n    newCity.name = GetRandom(['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', '']);\r\n    newCity.name += GetRandom(['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash']);\r\n    newCity.name += GetRandom(['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest']);\r\n    \r\n    GenerateBuilding(newCity, 'courthouse', newCity.hexes[0]); \r\n    GenerateBuilding(newCity, 'house', newCity.hexes[1]); \r\n    GenerateBuilding(newCity, 'hospital', newCity.hexes[5]);\r\n    \r\n    GenerateBuilding(newCity, 'farm', newCity.hexes[7]);\r\n\r\n    const cityPopulation = Number_Starting_City_Pop;\r\n    while(newCity.historicalBeans.length < cityPopulation){\r\n        newCity.historicalBeans.push(\r\n            GenerateBean(newCity, newCity.historicalBeans.length)\r\n        );\r\n    }\r\n\r\n    return newCity;\r\n}\r\nexport function GenerateBean(city: City, previousBeanCount: number): Bean{\r\n    let newBean = new Bean();\r\n    \r\n    newBean.key = previousBeanCount;\r\n    newBean.cityKey = city.key;\r\n    newBean.city = city;\r\n    newBean.name = GetRandom(['Joe', 'Frank', 'Jill', 'Jose',\r\n    'Johnny', 'Isabelle', 'Carmen', 'Ace', 'Carl', 'Zander', 'Jean',\r\n    'Anne', 'Leslie', 'Ben', 'Ron', \r\n    'Ellen', 'Dallas', 'Kane', 'Ash', \r\n    'Jim', 'James', 'Leonard', 'Nyota', 'Christine', 'Scotty', 'Tasha', 'Geordi', 'Beverly', 'Deanna', 'Wesley', 'Majel',\r\n    'Malcolm','River',  \r\n    'Luke', \r\n    'Dana', 'Walter',  \r\n    'Rick', \r\n    'Rose', 'Donna', 'Jack', 'Amy', 'Rory', 'Martha', 'Clara', \r\n    'Arnold', 'Dave', 'Holly', \r\n    'Kara', 'Gaius','William', 'Lee', 'Laura', 'Saul',\r\n    'Max', 'Edison', 'Theora', 'Bryce', 'Murray', 'Ned',\r\n    'Daniel', 'Samantha', \r\n    'Logan', 'Francis', 'Jessica'\r\n    ]) + ' ';\r\n    newBean.name += GetRandom([\r\n        'Ripley', 'Bishop', 'Hicks', 'Vasquez', 'Hudson', \r\n        'Rico', 'Flores', 'Ibanez', 'Levy', 'Jenkins', 'Barlow', 'Zim', 'Rasczak',\r\n        'Kirk', 'McCoy', 'Sulu', 'Uhura', 'Chekov', 'Chapel', 'Rand','Riker', 'Crusher', 'Barret', \"O'Brien\",\r\n        'Reynolds', 'Tam', \r\n        'Scully', 'Mulder','Skinner', \r\n        'Connor', \r\n        'Thrace', 'Baltar', 'Smith','Adama', 'Roslin', 'Tigh', 'Song', 'Oswald', \r\n        'Deckard', \r\n        'Tyler', 'Harkness', 'Jones', 'Noble', 'Pond', 'Williams',\r\n        'Rimmer', 'Lister', \r\n        'Head', 'Carter', 'Lynch', 'McKenzie', 'Grossberg',\r\n        \"O'Neil\", 'Jackson', 'Carter'\r\n         ]);\r\n    newBean.community = RandomCommunity();\r\n    newBean.ideals = RandomIdeal();\r\n    newBean.faith = RandomFaith();\r\n    const beanBeliefCount = Math.ceil(Math.random() * 2);\r\n    for (let i = 0; i < beanBeliefCount; i++) {\r\n        newBean.beliefs.push(GetRandom(BeliefsAll));\r\n    }\r\n    const mod = previousBeanCount % 3;\r\n    newBean.job = mod == 0 ? 'farmer' : mod == 1 ? 'builder' : 'doc';\r\n    //newBean.job = GetRandom(['farmer','builder','doc']);\r\n    newBean.cash = StartingCash(newBean.job);\r\n    newBean.discrete_food = 3;\r\n\r\n    city.movers.bean[newBean.key] = hex_to_pixel(city.hex_size, city.petriOrigin, city.byType.house.coordByID[GetRandom(city.byType.house.all).key]);\r\n    \r\n    return newBean;\r\n}","import { TraitGood, TraitJob, GoodToJob, Trait } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { IOrganization, Charity } from \"./Institutions\";\r\nimport { City } from \"./City\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    ticksSinceLastSale: number;\r\n}\r\nexport interface Listing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerOrganizationKey?: number;\r\n    price: number;\r\n    seller: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'shelter', 'medicine', 'fun'];\r\n\r\nexport class Economy {\r\n    market = new OrderBook();\r\n    charity = new OrderBook();\r\n    unfulfilledSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalSupply: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    constructor(){\r\n\r\n    }\r\n    public resetSeasonalDemand(){\r\n        this.unfulfilledSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalSupply = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    }\r\n    tryTransact(\r\n        buyer: IEconomicAgent, \r\n        good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1\r\n        ): {bought: number, price: number}|null {\r\n        this.totalSeasonalDemand[good] += maxDemand;\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            //console.log('agent could not find '+good);\r\n            this.unfulfilledSeasonalDemand[good] += maxDemand;\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if (listing.price <= buyer.cash * actualDemand){\r\n            return this.market.transact(listing, good, actualDemand, buyer);\r\n        } else if (buyer instanceof Bean) {\r\n            // console.log('bean couldnot afford '+good+\" @ $\"+listing?.price);\r\n            // const charityTicket = this.charity.getLowestPriceListing(good, minDemand);\r\n            // if (charityTicket && charityTicket.seller instanceof Charity) {\r\n            //     // console.log('bean got '+good+\" from charity\");\r\n            //     const actualDemand = Math.min(charityTicket.quantity, maxDemand);\r\n            //     buyer.partyLoyalty += PartyLoyaltyPerCharityUse;\r\n            //     charityTicket.seller.beansHelped++;\r\n            //     charityTicket.seller.inventory -= actualDemand;\r\n            //     return this.charity.transact(charityTicket, good, actualDemand, buyer);\r\n            // }\r\n        }\r\n        this.unfulfilledSeasonalDemand[good] += actualDemand;\r\n        return null;\r\n    }\r\n    steal(\r\n        good: TraitGood,\r\n        maxDemand: number = 1\r\n        ): number|null {\r\n        const listing = GetRandom(this.market.listings[good]);\r\n        if (listing == null){\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        this.market.subtractFromListing(listing, good, actualDemand);\r\n        \r\n        return actualDemand;\r\n    }\r\n    produceAndPrice(seller: Bean, good: TraitGood, quantity: number, price: number) {\r\n        this.totalSeasonalSupply[good] += quantity;\r\n        const existing = this.market.getBeansListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    addCharity(seller: Charity, good: TraitGood, quantity: number) {\r\n        const existing = this.charity.getOrgsListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.quantity = Math.min(existing.quantity, 10);\r\n            seller.inventory = existing.quantity;\r\n        } else {\r\n            this.charity.addNewOrgListing(good, quantity, 0, seller);\r\n            seller.inventory = quantity;\r\n        }\r\n        //this.book[good].sort((a, b) => a.price - b.price);\r\n    }\r\n    public mostInDemandJob(): TraitJob|null{\r\n        const goods: TraitGood[] = AllGoods;\r\n        const max = goods.reduce((last, good) => {\r\n            if (this.unfulfilledSeasonalDemand[good] > last.max){\r\n                last.max = this.unfulfilledSeasonalDemand[good];\r\n                last.job = GoodToJob(good);\r\n            }\r\n            return last;\r\n        }, {max: 0, job: null as TraitJob|null})\r\n\r\n        return max.job;\r\n    }\r\n    public onBeanDie = (deadBean: Bean, city: City) => {\r\n        AllGoods.forEach((g) => {\r\n            const existing = this.market.getBeansListings(deadBean, g);\r\n            if (existing){\r\n                const lucky = city.getRandomCitizen();\r\n                if (lucky) {\r\n                    existing.sellerCityKey = lucky.cityKey;\r\n                    existing.sellerBeanKey = lucky.key;\r\n                    existing.seller = lucky;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public getFairGoodPrice(good: TraitGood){\r\n        const supply = this.totalSeasonalSupply[good] || 1;\r\n        const demand = this.totalSeasonalDemand[good];\r\n        return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n    }\r\n    public getCostOfLiving(){\r\n        return this.getFairGoodPrice('food')+this.getFairGoodPrice('shelter')+this.getFairGoodPrice('medicine');\r\n    }\r\n}\r\n\r\nexport class OrderBook{\r\n    public readonly listings: {[key in TraitGood]: Listing[]} = {\r\n        food: [] as Listing[],\r\n        shelter: [] as Listing[],\r\n        medicine: [] as Listing[],\r\n        fun: [] as Listing[],\r\n    };\r\n    public getLowestPriceListing(good: TraitGood, demand: number): Listing|null{\r\n        const fullListings =  this.listings[good].filter((l) => {\r\n            return l.quantity >= demand;\r\n        });\r\n        if (fullListings.length > 0){\r\n            let numberOfSamePriceListings = 1;\r\n            const lowPrice = fullListings[0].price;\r\n            for (let i = 1; i < fullListings.length; i++) {\r\n                const list = fullListings[i];\r\n                if (list.price > lowPrice)\r\n                    break;\r\n                numberOfSamePriceListings++;\r\n            }\r\n            const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n            if (i >= fullListings.length)\r\n                throw \"invalid index\";\r\n            return fullListings[i];\r\n        }\r\n        return null;\r\n    }\r\n    public getBeansListings(b: Bean, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == b.key && x.sellerCityKey == b.cityKey);\r\n    }\r\n    public getOrgsListings(b: IOrganization, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerOrganizationKey == b.key);\r\n    }\r\n    public transact(listing: Listing, good: TraitGood, demand: number, buyer: IEconomicAgent){    \r\n        this.subtractFromListing(listing, good, demand);\r\n        const sale = listing.price * demand;\r\n        buyer.cash -= sale;\r\n        listing.seller.cash += sale;\r\n        listing.seller.ticksSinceLastSale = 0;\r\n        return {\r\n            bought: demand,\r\n            price: sale\r\n        }\r\n    }\r\n    public subtractFromListing(listing: Listing, good: TraitGood, demand: number){     \r\n        listing.quantity -= demand;\r\n        if (listing.quantity <= 0){\r\n            this.listings[good].splice(0, 1);\r\n        }\r\n    }\r\n    public addNewListing(good: TraitGood, quantity: number, price: number, bean: Bean){\r\n        this.listings[good].push({\r\n            sellerCityKey: bean.cityKey,\r\n            sellerBeanKey: bean.key,\r\n            price: price,\r\n            seller: bean,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public addNewOrgListing(good: TraitGood, quantity: number, price: number, org: IOrganization){\r\n        this.listings[good].push({\r\n            sellerOrganizationKey: org.key,\r\n            price: price,\r\n            seller: org,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public sort(good: TraitGood){        \r\n        this.listings[good].sort((a, b) => a.price - b.price);\r\n    }\r\n}","import * as React from 'react';\r\nimport { GetRandom, RandomEthno, GenerateBean } from './WorldGen';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Economy } from './simulation/Economy';\r\nimport { Policy, Party, BaseParty, ICityPartyHQ } from './simulation/Politics';\r\nimport { IInstitution, IOrganization, Charity } from './simulation/Institutions';\r\nimport { IEvent, EventBus } from './events/Events';\r\nimport { Season, IDate } from './simulation/Time';\r\nimport { Government } from './simulation/Government';\r\nimport { Player } from './simulation/Player';\r\nimport { Geography } from './simulation/Geography';\r\nimport { City } from './simulation/City';\r\nimport { shuffle } from './simulation/Utils';\r\nimport { Act, IActListener, IChatData } from './simulation/Agent';\r\nimport { IDifficulty } from './Game';\r\nimport { type } from 'os';\r\nimport { IsBeliefDivergent, SecondaryBeliefData } from './simulation/Beliefs';\r\n\r\n\r\nexport interface IBeanContainer{\r\n    /**\r\n     * all beans ever, including dead ones\r\n     */\r\n    historicalBeans: Bean[];\r\n    /**\r\n     * current non-dead beans\r\n     */\r\n    beans: Bean[];\r\n}\r\n\r\nexport interface IWorld{\r\n    cities: City[];\r\n    law: Government;\r\n    party: Party;\r\n\r\n    institutions: IInstitution[];\r\n    bus: EventBus;\r\n    date: IDate;\r\n    alien: Player;\r\n}\r\nexport class World implements IWorld, IBeanContainer, IActListener{\r\n    public cities: City[] = [];\r\n    public law: Government = new Government();\r\n    public economy: Economy = new Economy();\r\n    public institutions: IInstitution[] = [];\r\n    public party: Party = new BaseParty();\r\n    public date: IDate = {year: 1, season: Season.Spring, day: 1};\r\n\r\n    public yearsEvents: IEvent[] = [];\r\n    public bus = new EventBus();\r\n    public alien: Player = new Player();\r\n\r\n    public get beans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.beans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get historicalBeans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.historicalBeans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get organizations(): IOrganization[]{\r\n        return this.institutions.reduce((list, institute) => {\r\n            return list.concat(institute.organizations);\r\n        }, [] as IOrganization[]);\r\n    }\r\n\r\n    /**\r\n     * update 'pushed' state\r\n     */\r\n    public calculateComputedState(){\r\n        this.cities.forEach(c => {\r\n            c.calculate(this.economy, this.law);\r\n            c.beans.forEach(b => b.calculateBeliefs(this.economy, c, this.law, this.party));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * simulates a season passing, setting a lot of state\r\n     */\r\n    public simulate_world(){\r\n        \r\n        this.date.day++;\r\n        if (this.date.day > 30){\r\n            this.date.day = 1;\r\n            this.date.season++;\r\n        }\r\n        if (this.date.season > 3){\r\n            this.date.year++;\r\n            this.inflate();\r\n            this.resetYearlyCounters();\r\n            this.date.season = 0;\r\n        }\r\n\r\n        this.alien.bots.amount += this.alien.bots.income / 30;\r\n        this.alien.energy.amount += this.alien.energy.income / 30;\r\n        this.alien.psi.amount += this.alien.psi.income / 30;\r\n        \r\n        this.economy.resetSeasonalDemand();\r\n\r\n        this.institutions.forEach((i) => i.fundOrganizations());\r\n\r\n        this.organizations.forEach((org) => org.work(this.law, this.economy));\r\n        \r\n        shuffle(this.beans).forEach((b: Bean) => {\r\n            let e = b.age(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n            e = b.maybeBaby(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n        });\r\n        this.cities.forEach((c) => c.getTaxesAndDonations(this.party, this.economy));\r\n        this.calculateComputedState();\r\n        this.alien.checkGoals(this);\r\n    }\r\n    simulate_beans(deltaMS: number){\r\n        this.beans.forEach((b) => {\r\n            Act(b, deltaMS, this.alien.difficulty, this);\r\n        })\r\n    }\r\n    onChat = (b: Bean, chat: IChatData) => {\r\n        if (this.party && chat.preachBelief){\r\n            if (IsBeliefDivergent(chat.preachBelief, this.party.ideals, this.party.community)){\r\n                this.yearsEvents.push({\r\n                    icon: '🚨', trigger: 'speechcrime',\r\n                    message: `Speechcrime! ${b.name} is talking about ${SecondaryBeliefData[chat.preachBelief].noun}`,\r\n                    beanKey: b.key\r\n                });\r\n            }\r\n        }\r\n    }\r\n    inflate() {\r\n        const allMoney = this.beans.reduce((sum, b) => sum+b.cash, 0) + this.organizations.reduce((sum, o) => sum + o.cash, 0);\r\n        const percent = allMoney / 100;\r\n        const yearlyInflationDollars = Math.round(percent * 1);\r\n        if (yearlyInflationDollars > 0){\r\n            const richest = this.beans.reduce((obj: {winner?: Bean, max: number}, b) => {\r\n                if (b.cash > obj.max){\r\n                    obj.winner = b;\r\n                    obj.max = b.cash;\r\n                }\r\n                return obj;\r\n            }, {max: 0});\r\n            if (richest.winner){\r\n                richest.winner.cash += yearlyInflationDollars;\r\n            }\r\n        }\r\n    }\r\n    resetYearlyCounters() {\r\n        this.yearsEvents = [];\r\n        this.cities.forEach((c) => {\r\n            c.yearsPartyDonations = 0;\r\n        })\r\n    }\r\n    addCharity(good: TraitGood, name: string, budget: number) {\r\n        const charity = new Charity();\r\n        charity.name = name;\r\n        charity.good = good;\r\n        charity.seasonalBudget = budget;\r\n        this.party.organizations.push(charity);\r\n    }\r\n}\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface Tile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'rocket'|'music'|'dragon'|'noFaith';\r\nexport type TraitFood = 'hungry'|'sated'|'stuffed';\r\nexport type TraitShelter = 'podless'|'crowded'|'homeowner';\r\nexport type TraitHealth = 'sick'|'bruised'|'fresh';\r\nexport type TraitSanity = 'mad'|'confused'|'sane';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitShelter|TraitHealth|TraitSanity;\r\nexport type Axis = 'wel_food'|'wel_house'|'wel_health'|'tax_basic'|'tax_second'|'econ_ex'|'econ_labor'|'econ_sub'|'cul_rel'|'cul_theo'|'cul_ed'|'law_vote'|'law_bribe'|'law_imm'|'all';\r\n\r\nexport const TraitIcon: {[key in Trait]: string} = {\r\n    'state': '🕊️', 'ego': '🦅',\r\n    'prog': '⚖️', 'trad': '👑',\r\n    'circle': '🤎', 'square': '💛', 'triangle': '🧡',\r\n    'rocket': '🚀', 'music': '🎵', 'dragon': '🐲',\r\n    'noFaith': '⚫️',\r\n    'hungry': '🍽️', 'sated': '🥜', 'stuffed': '🥩',\r\n    'podless': '🌨️', 'crowded': '🏘️', 'homeowner': '🏡',\r\n    'sick': '🤢', 'bruised': '🩹', 'fresh': '💪',\r\n    'mad': '🤪', 'confused': '🤤', 'sane': '🧠',\r\n}\r\nexport enum MaslowHappinessScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport const TraitToModifier: {[key in TraitFood|TraitShelter|TraitHealth]: IHappinessModifier} = {\r\n    'podless': {reason: 'Homeless', mod: MaslowHappinessScore.Deficient},\r\n    'crowded': {reason: 'Renting', mod: MaslowHappinessScore.Sufficient},\r\n    'homeowner': {reason: 'Homeowner', mod: MaslowHappinessScore.Abundant},\r\n    'sick': {reason: 'Sick', mod: MaslowHappinessScore.Deficient},\r\n    'bruised': {reason: 'Bruised', mod: MaslowHappinessScore.Sufficient},\r\n    'fresh': {reason: 'Healthy', mod: MaslowHappinessScore.Abundant},\r\n    'hungry': {reason: 'Hungry', mod: MaslowHappinessScore.Deficient},\r\n    'sated': {reason: 'Sated', mod: MaslowHappinessScore.Sufficient},\r\n    'stuffed': {reason: 'Stuffed', mod: MaslowHappinessScore.Abundant},\r\n}\r\nexport interface IThreshold {sufficient: number, abundant: number}\r\nexport const GoodToThreshold: {[key in TraitGood]: IThreshold} = {\r\n    'food': {sufficient: 1, abundant: 3},\r\n    'shelter': {sufficient: 1, abundant: 7},\r\n    'medicine': {sufficient: 1, abundant: 3},\r\n    'fun': {sufficient: 1, abundant: 3},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'builder': return 'shelter';\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'shelter': return 'builder';\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'shelter'|'medicine'|'fun';\r\nexport const GoodIcon: {[key in TraitGood]: string} ={\r\n    'food': '🥪',\r\n    'shelter': '', \r\n    'medicine': '💊', \r\n    'fun': '👏'\r\n};","import { Trait, Axis, TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { IInstitution, IOrganization } from \"./Institutions\";\r\nimport { Government } from \"./Government\";\r\n\r\n\r\nexport interface Party extends IInstitution{\r\n    slogan: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    \r\n    availablePolicies: Policy[]; \r\n    proposedPolicy?: Policy;\r\n    availableCampaigns: Campaign[];\r\n    activeCampaigns: Campaign[];\r\n\r\n    platform: {[key in Axis]: IPolicy};\r\n\r\n    politicalCapital: number;\r\n    materialCapital: number;\r\n    labor: number;\r\n\r\n    differingPolicies(law: Government): IPolicy[];\r\n}\r\n\r\nexport class BaseParty implements Party{\r\n    key = 1;\r\n    playerKey = 1;\r\n    organizations: IOrganization[] = [];\r\n    public name: string = \"Citizen's Party\";\r\n    public slogan: string = \"Vote for us!\";\r\n    public community: TraitCommunity = 'state';\r\n    public ideals: TraitIdeals = 'trad';\r\n    public availablePolicies: Policy[] = [];\r\n    public proposedPolicy?: Policy;\r\n    public availableCampaigns: Campaign[] = [];\r\n    public activeCampaigns: Campaign[] = [];\r\n    public politicalCapital: number = 10;\r\n    public materialCapital: number = 20;\r\n    public labor: number = 10;\r\n    public activeHQs: number[] = [];\r\n    public platform: {[key in Axis]: IPolicy} = {} as {[key in Axis]: IPolicy};\r\n\r\n    constructor(){\r\n    }\r\n    fundOrganizations(): void{\r\n        this.organizations.forEach((org) => {\r\n            if (this.materialCapital >= org.seasonalBudget){\r\n                this.materialCapital -= org.seasonalBudget;\r\n                org.cash += org.seasonalBudget;\r\n            }\r\n        });\r\n    }\r\n    differingPolicies(law: Government): IPolicy[]{\r\n        return Object.keys(this.platform).filter((key: string) => {\r\n            const ax = key as Axis;\r\n            return this.platform[ax] != law.policyTree[ax];\r\n        }).map((key) => this.platform[key as Axis]);\r\n    }\r\n}\r\n\r\nexport interface ICityPartyHQ{\r\n    cityKey: number;\r\n}\r\nexport class CityPartyHQ implements ICityPartyHQ{\r\n    cityKey: number = 0;\r\n}\r\n\r\nexport interface PoliticalEffect {\r\n    key: Trait;\r\n    /**\r\n     * magnitude (-3 to +3)\r\n     */\r\n    mag: number;\r\n}\r\nexport interface Policy {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    axis?: Axis;\r\n}\r\nexport interface Campaign {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    cityKey?: number;\r\n\r\n    seasonalCost: number;\r\n}\r\nexport interface IPolicy{\r\n    key: string, \r\n    name: string, \r\n    community?: TraitCommunity, \r\n    ideals?: TraitIdeals, \r\n    axis: Axis,\r\n    hint?: string\r\n}\r\nexport const NoPolicy: IPolicy = {key: '-1', name: 'No Policy', axis: 'all'};\r\nexport const Policies: IPolicy[] = [\r\n NoPolicy,\r\n {key: '0', name: 'Let Them Eat Cake', ideals: 'trad', community: 'ego', axis: 'wel_food', hint: 'No state solution for hunger'},\r\n {key: '1', name: 'Food Bank', ideals: 'prog', community: 'ego', axis: 'wel_food'},\r\n {key: '2', name: 'Food Stamps', ideals: 'trad', community: 'state', axis: 'wel_food'},\r\n {key: '3', name: 'Universal Rations', ideals: 'prog', community: 'state', axis: 'wel_food'},\r\n\r\n {key: '4', name: 'Sleep Outside', community: 'ego', ideals: 'trad', axis: 'wel_house'},\r\n {key: '5', name: 'Homeless Shelters', community: 'ego', ideals: 'prog', axis: 'wel_house'},\r\n {key: '6', name: 'Housing Subsidy', community: 'state', ideals: 'trad', axis: 'wel_house'},\r\n {key: '7', name: 'State Apartments', community: 'state', ideals: 'prog', axis: 'wel_house'},\r\n\r\n {key: '8', name: 'Stay Healthy', community: 'ego', ideals: 'trad', axis: 'wel_health'},\r\n {key: '9', name: 'Charity Clinics', community: 'ego', ideals: 'prog', axis: 'wel_health'},\r\n {key: '10', name: 'Medical Aid', community: 'state', ideals: 'trad', axis: 'wel_health'},\r\n {key: '11', name: 'Universal Healthcare', community: 'state', ideals: 'prog', axis: 'wel_health'},\r\n\r\n {key: '12', name: 'Tariffs', community: 'state', axis: 'econ_ex'},\r\n {key: '13', name: 'Free Market', community: 'ego', axis: 'econ_ex'},\r\n \r\n {key: '14', name: 'Legal Slavery', ideals: 'trad', axis: 'econ_labor'},\r\n {key: '15', name: 'Right to Work', community: 'ego', ideals: 'trad', axis: 'econ_labor'},\r\n {key: '16', name: 'Right to Strike', community: 'ego', ideals: 'prog', axis: 'econ_labor'},\r\n\r\n {key: '17', name: 'Laissez-faire', community: 'ego', ideals:'trad', axis: 'econ_sub'},\r\n {key: '18', name: 'Grain Subsidy', community: 'state', axis: 'econ_sub'},\r\n {key: '19', name: 'Arts Patronage', community: 'ego', ideals: 'prog', axis: 'econ_sub'},\r\n\r\n {key: '20', name: 'State Religion', community: 'state', ideals: 'trad', axis: 'cul_rel'},\r\n {key: '21', name: 'Secularism', community: 'ego', axis: 'cul_rel'},\r\n {key: '22', name: 'State Atheism', community: 'state', ideals: 'prog', axis: 'cul_rel'},\r\n\r\n {key: '23', name: 'Temple of Water 🌊', axis: 'cul_theo'},\r\n {key: '24', name: 'Church of Sun ☀️', axis: 'cul_theo'},\r\n {key: '25', name: 'Chapel of Clover ☘️', axis: 'cul_theo'},\r\n\r\n {key: '26', name: 'Religious Schooling', community: 'state', ideals: 'trad', axis: 'cul_ed'},\r\n {key: '27', name: 'University Grants', community: 'ego', axis: 'cul_ed'},\r\n {key: '28', name: 'College For All', community: 'state', ideals: 'prog', axis: 'cul_ed'},\r\n\r\n {key: '29', name: 'Landowners Vote', community: 'state', ideals: 'trad', axis: 'law_vote', hint: 'only homeowners vote'},\r\n {key: '30', name: 'Poll Tax', community: 'ego', ideals: 'trad', axis: 'law_vote', hint: 'voting requires small amount of cash'},\r\n {key: '31', name: 'Universal Suffrage', ideals: 'prog', axis: 'law_vote', hint: 'all citizens vote'},\r\n\r\n {key: '32', name: 'Scandalous Bribes', community: 'state', ideals: 'trad', axis: 'law_bribe', hint: '5% chance bribery causes scandal'},\r\n {key: '33', name: 'Legal Bribery', community: 'ego', axis: 'law_bribe', hint: 'Bribery has no consequences'},\r\n {key: '34', name: 'Anti-Corruption', community: 'state', ideals: 'prog', axis: 'law_bribe', hint: '25% chance bribery results in fine'},\r\n\r\n {key: '35', name: 'Closed Borders', ideals: 'trad', axis: 'law_imm'},\r\n {key: '36', name: 'Best and Brightest', community: 'state', ideals: 'prog', axis: 'law_imm'},\r\n {key: '37', name: 'Huddle Masses', community: 'ego', ideals: 'prog', axis: 'law_imm'},\r\n\r\n {key: '38', name: 'Head Tax', community:'state', ideals: 'trad', axis: 'tax_basic'},\r\n {key: '39', name: 'Sales Tax', community: 'ego', axis: 'tax_basic'},\r\n {key: '40', name: 'Wealth Tax', community: 'state', ideals: 'prog', axis: 'tax_basic'},\r\n\r\n {key: '38', name: 'Vice Tax', ideals: 'trad', axis: 'tax_second'},\r\n {key: '39', name: 'Property Tax', ideals: 'prog', axis: 'tax_second'},\r\n {key: '40', name: 'Death Tax', ideals: 'prog', axis: 'tax_second'},\r\n\r\n];\r\nexport const PolicyTree: {\r\n    [key in Axis]: IPolicy[]\r\n} = Policies.reduce((dict, pol) => {\r\n    if (!dict[pol.axis])\r\n        dict[pol.axis] =[];\r\n    dict[pol.axis].push(pol);\r\n    return dict;\r\n}, {} as {[key in Axis]: IPolicy[]});\r\n\r\nexport function PolicyByKey(key: string): IPolicy|undefined{\r\n    return Policies.find((p) => p.key == key);\r\n}","import { ISeller, Economy } from \"./Economy\";\r\nimport { TraitGood, GoodToJob } from \"../World\";\r\nimport { Policy } from \"./Politics\";\r\nimport { Government } from \"./Government\";\r\n\r\nexport interface IInstitution{\r\n    key: number;\r\n    playerKey: number;\r\n    name: string;\r\n\r\n    organizations: IOrganization[];\r\n    fundOrganizations(): void;\r\n}\r\n\r\nexport interface IOrganization extends ISeller{\r\n    work(law: Government, economy: Economy): void;\r\n    key: number;\r\n    institutionKey: number;\r\n    seasonalBudget: number;\r\n    parentInstitution: IInstitution|null;\r\n    cash: number;\r\n}\r\n\r\nexport class Charity implements IOrganization, ISeller{\r\n    key = 0;\r\n    name: string = '';\r\n    institutionKey = 1;\r\n    cash = 0;\r\n    ticksSinceLastSale = 0;\r\n    seasonalBudget = 0;\r\n    good: TraitGood = 'food';\r\n    parentInstitution: IInstitution|null = null;\r\n    beansHelped: number = 0;\r\n    inventory: number = 0;\r\n    \r\n    work(law: Government, economy: Economy): void{\r\n        while(this.cash > 0 && this.inventory < 10) {\r\n            const groceries = economy.tryTransact(this, this.good);\r\n            if (groceries){\r\n                economy.addCharity(this, this.good, groceries.bought);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n} ","import { IPolicy } from \"./Politics\";\r\nimport { Axis } from \"../World\";\r\n\r\nexport class Government{\r\n    public get policies(): IPolicy[] {\r\n        return Object.values(this.policyTree);\r\n    }\r\n    public policyTree: {[key in Axis]: IPolicy} = {} as {[key in Axis]: IPolicy};\r\n}","import { BuildingTypes } from \"./simulation/Geography\";\r\nimport { IThreshold, TraitGood } from \"./World\";\r\n\r\nexport type PlayerEmptyHexAction = 'build';\r\nexport type PlayerHexAction = 'kidnap';\r\nexport type PlayerBeanAction = 'scan'|'brainwash_ideal'|'brainimplant_secondary'|'brainwash_secondary'|'abduct'|'disappear'|'siphon'|'empower'|'gift';\r\nexport type PlayerGovernmentAction = '';\r\nexport type PlayerAction = PlayerHexAction|PlayerBeanAction;\r\n\r\nexport interface ResourceTriad{\r\n    energy?: number;\r\n    bots?: number;\r\n    psi?: number;\r\n}\r\nexport function triadToString(cost: ResourceTriad, sign: '+'|''|'-'){\r\n    const costs = [];\r\n    if (cost.energy){\r\n        costs.push(sign+cost.energy+' Energy');\r\n    }\r\n    if (cost.bots){\r\n        costs.push(sign+cost.bots+' Bots');\r\n    }\r\n    if (cost.psi){\r\n        costs.push(sign+cost.psi+' Psi');\r\n    }\r\n    return costs.join(' ');\r\n}\r\nexport interface SecondaryResources{\r\n    research?: number;\r\n    leadership?: number;\r\n}\r\nexport interface IDifficulty{\r\n    cost: {\r\n        emptyHex: {[key in PlayerEmptyHexAction]: {[key in BuildingTypes]: ResourceTriad}},\r\n        hex: {[key in PlayerHexAction]: ResourceTriad} \r\n        bean: {[key in PlayerBeanAction]: ResourceTriad}\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {[key in TraitGood]: IThreshold}\r\n    }\r\n}\r\nexport const DefaultDifficulty: IDifficulty = {\r\n    cost: {\r\n        emptyHex: {\r\n            build: {\r\n                house: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                farm: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                theater: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                hospital: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                church: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                courthouse: {\r\n                    energy: 999,\r\n                    bots: 999\r\n                }\r\n            }\r\n        },\r\n        hex: {\r\n            kidnap: {\r\n                energy: 3\r\n            },\r\n        },\r\n        bean: {\r\n            scan: {\r\n                energy: 1\r\n            },\r\n            ['brainwash_ideal']: { psi: 4},\r\n            ['brainimplant_secondary']: { psi: 3},\r\n            ['brainwash_secondary']: {psi: 2},\r\n            abduct: {},\r\n            gift: {},\r\n            empower: {},\r\n            disappear: {},\r\n            siphon: {},\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {\r\n            'food': {sufficient: 1, abundant: 3},\r\n            'shelter': {sufficient: 1, abundant: 3},\r\n            'medicine': {sufficient: 1, abundant: 3},\r\n            'fun': {sufficient: 1, abundant: 3},\r\n        }\r\n    }\r\n};","import { ChangePubSub } from \"../events/Events\";\r\nimport { DefaultDifficulty, IDifficulty, ResourceTriad } from \"../Game\";\r\nimport { World } from \"../World\";\r\nimport { Number_Starting_City_Pop } from \"../WorldGen\";\r\nimport { IDate } from \"./Time\";\r\n\r\n\r\nexport interface IPlayerData{\r\n    scanned_bean: {[beanKey: number]: boolean};\r\n    energy: IResource;\r\n    psi: IResource;\r\n    bots: IResource;\r\n}\r\n\r\nexport interface IResource{\r\n    amount: number;\r\n    income: number;\r\n    change: ChangePubSub;\r\n}\r\n\r\nexport type GoalKey = 'found_utopia'|'build_house_n_farm'|'kidnap_3'|'scan'|'set_policy'|'brainwash'|'c+_grade';\r\nexport interface IGoal{\r\n    key: GoalKey;\r\n    text: string;\r\n    tooltip?: string;\r\n    reward?: ResourceTriad,\r\n    check: (world: World) => boolean\r\n}\r\nexport interface IGoalProgress {\r\n    done: boolean,\r\n    step: number\r\n}\r\nexport interface IProgressable{\r\n    goalProgress: {[key: string]: IGoalProgress},\r\n    goals: Array<GoalKey>\r\n}\r\nexport const Goals: {[key in GoalKey]: IGoal} = {\r\n    found_utopia: {\r\n        key: 'found_utopia', text: 'Found your Utopia',\r\n       check: (world) => world.party.name != 'Goodplace'\r\n    },\r\n    build_house_n_farm: {\r\n        key: 'build_house_n_farm', text: 'Build a house and farm',\r\n        check: (world) => {\r\n            return world.cities[0].byType.house.all.length > 1 &&\r\n            world.cities[0].byType.farm.all.length > 1;\r\n        },\r\n        reward: {\r\n            energy: 3, bots: 3\r\n        }\r\n    }, \r\n    kidnap_3: {\r\n        key: 'kidnap_3', text: 'Kidnap 3 new beings', \r\n        check: (world) => {\r\n            return world.beans.filter(b => !b.bornInPetri).length > (3 + Number_Starting_City_Pop)\r\n        }\r\n    }, \r\n    scan: {\r\n        key: 'scan', text: 'Scan a Subject',\r\n        check: (world) => Object.keys(world.alien.scanned_bean).length > 0\r\n    }, \r\n    set_policy: {\r\n        key: 'set_policy', text: 'Set a Gov Policy',\r\n        check: (world) => false\r\n    }, \r\n    brainwash: {\r\n        key: 'brainwash', text: 'Brainwash a Subject',\r\n        check: (world) => false\r\n    }, \r\n    'c+_grade': {\r\n        key: 'c+_grade', text: 'Receive a C+ Grade',\r\n        check: (world) => false\r\n    } \r\n};\r\n\r\nexport class Player implements IPlayerData, IProgressable{\r\n    public scanned_bean: {[beanKey: number]: boolean} = {};\r\n    public energy = { amount: 10, income: 2, change: new ChangePubSub()};\r\n    public psi = { amount: 10, income: 2, change: new ChangePubSub()};\r\n    public bots = { amount: 10, income: 2, change: new ChangePubSub()};\r\n    public next_grade:IDate = {year: 1, season: 3, day: 1};\r\n    public difficulty: IDifficulty = DefaultDifficulty;\r\n    public goals: GoalKey[] = ['found_utopia', 'build_house_n_farm', 'scan', 'kidnap_3', 'brainwash', 'set_policy', 'c+_grade'];\r\n    public goalProgress: {[key: string]: IGoalProgress} = {};\r\n\r\n    public canAfford(cost: ResourceTriad): boolean{\r\n        return (cost.bots == undefined || this.bots.amount >= cost.bots) &&\r\n        (cost.energy == undefined || this.energy.amount >= cost.energy) && \r\n        (cost.psi == undefined || this.psi.amount >= cost.psi);\r\n    }\r\n\r\n    public purchase(cost: ResourceTriad){\r\n        if (cost.bots){\r\n            this.bots.amount -= cost.bots;\r\n            this.bots.change.publish({change:-cost.bots});\r\n        }\r\n        if (cost.energy){\r\n            this.energy.amount -= cost.energy;\r\n            this.energy.change.publish({change:-cost.energy});\r\n        }\r\n        if (cost.psi){\r\n            this.psi.amount -= cost.psi;\r\n            this.psi.change.publish({change:-cost.psi});\r\n        }\r\n    }\r\n\r\n    public tryPurchase(cost: ResourceTriad): boolean{\r\n        if (this.canAfford(cost)){\r\n            this.purchase(cost);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public reward(reward: ResourceTriad){\r\n        if (reward.bots){\r\n            this.bots.amount += reward.bots;\r\n            this.bots.change.publish({change: reward.bots});\r\n        }\r\n        if (reward.energy){\r\n            this.energy.amount += reward.energy;\r\n            this.energy.change.publish({change: reward.energy});\r\n        }\r\n        if (reward.psi){\r\n            this.psi.amount += reward.psi;\r\n            this.psi.change.publish({change: reward.psi});\r\n        }\r\n\r\n    }\r\n\r\n    public checkGoals(world: World){\r\n        for (let i = 0; i < this.goals.length; i++) {\r\n            const goal = this.goals[i];\r\n            if (this.goalProgress[goal] == null){\r\n                this.goalProgress[goal] = {done: false, step: 0};\r\n            }\r\n            if (!this.goalProgress[goal].done) {\r\n                const done = Goals[goal].check(world);\r\n                const reward = Goals[goal].reward;\r\n                this.goalProgress[goal].done = done;\r\n                if (done && reward != null){\r\n                    this.reward(reward);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","\r\nexport function shuffle(array: Array<any>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}","import { IBeanContainer, Tile, Trait, TraitEthno } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { Economy } from \"./Economy\";\r\nimport { Government } from \"./Government\";\r\nimport { GenerateBean, GetRandom } from \"../WorldGen\";\r\nimport { ICityPartyHQ, Party } from \"./Politics\";\r\nimport { Geography, HexPoint, IBuilding } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { shuffle } from \"./Utils\";\r\n\r\n\r\nexport function reportIdeals(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: Bean[], defWin: Trait, beanPropGet: (bean: Bean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}\r\n\r\n\r\nexport class City extends Geography implements Tile, IBeanContainer {\r\n    public name: string = '';\r\n    public url: string = '';\r\n    public type: string = '';\r\n    public key: number = 0;\r\n    public get beans(): Bean[] {\r\n        return this.historicalBeans.filter((x) => x.alive);\r\n    }\r\n    public set beans(beans: Bean[]){\r\n        throw \"can't set city beans\";\r\n    }\r\n    public historicalBeans: Bean[] = [];\r\n    public houses: any[] = [];\r\n    public partyHQ?: ICityPartyHQ;\r\n    public yearsPartyDonations: number = 0;\r\n\r\n    /// computed properties\r\n    public majorityEthnicity: TraitEthno = 'circle';\r\n    public costOfLiving: number = 1;\r\n\r\n    public economy?: Economy;\r\n    public law?: Government;\r\n    public environment?: IDate;\r\n    public doOnCitizenDie: Array<(b: Bean, c: City) => void> = [];\r\n\r\n    getRandomCitizen(): Bean|null{\r\n        const shuffled = shuffle(this.beans);\r\n        if (shuffled.length > 0) {\r\n            return shuffled[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    onCitizenDie(deadBean: Bean){\r\n        if (deadBean.cash > 0){\r\n            const lucky = this.getRandomCitizen();\r\n            if (lucky) {\r\n                lucky.cash = lucky.cash + deadBean.cash;\r\n                deadBean.cash = 0;\r\n            }\r\n        }\r\n        this.doOnCitizenDie.forEach((x) => x(deadBean, this));\r\n    }\r\n    breedBean(parent: Bean) {\r\n        let bean = GenerateBean(this, this.historicalBeans.length);\r\n        bean.ethnicity = parent.ethnicity;\r\n        bean.job = Math.random() <= .5 ? parent.job : GetRandom(['doc', 'farmer', 'builder', 'jobless']);\r\n        bean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n        bean.bornInPetri = true;\r\n        if (this.environment)\r\n            bean.dob = {year: this.environment?.year, season: this.environment?.season, day: this.environment?.day};\r\n        this.historicalBeans.push(bean);\r\n    }\r\n    getTaxesAndDonations(party: Party, economy: Economy){\r\n        if (this.partyHQ){\r\n            this.beans.forEach((b) => {\r\n                const donation = b.maybeDonate(economy);\r\n                party.materialCapital += donation;\r\n                this.yearsPartyDonations += donation;\r\n            });\r\n        }\r\n    }\r\n    calculate(economy: Economy, law: Government) {\r\n        this.costOfLiving = economy.getCostOfLiving();\r\n        const c = this.beans.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\r\n            switch(bean.ethnicity){\r\n                case 'circle': count.circle++;break;\r\n                case 'square': count.square++;break;\r\n                case 'triangle': count.triangle++;break;\r\n            }\r\n            return count;\r\n        }, {circle: 0, square: 0, triangle: 0});\r\n        if (c.circle > c.square && c.circle > c.triangle){\r\n            this.majorityEthnicity = 'circle';\r\n        } else if (c.square > c.circle && c.square > c.triangle){\r\n            this.majorityEthnicity = 'square';\r\n        } else {\r\n            this.majorityEthnicity = 'triangle';\r\n        }\r\n    }\r\n    getNearestNeighbors(source: Bean): Bean[] {\r\n        return this.beans.filter((b) => {\r\n            if (b.key == source.key) return false;\r\n\r\n            const p = this.movers.bean[b.key];\r\n            const q = this.movers.bean[source.key];\r\n            const squared = Math.pow(p.x - q.x, 2)+Math.pow(p.y - q.y, 2);\r\n\r\n            return squared < 1600 && squared > 600;\r\n        });\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick: () => void;\r\n    closeButtonText?: string;\r\n    hideCloseButton?: boolean\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (this.props.hideCloseButton)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n        return null;\r\n        }\r\n        return (\r\n        <div className=\"modal\">\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: Bean[], \r\n    need: (b: Bean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { PrimaryBeliefData } from \"../simulation/Beliefs\";\r\n\r\ninterface OverviewPanelP{\r\n    city?: City,\r\n    beans: Bean[],\r\n    utopia: Party,\r\n    clearCity: () => void;\r\n}\r\n\r\nexport class OverviewPanel extends React.Component<OverviewPanelP> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let header = null;\r\n        if (this.props.city){\r\n            header = <div><div><b>{this.props.city.name}</b> {PrimaryBeliefData[this.props.utopia.community].icon} {PrimaryBeliefData[this.props.utopia.ideals].icon}\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n            </div>\r\n            <div> {PrimaryBeliefData[this.props.utopia.community].adj} {PrimaryBeliefData[this.props.utopia.ideals].adj} Utopia</div> \r\n            </div>;\r\n        }\r\n        const avg_happy = this.props.beans.reduce((sum, x) => sum+x.lastHappiness, 0) / (this.props.beans.length || 1);\r\n        const avg_cash = this.props.beans.reduce((sum, x) => sum+x.cash, 0) / (this.props.beans.length || 1);\r\n        const avg_approval = this.props.beans.reduce((sum, x) => sum+x.lastPartySentiment, 0) / (this.props.beans.length || 1);\r\n        return (                \r\n        <div>\r\n            {header}\r\n            <div className=\"header\"><b>Demographics</b></div>\r\n            <div>\r\n                <b>Population</b>&nbsp;\r\n                <span>{this.props.beans.length}</span>\r\n            </div>\r\n            <AxisReadout report={reportEthno(this.props.beans)}>Ethnicity</AxisReadout>\r\n            <div className=\"header\"><b>Situation</b></div>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\">Housing</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n            <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n            <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n            <div className=\"header\"><b>Electorate</b></div>\r\n            {/* <AxisReadout report={reportIdeals(this.props.beans)}>Sentiment</AxisReadout> */}\r\n            <AxisReadout report={reportCommunity(this.props.beans)}>Community</AxisReadout>\r\n            <AxisReadout report={reportIdeals(this.props.beans)}>Ideals</AxisReadout>\r\n            <div>\r\n                <b>Approval</b>&nbsp;\r\n                <span>{avg_approval.toFixed(0)}%</span>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{report: {avg: number, winner: Trait}}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent+'%'\r\n        }\r\n        return (                \r\n        <div>\r\n            <b>\r\n                { this.props.children }\r\n            </b>&nbsp;&nbsp;\r\n            <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner\" style={style}>\r\n                    {percent}%\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { origin_point, Point, transformPoint } from \"../simulation/Geography\";\r\nimport { GoodIcon } from \"../World\";\r\n\r\ninterface AnimatedBeanP {\r\n  bean: Bean;\r\n  costOfLiving: number;\r\n  sitStill?: boolean;\r\n  onClick: () => void;\r\n  static?: boolean;\r\n}\r\n\r\ninterface AnimatedBeanS{\r\n  paused: boolean,\r\n  point: Point,\r\n  spin: boolean;\r\n  face: string;\r\n  good?: string;\r\n  speech?: string;\r\n}\r\n\r\nfunction BeanIsBuying(bean: Bean){\r\n  return bean.state.data.act == 'buy' && bean.state.data.good != 'shelter';\r\n}\r\n\r\nexport class AnimatedBean extends React.Component<AnimatedBeanP, AnimatedBeanS> {\r\n    constructor(props: AnimatedBeanP) {\r\n      super(props);\r\n      this.delaySeedSec = (Math.random() * 60) + this.props.bean.key;\r\n      this.state = {\r\n        paused: false,\r\n        point: props.static ? origin_point : props.bean.city ? props.bean.city.movers.bean[props.bean.key] : {x: 0, y: 0},\r\n        spin: false,\r\n        face: props.bean.getFace(),\r\n      };\r\n      props.bean.onAct.subscribe(this.animate);\r\n    }\r\n    animate = (deltaMS: number) => {\r\n      this.setState({\r\n        point: this.props.bean.city ? this.props.bean.city.movers.bean[this.props.bean.key] : {x: 0, y: 0},\r\n        spin: this.props.bean.state.data.act == 'work',\r\n        face: this.props.bean.getFace(),\r\n        good: BeanIsBuying(this.props.bean) ? GoodIcon[this.props.bean.state.data.good || 'food'] : undefined,\r\n        speech: this.props.bean.getSpeech()\r\n      })\r\n    }\r\n    delaySeedSec: number;\r\n    getIdea(){\r\n        if (this.state.paused) {\r\n            const idea = this.props.bean.getIdea(this.props.costOfLiving)\r\n            if (idea){\r\n                return <span className={idea.bad ? 'bad idea': 'idea'}>{idea.idea}</span>\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getPurchase(){\r\n      if (this.state.good){\r\n        return <span className=\"purchase\">\r\n          <span className=\"money\">💸</span>\r\n          <span className=\"purchase-good\">{this.state.good}</span>\r\n        </span>\r\n      }\r\n    }\r\n    getSpeech(){\r\n      if (this.state.speech){\r\n        return <span className=\"speech\">\r\n          <span className=\"\">{this.state.speech}</span>\r\n        </span>\r\n      }\r\n    }\r\n    render() {\r\n      let classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n      classes += this.state.paused || !this.props.bean.alive ? ' paused' : '';\r\n      if (this.props.sitStill){\r\n\r\n      } else {\r\n        classes += ' bean-walker';\r\n        if (this.state.spin)\r\n          classes += ' spin';\r\n        if (this.props.bean.state.data.act != 'travel')\r\n          classes += ' paused';\r\n      }\r\n\r\n      let style = {\r\n        ...transformPoint(this.state.point),\r\n        animationDelay: '-'+this.delaySeedSec+'s'\r\n      };\r\n      style.animationDelay = '';\r\n      let title = '';\r\n      return (\r\n        <span className={classes+\" bean interactable\"}\r\n          style={style} title={title}\r\n          onClick={(e) => {e.stopPropagation(); this.props.onClick(); }}\r\n        >\r\n          {this.state.face} {this.getPurchase()} {this.getSpeech()}\r\n        </span>\r\n      )\r\n    }\r\n  }","import { Tile } from \"../World\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport React from \"react\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, hex_to_pixel, MatterTypes, PolarPoint, polarToPoint, getBuildingTransform, transformPoint, HexPoint } from \"../simulation/Geography\";\r\nimport { PetriBuilding } from \"./Building\";\r\nimport { PI2 } from \"../WorldGen\";\r\nimport { City } from \"../simulation/City\";\r\n\r\ninterface WorldTilePs {\r\n    tile: Tile;\r\n    city: City;\r\n    costOfLiving: number;\r\n    onClick: () => void;\r\n    onBeanClick: (b: Bean) => void;\r\n    onHexClick: (hex: HexPoint) => void;\r\n  }\r\nexport class WorldTile extends React.Component<WorldTilePs> {\r\n    constructor(props: WorldTilePs) {\r\n      super(props);\r\n      this.state = {\r\n        tile: null,\r\n        city: null,\r\n        activeTileID: null,\r\n      }\r\n      const mtnRadius = 530;\r\n      const worldR = 550;\r\n      for (let i = 0; i < 360 / 5; i++) {\r\n        const az = i*5* Math.PI / 180;\r\n        const pt = polarToPoint({r: mtnRadius, az: az});\r\n        pt.x += worldR; pt.y += worldR;\r\n        this.mtn_transforms.push(transformPoint(pt));\r\n      }\r\n    }\r\n    mtn_transforms: {transform: string}[] = [];\r\n    renderBuildings(type: BuildingTypes){\r\n      return this.props.city.byType[type].all.map((b: IBuilding, i) => {\r\n        return (\r\n          <PetriBuilding city={this.props.city} building={b} key={type+i} ></PetriBuilding>\r\n        )\r\n      });\r\n    }\r\n    render() {\r\n      const beans = this.props.city.beans.map((b: Bean) => {\r\n        return (\r\n          <AnimatedBean bean={b} key={b.key} costOfLiving={this.props.costOfLiving} onClick={() => this.props.onBeanClick(b)}></AnimatedBean>\r\n        )\r\n      })\r\n      const deaths = this.props.city.historicalBeans.filter((x) => !x.alive).map((b: Bean, i) => {\r\n        return (\r\n          <span key={i} className=\"dead\" style={{left: (i*10)+'px'}}>⚰️</span>\r\n        )\r\n      })\r\n      const buildings = this.renderBuildings('farm').concat(this.renderBuildings('hospital')).concat(this.renderBuildings('house')).concat(this.renderBuildings('courthouse'));\r\n      const regions = this.props.city.hexes.map((hex, i) => {\r\n        const xy = hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, hex);\r\n        return <div className=\"hex\" key={i} style={transformPoint(xy)} onClick={(e) => {this.props.onHexClick(hex); e.stopPropagation(); return false;}}>\r\n\r\n        </div>\r\n      });\r\n      const mtns = this.mtn_transforms.map((x, i) => {\r\n        return <span key={i} style={x} className=\"mtn\">⛰️</span>\r\n      });\r\n      return (\r\n        <div className=\"tile\" onClick={() => this.props.onClick()}>\r\n        <svg style={{width: '100%', height: '100%'}} className=\"petri-base\">\r\n          <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 1)\" />\r\n         </svg>\r\n          {regions}\r\n          {mtns}\r\n          {deaths}\r\n          {buildings}\r\n          {beans}\r\n          <span className=\"tile-label\">{this.props.tile.name}</span>\r\n          <svg style={{width: '100%', height: '100%'}} className=\"petri-lid\">\r\n            <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 0.2)\" />\r\n           </svg>\r\n        </div>\r\n      )\r\n    }\r\n  }","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { World, TraitJob } from \"../World\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { Listing } from \"../simulation/Economy\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport class EconomyReport extends React.Component<{world: World}, {paused: boolean}> {\r\n    constructor(props: {world: World}) {\r\n      super(props);\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    render() {\r\n      let beans = this.props.world.beans;\r\n      const food_median = median(beans.map(x => x.discrete_food));\r\n      const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n      const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n      const wealth_avg = wealth_total / (beans.length || 1);\r\n      const wealth_median = median(beans.map(x => x.cash));\r\n      const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n      const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n      const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n      const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n      const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n      const jobs = beans.reduce((obj, b) => {\r\n        obj[b.job] = (obj[b.job] || 0)+1;\r\n        return obj;\r\n      }, {} as {[key in TraitJob]: number});\r\n      const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n      function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: Listing){\r\n        obj.supply += l.quantity;\r\n        obj.price += l.price;\r\n        obj.count++;\r\n        obj.avg = obj.price / obj.count;\r\n        return obj;\r\n      }\r\n      const food = this.props.world.economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const meds = this.props.world.economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const houses = this.props.world.economy.market.listings['shelter'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      return (\r\n        <div>\r\n          <div className=\"pad-4p\">\r\n            <h3>Subject's Health</h3>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🍞 Food Security</strong> Median:{food_median.toFixed(1)} meals <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n              Supply: {food.supply} meals. Avg. price ${food.avg.toFixed(2)} <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.food} meals\r\n            </div>\r\n            <div>\r\n              <strong>🩺 Healthcare</strong> Median:{health_median} <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n              Supply: {meds.supply} treatments. Avg. price ${meds.avg.toFixed(2)}  <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.medicine} treatments\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🏡 Housing</strong> <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\" className=\"big\"></NeedReadout>\r\n              Supply: {houses.supply} units. Avg. price ${houses.avg.toFixed(2)}   <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.shelter} units\r\n            </div>\r\n          </div>\r\n          <div className=\"pad-4p\">\r\n            <h3>Economic Health</h3>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>💰 Wealth</strong> Household Wealth: {wealth_total.toFixed(2)}<br/>\r\n              {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${this.props.world.economy.getCostOfLiving().toFixed(2)} <br/>\r\n              Median: ${wealth_median.toFixed(2)} Average: ${wealth_avg.toFixed(2)} <br/>\r\n              Top {wealthy_percentage.toFixed(1)}% of subjects own {wealthy_ownership.toFixed(1)}% of the wealth\r\n            </div>\r\n            <span>\r\n              <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n              <strong>Employment</strong>\r\n              <ul className=\"boxes\">\r\n                <li>{jobs.farmer} farmers</li>\r\n                <li>{jobs.builder} builders</li>\r\n                <li>{jobs.doc} doctors</li>\r\n              </ul>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\n\r\nexport interface EventsPanelPS\r\n{\r\n    events: IEvent[],\r\n    selectBean: (beanKey?: number) => void\r\n}\r\n\r\nexport class EventsPanel extends React.Component<EventsPanelPS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let events = this.props.events.map((e, i) => {\r\n            const speechcrime = e.icon === '🚨';\r\n            return <div key={i} className={speechcrime ? 'tall': ''}>\r\n                <span className={speechcrime ? 'police-siren': ''}>{e.icon}</span>&nbsp;\r\n                {\r\n                    e.beanKey != null ? <a onClick={() => this.props.selectBean(e.beanKey)} href=\"javascript:void(0)\">{e.message}</a> : <span>{e.message}</span>\r\n                }\r\n            </div>\r\n        });\r\n        if (this.props.events.length === 0){\r\n            events = [<div key={0}>\r\n                <small>No events yet this year</small>\r\n            </div>]\r\n        }\r\n        return (                \r\n        <div className=\"events-panel\">\r\n            <div>\r\n                <b>Events</b>\r\n            </div>\r\n            {events}\r\n        </div>\r\n        )\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NarrativeBeliefData, PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { Trait, TraitIcon } from \"../World\";\r\n\r\nexport class CardButton extends React.Component<{\r\n    icon: string,\r\n    name: string,\r\n    onClick?: () => void,\r\n    title?: string,\r\n    subtext?: string,\r\n    thin?: boolean,\r\n    singleLine?: boolean\r\n}>{\r\n    render(){\r\n        let classes = \"card button\";\r\n        if (this.props.thin) classes += ' thin';\r\n        if (this.props.singleLine) classes += ' single';\r\n        return <button className={classes} title={this.props.title} onClick={() => {\r\n            if (this.props.onClick) this.props.onClick()\r\n        }} type=\"button\">\r\n            {this.props.icon} {this.props.name}\r\n            {\r\n                (this.props.subtext != null) ? <small>{this.props.subtext}</small> : null\r\n            }\r\n        </button>\r\n    }\r\n}\r\n\r\nexport function TraitToCard(bean: Bean, trait: Trait, onClick?: () => void){\r\n    switch(trait){\r\n        case 'trad':\r\n        case 'prog':\r\n        case 'ego':\r\n        case 'state':\r\n            return <CardButton icon={TraitIcon[trait]} title={PrimaryBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'fresh':\r\n        case 'sick':\r\n        case 'hungry':\r\n        case 'stuffed':\r\n        case 'podless':\r\n        case 'homeowner':\r\n        case 'circle':\r\n        case 'square':\r\n        case 'triangle':\r\n        case 'sane':\r\n        case 'confused':\r\n        case 'mad':\r\n            return <CardButton icon={TraitIcon[trait]} title={keyToName[trait]} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'noFaith':\r\n        case 'rocket':\r\n        case 'dragon':\r\n        case 'music':\r\n            return <CardButton icon={TraitIcon[trait]} title={NarrativeBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        default:\r\n            return null;\r\n    }\r\n} ","import React from \"react\";\r\nimport { IHappinessModifier, TraitIcon } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Economy } from \"../simulation/Economy\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { IEvent, EventBus } from \"../events/Events\";\r\nimport { withinLastYear } from \"../simulation/Time\";\r\nimport { Government } from \"../simulation/Government\";\r\nimport { Player } from \"../simulation/Player\";\r\nimport { CardButton, TraitToCard } from \"../widgets/CardButton\";\r\n\r\nimport './BeanPanel.css';\r\nimport { ActivityIcon, GetPriorities } from \"../simulation/Agent\";\r\nimport { IsBeliefDivergent, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\n\r\ninterface BeanPanelP{\r\n    city: City,\r\n    bean: Bean,\r\n    economy: Economy,\r\n    law: Government,\r\n    party: Party,\r\n    alien: Player,\r\n    clearCity: () => void;\r\n    bus: EventBus\r\n    scan: (bean: Bean) => boolean;\r\n    insult: (bean: Bean) => void;\r\n    brainwash: () => void;\r\n    gift: () => void;\r\n}\r\n\r\ninterface BeanPanelS{\r\n    faceOverride?: string;\r\n    innerView: 'priorities'|'feelings'|'beliefs';\r\n}\r\n\r\nexport class BeanPanel extends React.Component<BeanPanelP, BeanPanelS> {\r\n    constructor(props: BeanPanelP) {\r\n        super(props);\r\n        this.state = {\r\n            innerView: 'feelings'\r\n        }\r\n    }\r\n    scan = () => {\r\n        if (this.props.scan(this.props.bean)){\r\n            this.setState({faceOverride: '🤨'});\r\n            this._resetFace();\r\n        }\r\n    }\r\n    insult = () => {\r\n        this.props.insult(this.props.bean);\r\n        this.setState({faceOverride: '😡'});\r\n        this._resetFace();\r\n    }\r\n    support = () => {\r\n        this.setState({faceOverride: '🤩'});\r\n        this._resetFace();\r\n    }\r\n    _resetFace(){\r\n        setTimeout(() => {\r\n            this.setState({faceOverride: undefined})\r\n        }, 5000);\r\n    }\r\n    happyTable(mods: IHappinessModifier[]){\r\n        return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{x.reason}</td>\r\n                <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n            </tr>\r\n        });\r\n    }\r\n    renderInner(){\r\n        if (!this.scanned){\r\n            return <div className=\"width-100p text-center\">\r\n                <small>\r\n                    Subject needs a Scan to reveal their thoughts\r\n                </small>\r\n            </div>\r\n        }\r\n        switch(this.state.innerView){\r\n            case 'beliefs':\r\n                return this.scanned ? this.beliefTable(this.props.bean.beliefs) : null\r\n            case 'feelings':\r\n                return <table className=\"width-100p\"><tbody>\r\n                    {this.scanned ? this.happyTable(this.props.bean.getHappinessModifiers(this.props.economy, this.props.city, this.props.law)) : null}\r\n                    {/* {this.scanned ? this.happyTable(this.props.bean.getSentimentModifiers(this.props.economy, this.props.city, this.props.law, this.props.party).party) : null} */}\r\n                    </tbody>\r\n                </table>\r\n            case 'priorities':\r\n                return <table className=\"width-100p\">\r\n                    <tbody>\r\n                        {\r\n                            GetPriorities(this.props.bean, this.props.alien.difficulty).values.map((x) => {\r\n                                return <div>\r\n                                    {x.priority.toFixed(1)} {ActivityIcon(x.value)}\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n        }\r\n    }\r\n    beliefTable(beliefs: TraitBelief[]): React.ReactNode {\r\n        return beliefs.map((b) => {\r\n            const divergent = IsBeliefDivergent(b, this.props.party.ideals, this.props.party.community);\r\n            return <table className=\"width-100p\" key={b}><tbody><tr>\r\n            <th className={divergent ? 'divergent text-left': \"text-left\"}>\r\n                {SecondaryBeliefData[b].icon} {SecondaryBeliefData[b].adj}\r\n            </th>\r\n            <td className=\"text-right\">\r\n                {(SecondaryBeliefData[b].idealPro || []).map(y => <span>+{TraitIcon[y]}</span>)}\r\n                {(SecondaryBeliefData[b].idealCon || []).map(y => <span>-{TraitIcon[y]}</span>)}\r\n            </td>\r\n        </tr><tr><td className=\"small text-center\" colSpan={2}>{SecondaryBeliefData[b].description}</td></tr></tbody></table>});\r\n    }\r\n    get scanned(){\r\n        return this.props.alien.scanned_bean[this.props.bean.key];\r\n    }\r\n    renderTraits(){\r\n        if (this.scanned){\r\n            const brainwash = this.props.brainwash.bind(this);\r\n            return <div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ethnicity, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.faith, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ideals, brainwash)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.community, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.food, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.shelter, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.health, undefined)}\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className=\"card-parent\">\r\n                <CardButton icon=\"🛰️\" name=\"Scan\" subtext=\"-Energy +Info\" onClick={this.scan}></CardButton>\r\n            </div>\r\n        }\r\n    }\r\n    render(){\r\n        const classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n        const chance = this.props.bean.chanceToDonate(this.props.economy, true);\r\n        return (                \r\n        <div className=\"vertical bean-panel\">\r\n            <div className=\"bean-panel-header\">\r\n                <div>\r\n                    <b>{this.props.bean.name}&nbsp;\r\n                    <small>\r\n                        of {this.props.city.name}\r\n                    </small>\r\n                    </b>\r\n                    <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n                </div>\r\n                <div className=\"bean-view\">                \r\n                    <span className={classes+\" bean\"}>\r\n                        {\r\n                            this.state.faceOverride === undefined ? this.props.bean.getFace() : this.state.faceOverride\r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <span className=\"text-center\">\r\n                        💰 ${this.props.bean.cash.toFixed(2)}\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        🙂 {Math.round(this.props.bean.lastHappiness)}%\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        👍 {Math.round(this.props.bean.lastPartySentiment)}%\r\n                    </span>\r\n                </div>\r\n                {this.renderTraits()}\r\n            </div>\r\n            <div className=\"grow-1 pad-4\">\r\n                <div className=\"cylinder blue-orange horizontal\">\r\n                    <button type=\"button\" className={this.state.innerView=='priorities'?'active':''} onClick={()=>this.setState({innerView:'priorities'})}>\r\n                        💪 Priorities\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='feelings'?'active':''} onClick={()=>this.setState({innerView:'feelings'})}>\r\n                        😐 Feelings\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='beliefs'?'active':''} onClick={()=>this.setState({innerView:'beliefs'})}>\r\n                        😇 Beliefs\r\n                    </button>\r\n                </div>\r\n                {this.renderInner()}\r\n            </div>\r\n            <div className=\"bean-action-card-parent\">\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={() => this.props.brainwash()}\r\n                        title=\"Rewrite one of this being's beliefs\"\r\n                    >😵 Brainwash\r\n                        <small>-Psi -Sanity +Belief</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\"  onClick={() => this.props.brainwash()}\r\n                        title=\"Give this being food or meds or cash\">\r\n                        🎁 Gift\r\n                        <small>-Energy +Things</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={this.scan} \r\n                        title=\"Drain a bit of this being's brain\">\r\n                        🤪 Siphon\r\n                        <small>-Energy -Sanity +Psi</small>\r\n                    </button>\r\n                    <button type=\"button\" className=\"button card\" onClick={this.insult}\r\n                        title=\"Delete this being from the experiment\"\r\n                    >\r\n                        ☠️ Disappear\r\n                        <small>-Bots -Energy</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={this.insult}\r\n                        title=\"Remove this being for study\"\r\n                    >\r\n                        👾 Abduct for Research\r\n                        <small>-Bots -Sanity +Tech</small>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { City } from \"../simulation/City\";\r\n\r\nexport interface FoundPartyPS\r\n{\r\n    cities: City[],\r\n    onFound: (state: FoundPartyS) => void\r\n}\r\nexport interface FoundPartyS\r\n{\r\n    community: TraitCommunity|null\r\n    ideal: TraitIdeals|null,\r\n    name: string,\r\n    slogan: string,\r\n    members: string,\r\n    goal: string,\r\n    cityKey: number\r\n}\r\n\r\nexport class FoundParty extends React.Component<FoundPartyPS, FoundPartyS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            community: null,\r\n            ideal: null,\r\n            name: \"Goodplace\",\r\n            slogan: \"Perfection is achievable.\",\r\n            members: \"Citizens\",\r\n            goal: \"Legislation\",\r\n            cityKey: 0\r\n        }\r\n    }\r\n    onCommunity(val: TraitCommunity){\r\n        this.setState({community: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onIdeal(val: TraitIdeals){\r\n        this.setState({ideal: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onBigFourChange(){\r\n        if (this.state.community === 'ego' && this.state.ideal === 'trad'){\r\n            this.setState({\r\n                name: 'Arcadia',\r\n                slogan: \"A man belongs on the farm.\",\r\n                members: \"Farmers\", goal: \"Tariffs\"});\r\n        } else if (this.state.community === 'ego' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Libertaria\",\r\n                slogan: \"Freedom for every being!\",\r\n                members: \"Builders\", goal: \"Right to Strike\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'trad') {\r\n            this.setState({\r\n                name: \"Ultimate Kingdom\",\r\n                slogan: \"Honor to King and family.\",\r\n                members: \"Homeowners\", goal: \"Repeal Property Tax\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Equus\",\r\n                slogan: \"True equality is peace.\",\r\n                members: \"Penniless\", goal: \"Food Welfare\"});\r\n        }\r\n    }\r\n    onName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({name: e.target.value});\r\n    }\r\n    onSlogan = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({slogan: e.target.value});\r\n    }\r\n    onCity = (key: any) => {\r\n        this.setState({cityKey: +key});\r\n    }\r\n    render(){\r\n        return <div>            \r\n          <h2>Found your Utopia</h2>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              Perfect societies rely on the\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"state\" checked={this.state.community === 'state'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)} /> <b>Collective</b> 🕊️ {/* 🐘 🤝*/}\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"ego\" checked={this.state.community === 'ego'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)}/> <b>Independent</b> 🦅 {/*✌️*/}\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              to guarantee well-being.\r\n            </div>\r\n            <div>\r\n              Perfect beings devote themselves to\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"trad\" checked={this.state.ideal === 'trad'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)}/> <b>Elitist</b> {/*🕯️ 🔮*/} 👑\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"prog\" checked={this.state.ideal === 'prog'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)} /> <b>Progressive</b> {/*💡 🔬 🎓*/} ⚖️\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              social values.\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My Utopia is named <input type=\"text\" value={this.state.name} onChange={this.onName} />\r\n            </div>\r\n            <div>\r\n              My Utopia's mantra is <input type=\"text\" value={this.state.slogan} onChange={this.onSlogan}  />\r\n            </div>\r\n          </div>\r\n          <hr/>\r\n          <button type=\"button\" disabled={this.state.community == null || this.state.ideal == null} className=\"important btn-found-party\" onClick={() => this.props.onFound(this.state)}>Found the {this.state.name} Utopia</button>\r\n        </div>\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { City } from \"../simulation/City\";\r\nimport { SecondaryBeliefData, BeliefSubjectIcon, BeliefSubjectText, BeliefVerbIcon, BeliefVerbText, TraitBelief, BeliefSubject, BeliefVerb, BeliefAdjOption, BeliefSubjectOption, BeliefVerbOption } from \"../simulation/Beliefs\";\r\n\r\nexport interface DropdownPS<T>{\r\n    options: Array<T&{key: any}>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any\r\n}\r\ninterface DropdownS{\r\n    key: any;\r\n}\r\n\r\nexport abstract class Dropdown<T> extends React.Component<DropdownPS<T>, DropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    abstract getTextForOption(data: T): string;\r\n    options(){\r\n        return this.props.options.map((o) => {\r\n            return <option value={o.key} key={o.key} title={this.getTitleForOption(o)}>\r\n                {this.getTextForOption(o)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: T): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\nexport class CityDropdown extends Dropdown<City>{\r\n    getTextForOption(data: City): string{\r\n        return data.name;\r\n    }\r\n}","import React from \"react\";\r\nimport { IPolicy } from \"../simulation/Politics\";\r\nimport { Dropdown } from \"./Dropdown\";\r\nimport { TraitIcon } from \"../World\";\r\n\r\nexport class PolicyDropdown extends Dropdown<IPolicy|undefined>{\r\n    getTextForOption(data: IPolicy): string{\r\n        return `${data.name} ${data.community ? TraitIcon[data.community]: ''}${data.ideals ? TraitIcon[data.ideals]: ''}`;\r\n    }\r\n    getTitleForOption(data: IPolicy): string|undefined{\r\n        return data.hint;\r\n    }\r\n}","import React from \"react\";\r\nimport { World, Axis, TraitIcon } from \"../World\";\r\nimport { policy, keyToName } from \"../App\";\r\nimport { PolicyDropdown } from \"../widgets/PolicyDropdown\";\r\nimport { PolicyTree, PolicyByKey, IPolicy } from \"../simulation/Politics\";\r\n\r\nexport interface PartyOverviewPS{\r\n    world: World;\r\n    setPolicy(axis: Axis, policy: IPolicy): void;\r\n}\r\ninterface PartyOverviewS{\r\n\r\n}\r\n\r\nexport class PartyOverview extends React.Component<PartyOverviewPS, PartyOverviewS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    setPolicy(axis: Axis){\r\n        return (policyKey: string) => {\r\n            const pol = PolicyByKey(policyKey);\r\n            if (pol){\r\n                this.props.setPolicy(axis, pol);\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        const hqs = this.props.world.cities.filter((x) => x.partyHQ != null);\r\n        const hq_names = hqs.map((x, i) => <i>{(i > 0 ? ', ': '')}{x.name}</i>);\r\n\r\n        return <div>\r\n            <div className=\"col-2\">\r\n            <div>\r\n              <h2 className=\"inline\">\r\n                {this.props.world.party.name}\r\n              </h2>\r\n              &nbsp;\r\n              <i>{this.props.world.party.slogan}</i>\r\n            </div>\r\n            <div>\r\n                <button type=\"button\" className=\"pull-r\">\r\n                🧪 View Research Lab\r\n                </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"policies\">\r\n            {this.props.world.party.availablePolicies.map((p) => policy(p))}\r\n          </div>\r\n          <div className=\"pad-4p\">\r\n                <h3 className=\"small\">\r\n                    Platform\r\n                </h3>\r\n                <div className=\"horizontal\">\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Welfare</div>\r\n                        <PolicyDropdown options={PolicyTree.wel_food} value={this.props.world.party.platform.wel_food} onChange={this.setPolicy('wel_food')} hint=\"Nutrition\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.wel_house} value={this.props.world.party.platform.wel_house} onChange={this.setPolicy('wel_house')} hint=\"Housing\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.wel_health} value={this.props.world.party.platform.wel_health} onChange={this.setPolicy('wel_health')} hint=\"Healthcare\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Taxation</div>\r\n                        <PolicyDropdown options={PolicyTree.tax_basic} value={this.props.world.party.platform.tax_basic} onChange={this.setPolicy('tax_basic')} hint=\"Basic Tax\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.tax_second} value={this.props.world.party.platform.tax_second} onChange={this.setPolicy('tax_second')} hint=\"Secondary Tax\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Economics</div>\r\n                        <PolicyDropdown options={PolicyTree.econ_ex} value={this.props.world.party.platform.econ_ex} onChange={this.setPolicy('econ_ex')} hint=\"External\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.econ_labor} value={this.props.world.party.platform.econ_labor} onChange={this.setPolicy('econ_labor')} hint=\"Labor\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.econ_sub} value={this.props.world.party.platform.econ_sub} onChange={this.setPolicy('econ_sub')} hint=\"Subsidies\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Culture</div>\r\n                        <PolicyDropdown options={PolicyTree.cul_rel} value={this.props.world.party.platform.cul_rel} onChange={this.setPolicy('cul_rel')} hint=\"Religion\"></PolicyDropdown>\r\n                        {\r\n                            this.props.world.party.platform.cul_rel && this.props.world.party.platform.cul_rel.key == '20' ?\r\n                            <PolicyDropdown options={PolicyTree.cul_theo} value={this.props.world.party.platform.cul_theo} onChange={this.setPolicy('cul_theo')} hint=\"Theocracy\"></PolicyDropdown> : null\r\n                        }\r\n                        <PolicyDropdown options={PolicyTree.cul_ed} value={this.props.world.party.platform.cul_ed} onChange={this.setPolicy('cul_ed')} hint=\"Education\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Law</div>\r\n                        <PolicyDropdown options={PolicyTree.law_vote} value={this.props.world.party.platform.law_vote} onChange={this.setPolicy('law_vote')} hint=\"Voting\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.law_bribe} value={this.props.world.party.platform.law_bribe} onChange={this.setPolicy('law_bribe')} hint=\"Corruption\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.law_imm} value={this.props.world.party.platform.law_imm} onChange={this.setPolicy('law_imm')} hint=\"Immigration\"></PolicyDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <div className=\"grow-1 platform-identity\">\r\n                        { keyToName[this.props.world.party.community]}\r\n                        &nbsp;\r\n                        {TraitIcon[this.props.world.party.community]}\r\n                    </div>\r\n                    <div className=\"grow-1 platform-identity\">\r\n                        { keyToName[this.props.world.party.ideals]}\r\n                        &nbsp;\r\n                        {TraitIcon[this.props.world.party.ideals]}\r\n                    </div>\r\n                </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n                <h3 className=\"small\">\r\n                    Crime\r\n                </h3>\r\n                <div className=\"horizontal\">\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Suffrage</div>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Suffrage</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport './chrome/chrome.css';\r\nimport { World, TraitGood, Axis, Trait, TraitCommunity, TraitIdeals, TraitFaith } from './World';\r\nimport { GenerateWorld, GeneratePartyHQ, GenerateBuilding, GenerateBean, GetRandom } from './WorldGen';\r\nimport { Modal } from './widgets/Modal';\r\nimport { OverviewPanel } from './right-panel/OverviewPanel';\r\nimport { Bean } from './simulation/Bean';\r\nimport { AnimatedBean } from './petri-ui/AnimatedBean';\r\nimport { WorldTile } from './petri-ui/WorldTile';\r\nimport { EconomyReport } from './modal-content/EconomyReport';\r\nimport { CharityPanel } from './modal-content/CharityPanel';\r\nimport { PoliticalEffect, Policy, CityPartyHQ, IPolicy } from './simulation/Politics';\r\nimport { EventsPanel } from './right-panel/Events';\r\nimport { BeanPanel } from './right-panel/BeanPanel';\r\nimport { FoundParty, FoundPartyS } from './modal-content/FoundParty';\r\nimport { PartyOverview } from './modal-content/PartyOverview';\r\nimport { BubbleText } from './widgets/BubbleText';\r\nimport { Season, Now } from './simulation/Time';\r\nimport { SocialGraph } from './widgets/SocialGraph';\r\nimport { CapsuleLabel } from './widgets/CapsuleLabel';\r\n\r\n\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { GoalsPanel } from './right-panel/Goals';\r\nimport { CampaignsPanel } from './modal-content/Campaigns';\r\nimport { GovernmentPanel } from './modal-content/Gov';\r\nimport { ResearchPanel } from './modal-content/Research';\r\nimport { StopPlayFastButtons } from './widgets/StopPlayFast';\r\nimport { BuildingTypes, HexPoint } from './simulation/Geography';\r\nimport { HexPanel } from './right-panel/HexPanel';\r\nimport { City } from './simulation/City';\r\nimport { BrainwashingContent } from './modal-content/Brainwashing';\r\nimport { TraitBelief } from './simulation/Beliefs';\r\n\r\n\r\nexport const keyToName: {[key in Trait|BuildingTypes]: string} = {\r\n  state: 'Collectivist', ego: 'Independent', \r\n  trad: 'Elitist', prog: 'Progressive', \r\n  circle: 'Brunette', square: 'Blonde', triangle: 'Redhead', \r\n  rocket: 'Futuristic', dragon: 'Mythical', music: 'Dramatic', noFaith: 'Nihilistic',\r\n  hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\r\n  podless: 'Homeless', crowded: 'Crowded', homeowner: 'Homeowner',\r\n  sick: 'Sick', bruised: 'Bruised', fresh: 'Robust',\r\n  sane: 'Sane', confused: 'Confused', mad: 'Mad',\r\n  house:'House', hospital:'Hospital', farm: 'Farm', theater: 'Theater', church: 'Church', courthouse: 'Courthouse'\r\n};\r\nexport const magToText = {'-3':'---', '-2':'--', '-1':'-', '1':'+', '2':'++', '3':'+++' };\r\nfunction magToTextSw(magnitude: number){\r\n  switch(magnitude) {\r\n    case -3:\r\n      return '---';\r\n    case -2:\r\n      return '--';\r\n    case -1:\r\n      return '-';\r\n    case 1:\r\n      return '+';\r\n    case 2:\r\n      return '++';\r\n    case 3:\r\n      return '+++';\r\n    default:\r\n      return '/';\r\n  }\r\n}\r\nfunction compass(p: PoliticalEffect){\r\n  return (\r\n    <span className=\"badge\">\r\n      { keyToName[p.key] }\r\n      { magToTextSw(p.mag) }\r\n    </span>\r\n  )\r\n}\r\nexport function policy(p: Policy){\r\n  return (\r\n    <div className=\"policy\" key={p.key}>\r\n      <b>{p.key}</b>\r\n      <p>\r\n        {p.fx.map((x) => compass(x))}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport type ModalView = 'policy'|'economy'|'campaign'|'party_creation'|'party'|'polisci'|'brainwash';\r\ninterface AppPs{\r\n}\r\ninterface AppState{\r\n  world: World,\r\n  activeCityID: number|null;\r\n  activeBeanID: number|null;\r\n  activeHex: HexPoint|null;\r\n  activeModal: ModalView|null;\r\n  activeMain: 'geo'|'network';\r\n  activeRightPanel: 'events'|'overview'|'goals';\r\n  timeScale: number;\r\n}\r\n\r\nconst LogicTickMS = 2000;\r\nclass App extends React.Component<AppPs, AppState>{\r\n  constructor(props: AppPs) {\r\n    super(props);\r\n    this.state = {\r\n      world: GenerateWorld(),\r\n      activeCityID: null,\r\n      activeBeanID: null,\r\n      activeHex: null,\r\n      activeMain: 'geo',\r\n      activeModal: 'party_creation',\r\n      activeRightPanel: 'overview',\r\n      timeScale: 1\r\n    };\r\n    this.state.world.calculateComputedState();\r\n  }\r\n  private previousTimeMS: DOMHighResTimeStamp = 0;\r\n  private logicTickAccumulatorMS: number = 0;\r\n  componentDidMount(){\r\n    document.addEventListener(\"keyup\", this.keyupHandler, false);\r\n    window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n      this.previousTimeMS = time;\r\n      window.requestAnimationFrame(this.tick);\r\n    });\r\n  }\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"keyup\", this.keyupHandler);\r\n  }\r\n  tick = (timeMS: DOMHighResTimeStamp) => {\r\n    // Compute the delta-time against the previous time\r\n    const deltaTimeMS = (timeMS - this.previousTimeMS) * this.state.timeScale;\r\n  \r\n    // Update the previous time\r\n    this.previousTimeMS = timeMS;\r\n    if (deltaTimeMS > 0){\r\n      this.logicTickAccumulatorMS += deltaTimeMS;\r\n      this.state.world.simulate_beans(deltaTimeMS);\r\n      \r\n      if (this.logicTickAccumulatorMS > LogicTickMS){\r\n        this.state.world.simulate_world();\r\n        this.setState({world: this.state.world});\r\n        this.logicTickAccumulatorMS = 0;\r\n      }\r\n    }\r\n    window.requestAnimationFrame(this.tick);\r\n  }\r\n  keyupHandler = (event: KeyboardEvent) => {\r\n    if(event.key === ' ') {\r\n      if (this.state.timeScale > 0){\r\n        this.setState({timeScale: 0});\r\n      } else {\r\n        this.setState({timeScale: 1});\r\n      }\r\n    }\r\n  }\r\n  foundParty = (state: FoundPartyS) => {\r\n    this.state.world.party.name = state.name;\r\n    this.state.world.party.slogan = state.slogan;\r\n    if (state.community)\r\n      this.state.world.party.community = state.community;\r\n    if (state.ideal)\r\n      this.state.world.party.ideals = state.ideal;\r\n    const city = this.state.world.cities.find((x) => x.key == state.cityKey);\r\n    if (city) {\r\n      GeneratePartyHQ(city, this.state.world.party);\r\n    }\r\n    this.state.world.calculateComputedState();\r\n    this.setState({\r\n      world: this.state.world,\r\n      activeModal: null});\r\n  }\r\n  get difficulty(){\r\n    return this.state.world.alien.difficulty;\r\n  }\r\n  build = (city: City, where: HexPoint, what: BuildingTypes) => {\r\n    const cost = this.difficulty.cost.emptyHex.build[what];\r\n    if (this.state.world.alien.canAfford(cost)){\r\n      this.state.world.alien.purchase(cost);\r\n      GenerateBuilding(city, what, where);\r\n    }\r\n    \r\n    this.setState({world: this.state.world});\r\n  }\r\n  kidnap = (city: City, where: HexPoint) => {\r\n    const cost = this.difficulty.cost.hex.kidnap;\r\n    if (this.state.world.alien.canAfford(cost)){\r\n      this.state.world.alien.purchase(cost);\r\n      city.historicalBeans.push(GenerateBean(city, city.historicalBeans.length));\r\n    }\r\n    \r\n    this.setState({world: this.state.world});\r\n  }\r\n  foundCharity = (good: TraitGood, name: string, budget: number) => {\r\n    this.state.world.addCharity(good, name, budget);\r\n    this.setState({world: this.state.world});\r\n  }\r\n  insult = (bean: Bean) => {\r\n    this.state.world.party.politicalCapital += 1;\r\n    bean.lastInsultDate = Now(this.state.world);\r\n    if (bean.city)\r\n      bean.calculateBeliefs(this.state.world.economy, bean.city, this.state.world.law, this.state.world.party);\r\n    this.setState({world: this.state.world});\r\n  }\r\n  support = (bean: Bean) => {\r\n    this.state.world.party.politicalCapital -= 1;\r\n    bean.lastApprovalDate = Now(this.state.world);\r\n    if (bean.city)\r\n      bean.calculateBeliefs(this.state.world.economy, bean.city, this.state.world.law, this.state.world.party);\r\n    this.setState({world: this.state.world});\r\n  }\r\n  scan = (bean: Bean) => {\r\n    if (this.state.world.alien.canAfford(this.state.world.alien.difficulty.cost.bean.scan)){\r\n      this.state.world.alien.purchase(this.state.world.alien.difficulty.cost.bean.scan);\r\n      this.state.world.alien.scanned_bean[bean.key] = true;\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  washCommunity = (bean: Bean, a: TraitCommunity) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainwash_ideal)){\r\n      if (bean.community === 'ego')\r\n        bean.community = 'state';\r\n      else bean.community = 'ego';\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  washMotive = (bean: Bean, a: TraitIdeals) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainwash_ideal)){\r\n      if (bean.ideals === 'prog')\r\n        bean.ideals = 'trad';\r\n      else bean.ideals = 'prog';\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  washNarrative = (bean: Bean, a: TraitFaith) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainwash_ideal)){\r\n      const oldFaith = bean.faith;\r\n      while (bean.faith === oldFaith)\r\n        bean.faith = GetRandom(['rocket', 'dragon', 'music', 'noFaith']);\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  washBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainwash_secondary)){\r\n      bean.beliefs.splice(\r\n        bean.beliefs.indexOf(a), 1\r\n      );\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  implantBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.brainimplant_secondary)){\r\n      bean.beliefs.push(a);\r\n      this.setState({world: this.state.world});\r\n      return true;\r\n    }\r\n  }\r\n  setPolicy = (axis: Axis, policy: IPolicy) => {\r\n    this.state.world.party.platform[axis] = policy;\r\n    this.state.world.calculateComputedState();\r\n    this.setState({world: this.state.world});\r\n  }\r\n  getPanel(){\r\n    switch(this.state.activeRightPanel){\r\n      case 'overview':\r\n        if (this.state.activeCityID == null) {\r\n          return <OverviewPanel beans={this.state.world.beans} utopia={this.state.world.party} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>\r\n        } else {\r\n          const city = this.state.world.cities.find((x) => x.key == this.state.activeCityID);\r\n          if (city) {\r\n            \r\n            if (this.state.activeHex != null){\r\n              return <HexPanel city={city} hex={this.state.activeHex} difficulty={this.state.world.alien.difficulty}\r\n                clearHex={() => this.setState({activeHex: null})}\r\n                kidnap={(where) => this.kidnap(city, where)} \r\n                build={(where, what) => {this.build(city, where, what)}}></HexPanel>\r\n            }\r\n            else if (this.state.activeBeanID != null) {\r\n              const bean = city.beans.find((y) => y.key == this.state.activeBeanID);\r\n              if (bean)\r\n                return <BeanPanel bean={bean} city={city} alien={this.state.world.alien} \r\n                economy={this.state.world.economy} party={this.state.world.party} bus={this.state.world.bus} law={this.state.world.law}\r\n                scan={this.scan} insult={this.insult}\r\n                brainwash={() => this.setState({activeModal:'brainwash'})}\r\n                gift={() => this.setState({activeModal:'brainwash'})}\r\n                clearCity={() => this.setState({activeCityID: null, activeBeanID: null})}></BeanPanel>\r\n            }\r\n\r\n            return <OverviewPanel beans={city?.beans} utopia={this.state.world.party}  city={city} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>            \r\n          }\r\n          else\r\n            return <div>\r\n            </div>\r\n        }\r\n      case 'goals':\r\n        return <GoalsPanel player={this.state.world.alien} progress={this.state.world.alien}></GoalsPanel>\r\n      case 'events':\r\n        return <EventsPanel events={this.state.world.yearsEvents} selectBean={(beankey?: number) => {\r\n          if (beankey)\r\n            this.setState({activeCityID: this.state.world.cities[0].key, activeBeanID: beankey, activeHex: null, activeRightPanel: 'overview'})\r\n        }}></EventsPanel>\r\n    }\r\n  }\r\n  renderGeo() {\r\n    const COL = this.state.world.economy.getCostOfLiving();\r\n    return this.state.world.cities.map((t) => {\r\n        return (\r\n          <WorldTile tile={t} city={t} costOfLiving={COL} key={t.key}\r\n            onClick={() => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: null})} \r\n            onBeanClick={(b) => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: b.key})} \r\n            onHexClick={(hex) => {this.setState({activeCityID: t.key, activeHex: hex, activeBeanID: null, activeRightPanel: 'overview'})}}\r\n            ></WorldTile>\r\n        )\r\n      });\r\n  }\r\n  renderNetwork(){\r\n    return <div>\r\n      <div className=\"horizontal max-w-500 m-t-2em\">\r\n        <button type=\"button\">\r\n        😎 Influence\r\n        </button>\r\n        <button type=\"button\">\r\n        🚩 Party Preference\r\n        </button>\r\n        <button type=\"button\">\r\n        📈 Demographics\r\n        </button>\r\n      </div>\r\n      <SocialGraph costOfLiving={this.state.world.economy.getCostOfLiving()} \r\n        beans={this.state.world.beans}\r\n        onClick={(b) => this.setState({activeCityID: b.cityKey, activeRightPanel: 'overview', activeBeanID: b.key})} ></SocialGraph>\r\n    </div>\r\n  }\r\n  main(){\r\n    switch(this.state.activeMain){\r\n      case 'network':\r\n        return this.renderNetwork();\r\n      default:\r\n        return this.renderGeo();\r\n    }\r\n  }\r\n  render() {\r\n    const season = Season[this.state.world.date.season];\r\n    return (\r\n    <div className=\"canvas\">\r\n      <TransformWrapper \r\n        defaultScale={1}\r\n        wheel={{step: 48}}>\r\n        <TransformComponent>\r\n          <div className=\"world\">\r\n            {this.main()}\r\n          </div>\r\n        </TransformComponent>\r\n      </TransformWrapper>\r\n      <div className=\"overlay\">\r\n        <Modal show={this.state.activeModal == 'party_creation'} onClick={() => this.setState({activeModal: null})} hideCloseButton={true}>\r\n          <FoundParty cities={this.state.world.cities} onFound={this.foundParty}></FoundParty>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'party'} onClick={() => this.setState({activeModal: null})}>\r\n          <PartyOverview world={this.state.world} setPolicy={this.setPolicy}></PartyOverview>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'polisci'} onClick={() => this.setState({activeModal: null})} hideCloseButton={true}>\r\n          <ResearchPanel></ResearchPanel>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'policy'} onClick={() => this.setState({activeModal: null})}>\r\n          <GovernmentPanel world={this.state.world}></GovernmentPanel>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'campaign'} onClick={() => this.setState({activeModal: null})}>\r\n          <CampaignsPanel></CampaignsPanel>\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({activeModal: null})}>\r\n          {(this.state.activeModal == 'economy'? <EconomyReport world={this.state.world}></EconomyReport> : '')}\r\n        </Modal>\r\n        <Modal show={this.state.activeModal == 'brainwash'} onClick={() => this.setState({activeModal: null})}>\r\n          {(this.state.activeModal == 'brainwash'? <BrainwashingContent \r\n            world={this.state.world} beanID={this.state.activeBeanID}\r\n            washCommunity={this.washCommunity}\r\n            washMotive={this.washMotive}\r\n            washNarrative={this.washNarrative}\r\n            washBelief={this.washBelief}\r\n            implantBelief={this.implantBelief}>\r\n          </BrainwashingContent> : '')}\r\n        </Modal>\r\n        <div className=\"left\">\r\n          <div className=\"top\">\r\n            <span>\r\n            👽 Alien 🌍 Utopia 🔬 Lab\r\n            </span>\r\n            <span>\r\n              &nbsp;\r\n              Year {this.state.world.date.year}, \r\n              &nbsp;\r\n              {season} {this.state.world.date.day}\r\n            </span>\r\n            <span>\r\n              6 mo 5 days til Grade\r\n            </span>\r\n            <button type=\"button\" onClick={() => this.setState({activeMain: 'network'})}>🌐</button>\r\n            <button type=\"button\" onClick={() => this.setState({activeMain: 'geo'})}>🌎</button>\r\n            \r\n            <StopPlayFastButtons timeScale={this.state.timeScale} setTimeScale={(n: number) => {this.setState({timeScale: n})}}></StopPlayFastButtons>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <BubbleText changeEvent={this.state.world.alien.energy.change} icon=\"⚡️\">\r\n              <CapsuleLabel icon=\"⚡️\" label=\"Energy\">\r\n                {this.state.world.alien.energy.amount.toFixed(1)}\r\n              </CapsuleLabel>\r\n            </BubbleText>\r\n            <BubbleText changeEvent={this.state.world.alien.psi.change} icon=\"🧠\">\r\n              <CapsuleLabel icon=\"🧠\" label=\"Psi\">\r\n                {this.state.world.alien.psi.amount.toFixed(1)}\r\n              </CapsuleLabel>\r\n            </BubbleText>\r\n            <BubbleText changeEvent={this.state.world.alien.bots.change} icon=\"🤖\">\r\n              <CapsuleLabel icon=\"🤖\" label=\"Bots\">\r\n                {this.state.world.alien.bots.amount.toFixed(1)}\r\n              </CapsuleLabel>\r\n            </BubbleText>\r\n            <span>\r\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'economy'})}>State of the Utopia</button>\r\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'party'})}>Gov</button>\r\n              <button type=\"button\" onClick={() => this.setState({activeModal:'polisci'})}>Research</button>\r\n              <button type=\"button\" onClick={() => this.setState({activeModal:'campaign'})}>Campaigns</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"full-width-tabs\">\r\n            <button onClick={() => this.setState({activeRightPanel: 'overview'})}>📈 Overview</button>\r\n            <button onClick={() => this.setState({activeRightPanel: 'events'})}>📣 Events</button>\r\n            <button onClick={() => this.setState({activeRightPanel: 'goals'})}>🏆 Goals</button>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            {this.getPanel()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { ChangePubSub } from \"../events/Events\";\r\n\r\nexport class BubbleText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<{s: string, t: number, c?: string}>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n\r\n    onChange = (ev: {change: number}) => {\r\n        const id = +(new Date());\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                s: (positive ? '+': '') + ev.change,\r\n                t: id,\r\n                c: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.t != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.t} className={[b.c, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.s}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"../petri-ui/AnimatedBean\";\r\nimport \"./SocialGraph.css\";\r\nimport { origin_point } from \"../simulation/Geography\";\r\n\r\ninterface SocialGraphP{\r\n    beans: Bean[];\r\n    costOfLiving: number;\r\n    onClick: (b: Bean) => void\r\n}\r\ninterface SocialGraphS{\r\n    \r\n}\r\nexport class SocialGraph extends React.Component<SocialGraphP, SocialGraphS>{\r\n    constructor(props: SocialGraphP){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return <div className=\"social-graph\">\r\n            {\r\n                this.props.beans.map((b) => \r\n                <div className=\"bean-node\" onClick={() => this.props.onClick(b)}>\r\n                    <AnimatedBean bean={b} static={true} costOfLiving={this.props.costOfLiving} sitStill={true} \r\n                        onClick={() => {this.props.onClick(b);}}>\r\n                    </AnimatedBean>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { ChangePubSub } from \"../events/Events\";\r\nimport { threadId } from \"worker_threads\";\r\n\r\nexport class CapsuleLabel extends React.Component<{\r\n    icon?: string,\r\n    label?: string\r\n}, {\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const classN = 'capsule-label '+this.props.label||'';\r\n        return <span className={classN}>\r\n            <span className=\"capsule-icon\">\r\n                {this.props.icon}\r\n            </span>\r\n            <span className=\"capsule-text\">\r\n                {this.props.label}:\r\n            </span>\r\n            <span className=\"capsule-value\">\r\n                {this.props.children}\r\n            </span>\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { triadToString } from \"../Game\";\r\nimport { Goals, IGoal, IPlayerData, IProgressable } from \"../simulation/Player\";\r\n\r\nexport interface GoalPanelPS\r\n{\r\n  player: IPlayerData;\r\n  progress: IProgressable;\r\n}\r\n\r\nexport class GoalsPanel extends React.Component<GoalPanelPS> {\r\n  renderReward(g: IGoal){\r\n    return <div>\r\n      <small>\r\n      🎁 {triadToString(g.reward || {}, '+')}\r\n      </small>\r\n    </div>\r\n  }\r\n  renderGoal(g: IGoal){\r\n    const done = this.props.progress.goalProgress[g.key] != null && this.props.progress.goalProgress[g.key].done;\r\n    return <li>\r\n      {done ? '☑️': '⭕️'}\r\n      {g.text}\r\n      {g.tooltip != null ? <small title={g.tooltip}>❔</small> : null}\r\n      {done || g.reward == null ? null : this.renderReward(g)}\r\n    </li>\r\n  }\r\n    render(){\r\n        return (<div className=\"goals\">\r\n        <div><b>Goals</b></div>\r\n        <ul>\r\n          {this.props.progress.goals.map((key) => {\r\n            return this.renderGoal(Goals[key]);\r\n          })}\r\n        </ul>\r\n        <div><b>Report Card</b></div>\r\n        <p className=\"horizontal\">\r\n          <span>\r\n            Last Grade: <b>D</b>\r\n          </span>\r\n          <span>\r\n            Next Grade in: <b>2 mo.</b>\r\n          </span>\r\n        </p>\r\n        <p>\r\n        </p>\r\n        <table style={{margin: 'auto'}}>\r\n          <tbody>\r\n            <tr>\r\n              <th>Happiness\r\n              </th>\r\n              <td>\r\n                D\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects happy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Prosperity</th>\r\n              <td>\r\n                D\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects fed and healthy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Stability\r\n              </th>\r\n              <td>\r\n                D\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects sane and civil?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Dogma\r\n              </th>\r\n              <td>\r\n                B\r\n              </td>\r\n              <td>\r\n                <small title=\"Do your society's rules match your utopian ideals?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={3}>\r\n                <hr />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                Avg. Grade\r\n              </th>\r\n              <td>\r\n                C\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <p>\r\n          Receive an \"A\" in \"Prosperity\" <br/> to receive 3 Psi\r\n        </p>\r\n      </div>)\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class CampaignsPanel extends React.Component<{\r\n\r\n}>{\r\n    render(){\r\n        return <div className=\"pad-4p\">\r\n        <div className=\"subheader\">\r\n            <h3>Propaganda</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >🎙️ Buy Propaganda</button>\r\n        </div>\r\n        <span>\r\n          Propaganda changes beans' feelings on a wide variety of topics.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              📺 Broadcast Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Small chance to increase Approval among all beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              👋 Canvassing\r\n            </span>\r\n            <small>Approval+ Labor-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on a few random beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🗞️ Print Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on wealthy beans\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <div className=\"subheader\">\r\n            <h3>Appearances</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >💬 Schedule Appearance</button>\r\n        </div>\r\n        <span>\r\n          Appearances have limited reach, but have powerful effects.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🤔 Debating\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Chance to gain or lose Influence\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            📸 Photo Op\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases Approval within one Social Group\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🎤 Speechmaking\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases chance of Donations in a single City\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🙋 Town Hall\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Suppresses negative Approval in a single city                     \r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* <CharityPanel world={this.state.world} onFoundCharity={this.foundCharity}></CharityPanel>\r\n        <div>\r\n          <b>Campaign Finances</b> <br/>\r\n          <b>Expenses</b> ${seasonalCost} <b>Surplus</b> ${this.state.world.party.seasonalIncome - seasonalCost}\r\n        </div> */}\r\n      </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { World } from \"../World\";\r\n\r\nexport class GovernmentPanel extends React.Component<{\r\n    world: World\r\n}> {\r\n    render(){\r\n        return <div><div className=\"col-2\">\r\n        <h2>Government</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"pad-4p\">\r\n        <h3>Policy</h3>\r\n        <div className=\"horizontal\">\r\n          <div className=\"vertical\">\r\n            <strong>Welfare</strong>\r\n            <div>Nutrition: {this.props.world.law.policyTree.wel_food.name}</div>\r\n            <div>Housing: {this.props.world.law.policyTree.wel_house.name}</div>\r\n            <div>Healthcare: {this.props.world.law.policyTree.wel_health.name}</div>\r\n          </div>\r\n          <div className=\"vertical\">\r\n            <strong>Taxation</strong>\r\n            <div>{this.props.world.law.policyTree.tax_basic.name}</div>\r\n            <div>{this.props.world.law.policyTree.tax_second.name}</div>\r\n          </div>\r\n          <div className=\"vertical\">\r\n            <strong>Economics</strong>\r\n            <div>External: {this.props.world.law.policyTree.econ_ex.name}</div>\r\n            <div>Labor: {this.props.world.law.policyTree.econ_labor.name}</div>\r\n            <div>Subsidies: {this.props.world.law.policyTree.econ_sub.name}</div>\r\n          </div>\r\n          <div className=\"vertical\">\r\n            <strong>Culture</strong>\r\n            <div>Religion: {this.props.world.law.policyTree.cul_rel.name}</div>\r\n            {this.props.world.law.policyTree.cul_rel.key == '20' ? <div>Theocracy: {this.props.world.law.policyTree.cul_theo.name}</div>: null}\r\n            <div>Education: {this.props.world.law.policyTree.cul_ed.name}</div>\r\n          </div>\r\n          <div className=\"vertical\">\r\n            <strong>Law</strong>\r\n            <div>Voting: {this.props.world.law.policyTree.law_vote.name}</div>\r\n            <div>Corruption: {this.props.world.law.policyTree.law_bribe.name}</div>\r\n            <div>Immigration: {this.props.world.law.policyTree.law_imm.name}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class ResearchPanel extends React.Component<{\r\n\r\n}>{\r\n    render(){\r\n        return <div>\r\n            <div className=\"col-2\">\r\n            <h2>Research Lab</h2>\r\n            <div>\r\n              Currently probing 0 beings\r\n            </div>\r\n          </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport \"./StopPlayFast.css\"\r\n\r\nexport class StopPlayFastButtons extends React.Component<{\r\n    timeScale: number,\r\n    setTimeScale: (s: number) => void\r\n}>{\r\n    render(){\r\n        return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n            ⌛️\r\n            <button type=\"button\" className={this.props.timeScale == 0 ? 'active': ''} onClick={() => this.props.setTimeScale(0)}>⏹</button>\r\n            <button type=\"button\" className={this.props.timeScale == 1 ? 'active': ''} onClick={() => this.props.setTimeScale(1)}>▶️</button>\r\n            <button type=\"button\" className={this.props.timeScale == 2 ? 'active': ''} onClick={() => this.props.setTimeScale(2)}>⏩</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { ResourceTriad, triadToString } from \"../Game\";\r\n\r\nexport class CostSmall extends React.Component<{\r\n    cost: ResourceTriad\r\n}>{\r\n\r\n    render(){\r\n        return <small>\r\n            {triadToString(this.props.cost, '-')}\r\n        </small>\r\n    }\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { City } from \"../simulation/City\";\r\nimport { BuildingIcon, BuildingTypes, HexPoint, IBuilding } from \"../simulation/Geography\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\n\r\nexport class HexPanel extends React.Component<{\r\n    city: City,\r\n    hex: HexPoint,\r\n    difficulty: IDifficulty,\r\n    clearHex: () => void,\r\n    build: (where: HexPoint, what: BuildingTypes) => void,\r\n    kidnap: (where: HexPoint) => void,\r\n}, {\r\n\r\n}> {\r\n    emptyPanel(){\r\n        const eHex = this.props.difficulty.cost.emptyHex;\r\n        return <div>\r\n            <div>\r\n                <strong>Empty Lot</strong> in <strong>{this.props.city.name}</strong>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearHex()} >❌</button>\r\n            </div>\r\n            <h3>Build:</h3>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'house')}>\r\n                    {BuildingIcon['house']} House\r\n                    <CostSmall cost={eHex.build.house}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'farm')}>\r\n                    {BuildingIcon['farm']} Farm\r\n                    <CostSmall cost={eHex.build.farm}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'hospital')}>\r\n                    {BuildingIcon['hospital']} Hospital\r\n                    <CostSmall cost={eHex.build.hospital}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'theater')}>\r\n                    {BuildingIcon['theater']} Theater\r\n                    <CostSmall cost={eHex.build.theater}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <h3>Beings:</h3>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.kidnap(this.props.hex)}>\r\n                    🛸 Kidnap New Subject\r\n                    <CostSmall cost={this.props.difficulty.cost.hex.kidnap}></CostSmall>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n    buildingPanel(b: IBuilding){\r\n        return <div>\r\n            <strong>{keyToName[b.type]}</strong> in <strong>{this.props.city.name}</strong>\r\n        </div>\r\n    }\r\n    render(){\r\n        const building: IBuilding|undefined = this.props.city.lookupBuilding(this.props.hex);\r\n        if (building){\r\n            return this.buildingPanel(building)\r\n        } else {\r\n            return this.emptyPanel();\r\n        }\r\n    }\r\n\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { BeliefSubjectIcon, BeliefSubjectText, BeliefVerbOption, BeliefVerbIcon, BeliefVerbText, BeliefSubject, BeliefVerb } from \"../simulation/Beliefs\";\r\n\r\nexport interface StringDropdownPS{\r\n    options: Array<string>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any,\r\n    titleCase?: boolean\r\n}\r\ninterface StringDropdownS{\r\n    key: any;\r\n}\r\n\r\nexport class StringDropdown extends React.Component<StringDropdownPS, StringDropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n        this.setState({key: e.target.value})\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    protected getTextForOption(data: string): string{\r\n        if (this.props.titleCase){\r\n            data = data[0].toUpperCase()+data.slice(1);\r\n        }\r\n        return data;\r\n    }\r\n    options(){\r\n        return this.props.options.map((str) => {\r\n            return <option value={str} key={str} title={this.getTitleForOption(str)}>\r\n                {this.getTextForOption(str)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: string): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\n\r\n\r\nexport class BeliefSubjectDropdown extends StringDropdown{\r\n    getTextForOption(data: string): string{\r\n        return BeliefSubjectIcon[data as BeliefSubject] + ' ' +BeliefSubjectText[data as BeliefSubject];\r\n    }\r\n}\r\n\r\nexport class SelfVerbDropdown extends StringDropdown{\r\n    getTextForOption(data: string): string{\r\n        return BeliefVerbIcon[data as BeliefVerb]+' '+BeliefVerbText['self'][data as BeliefVerb];\r\n    }\r\n}\r\nexport class OtherVerbDropdown extends StringDropdown{\r\n    getTextForOption(data: string): string{\r\n        return BeliefVerbIcon[data as BeliefVerb]+' '+BeliefVerbText['other'][data as BeliefVerb];\r\n    }\r\n}","import React from \"react\";\r\nimport './beliefs.css';\r\nimport { BeliefSubject, BeliefVerb, SecondaryBeliefData, TraitBelief, Belief, BeliefSubjectOption, BeliefVerbOption, BeliefAdjOption, BeliefsAll, BeliefSubjectAll, BeliefVerbAll, IBeliefData } from \"../simulation/Beliefs\";\r\n\r\nimport { BeliefSubjectDropdown, OtherVerbDropdown, SelfVerbDropdown, StringDropdown } from \"../widgets/StringDropdown\";\r\nimport { TraitIcon } from \"../World\";\r\nimport { IDifficulty } from \"../Game\";\r\n\r\nexport class EditBeliefInput extends React.Component<{\r\n    data: IBeliefData,\r\n    frozen?: boolean,\r\n    divergent?: boolean,\r\n    available: number,\r\n    cost: number,\r\n    wash: () => void\r\n}, {\r\n\r\n}>{\r\n\r\n    render(){\r\n        return <div className=\"belief\"><div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {this.props.data.icon}\r\n                </div>\r\n                {\r\n                    this.props.frozen ? null : <button className=\"callout pad-4 marg-0\" disabled={this.props.available < this.props.cost} onClick={this.props.wash}>\r\n                    🚿 <small>Wash</small>\r\n                    </button>\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    <strong title={this.props.data.description} className={this.props.divergent ? 'divergent marg-r-6': 'marg-r-6'}>\r\n                        {this.props.data.noun}\r\n                    </strong>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{this.props.data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        (this.props.data.idealPro || []).map((x) => <span className=\"pos badge align-mid\">+{TraitIcon[x]}</span>)\r\n                    }\r\n                    {\r\n                        (this.props.data.idealCon || []).map((x) => <span className=\"neg badge align-mid\">-{TraitIcon[x]}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}\r\n\r\nconst SortedBeliefs = BeliefsAll.slice().sort((a, b) => a.localeCompare(b));\r\nexport class AddBeliefInput extends React.Component<{\r\n    available: number,\r\n    cost: number,\r\n    add: (b: TraitBelief) => void\r\n}, {\r\n    belief: TraitBelief,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            belief: 'Paranoia'\r\n        }\r\n    }\r\n    render(){\r\n        const data = SecondaryBeliefData[this.state.belief]\r\n        return <div className=\"belief\"><div className=\"horizontal badger add\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {data.icon}\r\n                </div>\r\n                <button className=\"callout grow-0 pad-4 marg-0\" disabled={this.props.available < this.props.cost} \r\n                    onClick={() => this.props.add(this.state.belief)}>\r\n                    💉 <small>Implant</small>\r\n                </button>\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">                    \r\n                    <StringDropdown titleCase={true}\r\n                    options={SortedBeliefs} \r\n                    value={this.state.belief}\r\n                    onChange={(a: string) => {\r\n                        console.log(a);\r\n                        this.setState({belief: a as TraitBelief})\r\n                    }}\r\n                    ></StringDropdown>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        (data.idealPro || []).map((x) => <span className=\"pos badge align-mid\">+{TraitIcon[x]}</span>)\r\n                    }\r\n                    {\r\n                        (data.idealCon || []).map((x) => <span className=\"neg badge align-mid\">-{TraitIcon[x]}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}","import React from \"react\";\r\nimport { BeliefSubject, BeliefVerb, TraitBelief, SecondaryBeliefData, Belief, PrimaryBeliefData, NarrativeBeliefData, IsBeliefDivergent } from \"../simulation/Beliefs\";\r\nimport './modals.css';\r\nimport { TraitCommunity, TraitFaith, TraitIdeals, World } from \"../World\";\r\nimport { AddBeliefInput, EditBeliefInput } from \"./BeliefRow\";\r\nimport { Bean } from \"../simulation/Bean\";\r\n\r\nexport class BrainwashingContent extends React.Component<{\r\n    world: World,\r\n    beanID: number|null,\r\n    washCommunity: (bean: Bean, c: TraitCommunity) => void,\r\n    washMotive: (bean: Bean, m: TraitIdeals) => void,\r\n    washNarrative: (bean: Bean, n: TraitFaith) => void,\r\n    washBelief: (bean: Bean, b: TraitBelief) => void,\r\n    implantBelief: (bean: Bean, b: TraitBelief) => void\r\n}, {\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const bean = this.props.world.beans.find(x => x.key == this.props.beanID);\r\n        if (bean == null) return;\r\n        return <div>\r\n            <div className=\"horizontal fancy-header\">\r\n                <div>\r\n                    BRAIN\r\n                </div>\r\n                <div className=\"emoji-3\">\r\n                💉🧠🚿\r\n                </div>\r\n                <div>\r\n                    WASH\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"text-center\">\r\n                    <strong>{bean.name}</strong> has {bean.discrete_sanity} sanity 🧠\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <div>\r\n                        <EditBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            wash={() => this.props.washCommunity(bean, bean.community)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean.brainwash_ideal.psi || 0}\r\n                            data={PrimaryBeliefData[bean.community]}\r\n                        ></EditBeliefInput>\r\n                        <EditBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            wash={() => this.props.washMotive(bean, bean.ideals)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean.brainwash_ideal.psi || 0}\r\n                            data={PrimaryBeliefData[bean.ideals]}\r\n                        ></EditBeliefInput>\r\n                        <EditBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            wash={() => this.props.washNarrative(bean, bean.faith)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean.brainwash_ideal.psi || 0}\r\n                            data={NarrativeBeliefData[bean.faith]}\r\n                        ></EditBeliefInput>\r\n                        {\r\n                            bean.beliefs.map((b) => <EditBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            divergent={IsBeliefDivergent(b, this.props.world.party.ideals, this.props.world.party.community)}\r\n                            wash={() => this.props.washBelief(bean, b)} \r\n                                cost={this.props.world.alien.difficulty.cost.bean.brainwash_secondary.psi || 0}\r\n                                data={SecondaryBeliefData[b]}\r\n                            >\r\n                            </EditBeliefInput>)\r\n                        }\r\n                        <AddBeliefInput\r\n                            available={this.props.world.alien.psi.amount}\r\n                            add={(b) => this.props.implantBelief(bean, b)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean.brainimplant_secondary.psi || 0}\r\n                        ></AddBeliefInput>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}