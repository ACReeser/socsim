{"version":3,"sources":["events/Events.tsx","simulation/Institutions.tsx","simulation/Utils.tsx","simulation/Geography.tsx","simulation/Occupation.tsx","petri-ui/Building.tsx","simulation/Priorities.tsx","simulation/Agent.tsx","simulation/Beliefs.tsx","simulation/Bean.tsx","simulation/Time.tsx","WorldGen.tsx","simulation/Economy.tsx","World.tsx","simulation/Politics.tsx","simulation/Government.tsx","Game.tsx","simulation/Player.tsx","WorldSound.tsx","simulation/MarketTraits.tsx","simulation/City.tsx","simulation/RealEstate.tsx","widgets/Modal.tsx","widgets/NeedReadout.tsx","widgets/CardButton.tsx","right-panel/OverviewPanel.tsx","petri-ui/AnimatedUFO.tsx","widgets/particles.tsx","petri-ui/AnimatedSpotlight.tsx","petri-ui/AnimatedBean.tsx","petri-ui/AnimatedPickup.tsx","petri-ui/Mover.tsx","petri-ui/Buildings.tsx","petri-ui/Magnet.tsx","petri-ui/WorldTile.tsx","modal-content/EconomyReport.tsx","right-panel/Events.tsx","widgets/CostSmall.tsx","right-panel/BeanPanel.tsx","modal-content/FoundParty.tsx","widgets/BubbleText.tsx","widgets/SocialGraph.tsx","widgets/CapsuleLabel.tsx","right-panel/Goals.tsx","modal-content/Campaigns.tsx","widgets/TreasuryReport.tsx","modal-content/Gov.tsx","widgets/ConfirmButton.tsx","widgets/RobotArm.tsx","modal-content/Research.tsx","widgets/StopPlayFast.tsx","chrome/Subtab.tsx","right-panel/HexPanel.tsx","widgets/StringDropdown.tsx","modal-content/BeliefRow.tsx","modal-content/Brainwashing.tsx","widgets/TimelyEventToggle.tsx","right-panel/MarketPanel.tsx","modal-content/TraitsReport.tsx","modal-content/GreetingPanel.tsx","App.tsx","serviceWorker.js","index.js"],"names":["PubSub","onPublish","callbacks","args","this","forEach","c","callback","push","splice","indexOf","ChangePubSub","EventBus","buffer","sendToBuffer","event","length","pop","unshift","speechcrime","nojobslots","birth","death","marketrefresh","Live","current","onChange","newValue","publish","LiveList","onPush","child","set","get","all","i","LiveMap","onAdd","newKey","copy","Map","k","v","key","delete","EnterpriseTypes","EnterpriseTypeIcon","isEnterprise","b","undefined","enterpriseType","Charity","name","institutionKey","cash","ticksSinceLastSale","seasonalBudget","good","parentInstitution","beansHelped","inventory","law","economy","tryTransact","MathClamp","input","min","max","Math","Hex","q","r","hex_directions","hex_direction","direction","hex_neighbor","hex","dir","hex_ring","center","radius","a","results","cube","hex_add","j","accelerate_towards","mover","target","acceleration","maxSpeed","colDistance","brake","delta","x","point","y","magnitude","sqrt","velocity","accelerator_coast","lerp","t","cube_lerp","z","cube_round","rx","round","ry","rz","x_diff","abs","y_diff","z_diff","cube_to_axial","axial_to_cube","cube_linedraw","N","cube_distance","layout_flat","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","origin_point","hex_to_pixel","size","origin","h","M","polarToPoint","p","cos","az","sin","transformPoint","transform","BuildingJobSlot","CityBook","_db","map","yellow","white","db","buildIndexes","keys","Array","from","ix","address","group","type","concat","add","remove","values","buildingType","GetRandom","at","BuildingIcon","UpgradedBuildingIcon","BuildingJobIcon","BuildingToGood","GoodToBuilding","JobToBuilding","Geography","book","numberOfRings","hexes","hex_spiral","hex_size","petriRadius","petriOrigin","building","addBuilding","where","removeBuilding","buildingKey","ent","slot_size","getSlotOffset","hexDirectionToJobSlot","2","first","0","second","4","third","1","fourth","5","fifth","3","sixth","PetriBuilding","d","jobSlot","hasJob","props","job_slots","className","style","buildingHex","sty","city","upgraded","slots","React","Component","PriorityNode","value","priority","DumbPriorityQueue","_values","sort","shift","PriorityQueue","index1","index2","temp","index","parentIndex","floor","swap","bubbleUp","elementPriority","leftChildIndex","rightChildIndex","leftChildPriority","rightChildPriority","indexToSwap","poppedNode","bubbleDown","ChangeState","agent","newState","state","exit","enter","AgentState","data","elapsed","deltaMS","difficulty","_act","Elapsed","Bean","activity_duration","act","intent","GoodIcon","ActivityDisplay","IdleState","priorities","GetPriorities","top","dequeue","travelState","substituteIntent","TravelState","createFromIntent","maybeParanoid","desiredGoodState","canBuy","maybeCrime","emote","maybeScarcity","destinations","isNaN","BeanPhysics","AccelerateS","MaxSpeed","CollisionDistance","Brake","location","onMove","ActToState","create","nearby","getNearestNeighbors","maybeChat","targets","filter","nn","chat","getRandomChat","ChatState","participation","believesIn","random","destination","RouteRandom","job","getRandomEntertainmentBuilding","destinationKey","Route","IntentToDestination","createFromDestination","WorkState","work","BuyState","sinceLastAttemptMS","_bought","buy","tryBuy","MaximumBuyDuration","tState","lastChatMS","Date","now","maybeAntagonised","maybeEnthused","RelaxState","durationMS","discrete_fun","CrimeState","steal","GetPriority","bean","inventory_priority","market","getStakeListings","employerEnterpriseKey","JobToGood","quantity","wealth_priority","costOfLiving","discrete_food","bean_life","vital_thresh","food","warning","sufficient","discrete_health","medicine","discrete_stamina","shelter","queue","node","enqueue","geo","getRandomBuildingOfType","start","nearestHex","pt","pixel_to_hex","offset","CommonalityChances","PrimaryBeliefData","prog","noun","adj","icon","description","rarity","trad","ego","NarrativeBeliefData","rocket","dragon","music","noFaith","SecondaryBeliefData","Diligence","Natalism","Progressivism","Libertarianism","Wanderlust","Germophobia","Parochialism","Cosmopolitanism","Capitalism","Socialism","Communism","Naturalism","Hedonism","Gluttony","Paranoia","Authority","Anarchism","Greed","Extroversion","Gossip","Antagonism","Enthusiasm","Neuroticism","idealCon","idealPro","Dogmatism","IsBeliefDivergent","belief","utopiaMotive","utopiaCommunity","reduce","isDivergent","con","IsIdealDivergent","BeliefsAll","Object","RandomBeliefBucket","list","str","GetHedonReport","hedonHistory","flatAverage","weightedAverage","maxSource","minSource","allSum","day","daySum","sources","source","allSources","val","Season","Hour","cityKey","dob","year","season","hour","bornInPetri","discrete_sanity","lifecycle","activity_queue","speed","ethnicity","stamina","community","ideals","faith","beliefs","happiness","lastHappiness","lastSentiment","lastPartySentiment","ticksSinceLastRelax","fairGoodPrice","buyFood","buyMeds","fun","buyFun","buyHousing","jobQueue","onAct","amount","multiplier","econ","homeCity","mods","TraitToModifier","health","reason","mod","majorityEthnicity","MaslowHappinessScore","Deficient","getCostOfLiving","party","result","GetHappiness","getHappinessModifiers","sent","getSentimentModifiers","myGood","getFairGoodPrice","traits","policies","policy","fx","mag","bad","idea","canBaby","preachBelief","crimeReason","roll","chance","trySetJob","eventBus","trigger","message","tryGetJob","unsetJob","cost","sanity","ifBelievesInMaybeEmote","needy","least","targetBeanKey","GoodToThreshold","beans","newJob","mostInDemandJob","workedForEmployer","employer","getEnterprise","employAndPrice","ownerBeanKey","produceAndPrice","groceries","bought","stolen","housing","diff","alive","wasNotHungry","wasNotSick","maybeDie","meds","babyChance","ArrayBuffer","ints","Int8Array","window","crypto","getRandomValues","DataView","getFloat64","GetRandomFloat","breedBean","isInCrisis","EmotionSanity","EmotionWorth","addEmotePickup","cause","die","pains","GetRandomNumber","historicalBeans","beanKey","scarce","player","abductedBeans","abundant","base","AllGoods","Economy","OrderBook","charity","unfulfilledMonthlyDemand","monthlyDemand","monthlySupply","buyer","minDemand","maxDemand","listing","getLowestPriceListing","actualDemand","price","salesTaxPercentage","receipt","transact","tax","treasury","PurchaseQualifiesForWelfare","CanPayWelfare","governmentTransact","listings","subtractFromListing","seller","existing","getBeansListings","addNewPersonalListing","getEnterpriseListings","addNewEnterpriseListing","last","GoodToJob","g","lucky","getRandomCitizen","sellerCityKey","sellerBeanKey","supply","demand","fullListings","l","numberOfSamePriceListings","lowPrice","bKey","enterpriseKey","find","sellerEnterpriseKey","cKey","listPrice","grossPrice","enterprise","BaseParty","playerKey","organizations","slogan","availablePolicies","proposedPolicy","availableCampaigns","activeCampaigns","leadership","activeHQs","platform","PlayerKnowsPrereq","prereq","seen","isArray","some","PlayerKnowsBelief","has","BeliefString","LawData","axis","prereqs","Government","lawTree","laws","Taxation","Welfare","Economics","Crime","Culture","isLaw","flatMap","triadToString","sign","qty","costs","energy","bots","hedons","tortrons","join","DefaultDifficulty","emptyHex","build","house","farm","theater","hospital","church","courthouse","park","nature","beam","upgrade","bean_brain","brainwash_ideal","brainimplant_secondary","brainwash_secondary","scan","abduct","gift","empower","vaporize","siphon","scrubHedons","resource","common","uncommon","rare","degrade_per_tick","penalty","homeless_health","starving_health","death_chance","starvation","sickness","exposure","vaporization","report_card_progression","Goals","found_utopia","text","check","world","build_house_n_farm","cities","getCountOfType","reward","beam_3","Number_Starting_City_Pop","alien","scanned_bean","set_policy","brainwash","Curriculums","GradeWorld","Happiness","BooleanAverageGrader","o","Prosperity","Stability","Dogma","GradeUpToNumber","speechcrimes","date","RubricDescription","number","allowance","maximum","NormalizedScoreToGrade","array","grade","normNumber","GradeWeights","A","B","C","D","F","TechData","tech","techPoints","Player","seenBeliefs","beliefInventory","income","change","next_grade","goals","goalProgress","pastReportCards","workingReportCard","techProgress","currentlyResearchingTech","researchPoints","trait","charges","canAfford","purchase","goal","done","step","SFXToFile","SoundBuffer","file","volume","ended","audio","play","aud","Audio","process","WorldSound","lib","sfx","CommonalityBaseCost","CommonalityRandomMaxCost","GetMarketTraits","newTraits","getMarketTraitListing","PickupPhysics","World","bus","institutions","marketTraitsForSale","Spring","onChat","publishEvent","onBeanDie","e","onCitizenDie","onEmote","subscribe","institute","calculate","calculateBeliefs","Evening","simulate_every_day","simulate_every_week","simulate_every_month","simulate_every_year","hasResearched","org","age","maybeBaby","tryFindRandomJob","getTaxesAndDonations","calculateComputedState","checkGoals","checkReportCard","inflate","resetYearlyCounters","resetMonthlyDemand","collected","listener","Act","pickups","pickup","collide","magnet","pickupMagnetPoint","amt","percent","sum","yearlyInflationDollars","richest","obj","winner","yearsPartyDonations","budget","TraitIcon","hapMod","Sufficient","Abundant","EmoteIcon","UFO","action","Pickup","City","url","ufos","pickupSeed","beanSeed","houses","partyHQ","environment","allOfType","getBuildings","openSlots","slot","tryFreeBean","id","shuffled","counter","shuffle","deadBean","parent","GenerateBean","split","count","circle","square","triangle","squared","pow","scannedBeans","m","prev","entries","aC","Building","occupied_slots","empty_slots","bank","workers","getWorkerBeans","share","owner","commShare","getBeanKeys","ids","s","usedSlots","revenue","distributeCash","randomBuffer","Uint32Array","randomNumber","ceil","choices","PI","GenerateBuilding","newBuilding","GenerateWorld","GenerateCity","previousCityCount","newCity","cityPopulation","hexPoint","newBean","beanBeliefCount","newBelief","includes","StartingCash","getStartingPoint","Modal","show","hideCloseButton","onClick","closeButtonText","children","getButton","NeedReadout","dire","need","dire_style","width","full","full_style","header","keyToName","CardButton","classes","thin","singleLine","title","disabled","subtext","TraitToCard","OverviewPanel","clearCity","avg_happy","avg_cash","toFixed","getPopulationTraitsList","AnimatedUFO","showBeam","setTimeout","setState","ufo","Particles","animations","finishedAnimationCount","parts","particleCount","createRef","active","animate","opacity","duration","easing","delay","onfinish","ref","spotlightAnimations","faceOV","beanClasses","particles","AnimatedSpotlight","lastTickMS","currentTime","tickHandle","tick","timeMS","deltaTimeMS","getSubtype","lastValid","anim","requestAnimationFrame","time","cancelAnimationFrame","msg","getFace","replace","AnimatedBean","spin","face","speech","getSpeech","delaySeedSec","paused","sitStill","selected","animationDelay","stopPropagation","getPurchase","AnimatedPickup","useState","played","setPlayed","useContext","SfxContext","useEffect","Mover","el","useRef","startPoint","unsubscribe","PickupList","setList","BeanList","activeBeanID","onBeanClick","PetriBuildings","buildings","setBuildings","Magnet","setPoint","updatePoint","WorldTile","mtn_transforms","spotlightEvent","xy","onMouseEnter","onHexClick","left","u","mtns","onMouseLeave","height","cx","cy","stroke","fill","renderHexes","renderSpotlight","median","half","EconomyReport","food_median","health_median","shelter_median","wealth_total","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","jobs","unemployed","jobless","reducer","avg","farmer","builder","doc","entertainer","EventsPanel","events","alert","shouldEventJumpToBean","selectBean","href","CostSmall","rider","BeanPanel","faceOverride","_resetFace","support","innerView","scanned","beliefTable","hedonTable","display","ActivityIcon","actDurations","acts","colSpan","bind","renderTraits","renderInner","FoundParty","onName","onSlogan","onCity","ideal","members","onBigFourChange","checked","onCommunity","currentTarget","onIdeal","onFound","BubbleNumberText","bubbleSeed","ev","positive","bubbles","string","changeEvent","bubbleClass","BubbleSeenTraitsText","sub","setBubbles","onEvent","useBubbles","SocialGraph","static","CapsuleLabel","classN","label","GoalsPanel","progress","tooltip","renderReward","reportCard","renderGoal","margin","CampaignsPanel","TreasuryReport","coin","setCoin","update","GovernmentPanel","view","setView","enactLaw","revokeLaw","LawDetailList","enacted","LawFormula","canSeeName","unlocked","every","PlayerMeetsPrereqs","PrereqString","ConfirmButton","confirming","onConfirm","click","confirmText","RobotArm","xmlns","overflow","strokeWidth","tool","fontSize","ResearchPanel","tools","interval","toolI","toolI2","toolI3","toolI4","lastI","setInterval","loop","clearInterval","setResearch","total","complete","isCurrent","rootClassName","techs","renderTech","release","StopPlayFastButtons","timeScale","setTimeScale","GeoNetworkButtons","activeMain","setActiveMain","Subtabs","additionalClasses","options","HexPanel","eHex","clearHex","renderBeamButton","free","hasJobs","renderDensityWarning","changeEnterprise","typ","findBuildingByCoordinate","buildingPanel","emptyPanel","EnterpriseTypePicker","toUpperCase","substring","StringDropdown","hint","hidden","titleCase","slice","getTitleForOption","getTextForOption","required","BeliefWidget","leftButton","titleView","bottomView","EditBeliefInput","frozen","toString","available","wash","divergent","SortedBeliefs","localeCompare","TraitInventoryList","live","implant","dogmatic","BrainwashingContent","beanID","isScanned","washCommunity","washMotive","washNarrative","washBelief","implantBelief","TimelyEventToggle","eventCount","eventClass","eventIcon","MarketPanel","buyEnergy","buyBots","buyTrait","MarketTraits","TraitsReport","GreetingPanel","starving","hungry","sated","stuffed","homeless","sleepy","awake","rested","sick","sickly","bruised","fresh","sane","stressed","disturbed","createContext","App","previousTimeMS","logicTickAccumulatorMS","simulate_beans","simulate_pickups","simulate_world","cheatMode","keyupHandler","activeModal","shiftKey","foundParty","what","tryPurchase","newUFO","removeUFO","old","foundCharity","addCharity","enact","releaseBean","lucky_bean","canPurchase","loseSanity","oldFaith","useCharge","setPolicy","onDeath","startSpotlight","timescaleBeforeSpotlight","activeCityID","activeHex","activeRightPanel","document","addEventListener","removeEventListener","myUFOI","findIndex","endSpotlight","utopia","beankey","COL","tile","Provider","defaultScale","wheel","renderGeo","renderHour","n","getPanel","Morning","Midnight","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8f260fc1.chunk.js","sourcesContent":["import { Point } from \"../simulation/Geography\";\r\n\r\nexport type EventTrigger = 'speechcrime'|'birth'|'death'|'nojobslots'|'marketrefresh';\r\n\r\nexport interface IEvent{\r\n    icon: string;\r\n    message: string;\r\n    beanKey?: number;\r\n    cityKey?: number;\r\n    point?: Point;\r\n    trigger: EventTrigger;\r\n}\r\n\r\nexport class PubSub<T>{\r\n    constructor(private onPublish?: (args: T) => void){}\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public publish(args: T){\r\n        if (this.onPublish)\r\n            this.onPublish(args);\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    public unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\nexport type IEventBus = {[key in EventTrigger]: PubSub<IEvent>};\r\nexport interface IEventBuffer{\r\n    buffer: IEvent[]   \r\n}\r\nexport const EventBusBufferLength = 20; \r\nexport class EventBus implements IEventBus, IEventBuffer{\r\n    buffer: IEvent[] = [];\r\n    private sendToBuffer = (event: IEvent) => {\r\n        if (this.buffer.length > EventBusBufferLength){\r\n            this.buffer.pop();\r\n        }\r\n        this.buffer.unshift(event);\r\n    }\r\n    speechcrime = new PubSub<IEvent>(this.sendToBuffer);\r\n    nojobslots = new PubSub<IEvent>(this.sendToBuffer);\r\n    birth = new PubSub<IEvent>(this.sendToBuffer);\r\n    death = new PubSub<IEvent>(this.sendToBuffer);\r\n    marketrefresh = new PubSub<IEvent>(this.sendToBuffer);\r\n}\r\n\r\nexport class Live<T>{\r\n    public readonly onChange = new PubSub<T>();\r\n    constructor(protected current: T){}\r\n    public set(newValue: T){\r\n        this.current = newValue;\r\n        this.onChange.publish(newValue);\r\n    }\r\n    public get get(): T{\r\n        return this.current;\r\n    }\r\n}\r\nexport class LiveList<T> extends Live<Array<T>>{\r\n    public readonly onPush = new PubSub<T>();\r\n    public push(child: T): void{\r\n        this.set([...this.get, child]);\r\n        this.onPush.publish(child);\r\n    }\r\n    public remove(child: T): void{\r\n        const all = this.get;\r\n        const i = all.indexOf(child);\r\n        if (i > -1){\r\n            all.splice(i, 1);\r\n            this.set([...all]);\r\n        }\r\n    }\r\n}\r\nexport class LiveMap<K, V> extends Live<Map<K, V>>{\r\n    public readonly onAdd = new PubSub<{k: K, v: V}>();\r\n    public add(newKey: K, newValue: V){\r\n        const copy = new Map<K, V>(this.current);\r\n        copy.set(newKey, newValue);\r\n        this.set(copy);\r\n        this.onAdd.publish({k: newKey, v: newValue});\r\n    }\r\n    public remove(key: K){\r\n        const copy = new Map<K, V>(this.current);\r\n        copy.delete(key);\r\n        this.set(copy);\r\n    }\r\n    public at(key: K): V|undefined{\r\n        return this.current.get(key);\r\n    }\r\n}","import { ISeller, Economy } from \"./Economy\";\r\nimport { TraitGood, GoodToJob } from \"../World\";\r\nimport { Policy } from \"./Politics\";\r\nimport { Government } from \"./Government\";\r\n\r\nexport type EnterpriseType = 'company'|'cooperative'|'commune';\r\nexport const EnterpriseTypes: EnterpriseType[] = ['company','cooperative','commune'];\r\nexport const EnterpriseTypeIcon: {[e in EnterpriseType]: string} = {\r\n    'company': '🎩', \r\n    'cooperative': '🤝', \r\n    'commune': '⚒️'\r\n};\r\n\r\nexport interface IEnterprise extends ISeller{\r\n    key: number;\r\n    cityKey: number;\r\n    enterpriseType: EnterpriseType;\r\n    ownerBeanKey?: number;\r\n}\r\n\r\nexport function isEnterprise(b: any): b is IEnterprise{\r\n    return b.key != undefined && b.enterpriseType != undefined;\r\n}\r\n\r\nexport interface IInstitution{\r\n    key: number;\r\n    playerKey: number;\r\n    name: string;\r\n\r\n    organizations: IOrganization[];\r\n}\r\n\r\nexport interface IOrganization extends ISeller{\r\n    work(law: Government, economy: Economy): void;\r\n    key: number;\r\n    institutionKey: number;\r\n    seasonalBudget: number;\r\n    parentInstitution: IInstitution|null;\r\n    cash: number;\r\n}\r\n\r\nexport class Charity implements IOrganization, ISeller{\r\n    key = 0;\r\n    name: string = '';\r\n    institutionKey = 1;\r\n    cash = 0;\r\n    ticksSinceLastSale = 0;\r\n    seasonalBudget = 0;\r\n    good: TraitGood = 'food';\r\n    parentInstitution: IInstitution|null = null;\r\n    beansHelped: number = 0;\r\n    inventory: number = 0;\r\n    \r\n    work(law: Government, economy: Economy): void{\r\n        while(this.cash > 0 && this.inventory < 10) {\r\n            const groceries = economy.tryTransact(this, this.good);\r\n            if (groceries){\r\n                //economy.addCharity(this, this.good, groceries.bought);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n} ","\r\nexport function shuffle(array: Array<any>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function MathClamp(input: number, min: number, max: number): number{\r\n    return Math.max(Math.min(input, max), min)\r\n}\r\n\r\nexport function groupBy<T>(list: T[], keyGetter: (val: T) => string|number): Map<string|number, T[]> {\r\n    const map = new Map<string|number, T[]>();\r\n    list.forEach((item) => {\r\n         const key = keyGetter(item);\r\n         const collection = map.get(key);\r\n         if (!collection) {\r\n             map.set(key, [item]);\r\n         } else {\r\n             collection.push(item);\r\n         }\r\n    });\r\n    return map;\r\n}","import { LiveMap } from \"../events/Events\";\r\nimport { TraitGood, TraitJob } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IEnterprise, isEnterprise } from \"./Institutions\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nexport interface HexPoint{\r\n    q: number;\r\n    r: number;\r\n}\r\nexport class Hex implements HexPoint{\r\n    constructor(public q: number, public r: number){}\r\n}\r\nexport const hex_directions: HexPoint[] = [\r\n    new Hex(+1, 0), new Hex(+1, -1), new Hex(0, -1), \r\n    new Hex(-1, 0), new Hex(-1, +1), new Hex(0, +1), \r\n];\r\nexport function hex_direction(direction: number): HexPoint{\r\n    return hex_directions[direction]\r\n}\r\n\r\nexport function hex_neighbor(hex: HexPoint, direction: number): HexPoint{\r\n    var dir = hex_direction(direction)\r\n    return new Hex(hex.q + dir.q, hex.r + dir.r)\r\n}\r\nexport function hex_distance(a: HexPoint, b: HexPoint): number{\r\n    return (Math.abs(a.q - b.q) \r\n          + Math.abs(a.q + a.r - b.q - b.r)\r\n          + Math.abs(a.r - b.r)) / 2\r\n}\r\nexport function hex_add(a: HexPoint, b: HexPoint): HexPoint {\r\n    return new Hex(a.q + b.q, a.r + b.r);\r\n}\r\nexport function hex_scale(a: HexPoint, k: number): HexPoint {\r\n    return new Hex(a.q * k, a.r * k);\r\n}\r\nexport function hex_ring(center: HexPoint, radius: number): HexPoint[]{\r\n    var results: HexPoint[] = [];\r\n    // this code doesn't work for radius == 0; can you see why?\r\n    var cube = hex_add(center, \r\n                        hex_scale(hex_direction(4), radius));\r\n    for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < radius; j++) {\r\n            results.push(cube)\r\n            cube = hex_neighbor(cube, i);       \r\n        }\r\n    }\r\n    return results;\r\n}\r\nexport function hex_spiral(center: HexPoint, radius: number): HexPoint[]{\r\n    var results = [center];\r\n    for (let k = 0; k < radius; k++) {\r\n        results = results.concat(hex_ring(center, k));\r\n        //console.log(results);   \r\n    }\r\n    return results;\r\n}\r\n\r\nexport function move_towards(current: Point, target: Point, maxDistanceDelta: number)\r\n{\r\n    const a: Point = {x: target.x - current.x, y: target.y - current.y};\r\n    const magnitude = Math.sqrt(a.x * a.x + a.y * a.y);\r\n    if (magnitude <= maxDistanceDelta || magnitude == 0)\r\n    {\r\n        return target;\r\n    }\r\n    return {\r\n        x: current.x + a.x / magnitude * maxDistanceDelta,\r\n        y: current.y + a.y / magnitude * maxDistanceDelta,\r\n    };\r\n}\r\nexport interface IAccelerater {point:Point, velocity:Vector};\r\nexport function accelerate_towards(\r\n    mover: IAccelerater, \r\n    target: Point, \r\n    acceleration: number,\r\n    maxSpeed: number, \r\n    colDistance: number, \r\n    brake: Point): boolean\r\n{\r\n    const delta: Point = {\r\n        x: target.x - mover.point.x, \r\n        y: target.y - mover.point.y\r\n    };\r\n    const magnitude = Math.sqrt((delta.x * delta.x) + (delta.y * delta.y));\r\n    if (magnitude <= colDistance) return true;\r\n\r\n    delta.x /= magnitude;\r\n    delta.y /= magnitude;\r\n\r\n    mover.velocity.x += (delta.x * acceleration);\r\n    mover.velocity.y += (delta.y * acceleration);\r\n    mover.velocity.x = MathClamp(mover.velocity.x, -maxSpeed, maxSpeed);\r\n    mover.velocity.y = MathClamp(mover.velocity.y, -maxSpeed, maxSpeed);\r\n\r\n    accelerator_coast(mover, brake);\r\n    return false;\r\n}\r\nexport function accelerator_coast(\r\n    current: IAccelerater, \r\n    brake: Point): void\r\n{\r\n    current.velocity.x *= brake.x;\r\n    current.velocity.y *= brake.y;\r\n\r\n    current.point.x += current.velocity.x;\r\n    current.point.y += current.velocity.y;\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number{\r\n    return a + (b - a) * t\r\n}\r\n\r\nexport function vector_lerp(a: Point, b: Point, t: number): Point{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t)\r\n    };\r\n}\r\nfunction cube_lerp(a: CubicPoint, b: CubicPoint, t: number): CubicPoint{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t),\r\n        z: lerp(a.z, b.z, t)\r\n    };\r\n}\r\nfunction cube_distance(a: CubicPoint, b: CubicPoint): number{\r\n    return (Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z)) / 2\r\n}\r\nfunction cube_round(cube: CubicPoint): CubicPoint{\r\n    var rx = Math.round(cube.x);\r\n    var ry = Math.round(cube.y);\r\n    var rz = Math.round(cube.z);\r\n\r\n    var x_diff = Math.abs(rx - cube.x)\r\n    var y_diff = Math.abs(ry - cube.y)\r\n    var z_diff = Math.abs(rz - cube.z)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff)\r\n        rx = -ry-rz;\r\n    else if (y_diff > z_diff)\r\n        ry = -rx-rz;\r\n    else\r\n        rz = -rx-ry;\r\n\r\n    return {x: rx, y: ry, z: rz};\r\n}\r\nfunction round_point_to_hex(hex: HexPoint): HexPoint{\r\n    return cube_to_axial(cube_round(axial_to_cube(hex)))\r\n\r\n}\r\nfunction cube_to_axial(cube: CubicPoint){\r\n    var q = cube.x;\r\n    var r = cube.z;\r\n    return new Hex(q, r);\r\n}\r\nfunction axial_to_cube(hex: HexPoint): CubicPoint{\r\n    return {\r\n        x: hex.q,\r\n        z: hex.r,\r\n        y: -hex.q-hex.r\r\n    };\r\n}\r\nfunction cube_linedraw(a: CubicPoint, b: CubicPoint): HexPoint[]{\r\n    var N = cube_distance(a, b);\r\n    var results: HexPoint[] = [];\r\n    for (let i = 0; i <= N; i++) {\r\n        results.push(cube_to_axial(cube_round(cube_lerp(a, b, 1.0/N * i))))\r\n    }\r\n    return results;\r\n}\r\nexport function hex_linedraw(a: HexPoint, b: HexPoint): HexPoint[]{\r\n    return cube_linedraw(axial_to_cube(a), axial_to_cube(b));\r\n}\r\n\r\nclass Orientation {\r\n    // angle is in multiples of 60°\r\n    constructor(public f0: number, public f1: number, public  f2: number, public f3: number,\r\n        public b0: number, public b1: number,public b2: number,public b3: number,\r\n        public start_angle: number){}\r\n};\r\nexport const layout_flat: Orientation = new Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0),\r\n                2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0,\r\n                0.0);\r\nexport const origin_point: Point = {x: 0, y: 0};\r\nexport const hex_origin: HexPoint = {q: 0, r: 0};\r\nexport function hex_to_pixel(size: Point, origin: Point, h: HexPoint): Point {\r\n    const M: Orientation = layout_flat;\r\n    const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\r\n    const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\r\n    return {x: x + origin.x, y: y + origin.y};\r\n}\r\nexport function pixel_to_hex(size: Point, origin: Point, p: Point) {\r\n    const M = layout_flat;\r\n    const pt = {x: (p.x - origin.x) / size.x,\r\n                y: (p.y - origin.y) / size.y\r\n            };\r\n    const q = M.b0 * pt.x + M.b1 * pt.y;\r\n    const r = M.b2 * pt.x + M.b3 * pt.y;\r\n    return new Hex(q, r);\r\n}\r\n\r\n\r\nexport interface PolarPoint{\r\n    /**\r\n     * radius (in pixels)\r\n     */\r\n    r: number;\r\n    /**\r\n     * azimuth (radians)\r\n     */\r\n    az: number;\r\n}\r\n\r\nexport function polarToPoint(p: PolarPoint): Point{\r\n    return {\r\n        x: p.r * Math.cos(p.az),\r\n        y: p.r * Math.sin(p.az)\r\n    }\r\n}\r\n\r\nexport function distanceBetweenPolar(a: PolarPoint, b: PolarPoint): number{\r\n    const aCart = polarToPoint(a);\r\n    const bCart = polarToPoint(b)\r\n    return Math.sqrt(\r\n        Math.pow(aCart.x - aCart.x, 2) +\r\n        Math.pow(bCart.y - aCart.y, 2)\r\n    );\r\n}\r\n\r\nexport interface Point{\r\n    x: number; y: number;\r\n}\r\nexport interface Vector extends Point{\r\n}\r\nexport interface CubicPoint extends Point{\r\n    z: number;\r\n}\r\n\r\nexport function transformPoint(p: Point){\r\n    return {transform:`translate(${p.x}px, ${p.y}px)`};\r\n}\r\n\r\nexport interface IBuilding{\r\n    key: number;\r\n    address: HexPoint;\r\n    type: BuildingTypes;\r\n    job_slots: {[key in BuildingJobSlot]: number|null};\r\n    upgraded: boolean,\r\n    openSlots(): BuildingJobSlot[];\r\n    usedSlots(): BuildingJobSlot[];\r\n    /**\r\n     * returns true when bean is found in slot and freed\r\n     * @param beanKey \r\n     */\r\n    tryFreeBean(beanKey: number): boolean;\r\n}\r\n\r\n/**\r\n * address books allow lookups from entity \"name\" to location\r\n */\r\nexport interface AddressBookHex{\r\n    [entityKey: number]: HexPoint\r\n}\r\nexport interface AddressBookPoint{\r\n    [entityKey: number]: Point\r\n}\r\n/**\r\n * address grids allow lookups from location to entity\r\n * \r\n * note: coordinates are of form \"X,Y\"\r\n * and the map cannot distinguish between hex and cartesian points\r\n */\r\nexport interface AddressGrid<T>{\r\n    [coordinate: string]: T|undefined\r\n}\r\nexport interface AddressBuildingGrid extends AddressGrid<IBuilding>{}\r\n\r\nexport interface BuildingMap{\r\n    coordByID: AddressBookHex;\r\n    all: IBuilding[];\r\n}\r\n\r\nexport class CityBook {\r\n    /**\r\n     * given \"q,r\", return the IBuilding.key\r\n     */\r\n    public readonly map = new LiveMap<string, number>(new Map());\r\n    /**\r\n     * given IBuilding.type return the IBuilding[]\r\n     */\r\n    public readonly yellow = new LiveMap<string, number[]>(new Map());\r\n    /**\r\n     * given IBuilding.key, return \"q,r\"\r\n     */\r\n    public readonly white = new LiveMap<number, string>(new Map());\r\n    /**\r\n     * given IBuilding.key, return IBuilding\r\n     */\r\n    public readonly db: LiveMap<number, IBuilding>;\r\n\r\n    constructor(_db: Map<number, IBuilding>){\r\n        this.db = new LiveMap<number, IBuilding>(_db);\r\n        this.buildIndexes();\r\n    }\r\n\r\n    private buildIndexes(){\r\n        const keys = Array.from(this.db.get.keys());\r\n        const ix = { \r\n            map: new Map<string, number>(),\r\n            yellow: new Map<string, number[]>(),\r\n            white: new Map<number, string>()\r\n        }\r\n        keys.forEach((key: number) => {\r\n            const b = this.db.get.get(key);\r\n            if (b){\r\n                const address = b.address.q+','+b.address.r;\r\n                ix.map.set(address, b.key);\r\n                ix.white.set(b.key, address);\r\n                const group = ix.yellow.get(b.type) || []\r\n                ix.yellow.set(b.type, group.concat([b.key]));\r\n            }\r\n\r\n        });\r\n        this.white.set(ix.white);\r\n        this.map.set(ix.map);\r\n        this.yellow.set(ix.yellow);\r\n    }\r\n\r\n    public addBuilding(b: IBuilding){\r\n        this.db.add(b.key, b);\r\n        this.buildIndexes();\r\n    }\r\n    public removeBuilding(b: IBuilding){\r\n        this.db.remove(b.key);\r\n        this.buildIndexes();\r\n    }\r\n\r\n    public getBuildings(): IBuilding[]{\r\n        return Array.from(this.db.get.values());\r\n    }\r\n    public findBuildingByCoordinate(h: HexPoint){\r\n        const address = h.q+','+h.r;\r\n        const key = this.map.get.get(address);\r\n        if (key) \r\n            return this.db.get.get(key);\r\n        return undefined;\r\n    }\r\n    public getRandomBuildingOfType(buildingType: BuildingTypes): IBuilding|undefined{\r\n        const keysOfType: number[] = this.yellow.get.get(buildingType) || [];\r\n        const r = GetRandom(keysOfType);\r\n        return this.db.at(r);\r\n    }\r\n\r\n    public getRandomEntertainmentBuilding(): IBuilding|undefined{\r\n        const keysOfType: number[] = (this.yellow.get.get('park') || []).concat(this.yellow.get.get('nature') || []);\r\n        const r = GetRandom(keysOfType);\r\n        return this.db.at(r);\r\n    }\r\n\r\n    public getCountOfType(buildingType: BuildingTypes): number{\r\n        return Array.from(this.yellow.get.get(buildingType) || []).length;\r\n    }\r\n}\r\n\r\nexport type BuildingTypes = 'farm'|'house'|'hospital'|'church'|'theater'|'courthouse'|'park'|'nature';\r\nexport type TopiaBuildingTypes = 'utopia_fields'|'utopia_pump'|'dystopia_refinery'|'dystopia_crypt';\r\n//utopian fields = free relax\r\n//utopia pump = slowly sucks up happiness/unhappiness?\r\n//dystopia refinery = slowly converts negative emotions to energy/bots\r\n//dystopia crypt = skips death notifications (limited use?)\r\nexport type MoverTypes = 'bean'|'ufo'|'pickup';\r\nexport type MatterTypes = MoverTypes|BuildingTypes;\r\n\r\nexport const BuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🐄',\r\n    'house': '🏡', 'hospital': '🏥', 'church': '⛪', 'theater': '🎪', 'courthouse':'🏫',\r\n    'park': '⛲️', 'nature': '🏞️'\r\n};\r\nexport const UpgradedBuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🚜',\r\n    'house': '🏘️', 'hospital': '🏙️', 'church': '⛪', 'theater': '🏟️', 'courthouse':'🏫',\r\n    'park': '🎡', 'nature': '🏞️'\r\n};\r\nexport const BuildingJobIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🌾',\r\n    'house': '📪', 'hospital': '🛏️', 'church': '⛪', 'theater': '🪑', 'courthouse':'🏫',\r\n    'park': '💐', 'nature': '♨️'\r\n};\r\nexport const BuildingToGood: {[key in BuildingTypes]: TraitGood} = {\r\n    'farm': 'food',\r\n    'house': 'shelter', \r\n    'hospital': 'medicine', \r\n    'church': 'fun', \r\n    'theater': 'fun', \r\n    'courthouse': 'fun',\r\n    'park': 'fun', \r\n    'nature': 'fun'\r\n};\r\nexport const GoodToBuilding: {[key in TraitGood]: BuildingTypes} = {\r\n    'food': 'farm',\r\n    'shelter': 'house',\r\n    'medicine':'hospital',\r\n    'fun': 'theater'\r\n};\r\nexport const JobToBuilding: {[key in TraitJob]: BuildingTypes} = {\r\n    'farmer': 'farm',\r\n    'builder': 'house', \r\n    'doc':'hospital', \r\n    'entertainer': 'theater',\r\n    'cleric': 'church', \r\n    'jobless': 'house', \r\n    'polit': 'house'\r\n};\r\n\r\nexport class Geography{\r\n    public book: CityBook = new CityBook(new Map());\r\n\r\n    addBuilding(building: IBuilding) {\r\n        this.book.addBuilding(building);\r\n        return null;\r\n    }\r\n    removeBuilding(where: HexPoint, building: IBuilding) {\r\n        this.book.removeBuilding(building);\r\n        return null;\r\n    }\r\n    getEnterprise(buildingKey: number): IEnterprise|undefined{\r\n        const ent = this.book.db.get.get(buildingKey);\r\n        if (isEnterprise(ent))\r\n            return ent;\r\n        return undefined;\r\n    }\r\n    public numberOfRings = 5;\r\n    public hexes: HexPoint[] = hex_spiral({q:0, r:0}, this.numberOfRings);\r\n    public hex_size: Point = {x: 70, y: 70};\r\n    public readonly petriRadius = 550;\r\n    public readonly petriOrigin = {x: this.petriRadius, y: this.petriRadius};\r\n}","export enum BuildingJobSlot{\r\n    first = 0,\r\n    second = 1,\r\n    third = 2,\r\n    fourth = 3,\r\n    fifth = 4,\r\n    sixth = 5\r\n}","\r\nimport React from \"react\";\r\nimport { City } from \"../simulation/City\";\r\nimport { IBuilding, BuildingIcon, hex_directions, transformPoint, hex_to_pixel, origin_point, HexPoint, BuildingJobIcon, UpgradedBuildingIcon } from \"../simulation/Geography\";\r\nimport { BuildingJobSlot } from \"../simulation/Occupation\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport './Building.css';\r\n\r\nconst slot_size = {\r\n    x: 25,\r\n    y: 25\r\n}\r\nexport function getSlotOffset(direction: HexPoint){\r\n    return hex_to_pixel(slot_size, origin_point, direction);\r\n}\r\nexport function getRandomSlotOffset(){\r\n    return getSlotOffset(GetRandom(hex_directions));\r\n}\r\nconst hexDirectionToJobSlot: {[key: number]: BuildingJobSlot} = {\r\n    2: BuildingJobSlot.first,\r\n    0: BuildingJobSlot.second,\r\n    4: BuildingJobSlot.third,\r\n    1: BuildingJobSlot.fourth,\r\n    5: BuildingJobSlot.fifth,\r\n    3: BuildingJobSlot.sixth,\r\n}\r\n\r\nexport class PetriBuilding extends React.Component<{\r\n    city: City,\r\n    building: IBuilding\r\n}> {\r\n    slots() {\r\n        return hex_directions.map((d, i: number) => {\r\n            const jobSlot: BuildingJobSlot = hexDirectionToJobSlot[i];\r\n            const hasJob = this.props.building.job_slots[jobSlot] != null;\r\n            return <span key={i} className=\"slot\" style={transformPoint(getSlotOffset(d))}>\r\n                {hasJob ? BuildingJobIcon[this.props.building.type] : null}\r\n            </span>\r\n        });\r\n    }\r\n    render() {\r\n        const buildingHex = this.props.building.address;\r\n        const p = hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, buildingHex);\r\n        const sty = transformPoint(p);\r\n        return <div key={this.props.building.type+this.props.building.key} style={sty} \r\n        className={\"building \"+this.props.building.type}>\r\n        {this.props.building.upgraded ? UpgradedBuildingIcon[this.props.building.type] : BuildingIcon[this.props.building.type]}\r\n        {this.slots()}\r\n        {this.props.building.type === 'courthouse' ? <span className=\"tile-label\">{this.props.city.name}</span> : null}\r\n        </div>\r\n    }\r\n}","export class PriorityNode<T>{\r\n    constructor(public value: T, public priority: number){}\r\n}\r\nexport interface IPriorityQueue<T>{\r\n    enqueue(value: PriorityNode<T>): void;\r\n    values: PriorityNode<T>[];\r\n    dequeue(): PriorityNode<T>|undefined;\r\n}\r\nexport class DumbPriorityQueue<T> implements IPriorityQueue<T>{\r\n    \r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n    \r\n    enqueue(value: PriorityNode<T>): void{\r\n        this.values.push(value);\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n\r\n    enqueueMany(values: PriorityNode<T>[]){\r\n        this.values = values;\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n    \r\n    dequeue(): PriorityNode<T>|undefined{\r\n        return this.values.shift();\r\n    }\r\n}\r\n\r\nexport class PriorityQueue<T> implements IPriorityQueue<T>{\r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n\r\n    //helper method that swaps the values and two indexes of an array\r\n    swap(index1: number, index2: number){\r\n        let temp = this.values[index1];\r\n        this.values[index1] = this.values[index2];\r\n        this.values[index2] = temp;\r\n        return this.values;\r\n    }\r\n    //helper methods that bubbles up values from end\r\n    bubbleUp(){\r\n        //get index of inserted element\r\n        let index = this.values.length - 1\r\n        //loop while index is not 0 or element no loger needs to bubble\r\n        while(index > 0){\r\n            //get parent index via formula\r\n            let parentIndex = Math.floor((index - 1)/2);\r\n            //if values is greater than parent, swap the two\r\n            if(this.values[parentIndex].priority > this.values[index].priority){\r\n                //swap with helper method\r\n                this.swap(index, parentIndex);\r\n                //change current index to parent index\r\n                index = parentIndex;\r\n            } else{\r\n                break;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    // method that pushes new value onto the end and calls the bubble helper\r\n    enqueue(value: PriorityNode<T>){\r\n        this.values.push(value)\r\n        //calculate parent, if parent is greater swap\r\n        //while loop or recurse\r\n        this.bubbleUp();\r\n        return this.values\r\n    }\r\n\r\n    bubbleDown(){\r\n        let parentIndex = 0;\r\n        const length = this.values.length;\r\n        const elementPriority = this.values[0].priority;\r\n        //loop breaks if no swaps are needed\r\n        while (true){\r\n            //get indexes of child elements by following formula\r\n            const leftChildIndex = (2 * parentIndex) + 1;\r\n            const rightChildIndex = (2 * parentIndex) + 2;\r\n            let leftChildPriority = 999;\r\n            let rightChildPriority;\r\n            let indexToSwap = null;\r\n            // if left child exists, and is greater than the element, plan to swap with the left child index\r\n            if(leftChildIndex < length){\r\n                leftChildPriority = this.values[leftChildIndex].priority\r\n                if(leftChildPriority < elementPriority){\r\n                    indexToSwap = leftChildIndex;\r\n                }\r\n            }\r\n            //if right child exists\r\n            if(rightChildIndex < length){\r\n                rightChildPriority = this.values[rightChildIndex].priority;\r\n\r\n                if(\r\n                    //if right child is greater than element and there are no plans to swap\r\n                    (rightChildPriority < elementPriority && indexToSwap === null) ||\r\n                    //OR if right child is greater than left child and there ARE plans to swap\r\n                    (rightChildPriority < leftChildPriority && indexToSwap !== null))\r\n                {\r\n                    //plan to swap with the right child\r\n                    indexToSwap = rightChildIndex\r\n                }\r\n            }\r\n            //if there are no plans to swap, break out of the loop\r\n            if(indexToSwap === null){\r\n                break;\r\n            } \r\n            //swap with planned element\r\n            this.swap(parentIndex, indexToSwap);\r\n            //starting index is now index that we swapped with\r\n            parentIndex = indexToSwap;\r\n        }  \r\n    }\r\n\r\n    dequeue(): PriorityNode<T>|undefined{\r\n        //swap first and last element\r\n        this.swap(0, this.values.length - 1);\r\n        //pop max value off of values\r\n        let poppedNode = this.values.pop();\r\n        //re-adjust heap if length is greater than 1\r\n        if(this.values.length > 1){\r\n            this.bubbleDown();\r\n        }\r\n        \r\n        return poppedNode;\r\n    }\r\n}","import { Agent } from \"https\";\r\nimport { Bean, DaysUntilSleepy } from \"./Bean\";\r\nimport { getRandomSlotOffset } from \"../petri-ui/Building\";\r\nimport { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitStamina, TraitHealth, TraitGood, GoodToThreshold, JobToGood, TraitSanity, GoodIcon, TraitEmote, BeanPhysics } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { accelerate_towards, BuildingTypes, Geography, GoodToBuilding, HexPoint, hex_linedraw, hex_origin, hex_ring, hex_to_pixel, IAccelerater, IBuilding, JobToBuilding, move_towards, pixel_to_hex, Point, Vector } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { PubSub } from \"../events/Events\";\r\nimport { DumbPriorityQueue, IPriorityQueue, PriorityNode, PriorityQueue } from \"./Priorities\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\nimport { ISeller } from \"./Economy\";\r\nimport { IterationStatement } from \"typescript\";\r\n\r\nexport type Act = 'travel'|'work'|'sleep'|'chat'|'soapbox'|'craze'|'idle'|'buy'|'crime'|'relax';\r\n\r\n/**\r\n * cruise == interruptible travel towards destination\r\n * \r\n * approach == uninterruptible travel into destination slot\r\n */\r\nexport type Travel = 'cruise'|'approach';\r\n\r\nexport interface IActListener{\r\n    onChat: (b: Bean, speech: IChatData) => void;\r\n    onEmote: (b: Bean, emote: TraitEmote) => void;\r\n}\r\n\r\nexport interface IActivityData {\r\n    act: Act;\r\n    elapsed?: number;\r\n    location?: Point, //FROM Point\r\n    destinations?: Point[]; //point to travel to??\r\n    intent?: IActivityData; //when travelling, what do you intend to do next\r\n    good?: TraitGood; //good to buy or work\r\n    timeSpent?: number; //time spent on this action\r\n    travel?: Travel;\r\n    chat?: IChatData;\r\n}\r\n\r\nexport interface IChatData{\r\n    participation: 'speaker'|'listener';\r\n    type: 'praise'|'bully'|'preach'|'gift';\r\n    preachBelief?: TraitBelief;\r\n    /**\r\n     * strength of the preacher's persuasion\r\n     */\r\n    persuasionStrength?: number;\r\n    /**\r\n     * target key of the bean who is targeted for praise or bully\r\n     */\r\n    targetBeanKey?: number;\r\n}\r\n\r\nexport interface IAgent {\r\n    state: AgentState;\r\n    onAct?: PubSub<number>;\r\n    jobQueue: PriorityQueue<AgentState>;\r\n}\r\nexport function ChangeState(agent: IAgent, newState: AgentState){\r\n    //if ((agent as any)['key'] === 0)\r\n    //console.log(`from ${agent.state.data.act} to ${newState.data.act} in ${agent.state.Elapsed}`);\r\n    agent.state.exit(agent);\r\n    agent.state = newState;\r\n    agent.state.enter(agent);\r\n}\r\nexport function Act(agent: IAgent, deltaMS: number, difficulty: IDifficulty, listener: IActListener): void{\r\n    const result = agent.state.act(agent, deltaMS, difficulty);\r\n    if (agent.onAct)\r\n        agent.onAct.publish(deltaMS);\r\n    if (result != agent.state){\r\n        ChangeState(agent, result);\r\n        if (result.data.act === 'chat' && result.data.chat?.participation === 'speaker'){\r\n            listener.onChat(agent as Bean, result.data.chat);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class AgentState{\r\n    constructor(public data: IActivityData){}\r\n    public get Elapsed(): number {return this.data.elapsed || 0;}\r\n    enter(agent: IAgent){\r\n        this.data.elapsed = 0;\r\n    }\r\n    act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        const newState = this._act(agent, deltaMS, difficulty);\r\n        this.data.elapsed = this.Elapsed + deltaMS;\r\n        return newState;\r\n    }\r\n    abstract _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState;\r\n    exit(agent: IAgent){\r\n        if (agent instanceof Bean){\r\n            agent.activity_duration[this.data.act] += this.Elapsed;\r\n        }\r\n    }\r\n    get display(): string {\r\n        return ActivityDisplay(this.data);\r\n    }\r\n}\r\nexport class IdleState extends AgentState{\r\n    static create(){ return new IdleState({act: 'idle'})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed < 200){\r\n            return this;\r\n        }\r\n        if (agent instanceof Bean && agent.city){\r\n            const priorities = GetPriorities(agent, difficulty);\r\n            let top = priorities.dequeue();\r\n            let travelState: TravelState|null = null;\r\n\r\n            //loop through possible destinations\r\n            while (top && travelState == null){\r\n                const activity = IdleState.substituteIntent(agent, top.value);\r\n                if (activity){\r\n                    travelState = TravelState.createFromIntent(agent, top.value);\r\n                    if (travelState != null)\r\n                        return travelState;\r\n                }\r\n                top = priorities.dequeue();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    static substituteIntent(agent: IAgent, intent: IActivityData): IActivityData|null{\r\n        if (intent.act === 'buy' && intent.good != null && agent instanceof Bean){\r\n            const desiredGoodState = agent.canBuy(intent.good);\r\n            if (desiredGoodState != 'yes' && intent.good === 'fun') //if you can't buy happiness, go somewhere to relax\r\n                intent.act = 'relax'; //relaxing is free!\r\n            else if (desiredGoodState === 'pricedout') {\r\n                if (agent.maybeCrime(intent.good)){\r\n                    intent.act = 'crime';\r\n                } else {\r\n                    const isPhysical = intent.good === 'food' || intent.good === 'medicine' || intent.good === 'shelter';\r\n                    if (isPhysical){\r\n                        agent.emote('unhappiness', 'Poverty');\r\n                    }\r\n                    return null; //don't travel to buy something that you can't afford\r\n                }\r\n            } else if (desiredGoodState === 'nosupply'){\r\n                if (intent.good){\r\n                    agent.maybeScarcity(intent.good);\r\n                }\r\n                return null; //don't travel to buy something that doesn't exist\r\n            }\r\n        }\r\n        return intent;\r\n    }\r\n    exit(agent: IAgent){\r\n        super.exit(agent);\r\n\r\n        if (agent instanceof Bean){\r\n            agent.maybeParanoid()\r\n        }\r\n    }\r\n}\r\n\r\nexport function IntentToDestination(agent: IAgent, intent: IActivityData): Point[]|null{\r\n    if (!(agent instanceof Bean))\r\n        return [];\r\n    else if (agent.city){\r\n        const city = agent.city;\r\n        switch(intent.act){\r\n            case 'buy':\r\n                if (intent.good)\r\n                    return RouteRandom(city, agent, GoodToBuilding[intent.good]);\r\n            case 'work':\r\n                return RouteRandom(city, agent, JobToBuilding[agent.job]);\r\n            case 'relax': {\r\n                const destination = city.book.getRandomEntertainmentBuilding();\r\n                if (destination){\r\n                    agent.destinationKey = destination.key;\r\n                    return Route(city, agent, destination);\r\n                } else {\r\n                    return [];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nconst WanderlustEmoteChance = 0.002;\r\nexport class TravelState extends AgentState{\r\n    static createFromIntent(agent: IAgent, intent: IActivityData): TravelState|null{\r\n        const destination = IntentToDestination(agent, intent);\r\n\r\n        if (destination)\r\n            return this.createFromDestination(destination, intent);\r\n        return null;\r\n    }\r\n    static createFromDestination(destinations: Point[], intent: IActivityData): TravelState{ \r\n        return new TravelState({act: 'travel', destinations: destinations, intent: intent});\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (agent instanceof Bean && agent.city && this.data.destinations && this.data.destinations.length){\r\n            const target = this.data.destinations[0];\r\n\r\n            if (isNaN(target.x) || isNaN(target.y)) {\r\n                //this is a sanity check\r\n                this.data.destinations.shift();\r\n                return this;\r\n            }\r\n\r\n            let collide = accelerate_towards(\r\n                agent,\r\n                target,\r\n                BeanPhysics.AccelerateS * deltaMS/1000, \r\n                BeanPhysics.MaxSpeed, \r\n                BeanPhysics.CollisionDistance,\r\n                BeanPhysics.Brake);\r\n            if (collide){\r\n                this.data.location = agent.point;\r\n                this.data.destinations.shift();\r\n            } else {\r\n            }\r\n            agent.onMove.publish(agent.point);\r\n        }\r\n\r\n        if (this.data.destinations == null || this.data.destinations.length === 0){\r\n            if (this.data.intent)\r\n                return ActToState[this.data.intent.act](this.data.intent);\r\n            else\r\n                return IdleState.create();\r\n        } else if (agent instanceof Bean && agent.city) {\r\n            const nearby = agent.city.getNearestNeighbors(agent);\r\n            if (nearby.length && agent.maybeChat()){\r\n                const targets = nearby.filter((nn) => nn.maybeChat());\r\n                if (targets.length < 1)\r\n                    return this;\r\n                const chat: IChatData = agent.getRandomChat(targets);\r\n                targets.forEach((z) => {\r\n                    ChangeState(z, ChatState.create(this.data.intent, {...chat, participation: 'listener'}));\r\n                });\r\n                return ChatState.create(this.data, chat);\r\n            } else if (agent.believesIn('Wanderlust') && Math.random() < WanderlustEmoteChance) {\r\n                agent.emote('happiness', 'Wanderlust');\r\n                return this;\r\n            } else {\r\n                return this;\r\n            }\r\n        } else {\r\n            return this;\r\n        }\r\n    }\r\n    exit(agent: IAgent){\r\n        super.exit(agent);\r\n        if (agent instanceof Bean){\r\n            agent.velocity = {x: 0, y: 0};\r\n        }\r\n    }\r\n}\r\nexport class WorkState extends AgentState{\r\n    static create(good: TraitGood){ return new WorkState({act: 'work', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 2000 && agent instanceof Bean && this.data.good && agent.city?.economy && agent.city?.law){\r\n            agent.work(agent.city.law, agent.city.economy);\r\n            return IdleState.create();\r\n        }\r\n        \r\n        return this;\r\n    }\r\n}\r\nexport class BuyState extends AgentState{\r\n    static create(good: TraitGood){ return new BuyState({act: 'buy', good: good})}\r\n    static MaximumBuyDuration = 1100;\r\n    private sinceLastAttemptMS: number = 0;\r\n    tryBuy(agent: IAgent){\r\n        if (agent instanceof Bean && this.data.good && agent.city?.economy)\r\n        {\r\n            this._bought = agent.buy[this.data.good](agent.city.economy);\r\n        }\r\n        this.sinceLastAttemptMS = 0;\r\n    }\r\n    enter(agent: IAgent){\r\n        this.tryBuy(agent);\r\n    }\r\n    private _bought: boolean = false;\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (!this._bought){\r\n            if (this.sinceLastAttemptMS > 250)\r\n            {\r\n                this.tryBuy(agent);\r\n                // if(this.attempts >= 3 && (this.data.good == 'food' || this.data.good == 'medicine') &&\r\n                //     agent instanceof Bean &&\r\n                //     agent.getCrimeDecision(this.data.good, 'desperation')){\r\n                //     return CrimeState.create(this.data.good);\r\n                // }\r\n            }\r\n        }\r\n        if (this.Elapsed > BuyState.MaximumBuyDuration)\r\n        {\r\n            if (agent instanceof Bean && this.data.good){\r\n                agent.maybeScarcity(this.data.good);\r\n            }\r\n            return IdleState.create();\r\n        }\r\n        else\r\n            return this;\r\n    }\r\n}\r\nexport class ChatState extends AgentState{\r\n    static create(intent: IActivityData|undefined, chat: IChatData){ \r\n        return new ChatState({act: 'chat', intent: intent, chat: chat})\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (this.Elapsed > 1000 && this.data.intent){\r\n            const tState = TravelState.createFromIntent(agent, this.data.intent);\r\n            if (tState)\r\n                return tState;\r\n        }\r\n        return this;\r\n    }\r\n    exit(agent: IAgent){\r\n        super.exit(agent);\r\n        if (agent instanceof Bean && this.data.chat){\r\n            agent.lastChatMS = Date.now();\r\n            if (this.data.chat.participation === 'listener'){\r\n                if (this.data.chat.type === 'bully'){\r\n                    agent.maybeAntagonised();\r\n                }\r\n                else if (this.data.chat.type === 'praise'){\r\n                    agent.maybeEnthused();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class RelaxState extends AgentState{\r\n    static create(intent: IActivityData|undefined, chat: IChatData){ \r\n        return new RelaxState({act: 'relax', intent: intent, chat: chat})\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        let durationMS = 1000;\r\n        if (agent instanceof Bean && agent.believesIn('Naturalism'))\r\n            durationMS *= 3;\r\n        if (this.Elapsed > durationMS){\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n    exit(agent: IAgent){\r\n        super.exit(agent);\r\n        if (agent instanceof Bean){\r\n            agent.discrete_fun += 1;\r\n            agent.emote('happiness', 'Relaxation');\r\n            if (agent.believesIn('Naturalism'))\r\n                agent.emote('happiness', 'Naturalism');\r\n        }\r\n    }\r\n}\r\nexport class CrimeState extends AgentState{\r\n    static create(good: 'food'|'medicine'){ return new CrimeState({act: 'crime', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 1500 && agent instanceof Bean && agent.city?.economy && \r\n            (this.data.good === 'food' ||\r\n            this.data.good === 'medicine')){\r\n            agent.steal(this.data.good, agent.city?.economy);\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nconst ActToState: {[key in Act]: (data: IActivityData) => AgentState} = {\r\n    'idle': (data) => new IdleState(data),\r\n    'work': (data) => new WorkState(data),\r\n    'chat': (data) => new ChatState(data),\r\n    'travel': (data) => new TravelState(data),\r\n    'craze': (data) => new BuyState(data),\r\n    'buy': (data) => new BuyState(data),\r\n    'sleep': (data) => new BuyState(data),\r\n    'soapbox': (data) => new BuyState(data),\r\n    'crime': (data) => new CrimeState(data),\r\n    'relax': (data) => new RelaxState(data)\r\n}\r\n\r\nexport const GetPriority = {\r\n    work: function(bean:Bean): number{\r\n        if (bean.job == 'jobless' && bean.city){\r\n            return 9;\r\n        }\r\n        else if (bean.city){\r\n            //beans with no inventory prioritize work higher\r\n            let inventory_priority = 99;\r\n            if (bean.city.economy){\r\n                const quant = bean.city.economy.market.getStakeListings(bean.key, bean.employerEnterpriseKey, JobToGood(bean.job))?.quantity || 0;\r\n                inventory_priority = quant;\r\n            }\r\n            //beans with lots of cash prioritize work higher\r\n            const wealth_priority = bean.cash / bean.city.costOfLiving / 2;\r\n            return Math.min(inventory_priority, wealth_priority);\r\n        } else {\r\n            return 0;\r\n        }\r\n    },\r\n    food: function(bean:Bean, difficulty: IDifficulty): number{\r\n        if ((bean.discrete_food <= difficulty.bean_life.vital_thresh.food.warning ))\r\n            return bean.discrete_food;\r\n        return 0.5 + (bean.discrete_food / difficulty.bean_life.vital_thresh.food.sufficient )\r\n    },\r\n    medicine:function(bean:Bean, difficulty: IDifficulty): number{\r\n        if ((bean.discrete_health <= difficulty.bean_life.vital_thresh.medicine.warning ))\r\n            return 0.25 + bean.discrete_health;\r\n        return 0.75 + (bean.discrete_health / difficulty.bean_life.vital_thresh.medicine.sufficient )\r\n    },\r\n    stamina: function(bean:Bean, difficulty: IDifficulty): number{\r\n        if ((bean.discrete_stamina <= difficulty.bean_life.vital_thresh.shelter.warning ))\r\n            return 0.50 + bean.discrete_stamina;\r\n        return 1 + (bean.discrete_stamina / difficulty.bean_life.vital_thresh.shelter.sufficient )\r\n    },\r\n    fun:function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 3\r\n    }\r\n}\r\n\r\nexport function GetPriorities(bean: Bean, difficulty: IDifficulty): IPriorityQueue<IActivityData>{\r\n    const queue = new DumbPriorityQueue<IActivityData>([]);\r\n    let node = new PriorityNode<IActivityData>({act: 'work', good: JobToGood(bean.job)} as IActivityData, GetPriority.work(bean));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'food'} as IActivityData, GetPriority.food(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'shelter'} as IActivityData, GetPriority.stamina(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'medicine'} as IActivityData, GetPriority.medicine(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'fun'} as IActivityData, GetPriority.fun(bean, difficulty));\r\n    queue.enqueue(node);\r\n    return queue;\r\n}\r\n\r\nexport function ActivityIcon(data: IActivityData): string{\r\n    switch(data.act){\r\n        case 'work':\r\n            if (data.good)\r\n                return '💪 '+ GoodIcon[data.good];\r\n            else\r\n                return '💪';\r\n        case 'buy':\r\n            if (data.good == 'shelter')\r\n                return '😴';\r\n            if (data.good)\r\n                return '💸 '+ GoodIcon[data.good];\r\n            else\r\n                return '💸';\r\n    }\r\n    return '';\r\n}\r\nexport function ActivityDisplay(data: IActivityData): string{    \r\n    switch(data.act){\r\n        case 'chat':\r\n            return `chatting`;\r\n        case 'crime':\r\n            return `commiting crime`;\r\n        case 'relax':\r\n            return `relaxing`;\r\n        case 'travel':\r\n            return `travelling to ` + data.intent?.act || '';\r\n        case 'work':\r\n            if (data.good)\r\n                return 'working to make '+ GoodIcon[data.good];\r\n            else\r\n                return 'working';\r\n        case 'buy':\r\n            if (data.good == 'shelter')\r\n                return 'sleeping 😴';\r\n            if (data.good)\r\n                return 'buying '+ GoodIcon[data.good];\r\n            else\r\n                return 'buying';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean extends ISeller, IMover, IAgent{    \r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith: TraitFaith;\r\n    stamina: TraitStamina;\r\n    health: TraitHealth;\r\n    discrete_food: number;\r\n    discrete_sanity: number;\r\n    discrete_stamina: number;\r\n    cash: number;\r\n    dob: IDate;\r\n    sanity: TraitSanity;\r\n    lifecycle: 'alive'|'dead'|'abducted'\r\n}\r\n\r\nexport interface IMover extends IAccelerater{\r\n    key: number;\r\n    onMove: PubSub<Point>;\r\n    destinationKey: number;\r\n}\r\n\r\n/**\r\n * fills out \"markers\" and \"destinationKey\" with random building of type\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function RouteRandom(geo: Geography, mover: IMover, buildingType: BuildingTypes): Point[]|null{\r\n    const destination: IBuilding|undefined = geo.book.getRandomBuildingOfType(buildingType);\r\n    if (destination === undefined) return null;\r\n    mover.destinationKey = destination.key;\r\n    return Route(geo, mover, destination);\r\n}\r\n\r\n/**\r\n * fills out \"markers\" property with points to walk to destination\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function Route(geo: Geography, mover: IMover, destination: IBuilding){\r\n    const start = mover.point;\r\n    const nearestHex = pixel_to_hex(geo.hex_size, geo.petriOrigin, start);\r\n    return hex_linedraw(nearestHex, destination.address).map((h) => hex_to_pixel(geo.hex_size, geo.petriOrigin, h)).map((x, i, a) => {\r\n        if (i === a.length-1){\r\n            const offset = getRandomSlotOffset();\r\n            return {\r\n                x: x.x + offset.x,\r\n                y: x.y + offset.y\r\n            }\r\n        } else {\r\n            return x;\r\n        }\r\n    });\r\n}\r\nexport function Approach(geo: Geography, mover: IMover){\r\n\r\n}","import { TraitCommunity, TraitFaith, TraitIdeals } from \"../World\";\r\n\r\nexport type BeliefCommonality = 'common'|'uncommon'|'rare';\r\nexport const CommonalityChances: {[b in BeliefCommonality]: number} = {\r\n    'common': 3,\r\n    'uncommon': 2,\r\n    'rare': 1\r\n};\r\n\r\nexport type TraitBelief = 'Diligence'| // happy from work\r\n'Natalism'| // increased % of having kids\r\n'Naturalism'|\r\n'Hedonism'| //more entertainment\r\n'Progressivism'|\r\n'Libertarianism'|\r\n'Parochialism'|\r\n'Cosmopolitanism'|\r\n'Capitalism'|\r\n'Socialism'|\r\n'Communism'|\r\n// 'Tribalism'| \r\n// 'Globalism'| \r\n// 'Pacifism'| \r\n'Neuroticism'| // takes extra sanity damage\r\n'Dogmatism'| \r\n// 'Mysticism'| \r\n 'Paranoia'| \r\n// 'Evangelism'| \r\n// 'Fanaticism'| // doesn't like beings that don't share narrative \r\n'Authority'| //less crime, more crime reports\r\n'Anarchism'| // breaks rules easily\r\n//'Sadism'| \r\n'Antagonism'|\r\n'Enthusiasm'|\r\n'Gossip'|'Extroversion'|\r\n'Charity'| // % to donate\r\n'Gluttony'|\r\n'Wanderlust'|\r\n'Germophobia'|\r\n'Greed'; // steal easier\r\n\r\n\r\n// 'friendly'| // likes all beings more\r\n// 'realistic'| // lower happiness\r\n// 'athletic'| // takes less health damage\r\n// 'open-minded'| // beliefs are easily changed\r\n\r\nexport type BeliefSubject = 'self'|'other';\r\nexport type BeliefVerb = 'are'|'arenot';\r\nexport interface IBeliefData {\r\n    noun: string,\r\n    adj: string,\r\n    icon: string,\r\n    description?: string,\r\n    rarity: BeliefCommonality,\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>\r\n}\r\nexport const PrimaryBeliefData: {[key in TraitIdeals|TraitCommunity]: IBeliefData} = {\r\n    prog: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️',\r\n        description: \"Strives to help others\", rarity: 'common',\r\n    },\r\n    trad: {\r\n        noun: 'Elitism', adj: 'Elitist', icon: '👑',\r\n        description: \"Strives for individual power\", rarity: 'common',\r\n    },\r\n    state: {\r\n        noun: 'Collectivism', adj: 'Collectivist', icon: '🕊️',\r\n        description: \"Trusts in the social group\", rarity: 'common',\r\n    },\r\n    ego: {\r\n        noun: 'Independence', adj: 'Independent', icon: '🦅',\r\n        description: \"Trusts only in oneself\", rarity: 'common',\r\n    },\r\n}\r\nexport const NarrativeBeliefData: {[key in TraitFaith]: IBeliefData} = {\r\n    rocket: {\r\n        noun: 'Futurism', adj: 'Futuristic', icon: '🚀',\r\n        description: \"Loves stories of the far future\", rarity: 'common',\r\n    },\r\n    dragon: {\r\n        noun: 'Mythology', adj: 'Mythical', icon: '🐲',\r\n        description: \"Loves stories of the legendary past\", rarity: 'common',\r\n    },\r\n    music: {\r\n        noun: 'Drama', adj: 'Dramatic', icon: '🎵',\r\n        description: \"Loves stories of emotional bonding\", rarity: 'common',\r\n    },\r\n    noFaith: {\r\n        noun: 'Nihilism', adj: 'Nihilist', icon: '⚫️',\r\n        description: \"Hates fairy tales\", rarity: 'common',\r\n    },\r\n}\r\nexport const SecondaryBeliefData: {[key in TraitBelief]: IBeliefData} = {\r\n    // misc 🎲 traits\r\n    Diligence: {\r\n        noun: 'Diligence', adj: 'Diligence', icon: '💪', rarity: 'common',\r\n        description: \"🎲 to 👍 while working\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['state', 'ego']\r\n    },\r\n    Natalism: {\r\n        noun: 'Natalism', adj: 'Natalist', icon: '👶', rarity: 'common',\r\n        description: \"Extra 🎲 for 👶\" //implemented\r\n    },\r\n    Charity: {\r\n        noun: 'Charity', adj: 'Charitable', icon: '😇', rarity: 'uncommon',\r\n        description: \"🎲 to gift 💰 to the penniless; and spread 👍\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Progressivism: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️', rarity: 'uncommon',\r\n        description: \"🎲 to 👍 when paying taxes\"\r\n    },\r\n    Libertarianism: {\r\n        noun: 'Libertarianism', adj: 'Libertarian', icon: '🔫', rarity: 'rare',\r\n        description: \"🎲 to 💢 when paying taxes\",\r\n        //idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Wanderlust: {\r\n        noun: 'Wanderlust', adj: 'Wanderer', icon: '🔭', rarity: 'uncommon',\r\n        description: \"🎲 to 👍 when travelling\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Germophobia: {\r\n        noun: 'Germophobia', adj: 'Germophobic', icon: '🤧', rarity: 'rare',\r\n        description: \"💢 when sick or working in hospital\",\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n\r\n    // work traits\r\n    Parochialism: {\r\n        noun: 'Parochialism', adj: 'Parochial', icon: '🐮', rarity: 'common',\r\n        description: \"Extra 👍 working 🌾; 💢 from dense houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Cosmopolitanism: {\r\n        noun: 'Cosmopolitanism', adj: 'Cosmopolitan', icon: '🍸', rarity: 'common',\r\n        description: \"Extra 👍 working 🎻; 💢 from rural houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Capitalism: {\r\n        noun: 'Capitalism', adj: 'Capitalist', icon: '🎩', rarity: 'common',\r\n        description: \"💢 working in co-ops and communes; Extra 👍 when owner\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Socialism: {\r\n        noun: 'Socialism', adj: 'Socialist', icon: '🤝', rarity: 'common',\r\n        description: \"Extra 👍 working in co-ops\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Communism: {\r\n        noun: 'Communism', adj: 'Communist', icon: '⚒️', rarity: 'common',\r\n        description: \"💢 working in companies\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n\r\n    // Fraud: {\r\n    //     noun: 'Fraud', adj: 'Fraudulent', icon: '🤥',\r\n    //     description: \"??\",\r\n    //     idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    // },\r\n\r\n    // 👍 traits\r\n    Naturalism: {\r\n        noun: 'Naturalism', adj: 'Naturalist', icon: '🛶', rarity: 'uncommon',\r\n        description: \"Extra 👍 from 😎; 😎 3x longer\" //implemented\r\n    },\r\n    Hedonism: {\r\n        noun: 'Hedonism', adj: 'Hedonistic', icon: '💋', rarity: 'uncommon',\r\n        description: \"🎲 to emote extra 👍;🎲 to 💢 when working;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Gluttony: {\r\n        noun: 'Gluttony', adj: 'Glutton', icon: '🎃', rarity: 'common',\r\n        description: \"Extra 👍 when stuffed; Extra 💢 when hungry;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Paranoia: {\r\n        noun: 'Paranoia', adj: 'Paranoid', icon: '👽', rarity: 'uncommon',\r\n        description: \"🎲 to 💢 at any time\",  //implemented\r\n        //idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n\r\n    // 😈 Crime traits\r\n    Authority: {\r\n        noun: 'Authority', adj: 'Authoritarian', icon: '👢', rarity: 'common',\r\n        description: \"Less 🎲 for all 😈 Crime\", //implemented\r\n        //idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    Anarchism: {\r\n        noun: 'Anarchism', adj: 'Anarchist', icon: '🖕', rarity: 'uncommon',\r\n        description: \"Extra 🎲 for all 😈 Crime\", //implemented\r\n        //idealCon: ['state', 'prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Greed: {\r\n        noun: 'Greed', adj: 'Greedy', icon: '🤑', rarity: 'common',\r\n        description: \"Extra 🎲 for theft 😈 Crime; Extra 👍 when rich\",\r\n        //idealCon: ['prog'], idealPro: ['trad']\r\n    },\r\n    // Bloodthirst: {\r\n    //     noun: 'Bloodthirst', adj: 'Bloodthirsty', icon: '🩸', rarity: 'common',\r\n    //     description: \"🎲 for assault 😈 Crime in a 🗣️\"\r\n    // },\r\n    // Pacifism: {\r\n    //     noun: 'Pacifism', adj: 'Pacifist', icon: '😘', rarity: 'common',\r\n    //     description: \"will never punish others\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n    // Mysticism: {\r\n    //     noun: 'Mysticism', adj: 'Mystical', icon: '🔮', rarity: 'common',\r\n    //     description: \"🎲 to 👏 in any conversation\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n\r\n    // 🗣️ traits\r\n    Extroversion: {\r\n        noun: 'Extroversion', adj: 'Extrovert', icon: '🤩', rarity: 'common',\r\n        description: \"Extra 🎲 to start a 🗣️\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Gossip: {\r\n        noun: 'Gossip', adj: 'Gossipy', icon: '📞', rarity: 'common',\r\n        description: \"🎲 to spread 💢 in a 🗣️\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Antagonism: {\r\n        noun: 'Antagonism', adj: 'Antagonistic', icon: '🤬', rarity: 'common',\r\n        description: \"🎲 to spread 💢 in a 🗣️\" //implemented\r\n    },\r\n    Enthusiasm: {\r\n        noun: 'Enthusiasm', adj: 'Enthusiastic', icon: '🥳', rarity: 'common',\r\n        description: \"🎲 to spread 👍 in a 🗣️\" //implemented\r\n    },\r\n    // Globalism: {\r\n    //     noun: 'Globalism', adj: 'Globalist', icon: '🌍', rarity: 'common',\r\n    //     description: \"🎲 to 👍 other hair colors in a 🗣️\",\r\n    //     idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    // },\r\n    // Tribalism: {\r\n    //     noun: 'Tribalism', adj: 'Tribal', icon: '🏰', rarity: 'common',\r\n    //     description: \"🎲 to 💢 other hair colors in a 🗣️\",\r\n    //     idealCon: ['prog'], idealPro: ['state', 'ego']\r\n    // },\r\n\r\n    // Evangelism: {\r\n    //     noun: 'Evangelism', adj: 'Evangelist', icon: '📣', rarity: 'common',\r\n    //     description: \"+50% persuasion of 🎭\",\r\n    //     idealCon: ['ego'], idealPro: ['state']\r\n    // },\r\n    // Fanaticism: {\r\n    //     noun: 'Fanaticism', adj: 'Fanatical', icon: '👺', rarity: 'common',\r\n    //     description: \"🎲 to 💢 other 🎭\",\r\n    //     idealCon: ['prog'], idealPro: []\r\n    // },\r\n\r\n    // Depression: {\r\n    //     noun: 'Depression', adj: 'Depressive', icon: '😓', rarity: 'common',\r\n    //     description: \"🎲 to 💢 when unhappy\",\r\n    // },\r\n    // Optimism: {\r\n    //     noun: 'Optimism', adj: 'Optimistic', icon: '😺', rarity: 'common',\r\n    //     description: \"🎲 to 👍 when unhappy\",\r\n    // },\r\n    // Xenophobia: {\r\n    //     noun: 'Xenophobia', adj: 'Xenophobic', icon: '🛑', rarity: 'common',\r\n    //     description: \"🎲 to 💢 when living with other hair colors\",\r\n    // },\r\n\r\n    // super bad traits\r\n    // Sadism: {\r\n    //     noun: 'Sadism', adj: 'Sadistic', icon: '😈', rarity: 'common',\r\n    //     description: \"🎲 to ☠️ other after a 🗣️\"\r\n    // },\r\n    // Vandalism: {\r\n    //     noun: 'Vandalism', adj: 'Vandal', icon: '💩', rarity: 'common',\r\n    //     description: \"🎲 to destroy goods\"\r\n    // },\r\n    // Delirium: {\r\n    //     noun: 'Delirium', adj: 'Delirious', icon: '😪', rarity: 'common',\r\n    //     description: \"Chooses actions at random\"\r\n    // },\r\n    // DelusionalMania: {\r\n    //     noun: 'Delusional Mania', adj: 'Delusional Maniac', icon: '😵', rarity: 'common',\r\n    //     description: \"🎲 to ☠️ nearby subjects\"\r\n    // },\r\n    // Catatonia: {\r\n    //     noun: 'Catatonia', adj: 'Catatonic', icon: '😶', rarity: 'common',\r\n    //     description: \"-50% walk speed. Cannot work.\"\r\n    // },\r\n\r\n    // meta-traits\r\n    Neuroticism: {\r\n        noun: 'Neuroticism', adj: 'Neurotic', icon: '😱', rarity: 'rare',\r\n        description: \"+100% 🧠 damage\", //implemented\r\n        idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n    Dogmatism: {\r\n        noun: 'Dogmatism', adj: 'Dogmatic', icon: '🐶', rarity: 'uncommon',\r\n        description: \"Cannot change beliefs\", //implemented\r\n        idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n};\r\n\r\nexport function IsIdealDivergent(con: TraitCommunity|TraitIdeals, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    switch(con){\r\n        case 'trad':\r\n        case 'prog':\r\n            return con == utopiaMotive;\r\n        case 'state':\r\n        case 'ego':\r\n            return con == utopiaCommunity;\r\n    }\r\n}\r\n\r\nexport function IsBeliefDivergent(belief: TraitBelief, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    const data = SecondaryBeliefData[belief];\r\n    return data.idealCon != null && data.idealCon.reduce((isDivergent: boolean, con) => {\r\n        return isDivergent || IsIdealDivergent(con, utopiaMotive, utopiaCommunity);\r\n    }, false);\r\n}\r\n\r\nexport const BeliefsAll = Object.keys(SecondaryBeliefData).map((x) => x as TraitBelief);\r\n\r\n/**\r\n * static list of beliefs with rarity\r\n * \r\n * common traits are duplicated many times within the array\r\n * rarer traits have fewer duplications or a singular instance \r\n */\r\nexport const RandomBeliefBucket = Object.keys(SecondaryBeliefData).reduce((list, str) => {\r\n    const t = str as TraitBelief;\r\n    const slots = CommonalityChances[SecondaryBeliefData[t].rarity];\r\n    for (let i = 0; i < slots; i++) {\r\n        list.push(t);\r\n    }\r\n    return list;\r\n}, [] as TraitBelief[]);\r\n\r\nexport interface Belief{\r\n    subject: BeliefSubject;\r\n    verb: BeliefVerb;\r\n    adj: TraitBelief;\r\n}\r\n\r\nexport type HedonSourceToVal = {[source: string]: number};\r\nexport interface HedonReport {\r\n    flatAverage: number,\r\n    weightedAverage: number,\r\n    maxSource: string,\r\n    minSource: string,\r\n    all: HedonSourceToVal\r\n}\r\n\r\nexport function GetHedonReport(hedonHistory: HedonSourceToVal[]): HedonReport {\r\n    if (hedonHistory.length === 0){\r\n        return {\r\n            all: {},\r\n            flatAverage: 0,\r\n            weightedAverage: 0,\r\n            maxSource: '',\r\n            minSource: ''\r\n        }\r\n    }\r\n    const all: {[source: string]: number} = {};\r\n    let weightedAverage: number = 0;\r\n    let allSum: number = 0;\r\n    for (let i = 0; i < hedonHistory.length; i++) {\r\n        const day = hedonHistory[i];\r\n        let daySum = 0;\r\n        const sources = Object.keys(day);\r\n        for (let j = 0; j < sources.length; j++) {\r\n            const source = sources[j];\r\n            daySum += day[source];\r\n            if (!all[source]) all[source] = 0;\r\n            all[source] += day[source];\r\n        }\r\n        weightedAverage += daySum / (i + 1);\r\n        allSum += daySum;\r\n    }\r\n\r\n    const allSources = Object.keys(all);\r\n    return {\r\n        flatAverage: allSum / hedonHistory.length,\r\n        weightedAverage: weightedAverage,\r\n        maxSource: allSources.reduce((max, source) => {\r\n            if (all[source] > max.val)\r\n                return {source: source, val: all[source]};\r\n            else return max;\r\n        }, {source: '', val: 0}).source,\r\n        minSource: allSources.reduce((max, source) => {\r\n            if (all[source] < max.val)\r\n                return {source: source, val: all[source]};\r\n            else return max;\r\n        }, {source: '', val: 0}).source,\r\n        all: all\r\n    }\r\n}","import { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitStamina, TraitHealth, TraitFood, TraitJob, JobToGood, IHappinessModifier, TraitToModifier, MaslowHappinessScore, GetHappiness, GoodToThreshold, TraitGood, TraitSanity, TraitEmote, EmotionSanity, EmotionWorth } from \"../World\";\r\nimport { RandomEthno, GetRandom, GetRandomNumber, GetRandomRoll } from \"../WorldGen\";\r\nimport { Economy, ISeller } from \"./Economy\";\r\nimport { Policy, Party } from \"./Politics\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\nimport { IDate, withinLastYear } from \"./Time\";\r\nimport { Government } from \"./Government\";\r\nimport { Act, AgentState, IActivityData, IAgent, IBean, IChatData, IdleState, IMover } from \"./Agent\";\r\nimport { JobToBuilding, Point, Vector } from \"./Geography\";\r\nimport { City } from \"./City\";\r\nimport { PriorityQueue } from \"./Priorities\";\r\nimport { GetHedonReport, HedonReport, HedonSourceToVal, SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { IPlayerData } from \"./Player\";\r\nimport { BeanDeathCause, BeanResources, IDifficulty } from \"../Game\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nconst BabyChance = 0.008;\r\nexport const DaysUntilSleepy = 7;\r\nconst ChatCooldownMS = 4000;\r\n\r\nconst HedonismExtraChance = 0.1;\r\nconst ParanoidUnhappyChance = 0.05;\r\nconst HedonismHateWorkChance = 0.15;\r\nconst DiligenceHappyChance = 0.25;\r\nconst ParochialHappyChance = 0.25;\r\nconst CosmopolitanHappyChance = 0.25;\r\nconst ExtrovertChatExtraChance = 0.25;\r\nconst AntagonismBullyChance = 0.45;\r\nconst GossipBullyChance = 0.35;\r\nconst EnthusiasmPraiseChance = 0.45;\r\nconst GermophobiaHospitalWorkChance = 0.25;\r\nconst NatalismExtraBabyChance = 0.04;\r\nexport class Bean implements IBean{\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public dob: IDate = {year: 0, season: 0, day: 1, hour: 0};\r\n    public bornInPetri: boolean = false;\r\n    public name: string = 'Human Bean';\r\n    public get sanity(): TraitSanity {\r\n        if (this.discrete_sanity >= 8)\r\n            return 'sane';\r\n        else if (this.discrete_sanity >= 5)\r\n            return 'stressed'\r\n        else if (this.discrete_sanity >= 3)\r\n            return 'disturbed'\r\n        else\r\n            return 'psychotic';\r\n    }\r\n    public discrete_sanity: number = 10;\r\n    /**\r\n     * 0-1\r\n     */\r\n    public discrete_fun: number = 0;\r\n    public lifecycle: 'alive'|'dead'|'abducted' = 'alive';\r\n    public get alive(): boolean{\r\n        return this.lifecycle === 'alive';\r\n    }\r\n    public set alive(val: boolean){\r\n        this.lifecycle = val === true ? 'alive' : 'dead';\r\n    }\r\n\r\n    public activity_queue: IActivityData[] = [];\r\n    public activity_duration: {[act in Act]: number} = {'buy': 0, 'chat': 0, 'craze': 0, 'crime': 0, 'idle': 0, 'relax': 0, 'sleep': 0, 'soapbox': 0, 'travel': 0, 'work': 0};\r\n\r\n    public speed = 60;\r\n    public point: Point = {x: 0, y: 0};\r\n    public velocity: Vector = {x: 0, y: 0};\r\n    public onMove = new PubSub<Point>();\r\n    public destinationKey = 0;\r\n\r\n    public city: City|null = null;\r\n\r\n    public ethnicity: TraitEthno = RandomEthno();\r\n\r\n    //maslow\r\n    public discrete_food: number = 1;\r\n    public get food(): TraitFood {\r\n        if (this.discrete_food >= GoodToThreshold['food'].abundant)\r\n        return 'stuffed';\r\n        else if (this.discrete_food >= GoodToThreshold['food'].sufficient)\r\n        return 'sated'\r\n        else if (this.discrete_food >= GoodToThreshold['food'].warning)\r\n        return 'hungry'\r\n        else\r\n        return 'starving';\r\n    }\r\n    public stamina: TraitStamina = 'awake';\r\n    public discrete_health: number = 2;\r\n    public get health(): TraitHealth {\r\n        if (this.discrete_health >= GoodToThreshold['medicine'].abundant)\r\n        return 'fresh';\r\n        else if (this.discrete_health >= GoodToThreshold['medicine'].sufficient)\r\n        return 'bruised'\r\n        else if (this.discrete_health >= GoodToThreshold['medicine'].warning)\r\n        return 'sickly'\r\n        else\r\n        return 'sick';\r\n    }\r\n    //values\r\n    public community: TraitCommunity = 'ego';\r\n    public ideals: TraitIdeals = 'trad';\r\n    //other\r\n    public job: TraitJob = 'jobless';\r\n    public employerEnterpriseKey?: number;\r\n    public faith: TraitFaith = 'noFaith';\r\n    public beliefs: TraitBelief[] = [];\r\n    public cash: number = 3;\r\n    /**\r\n     * current hedons on index 0, plus last len-1 days of hedon history\r\n     * \r\n     * do not modify - World.tsx simulate_world will handle it\r\n     */\r\n    public hedonHistory: HedonSourceToVal[] = [{}];\r\n    /**\r\n     * latest happiness report\r\n     */\r\n    public happiness: HedonReport = GetHedonReport(this.hedonHistory);\r\n    /**\r\n     * -100 to 100\r\n     */\r\n    public lastHappiness: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastSentiment: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastPartySentiment: number = 0;\r\n    public ticksSinceLastSale: number = 0;\r\n    public ticksSinceLastRelax: number = 0;\r\n    /**\r\n     * days until needs sleep\r\n     */\r\n    public discrete_stamina: number = 7;\r\n    public fairGoodPrice: number = 1;\r\n    public lastChatMS: number = Date.now();\r\n    get isInCrisis(): boolean{\r\n        return this.food === 'starving' ||\r\n        this.stamina === 'homeless' ||\r\n        this.health === 'sick';\r\n    }\r\n    believesIn(belief: TraitBelief): boolean{\r\n        return this.beliefs.indexOf(belief) !== -1;\r\n    }\r\n    loseSanity(amount: number){\r\n        const multiplier = this.believesIn('Neuroticism') ? 2 : 1;\r\n        this.discrete_sanity -= multiplier * amount;\r\n    }\r\n    getHappinessModifiers(econ: Economy, homeCity: City, law: Government): IHappinessModifier[]{\r\n        const mods: IHappinessModifier[] = [\r\n            TraitToModifier[this.food],\r\n            TraitToModifier[this.stamina],\r\n            TraitToModifier[this.health],\r\n            {\r\n                reason: 'Entertainment', mod: this.discrete_fun*.4\r\n            }\r\n        ];\r\n        if (this.ideals === 'trad' && this.ethnicity != homeCity.majorityEthnicity) {\r\n            mods.push({reason: 'Xenophobic', mod: -.1});\r\n        }\r\n        if (this.community === 'ego' && this.job != 'jobless' && this.employerEnterpriseKey &&\r\n            homeCity.book.db.get.get(this.employerEnterpriseKey)?.upgraded) {\r\n            mods.push({reason: 'Hates Building Density', mod: -.1});\r\n        }\r\n        if (this.cash < 1) {\r\n            mods.push({reason: 'Penniless', mod: MaslowHappinessScore.Deficient});\r\n        } else if (this.cash > econ.getCostOfLiving() * 3){\r\n            mods.push({reason: 'Upper Class', mod: 0.3});\r\n        } else if (this.cash > econ.getCostOfLiving() * 2){\r\n            mods.push({reason: 'Middle Class', mod: 0.15});\r\n        }\r\n        if (this.job === 'jobless') {\r\n            mods.push({reason: 'Unemployed', mod: MaslowHappinessScore.Deficient});\r\n        }\r\n\r\n        return mods;\r\n    }\r\n    getSentimentModifiers(econ: Economy, homeCity: City, law: Government, party: Party): {\r\n        party: IHappinessModifier[],\r\n        law: IHappinessModifier[]\r\n    }{\r\n        const result = {party: [] as IHappinessModifier[], law: [] as IHappinessModifier[]};\r\n\r\n        if (this.community === party.community){\r\n            result.party.push({reason: 'Same Community', mod: 0.15});\r\n        }\r\n        if (this.ideals === party.ideals){\r\n            result.party.push({reason: 'Same Ideals', mod: 0.15});\r\n        } else if (this.community != party.community){\r\n            result.party.push({reason: 'Incompatible Values', mod: -0.15});\r\n        }\r\n        return result;\r\n    }\r\n    calculateBeliefs(econ: Economy, homeCity: City, law: Government, party: Party): void{\r\n        this.lastHappiness = GetHappiness(this.getHappinessModifiers(econ, homeCity, law));\r\n        const sent = this.getSentimentModifiers(econ, homeCity, law, party);\r\n        this.lastSentiment = GetHappiness(sent.law);\r\n        this.lastPartySentiment = GetHappiness(sent.party);\r\n\r\n        if (this.job === 'jobless'){\r\n            this.fairGoodPrice = 1;\r\n        } else {\r\n            const myGood = JobToGood(this.job);\r\n            this.fairGoodPrice = econ.getFairGoodPrice(myGood);\r\n        }\r\n    }\r\n    /**\r\n     * non-normalized multiplier\r\n     */\r\n    getSentimentPolicies(traits: {[x:string]:boolean}, policies: Policy[]){\r\n        let multiplier = 100;\r\n        policies.forEach((policy) => {\r\n            policy.fx.forEach((fx) => {\r\n                if (traits[fx.key])\r\n                multiplier += fx.mag * 10; //-30 to +30\r\n            });\r\n        });\r\n        return multiplier / 100;\r\n    }\r\n    _getTraitMap(){\r\n        let traits = {[this.community]: true, [this.ideals]:  true, [this.ethnicity]: true};\r\n        if (this.faith != 'noFaith')\r\n            traits[this.faith] = true;\r\n        return traits;\r\n    }\r\n    getFace(): string{\r\n        // if (!this.alive)\r\n        //     return '💀';\r\n        if (this.state.data.act === 'buy' && this.state.data.good === 'shelter'){\r\n            return '😴';\r\n        }\r\n        if (this.state.data.act === 'crime'){\r\n            return '😈';\r\n        }\r\n        if (this.state.data.act === 'relax'){\r\n            return '😎';\r\n        }\r\n        if (this.state.data.act === 'chat'){\r\n            if (this.state.data.chat?.participation === 'speaker'){\r\n                switch(this.state.data?.chat?.type){\r\n                    default: return '😃';\r\n                    case 'gift': return '😇';\r\n                    case 'praise': return '🥳';\r\n                    case 'bully': return '😈';\r\n                }\r\n            }\r\n            return '🤨';\r\n        }\r\n        if (this.food === 'starving')\r\n            return '😫';\r\n        if (this.health === 'sick')\r\n            return '🤢';\r\n        if (this.stamina === 'homeless')\r\n            return '🥶';\r\n        if (this.job === 'jobless')\r\n            return '😧';\r\n        if (this.lastHappiness < 0)\r\n            return '☹️';\r\n        if (this.lastHappiness >= 50)\r\n            return '🙂';\r\n        return '😐';\r\n    }\r\n    getIdea(costOfLiving: number): {bad: boolean, idea: string}|null {\r\n        if (this.food === 'hungry')\r\n            return {bad: true, idea: '🍗'};\r\n        if (this.health === 'sickly')\r\n            return {bad: true, idea: '💊'};\r\n        if (this.stamina === 'homeless')\r\n            return {bad: true, idea: '🏠'};\r\n        if (this.canBaby(costOfLiving))\r\n            return {bad: false, idea: '👶'};\r\n        return null;        \r\n    }\r\n    getSpeech(): string | undefined {\r\n        if (this.state.data.act === 'chat'){\r\n            if (this.state.data.chat?.participation === 'speaker' && this.state.data.chat.preachBelief){\r\n                return '💬'+SecondaryBeliefData[this.state.data.chat.preachBelief].icon;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getCrimeDecision(\r\n        good: TraitGood,\r\n        crimeReason: 'desperation'|'greed',\r\n    ){\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community === 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (crimeReason === 'desperation' && this.health === 'sick' || this.food === 'starving'){\r\n            chance += .15;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    tryFindRandomJob(law: Government) {\r\n        const job: TraitJob = GetRandom(['builder', 'doc', 'farmer', 'entertainer']);\r\n        if (!this.trySetJob(job)){\r\n            \r\n            this.city?.eventBus?.nojobslots.publish({icon: '🏚️', trigger: 'nojobslots', message: `A subject cannot find a job; build or upgrade more buildings.`});\r\n        }\r\n    }\r\n    trySetJob(job: TraitJob): boolean{\r\n        if (this.city?.tryGetJob(this, job)){\r\n            this.city.unsetJob(this);\r\n            this.job = job;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    canPurchase(cost: BeanResources) {\r\n        return (cost.sanity === undefined || this.discrete_sanity >= cost.sanity);\r\n    }\r\n    public maybeParanoid() {\r\n        this.ifBelievesInMaybeEmote('Paranoia', 'unhappiness', ParanoidUnhappyChance)\r\n    }\r\n    public maybeAntagonised(){\r\n        this.emote('unhappiness', 'Antagonism');\r\n    }\r\n    public maybeEnthused(){\r\n        this.emote('happiness', 'Enthusiasm');\r\n    }\r\n    /**\r\n     * chats or conversations use 🗣️ in descriptions\r\n     * @returns \r\n     */\r\n    public maybeChat(): boolean {\r\n        if (this.lastChatMS + ChatCooldownMS > Date.now()) \r\n            return false;\r\n        if (this.state.data.act === 'chat')\r\n            return false;\r\n        const roll = Math.random();\r\n        let chance = (this.community === 'state') ? 0.2 : 0.1;\r\n        if (this.believesIn('Extroversion')) \r\n            chance += ExtrovertChatExtraChance;\r\n        return roll < chance;\r\n    }\r\n    public getRandomChat(nearby: Bean[]): IChatData {\r\n        const canPreach = this.beliefs.length;\r\n        if (canPreach){\r\n            if (this.believesIn('Charity') && this.cash >= 2){\r\n                //find a bean with less money than self, poorest in sight\r\n                const needy = nearby.filter(x => x.cash <= this.cash-1).reduce((least: Bean|null, bean) => {\r\n                    if (least == null || (bean.cash < least.cash))\r\n                        return bean;\r\n                    return least;\r\n                }, null);\r\n                if (needy) {\r\n                    this.cash -= 0.5;\r\n                    this.emote('happiness', 'Charity');\r\n                    needy.cash += 0.5;\r\n                    needy.emote('happiness', 'Charity');\r\n                    return {\r\n                        participation: 'speaker',\r\n                        type: 'gift',\r\n                        targetBeanKey: needy.key\r\n                    }\r\n                }\r\n            } else if(this.believesIn('Enthusiasm') && Math.random() < EnthusiasmPraiseChance){\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'praise',\r\n                    preachBelief: 'Enthusiasm'\r\n                }\r\n            } else if(this.believesIn('Antagonism') && Math.random() < AntagonismBullyChance){\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'bully',\r\n                    preachBelief: 'Antagonism'\r\n                }\r\n            } else if(this.believesIn('Gossip') && Math.random() < GossipBullyChance){\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'bully',\r\n                    preachBelief: 'Gossip'\r\n                }\r\n            }\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'preach',\r\n                preachBelief: GetRandom(this.beliefs)\r\n            }\r\n        } else {\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'praise'\r\n            }\r\n        }\r\n    }\r\n    work(law: Government, econ: Economy) {\r\n        if (this.job === 'jobless'){\r\n        } else {\r\n            switch(this.job){\r\n                case 'farmer':\r\n                    this.discrete_food = Math.min(this.discrete_food+1, GoodToThreshold.food.sufficient*2);\r\n                    this.ifBelievesInMaybeEmote('Parochialism', 'happiness', ParochialHappyChance);\r\n                    break;\r\n                case 'doc':\r\n                    this.discrete_health = Math.min(this.discrete_health+1, GoodToThreshold.medicine.sufficient*2);\r\n                    this.ifBelievesInMaybeEmote('Germophobia', 'unhappiness', GermophobiaHospitalWorkChance);\r\n                    break;\r\n                case 'builder': \r\n                    this.stamina = 'awake';\r\n                    this.discrete_stamina = 7;\r\n                    break;\r\n                case 'entertainer':\r\n                    this.ifBelievesInMaybeEmote('Cosmopolitanism', 'happiness', CosmopolitanHappyChance);\r\n                break;\r\n            }\r\n            this.ifBelievesInMaybeEmote('Diligence', 'happiness', DiligenceHappyChance);\r\n            this.ifBelievesInMaybeEmote('Hedonism', 'unhappiness', HedonismHateWorkChance);\r\n            this.ticksSinceLastSale++;\r\n            if (this.ticksSinceLastSale > 7){\r\n                const cityHasOtherWorkers = this.city ? this.city.beans.get.filter(x => x.job === this.job).length > 1 : false;\r\n                //underemployment\r\n                if (cityHasOtherWorkers && Math.random() > 0.5) {\r\n                    const newJob = econ.mostInDemandJob();\r\n                    if (newJob)\r\n                        this.trySetJob(newJob);\r\n                }\r\n            }\r\n            let workedForEmployer = false;\r\n            if (this.city && this.employerEnterpriseKey){\r\n                const employer = this.city.getEnterprise(this.employerEnterpriseKey);\r\n                if (employer){\r\n                    econ.employAndPrice(employer, JobToGood(this.job), 4, this.fairGoodPrice);\r\n                    workedForEmployer = true;\r\n                    switch(employer.enterpriseType){\r\n                        case 'company':\r\n                            this.ifBelievesInMaybeEmote('Communism', 'unhappiness', 0.1);\r\n                            if (employer.ownerBeanKey === this.key)\r\n                                this.ifBelievesInMaybeEmote('Capitalism', 'happiness', 0.1);\r\n                            break;\r\n                        case 'cooperative':                            \r\n                            this.ifBelievesInMaybeEmote('Capitalism', 'unhappiness', 0.1);\r\n                                \r\n                            this.ifBelievesInMaybeEmote('Socialism', 'happiness', 0.1);\r\n                            break;\r\n                        case 'commune':                            \r\n                            this.ifBelievesInMaybeEmote('Capitalism', 'unhappiness', 0.1);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (!workedForEmployer)\r\n                econ.produceAndPrice(this, JobToGood(this.job), 4, this.fairGoodPrice);\r\n        }\r\n    }\r\n    private buyFood(economy: Economy) {\r\n        const groceries = economy.tryTransact(this, 'food', 0.5, 3);\r\n        if (groceries) {\r\n            this.discrete_food += groceries.bought;\r\n            if (this.food === 'stuffed'){\r\n                this.emote('happiness', 'Stuffed');\r\n                this.ifBelievesInMaybeEmote('Gluttony', 'happiness', 1);\r\n            }\r\n        }\r\n        return groceries;\r\n    }\r\n    public buy: {[key in TraitGood]: (econ: Economy)=> boolean} = {\r\n        food: (economy: Economy) =>{\r\n            return this.buyFood(economy) != null;\r\n        },\r\n        medicine:  (economy: Economy) =>{\r\n            return this.buyMeds(economy) != null;\r\n        },\r\n        fun:  (economy: Economy) =>{\r\n            return this.buyFun(economy);\r\n        },\r\n        shelter: (economy: Economy) => {\r\n            return this.buyHousing(economy);\r\n        }\r\n    }\r\n    public steal(good: 'food'|'medicine', econ: Economy){\r\n        const stolen = econ.steal(good, 3);\r\n        if (stolen != null){\r\n            switch(good){\r\n                case 'food':\r\n                    this.discrete_food += stolen;\r\n                    break;\r\n                case 'medicine':\r\n                    this.discrete_health += stolen;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    private buyHousing(economy: Economy): boolean {\r\n        const housing = economy.tryTransact(this, 'shelter');\r\n        if (housing) {\r\n            this.discrete_stamina = 10;\r\n            this.stamina = 'awake';\r\n        } else if (this.discrete_stamina <= 0){\r\n            this.stamina = 'homeless';\r\n        }\r\n        return housing != null;\r\n    }\r\n    private buyFun(economy: Economy): boolean {\r\n        const fun = economy.tryTransact(this, 'fun');\r\n        if (fun) {\r\n            this.discrete_fun = 1;\r\n            this.emote('happiness', 'Entertainment');\r\n            this.emote('happiness', 'Entertainment');\r\n        }\r\n        return fun != null;\r\n    }\r\n\r\n    age(economy: Economy, diff: IDifficulty): IEvent|null {\r\n        if (!this.alive) return null;\r\n\r\n        const wasNotHungry = this.food !== 'starving';\r\n        const wasNotSick = this.health !== 'sick';\r\n\r\n        this.discrete_food -= 1/7;\r\n        if (this.discrete_food < 0)\r\n            this.discrete_health -= 0.2;\r\n\r\n        const starve = this.maybeDie('starvation', 0.6);\r\n        if (starve)\r\n            return null;\r\n        else if (this.food === 'starving' && wasNotHungry){\r\n            this.emote('unhappiness', 'Starving');\r\n            if (this.believesIn('Gluttony')){\r\n                this.emote('unhappiness', 'Gluttony');\r\n                this.emote('unhappiness', 'Gluttony');\r\n            }\r\n        }\r\n            \r\n        if (this.stamina === 'homeless')\r\n            this.discrete_health -= 1/14;\r\n        \r\n        this.discrete_stamina--;\r\n    \r\n        const exposure = this.maybeDie('exposure', 0.2);\r\n        if (exposure)\r\n            return null;\r\n\r\n        this.discrete_health -= 1/20;\r\n        this.discrete_health = Math.min(this.discrete_health, 3);\r\n        const sick = this.maybeDie('sickness', 0.4);\r\n        if (sick)\r\n            return null;\r\n        else if (this.health === 'sick' && wasNotSick){\r\n            this.emote('unhappiness', 'sick');\r\n            if (this.believesIn('Germophobia')){\r\n                this.emote('unhappiness', 'Germophobia');\r\n            }\r\n        }\r\n\r\n        this.discrete_fun -= 1/10;\r\n        this.discrete_fun = Math.max(0, this.discrete_fun);\r\n        return null;\r\n    }\r\n    private buyMeds(economy: Economy) {\r\n        const meds = economy.tryTransact(this, 'medicine', 0.5, 3);\r\n        if (meds){\r\n            this.discrete_health += meds.bought;\r\n            if (this.health === 'fresh')\r\n                this.emote('happiness', 'Robust');\r\n        }\r\n        return meds;\r\n    }\r\n    get babyChance(): number{\r\n        let base = BabyChance;\r\n        if (this.believesIn('Natalism'))\r\n            return base + NatalismExtraBabyChance;\r\n        else\r\n            return base;\r\n    }\r\n    maybeBaby(economy: Economy): IEvent | null {\r\n        if (this.canBaby(economy.getCostOfLiving()) &&\r\n            GetRandomRoll(this.babyChance)) {\r\n            if (this.city)\r\n                this.city.breedBean(this);\r\n            else\r\n                throw 'bean does not have city object';\r\n            return {icon: '🎉', trigger: 'birth', message: `${this.name} has a baby!`}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    canBaby(costOfLiving: number): boolean{\r\n        return this.alive && this.cash > costOfLiving * 3 &&\r\n            !this.isInCrisis;\r\n    }\r\n    maybeCrime(good: TraitGood): boolean {\r\n        if (good === 'shelter') return false;\r\n        if (good === 'fun') return false;\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community === 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (this.isInCrisis){\r\n            chance += .1;\r\n        }\r\n        if (this.believesIn('Greed')){\r\n            chance += .25;\r\n        }\r\n        if (this.believesIn('Anarchism')){\r\n            chance += .33;\r\n        }\r\n        if (this.believesIn('Authority')){\r\n            chance += -.25;\r\n        }\r\n        if (good === 'food' && this.food === 'starving'){\r\n            chance += .25;\r\n        }\r\n        else if (good === 'medicine' && this.health === 'sick'){\r\n            chance += .25;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    ifBelievesInMaybeEmote(belief: TraitBelief, emote: TraitEmote, chance: number){\r\n        if (this.believesIn(belief) && Math.random() < chance){\r\n            this.emote(emote, belief);\r\n        }\r\n    }\r\n    emote(emote: TraitEmote, source: string){\r\n        this.discrete_sanity = MathClamp(this.discrete_sanity + EmotionSanity[emote], 0, 10);\r\n        this.hedonHistory[0][source] = (this.hedonHistory[0][source] || 0) + EmotionWorth[emote];\r\n        this.city?.addEmotePickup(this.point, emote);\r\n        if (this.believesIn('Hedonism') && (emote === 'happiness' || emote === 'love') && Math.random() < HedonismExtraChance){\r\n            this.city?.addEmotePickup(this.point, emote);\r\n        }\r\n    }\r\n    canBuy(good: TraitGood): 'yes'|'nosupply'|'pricedout' {\r\n        return this.city?.economy?.canBuy(this, good) || 'nosupply';\r\n    }\r\n    maybeDie(cause: BeanDeathCause, chance = 0.5): boolean{\r\n        if (this.discrete_health < 0 && Math.random() <= chance) {\r\n            this.die(cause);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    die(cause: BeanDeathCause){\r\n        this.alive = false;\r\n        const pains = GetRandomNumber(2, 3);\r\n        for (let i = 0; i < pains; i++) {\r\n            this.emote('hate', 'death');\r\n        }\r\n        this.city?.beans.remove(this);\r\n        this.city?.historicalBeans.push(this);\r\n        this.city?.eventBus?.death.publish({\r\n            icon: '☠️', trigger: 'death', message: `${this.name} died of ${cause}!`, \r\n            beanKey: this.key, cityKey: this.cityKey,\r\n            point: this.point\r\n        });\r\n    }\r\n    maybeScarcity(good: TraitGood){\r\n        let scarce = false;\r\n        if (good === 'food' && (this.food === 'starving' || this.food === 'hungry'))\r\n            scarce = true;\r\n        else if (good === 'shelter' && (this.stamina === 'homeless' || this.stamina === 'sleepy'))\r\n            scarce = true;\r\n        else if (good === 'medicine' && (this.health === 'sick' || this.health === 'sickly'))\r\n            scarce = true;\r\n        if (scarce)\r\n            this.emote('unhappiness', 'Scarcity');\r\n    }\r\n    abduct(player: IPlayerData){\r\n        this.lifecycle = 'abducted';\r\n        this.city?.unsetJob(this);\r\n        player.abductedBeans.push(this);\r\n    }\r\n\r\n    state: AgentState = IdleState.create();\r\n    jobQueue: PriorityQueue<AgentState> = new PriorityQueue<AgentState>([]);\r\n    onAct = new PubSub<number>();\r\n}","import { World } from \"../World\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\nexport enum Hour {Midnight, Morning, Noon, Evening}\r\n\r\nexport interface IDate{\r\n    day: number;\r\n    season: Season;\r\n    year: number;\r\n    hour: Hour;\r\n}\r\n\r\nexport function Now(world: World): IDate{\r\n    return {year: world.date.year, season: world.date.season, day: world.date.day, hour: world.date.hour};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","import { TraitIdeals, TraitCommunity, TraitEthno, TraitFaith, World, TraitJob } from './World';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Policy, BaseParty, CityPartyHQ, Party } from './simulation/Politics';\r\nimport { IBuilding, BuildingTypes, Geography, PolarPoint, polarToPoint, hex_to_pixel, HexPoint, BuildingToGood } from './simulation/Geography';\r\nimport { City } from './simulation/City';\r\nimport { BeliefsAll, RandomBeliefBucket } from './simulation/Beliefs';\r\nimport { WorldSound } from './WorldSound';\r\nimport { Building } from './simulation/RealEstate';\r\nimport { Economy } from './simulation/Economy';\r\n\r\nconst EnterpriseStartingListing = 1;\r\nconst MaxNumBeanTraitsOnGenerate = 3;\r\n\r\n/**\r\n * return better random values\r\n * @param min \r\n * @param max \r\n * @returns \r\n */\r\nexport function GetRandomNumber(min: number, max: number): number{\r\n    const randomBuffer = new Uint32Array(1);\r\n    window.crypto.getRandomValues(randomBuffer);\r\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * \r\n * @returns float between 0 and 1\r\n */\r\nexport function GetRandomFloat(): number{\r\n    //https://stackoverflow.com/questions/34575635/cryptographically-secure-float\r\n    // A buffer with just the right size to convert to Float64\r\n    let buffer = new ArrayBuffer(8);\r\n\r\n    // View it as an Int8Array and fill it with 8 random ints\r\n    let ints = new Int8Array(buffer);\r\n    window.crypto.getRandomValues(ints);\r\n\r\n    // Set the sign (ints[7][7]) to 0 and the\r\n    // exponent (ints[7][6]-[6][5]) to just the right size \r\n    // (all ones except for the highest bit)\r\n    ints[7] = 63;\r\n    ints[6] |= 0xf0;\r\n\r\n    // Now view it as a Float64Array, and read the one float from it\r\n    return new DataView(buffer).getFloat64(0, true) - 1; \r\n}\r\n\r\n/**\r\n * given a chance (0-1) return true if random float is <= chance\r\n * @param chance \r\n * @returns \r\n */\r\nexport function GetRandomRoll(chance: number): boolean{\r\n    const randomNumber = GetRandomFloat();\r\n    //console.log(`DC ${(chance*100).toFixed(3)} rolled ${(randomNumber*100).toFixed(4)}`);\r\n    return randomNumber <= chance;\r\n}\r\n\r\n/**\r\n * convenience random function\r\n * @param length \r\n * @returns \r\n */\r\nexport function GetRandomIndex(length: number): number{\r\n    return GetRandomNumber(0, length-1)\r\n}\r\n\r\nexport function GetRandom<S>(choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(choices.length);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(): TraitIdeals{\r\n    return GetRandom(['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(): TraitCommunity{\r\n    return GetRandom(['state', 'ego']);\r\n}\r\nexport function RandomEthno(): TraitEthno{\r\n    return GetRandom(['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(): TraitFaith{\r\n    return GetRandom(['rocket','music','dragon', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\nexport const MAX_PETRI_RADIUS = 200;\r\nexport const PI2 = Math.PI*2;\r\nexport function RandomPolar(r?: number): PolarPoint{\r\n    return {\r\n        r: r || GetRandomNumber(0, MAX_PETRI_RADIUS),\r\n        az: GetRandomNumber(0, PI2)\r\n    };\r\n}\r\nexport function GetBuildingR(type: BuildingTypes): number{\r\n    switch(type){\r\n        case 'farm':\r\n            return GetRandomNumber(200, 300);\r\n        default: \r\n            return GetRandomNumber(80, 200);\r\n    }\r\n}\r\nexport function GenerateBuilding(geo: Geography, type: BuildingTypes, hex: HexPoint, econ: Economy){\r\n    const newBuilding = new Building();\r\n    newBuilding.type = type;\r\n    newBuilding.key = geo.book.getBuildings().length;\r\n    newBuilding.address = hex;\r\n    if (geo instanceof City)\r\n        newBuilding.city = geo;\r\n    geo.addBuilding(newBuilding);\r\n    const good = BuildingToGood[type];\r\n    if (good != 'fun')\r\n        econ.employAndPrice(newBuilding, good, EnterpriseStartingListing, econ.getFairGoodPrice(good))\r\n}\r\n\r\nconst Number_Starting_Cities = 1;\r\nexport function GenerateWorld(): World{\r\n    const world = new World();\r\n \r\n    world.law.laws = [];\r\n    world.party = new BaseParty();\r\n    world.institutions.push(world.party);\r\n    for (let i = 0; i < Number_Starting_Cities; i++) {\r\n        world.cities.push(GenerateCity(world.cities.length, world.sfx, world.economy));\r\n        world.cities[i].eventBus = world.bus;\r\n        world.cities[i].environment = world.date;\r\n        world.cities[i].law = world.law;\r\n        for (let j = 0; j < world.cities[i].beans.get.length; j++) {\r\n            const bean = world.cities[i].beans.get[j];\r\n            bean.work(world.law, world.economy);\r\n            if (bean.job == 'farmer')\r\n                bean.work(world.law, world.economy);\r\n        }\r\n    }\r\n    world.economy.monthlyDemand.food = world.beans.get.length;\r\n    world.economy.monthlyDemand.shelter = world.beans.get.length;\r\n    world.economy.monthlyDemand.medicine = world.beans.get.length;\r\n\r\n    return world;\r\n}\r\n\r\nexport function GeneratePartyHQ(city: City, party: Party) {\r\n    \r\n}\r\n\r\nexport const Number_Starting_City_Pop = 0;\r\nexport function GenerateCity(previousCityCount: number, sfx: WorldSound, econ: Economy): City{\r\n    let newCity = new City(sfx, econ);\r\n    newCity.key = previousCityCount;\r\n    newCity.name = GetRandom(['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', '']);\r\n    newCity.name += GetRandom(['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash']);\r\n    newCity.name += GetRandom(['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest']);\r\n    \r\n    GenerateBuilding(newCity, 'courthouse', newCity.hexes[0], newCity.economy); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(15, 20)], newCity.economy); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(21, 25)], newCity.economy); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(26, 60)], newCity.economy);\r\n    // GenerateBuilding(newCity, 'house', newCity.hexes[1]); \r\n    // GenerateBuilding(newCity, 'hospital', newCity.hexes[5]);\r\n    \r\n    // GenerateBuilding(newCity, 'farm', newCity.hexes[7]);\r\n\r\n    const cityPopulation = Number_Starting_City_Pop;\r\n    while(newCity.beans.get.length < cityPopulation){\r\n        newCity.beans.push(\r\n            GenerateBean(newCity)\r\n        );\r\n    }\r\n\r\n    return newCity;\r\n}\r\nfunction getStartingPoint(city: City): HexPoint{\r\n    const house = city.book.getRandomBuildingOfType('house');\r\n    if (house){\r\n        return house.address;\r\n    } else {\r\n        return {\r\n            q: 0, r: 0\r\n        }\r\n    }\r\n}\r\nexport function GenerateBean(city: City, hexPoint?: HexPoint, job?: TraitJob): Bean{\r\n    let newBean = new Bean();\r\n    \r\n    newBean.key = ++city.beanSeed;\r\n    newBean.cityKey = city.key;\r\n    newBean.city = city;\r\n    newBean.name = GetRandom(['Joe', 'Frank', 'Jill', 'Jose',\r\n    'Johnny', 'Isabelle', 'Carmen', 'Ace', 'Carl', 'Zander', 'Jean',\r\n    'Anne', 'Leslie', 'Ben', 'Ron', \r\n    'Ellen', 'Dallas', 'Kane', 'Ash', \r\n    'Jim', 'James', 'Leonard', 'Nyota', 'Christine', 'Scotty', 'Tasha', 'Geordi', 'Beverly', 'Deanna', 'Wesley', 'Majel',\r\n    'Malcolm','River',  \r\n    'Luke', 'Han', 'Owen', 'Rey', 'Mace', 'Cody',\r\n    'Dana', 'Walter',  \r\n    'Rick', 'Holden', 'Roy', 'Pris', 'Eldon', 'Rachael',\r\n    'Rose', 'Donna', 'Jack', 'Amy', 'Rory', 'Martha', 'Clara', \r\n    'Arnold', 'Dave', 'Holly', \r\n    'Kara', 'Gaius','William', 'Lee', 'Laura', 'Saul',\r\n    'Max', 'Edison', 'Theora', 'Bryce', 'Murray', 'Ned',\r\n    'Daniel', 'Samantha', \r\n    'Logan', 'Francis', 'Jessica',\r\n    'Thomas',\r\n    'Benny', 'James', 'John Henry', 'Sarah', 'Piper', 'Nick', 'Shaun', 'Preston'\r\n    ]) + ' ';\r\n    newBean.name += GetRandom([\r\n        'Ripley', 'Bishop', 'Hicks', 'Vasquez', 'Hudson', \r\n        'Rico', 'Flores', 'Ibanez', 'Levy', 'Jenkins', 'Barlow', 'Zim', 'Rasczak',\r\n        'Kirk', 'McCoy', 'Sulu', 'Uhura', 'Chekov', 'Chapel', 'Rand','Riker', 'Crusher', 'Barret', \"O'Brien\",\r\n        'Reynolds', 'Tam', \r\n        'Scully', 'Mulder','Skinner', \r\n        'Connor', \r\n        'Rex',\r\n        'Thrace', 'Baltar', 'Smith','Adama', 'Roslin', 'Tigh', 'Song', 'Oswald', \r\n        'Deckard', 'Bryant', 'Tyrell', 'Sebastian', 'Voight', 'Kampff',\r\n        'Tyler', 'Harkness', 'Jones', 'Noble', 'Pond', 'Williams',\r\n        'Rimmer', 'Lister', \r\n        'Head', 'Carter', 'Lynch', 'McKenzie', 'Grossberg',\r\n        \"O'Neil\", 'Jackson', 'Carter',\r\n        'Whitmore',\r\n        'House', 'Mitchell', 'Eden', 'Lyons', 'Valentine', 'Garvey'\r\n         ]);\r\n    newBean.community = RandomCommunity();\r\n    newBean.ideals = RandomIdeal();\r\n    newBean.faith = RandomFaith();\r\n    const beanBeliefCount = Math.ceil(Math.random() * MaxNumBeanTraitsOnGenerate);\r\n    while (newBean.beliefs.length < beanBeliefCount) {\r\n        const newBelief = GetRandom(RandomBeliefBucket);\r\n        const hasAlready = newBean.beliefs.includes(newBelief);\r\n        if (!hasAlready)\r\n            newBean.beliefs.push(newBelief);\r\n    }\r\n    \r\n    if (job == null){\r\n        switch (city.beanSeed){\r\n            case 1:\r\n                job = 'farmer'; break;\r\n            case 2:\r\n                job = 'builder'; break;\r\n            case 3:\r\n                job = 'doc'; break;\r\n            default:\r\n                job = GetRandom(['farmer', 'builder', 'doc', 'entertainer']); break;\r\n        }\r\n    }\r\n    newBean.trySetJob(job);\r\n\r\n    newBean.cash = StartingCash(newBean.job);\r\n    newBean.discrete_food = 3;\r\n\r\n    newBean.point = hex_to_pixel(city.hex_size, city.petriOrigin, hexPoint || getStartingPoint(city));\r\n    \r\n    return newBean;\r\n}","import { TraitGood, TraitJob, GoodToJob, Trait } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { IOrganization, Charity, IEnterprise } from \"./Institutions\";\r\nimport { City } from \"./City\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IEvent, IEventBus, Live } from \"../events/Events\";\r\nimport { Government } from \"./Government\";\r\n\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    ticksSinceLastSale: number;\r\n}\r\nexport interface Listing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerEnterpriseKey?: number;\r\n    price: number;\r\n    seller: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'shelter', 'medicine', 'fun'];\r\n\r\nexport class Economy {\r\n    market = new OrderBook();\r\n    charity = new OrderBook();\r\n    unfulfilledMonthlyDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    monthlyDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    monthlySupply: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    law?: Government;\r\n    constructor(public eventBus: IEventBus){\r\n    }\r\n    public resetMonthlyDemand(){\r\n        this.unfulfilledMonthlyDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.monthlyDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.monthlySupply = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    }\r\n    tryTransact(\r\n        buyer: IEconomicAgent, \r\n        good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1\r\n        ): {bought: number, price: number, tax: number}|null {\r\n        this.monthlyDemand[good] += maxDemand;\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            //console.log('agent could not find '+good);\r\n            this.unfulfilledMonthlyDemand[good] += maxDemand;\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if ((listing.price * (1 + this.salesTaxPercentage)) <= buyer.cash * actualDemand){ \r\n            const receipt = this.market.transact(listing, good, actualDemand, buyer, this.salesTaxPercentage);\r\n            if (receipt.tax && this.law){\r\n                this.law.treasury.set(this.law.treasury.get+receipt.tax);\r\n            }\r\n            return receipt;\r\n        } else if (buyer instanceof Bean) {\r\n            if (this.law?.PurchaseQualifiesForWelfare(buyer, good) && this.law?.CanPayWelfare(listing.price)){\r\n                return this.market.governmentTransact(listing, good, actualDemand, this.law.treasury);\r\n            }\r\n            // console.log('bean couldnot afford '+good+\" @ $\"+listing?.price);\r\n            // const charityTicket = this.charity.getLowestPriceListing(good, minDemand);\r\n            // if (charityTicket && charityTicket.seller instanceof Charity) {\r\n            //     // console.log('bean got '+good+\" from charity\");\r\n            //     const actualDemand = Math.min(charityTicket.quantity, maxDemand);\r\n            //     buyer.partyLoyalty += PartyLoyaltyPerCharityUse;\r\n            //     charityTicket.seller.beansHelped++;\r\n            //     charityTicket.seller.inventory -= actualDemand;\r\n            //     return this.charity.transact(charityTicket, good, actualDemand, buyer);\r\n            // }\r\n        }\r\n        this.unfulfilledMonthlyDemand[good] += actualDemand;\r\n        return null;\r\n    }\r\n    canBuy(buyer: IEconomicAgent, good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1): 'yes'|'nosupply'|'pricedout'{\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            return 'nosupply';\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if (listing.price <= buyer.cash * actualDemand)\r\n            return 'yes';\r\n        if (buyer instanceof Bean && this.law?.PurchaseQualifiesForWelfare(buyer, good) && this.law?.CanPayWelfare(listing.price)){\r\n            return 'yes';\r\n        }\r\n        return 'pricedout';\r\n    }\r\n    steal(\r\n        good: TraitGood,\r\n        maxDemand: number = 1\r\n        ): number|null {\r\n        const listing = GetRandom(this.market.listings[good]);\r\n        if (listing == null){\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        this.market.subtractFromListing(listing, good, actualDemand);\r\n        \r\n        return actualDemand;\r\n    }\r\n    produceAndPrice(seller: Bean, good: TraitGood, quantity: number, price: number) {\r\n        this.monthlySupply[good] += quantity;\r\n        const existing = this.market.getBeansListings(seller.cityKey, seller.key, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewPersonalListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    employAndPrice(seller: IEnterprise, good: TraitGood, quantity: number, price: number) {\r\n        this.monthlySupply[good] += quantity;\r\n        const existing = this.market.getEnterpriseListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewEnterpriseListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    public mostInDemandJob(): TraitJob|null{\r\n        const goods: TraitGood[] = AllGoods;\r\n        const max = goods.reduce((last, good) => {\r\n            if (this.unfulfilledMonthlyDemand[good] > last.max){\r\n                last.max = this.unfulfilledMonthlyDemand[good];\r\n                last.job = GoodToJob(good);\r\n            }\r\n            return last;\r\n        }, {max: 0, job: null as TraitJob|null})\r\n\r\n        return max.job;\r\n    }\r\n    public onBeanDie(bean: Bean){\r\n        AllGoods.forEach((g) => {\r\n            const existing = this.market.getBeansListings(bean.cityKey, bean.key, g);\r\n            if (existing){\r\n                const lucky = bean.city?.getRandomCitizen();\r\n                if (lucky) {\r\n                    existing.sellerCityKey = lucky.cityKey;\r\n                    existing.sellerBeanKey = lucky.key;\r\n                    existing.seller = lucky;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public getFairGoodPrice(good: TraitGood){\r\n        const supply = this.monthlySupply[good] || 1;\r\n        const demand = this.monthlyDemand[good];\r\n        return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n    }\r\n    public getCostOfLiving(){\r\n        return this.getFairGoodPrice('food')+this.getFairGoodPrice('shelter')+this.getFairGoodPrice('medicine');\r\n    }\r\n    get salesTaxPercentage(): number{\r\n        return this.law?.salesTaxPercentage || 0;\r\n    }\r\n}\r\n\r\nexport class OrderBook{\r\n    public readonly listings: {[key in TraitGood]: Listing[]} = {\r\n        food: [] as Listing[],\r\n        shelter: [] as Listing[],\r\n        medicine: [] as Listing[],\r\n        fun: [] as Listing[],\r\n    };\r\n    public getLowestPriceListing(good: TraitGood, demand: number): Listing|null{\r\n        const fullListings =  this.listings[good].filter((l) => {\r\n            return l.quantity >= demand;\r\n        });\r\n        if (fullListings.length > 0){\r\n            let numberOfSamePriceListings = 1;\r\n            const lowPrice = fullListings[0].price;\r\n            for (let i = 1; i < fullListings.length; i++) {\r\n                const list = fullListings[i];\r\n                if (list.price > lowPrice)\r\n                    break;\r\n                numberOfSamePriceListings++;\r\n            }\r\n            const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n            if (i >= fullListings.length)\r\n                throw \"invalid index\";\r\n            return fullListings[i];\r\n        }\r\n        return null;\r\n    }\r\n    public getStakeListings(bKey: number, enterpriseKey: number|undefined, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == bKey || x.sellerEnterpriseKey == enterpriseKey);\r\n    }\r\n    public getBeansListings(cKey: number, bKey: number, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == bKey && x.sellerCityKey == cKey);\r\n    }\r\n    public getEnterpriseListings(b: IEnterprise, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerEnterpriseKey == b.key);\r\n    }\r\n    public transact(listing: Listing, good: TraitGood, demand: number, buyer: IEconomicAgent, salesTaxPercentage: number){    \r\n        this.subtractFromListing(listing, good, demand);\r\n        const listPrice = listing.price * demand;\r\n        const tax = listPrice * salesTaxPercentage;\r\n        const grossPrice = listPrice + tax;\r\n        buyer.cash -= grossPrice;\r\n        listing.seller.cash += listPrice;\r\n        listing.seller.ticksSinceLastSale = 0;\r\n        return {\r\n            bought: demand,\r\n            price: listPrice,\r\n            tax: tax\r\n        }\r\n    }\r\n    public governmentTransact(listing: Listing, good: TraitGood, demand: number, treasury: Live<number>){    \r\n        this.subtractFromListing(listing, good, demand);\r\n        const listPrice = listing.price * demand;\r\n        const grossPrice = listPrice;\r\n        treasury.set(treasury.get - grossPrice);\r\n        listing.seller.cash += listPrice;\r\n        listing.seller.ticksSinceLastSale = 0;\r\n        return {\r\n            bought: demand,\r\n            price: listPrice,\r\n            tax: 0\r\n        }\r\n    }\r\n    public subtractFromListing(listing: Listing, good: TraitGood, demand: number){     \r\n        listing.quantity -= demand;\r\n        if (listing.quantity <= 0){\r\n            this.listings[good].splice(0, 1);\r\n        }\r\n    }\r\n    public addNewPersonalListing(good: TraitGood, quantity: number, price: number, bean: Bean){\r\n        this.listings[good].push({\r\n            sellerCityKey: bean.cityKey,\r\n            sellerBeanKey: bean.key,\r\n            price: price,\r\n            seller: bean,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public addNewEnterpriseListing(good: TraitGood, quantity: number, price: number, enterprise: IEnterprise){\r\n        this.listings[good].push({\r\n            sellerEnterpriseKey: enterprise.key,\r\n            price: price,\r\n            seller: enterprise,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public sort(good: TraitGood){        \r\n        this.listings[good].sort((a, b) => a.price - b.price);\r\n    }\r\n}","import * as React from 'react';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Economy } from './simulation/Economy';\r\nimport { Policy, Party, BaseParty, ICityPartyHQ } from './simulation/Politics';\r\nimport { IInstitution, IOrganization, Charity } from './simulation/Institutions';\r\nimport { IEvent, EventBus, LiveList } from './events/Events';\r\nimport { Season, IDate, Hour } from './simulation/Time';\r\nimport { Government } from './simulation/Government';\r\nimport { Player, TechData } from './simulation/Player';\r\nimport { accelerate_towards, accelerator_coast, Geography, move_towards } from './simulation/Geography';\r\nimport { City, Pickup } from './simulation/City';\r\nimport { shuffle } from './simulation/Utils';\r\nimport { Act, IActListener, IChatData } from './simulation/Agent';\r\nimport { IDifficulty, PlayerResources } from './Game';\r\nimport { type } from 'os';\r\nimport { GetHedonReport, IsBeliefDivergent, SecondaryBeliefData, TraitBelief } from './simulation/Beliefs';\r\nimport { WorldSound } from './WorldSound';\r\nimport { GetMarketTraits, MarketTraitListing } from './simulation/MarketTraits';\r\n\r\nexport interface IBeanContainer{\r\n    /**\r\n     * all beans ever, including dead ones\r\n     */\r\n    historicalBeans: LiveList<Bean>;\r\n    /**\r\n     * current non-dead beans\r\n     */\r\n    beans: LiveList<Bean>;\r\n}\r\n\r\nexport interface IWorld{\r\n    cities: City[];\r\n    law: Government;\r\n    party: Party;\r\n\r\n    institutions: IInstitution[];\r\n    bus: EventBus;\r\n    date: IDate;\r\n    alien: Player;\r\n}\r\nconst PickupPhysics = {\r\n    Brake: { x: .94, y: .94},\r\n    AccelerateS: 60,\r\n    MaxSpeed: 9,\r\n    CollisionDistance: 10\r\n}\r\nexport const BeanPhysics = {\r\n    Brake: { x: .94, y: .94},\r\n    AccelerateS: 10,\r\n    MaxSpeed: 4,\r\n    CollisionDistance: 10\r\n}\r\nconst MaxHedonHistory = 5;\r\nconst PollTaxWeeklyAmount = 0.1;\r\nexport class World implements IWorld, IBeanContainer, IActListener{\r\n    public readonly bus = new EventBus();\r\n    public readonly economy: Economy = new Economy(this.bus);\r\n    public cities: City[] = [];\r\n    public law: Government = new Government();\r\n    public institutions: IInstitution[] = [];\r\n    public marketTraitsForSale: LiveList<MarketTraitListing> = new LiveList<MarketTraitListing>([]);\r\n    public party: Party = new BaseParty();\r\n    public date: IDate = {year: 1, season: Season.Spring, day: 1, hour: 1};\r\n\r\n    public alien: Player = new Player();\r\n    public sfx = new WorldSound();\r\n\r\n    public get beans(): LiveList<Bean>{\r\n        return new LiveList(this.cities.reduce((list, c) => {\r\n            return list.concat(c.beans.get);\r\n        }, [] as Bean[]));\r\n    }\r\n    public get historicalBeans(): LiveList<Bean>{\r\n        return new LiveList(this.cities.reduce((list, c) => {\r\n            return list.concat(c.historicalBeans.get);\r\n        }, [] as Bean[]));\r\n    }\r\n    public get organizations(): IOrganization[]{\r\n        return this.institutions.reduce((list, institute) => {\r\n            return list.concat(institute.organizations);\r\n        }, [] as IOrganization[]);\r\n    }\r\n\r\n    constructor(){\r\n        this.bus.death.subscribe(this.onBeanDie);\r\n        this.economy.law = this.law;\r\n        this.marketTraitsForSale.set(GetMarketTraits());\r\n    }\r\n\r\n    /**\r\n     * update 'pushed' state\r\n     */\r\n    public calculateComputedState(){\r\n        this.cities.forEach(c => {\r\n            c.calculate(this.economy, this.law);\r\n            c.beans.get.forEach(b => b.calculateBeliefs(this.economy, c, this.law, this.party));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * simulates a season passing, setting a lot of state\r\n     */\r\n    public simulate_world(){\r\n        this.date.hour++\r\n        if (this.date.hour > Hour.Evening){\r\n            this.date.hour = 0;\r\n            this.date.day++;\r\n            this.simulate_every_day();\r\n            if (this.date.day % 7 === 0){\r\n                this.simulate_every_week();\r\n            }\r\n        }\r\n        if (this.date.day > 30){\r\n            this.date.day = 1;\r\n            this.simulate_every_month()\r\n            this.date.season++;\r\n        }\r\n        if (this.date.season > 3){\r\n            this.date.year++;\r\n            this.simulate_every_year();\r\n            this.date.season = 0;\r\n        }\r\n\r\n        this.alien.bots.amount += this.alien.bots.income;\r\n        this.alien.energy.amount += this.alien.energy.income;\r\n        if (this.alien.hasResearched('fast_resources')){\r\n            this.alien.bots.amount += this.alien.bots.income*0.5;\r\n            this.alien.energy.amount += this.alien.energy.income*0.5;\r\n        }\r\n        if (this.alien.currentlyResearchingTech){\r\n            const tech = this.alien.currentlyResearchingTech;\r\n            if(this.alien.techProgress[tech] == null){\r\n                this.alien.techProgress[tech] = {\r\n                    researchPoints: 0\r\n                }\r\n            }\r\n            const max = TechData[tech].techPoints;\r\n            const current = this.alien.techProgress[tech].researchPoints;\r\n            if (current < max)\r\n                this.alien.techProgress[tech].researchPoints += this.alien.abductedBeans.length;\r\n            if (current >= max)\r\n                this.alien.currentlyResearchingTech = undefined;\r\n        }\r\n        \r\n\r\n        this.organizations.forEach((org) => org.work(this.law, this.economy));\r\n        \r\n        this.beans.get.forEach((b: Bean, i: number) => {\r\n            b.age(this.economy, this.alien.difficulty);\r\n            const e = b.maybeBaby(this.economy);\r\n            if (e) {\r\n                this.publishEvent(e);\r\n                this.sfx.play('squeak');\r\n            }\r\n            if (b.job === 'jobless')\r\n                b.tryFindRandomJob(this.law);\r\n            \r\n            b.happiness = GetHedonReport(b.hedonHistory);\r\n        });\r\n        this.cities.forEach((c) => c.getTaxesAndDonations(this.party, this.economy));\r\n        this.calculateComputedState();\r\n        this.alien.checkGoals(this);\r\n        this.alien.checkReportCard(this);\r\n    }\r\n    simulate_every_year(){\r\n        this.inflate();\r\n        this.resetYearlyCounters();\r\n    }\r\n    simulate_every_month(){\r\n        this.economy.resetMonthlyDemand();\r\n\r\n    }\r\n    simulate_every_week(){\r\n        this.marketTraitsForSale.set(GetMarketTraits());\r\n        this.publishEvent({message: 'New traits in the Emotion Market!', icon: '🛍️', trigger: 'marketrefresh'});\r\n        if (this.law.isLaw('poll_tax')){\r\n            let collected = 0;\r\n            this.cities.forEach((x) => {\r\n                x.beans.get.forEach((y) => {\r\n                    if (y.cash >= PollTaxWeeklyAmount){\r\n                        y.cash -= PollTaxWeeklyAmount;\r\n                        collected += PollTaxWeeklyAmount;\r\n                    }\r\n                });\r\n            });\r\n            this.law.treasury.set(this.law.treasury.get + collected);\r\n        }\r\n    }\r\n    simulate_every_day(){\r\n        this.beans.get.forEach((x) => {\r\n            if (x.hedonHistory.length >= MaxHedonHistory) {\r\n                x.hedonHistory.pop();\r\n            }\r\n            x.hedonHistory.unshift({});\r\n        });\r\n    }\r\n    simulate_beans(deltaMS: number){\r\n        this.beans.get.forEach((b) => {\r\n            Act(b, deltaMS, this.alien.difficulty, this);\r\n        });\r\n    }\r\n    simulate_pickups(deltaMS: number){\r\n        const city = this.cities[0];\r\n        const pickups = city.pickups.get;\r\n        //go backwards because we'll modify the array as we go\r\n        for(let i = pickups.length - 1; i >= 0; i--) {\r\n            const pickup = pickups[i];\r\n            let collide = false;\r\n            const magnet = city.pickupMagnetPoint.get;\r\n            if (magnet){\r\n                collide = accelerate_towards(\r\n                    pickup, \r\n                    magnet, \r\n                    PickupPhysics.AccelerateS * deltaMS/1000, \r\n                    PickupPhysics.MaxSpeed, \r\n                    PickupPhysics.CollisionDistance,\r\n                    PickupPhysics.Brake);\r\n            } else {\r\n                accelerator_coast(pickup, PickupPhysics.Brake);\r\n            }\r\n            if (collide){\r\n                const amt = EmotionWorth[pickup.type];\r\n                this.alien.hedons.amount += amt;\r\n                this.alien.hedons.change.publish({change: amt});\r\n                city.pickups.remove(pickup);\r\n                this.sfx.play(pickup.type);\r\n            } else {\r\n                pickup.onMove.publish(pickup.point);\r\n            }\r\n        }\r\n    }\r\n    onChat = (b: Bean, chat: IChatData) => {\r\n        if (this.party && chat.preachBelief){\r\n            if (IsBeliefDivergent(chat.preachBelief, this.party.ideals, this.party.community)){\r\n                this.publishEvent({\r\n                    icon: '🚨', trigger: 'speechcrime',\r\n                    message: `Speechcrime! ${b.name} is talking about ${SecondaryBeliefData[chat.preachBelief].noun}`,\r\n                    beanKey: b.key\r\n                });\r\n                if (this.alien.speechcrimes[this.date.year] == null)\r\n                    this.alien.speechcrimes[this.date.year] = 1;\r\n                else\r\n                    this.alien.speechcrimes[this.date.year]++;\r\n            }\r\n        }\r\n    }\r\n    onBeanDie = (e: IEvent) => {\r\n        const city = this.cities.find((x) => x.key === e.cityKey);\r\n        if (city){\r\n            const bean = city.historicalBeans.get.find((x) => x.key === e.beanKey);\r\n            if (bean){\r\n                city.onCitizenDie(bean);\r\n                this.economy.onBeanDie(bean);\r\n            }\r\n        }\r\n    }\r\n    onEmote = (b: Bean, emote: TraitEmote) => {\r\n    }\r\n    publishEvent(e: IEvent){\r\n        this.bus[e.trigger].publish(e);\r\n    }\r\n    inflate() {\r\n        const allMoney = this.beans.get.reduce((sum, b) => sum+b.cash, 0) + this.organizations.reduce((sum, o) => sum + o.cash, 0);\r\n        const percent = allMoney / 100;\r\n        const yearlyInflationDollars = Math.round(percent * 1);\r\n        if (yearlyInflationDollars > 0){\r\n            const richest = this.beans.get.reduce((obj: {winner?: Bean, max: number}, b) => {\r\n                if (b.cash > obj.max){\r\n                    obj.winner = b;\r\n                    obj.max = b.cash;\r\n                }\r\n                return obj;\r\n            }, {max: 0});\r\n            if (richest.winner){\r\n                richest.winner.cash += yearlyInflationDollars;\r\n            }\r\n        }\r\n    }\r\n    resetYearlyCounters() {\r\n        this.cities.forEach((c) => {\r\n            c.yearsPartyDonations = 0;\r\n        })\r\n    }\r\n    addCharity(good: TraitGood, name: string, budget: number) {\r\n        const charity = new Charity();\r\n        charity.name = name;\r\n        charity.good = good;\r\n        charity.seasonalBudget = budget;\r\n        this.party.organizations.push(charity);\r\n    }\r\n}\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface Tile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'rocket'|'music'|'dragon'|'noFaith';\r\nexport type TraitFood = 'starving'|'hungry'|'sated'|'stuffed';\r\nexport type TraitStamina = 'homeless'|'sleepy'|'awake'|'rested';\r\nexport type TraitHealth = 'sick'|'sickly'|'bruised'|'fresh';\r\nexport type TraitSanity = 'psychotic'|'disturbed'|'stressed'|'sane';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitStamina|TraitHealth|TraitSanity;\r\n\r\nexport const TraitIcon: {[key in Trait]: string} = {\r\n    'state': '🕊️', 'ego': '🦅',\r\n    'prog': '⚖️', 'trad': '👑',\r\n    'circle': '🤎', 'square': '💛', 'triangle': '🧡',\r\n    'rocket': '🚀', 'music': '🎵', 'dragon': '🐲',\r\n    'noFaith': '⚫️',\r\n    'starving': '🍴', 'hungry': '🍽️', 'sated': '🥜', 'stuffed': '🥩',\r\n    'homeless': '🌨️', 'sleepy': '🌙', 'awake': '☀️', 'rested': '🌞',\r\n    'sick': '🤢', 'sickly': '😷', 'bruised': '🩹', 'fresh': '💪',\r\n    'psychotic': '🤪', 'disturbed': '🤤', 'stressed':'', 'sane': '🧠',\r\n}\r\nexport enum MaslowHappinessScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport const TraitToModifier: {[key in TraitFood|TraitStamina|TraitHealth]: IHappinessModifier} = {\r\n    'homeless': {reason: 'Homeless', mod: MaslowHappinessScore.Deficient},\r\n    'sleepy': {reason: 'Renting', mod: MaslowHappinessScore.Sufficient},\r\n    'awake': {reason: 'Homeowner', mod: MaslowHappinessScore.Sufficient},\r\n    'rested': {reason: 'Homeowner', mod: MaslowHappinessScore.Abundant},\r\n    'sick': {reason: 'Sick', mod: MaslowHappinessScore.Deficient},\r\n    'sickly': {reason: 'Sick', mod: MaslowHappinessScore.Sufficient},\r\n    'bruised': {reason: 'Bruised', mod: MaslowHappinessScore.Sufficient},\r\n    'fresh': {reason: 'Healthy', mod: MaslowHappinessScore.Abundant},\r\n    'starving': {reason: 'Hungry', mod: MaslowHappinessScore.Deficient},\r\n    'hungry': {reason: 'Hungry', mod: MaslowHappinessScore.Sufficient},\r\n    'sated': {reason: 'Sated', mod: MaslowHappinessScore.Sufficient},\r\n    'stuffed': {reason: 'Stuffed', mod: MaslowHappinessScore.Abundant},\r\n}\r\nexport interface IThreshold {warning: number, sufficient: number, abundant: number}\r\nexport const GoodToThreshold: {[key in TraitGood]: IThreshold} = {\r\n    'food': {warning: 0.5, sufficient: 1, abundant: 3},\r\n    'shelter': {warning: 0.5, sufficient: 1, abundant: 7},\r\n    'medicine': {warning: 0.5, sufficient: 1, abundant: 3},\r\n    'fun': {warning: 0.1, sufficient: 1, abundant: 3},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'builder': return 'shelter';\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'shelter': return 'builder';\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'shelter'|'medicine'|'fun';\r\nexport const GoodIcon: {[key in TraitGood]: string} ={\r\n    'food': '🥪',\r\n    'shelter': '🏠', \r\n    'medicine': '💊', \r\n    'fun': '👏'\r\n};\r\n\r\nexport type TraitEmote = 'happiness'|'unhappiness'|'love'|'hate';\r\nexport const EmoteIcon: {[key in TraitEmote]: string} ={\r\n    'love': '💛',\r\n    'happiness': '👍',\r\n    'unhappiness': '💢',\r\n    'hate': '💔'\r\n};\r\nexport const EmotionWorth: {[key in TraitEmote]: number} ={\r\n    'love': 5,\r\n    'happiness': 1,\r\n    'unhappiness': -1,\r\n    'hate': -5\r\n};\r\nexport const EmotionSanity: {[key in TraitEmote]: number} ={\r\n    'love': 1,\r\n    'happiness': 0.2,\r\n    'unhappiness': 0,\r\n    'hate': -1\r\n};","import { Trait, TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { IInstitution, IOrganization } from \"./Institutions\";\r\nimport { Government, LawAxis } from \"./Government\";\r\n\r\n\r\nexport interface Party extends IInstitution{\r\n    slogan: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    \r\n    availablePolicies: Policy[]; \r\n    proposedPolicy?: Policy;\r\n    availableCampaigns: Campaign[];\r\n    activeCampaigns: Campaign[];\r\n\r\n    platform: {[key in LawAxis]: IPolicy};\r\n\r\n    leadership: number;\r\n}\r\n\r\nexport class BaseParty implements Party{\r\n    key = 1;\r\n    playerKey = 1;\r\n    organizations: IOrganization[] = [];\r\n    public name: string = \"Citizen's Party\";\r\n    public slogan: string = \"Vote for us!\";\r\n    public community: TraitCommunity = 'state';\r\n    public ideals: TraitIdeals = 'trad';\r\n    public availablePolicies: Policy[] = [];\r\n    public proposedPolicy?: Policy;\r\n    public availableCampaigns: Campaign[] = [];\r\n    public activeCampaigns: Campaign[] = [];\r\n    public leadership: number = 10;\r\n    public activeHQs: number[] = [];\r\n    public platform: {[key in LawAxis]: IPolicy} = {} as {[key in LawAxis]: IPolicy};\r\n\r\n    constructor(){\r\n    }\r\n    // differingPolicies(law: Government): IPolicy[]{\r\n    //     return Object.keys(this.platform).filter((key: string) => {\r\n    //         const ax = key as LawAxis;\r\n    //         return this.platform[ax] != law.laws[ax];\r\n    //     }).map((key) => this.platform[key as LawAxis]);\r\n    // }\r\n}\r\n\r\nexport interface ICityPartyHQ{\r\n    cityKey: number;\r\n}\r\nexport class CityPartyHQ implements ICityPartyHQ{\r\n    cityKey: number = 0;\r\n}\r\n\r\nexport interface PoliticalEffect {\r\n    key: Trait;\r\n    /**\r\n     * magnitude (-3 to +3)\r\n     */\r\n    mag: number;\r\n}\r\nexport interface Policy {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    axis?: LawAxis;\r\n}\r\nexport interface Campaign {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    cityKey?: number;\r\n\r\n    seasonalCost: number;\r\n}\r\nexport interface IPolicy{\r\n    key: string, \r\n    name: string, \r\n    community?: TraitCommunity, \r\n    ideals?: TraitIdeals, \r\n    axis: LawAxis,\r\n    hint?: string\r\n}","import { Live } from \"../events/Events\";\r\nimport { TraitCommunity, TraitGood, TraitIdeals } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { IPolicy } from \"./Politics\";\r\n\r\nexport type LawGroup = 'Taxation'|'Welfare'|'Economics'|'Crime'|'Culture';\r\nexport type LawAxis = 'wel_food'|'wel_house'|'wel_health'|'tax_basic'|'tax_second'|'econ_sub'|'cul_rel'|'cul_theo'|'crime_theo';\r\n\r\nexport type LawType = 'civil'|'criminal';\r\n\r\nexport type LawKey = 'food_aid'\r\n|'medical_aid'\r\n|'poll_tax'\r\n// |'wealth_tax'\r\n// |'food_bank'\r\n// |'univ_rations'\r\n// |'housing_subsidy'\r\n// |'state_apartments'\r\n// |'clinics'\r\n// |'grain_sub'\r\n// |'arts'\r\n// |'theocracy'\r\n// |'secularism'\r\n// |'atheism'\r\n// |'mythology'\r\n// |'futurism'\r\n// |'drama'\r\n|'sales_tax'\r\n// |'vice_tax'\r\n// |'prop_tax'\r\n|'death_tax';\r\n\r\nexport type LawPrereq = TraitBelief|TraitBelief[];\r\n\r\nexport function PlayerCanSeePrereqs(prereqs: LawPrereq[], seen: Map<string, boolean>){\r\n    return prereqs.length === 0 || prereqs.some((x) => PlayerKnowsPrereq(x, seen));\r\n}\r\nexport function PlayerMeetsPrereqs(prereqs: LawPrereq[], seen: Map<string, boolean>){\r\n    return prereqs.length === 0 || prereqs.every((x) => PlayerKnowsPrereq(x, seen));\r\n}\r\nexport function PlayerKnowsPrereq(prereq: LawPrereq, seen: Map<string, boolean>){\r\n    return Array.isArray(prereq) ? prereq.some((x) => PlayerKnowsBelief(x, seen)) : PlayerKnowsBelief(prereq, seen);\r\n}\r\nexport function PlayerKnowsBelief(prereq: TraitBelief, seen: Map<string, boolean>){\r\n    return seen.has(prereq);\r\n}\r\nexport function PrereqKey(prereq: LawPrereq){\r\n    return Array.isArray(prereq) ? prereq.join('/') : prereq;\r\n}\r\nexport function PrereqString(prereq: LawPrereq){\r\n    return Array.isArray(prereq) ? prereq.map(x => BeliefString(x)).join(' / ') : BeliefString(prereq);\r\n}\r\nexport function BeliefString(prereq: TraitBelief){\r\n    return SecondaryBeliefData[prereq].icon+' '+SecondaryBeliefData[prereq].noun;\r\n}\r\n\r\nexport type LawPunishment = 'fine'|'imprison'|'death';\r\n\r\nexport interface ILaw{\r\n    /**\r\n     * convenience grouping property\r\n     */\r\n    group: LawGroup;\r\n    /**\r\n     * \"slot\" for law\r\n     */\r\n    axis: LawAxis;\r\n    /**\r\n     * specific law selected\r\n     */\r\n    key: LawKey;\r\n}\r\nexport interface IGovernment{\r\n    laws: ILaw[];\r\n    lawTree: {[key in LawAxis]: ILaw};\r\n}\r\nexport interface ILawData extends ILaw{\r\n    prereqs: LawPrereq[];\r\n    name: string;\r\n    hint?: string;\r\n    description?: string;\r\n    icon?: string;\r\n}\r\nexport const LawAxisData: {[key in LawAxis]: {name: string}} = {\r\n    'wel_food': {name: 'Food Welfare'},\r\n    'wel_house': {name: 'Housing Welfare'},\r\n    'wel_health': {name: 'Healthcare'},\r\n    'tax_basic': {name: 'Taxation'},\r\n    'tax_second': {name: 'Advanced Taxation'},\r\n    'econ_sub': {name: 'Subsidies'},\r\n    'cul_rel': {name: 'Culture'},\r\n    'cul_theo': {name: 'State Narrative'},\r\n    crime_theo: {name: 'Persecution'}\r\n}\r\nexport const LawData: {[key in LawKey]: ILawData} = {\r\n    'food_aid':{\r\n        key: 'food_aid', group: 'Welfare', name: 'Food Aid', axis: 'wel_food', icon: '👨‍🌾',\r\n        description: 'The government buys Hungry Subjects food.', prereqs: [['Gluttony','Parochialism'], ['Charity', 'Socialism']]},\r\n    'medical_aid':{\r\n        key: 'medical_aid', group: 'Welfare', name: 'Med Aid', axis: 'wel_health', icon: '👩‍⚕️',\r\n        description: 'The government buys Sick Subjects medicine.', prereqs: ['Charity', 'Cosmopolitanism']},\r\n    // 'food_bank':{\r\n    //     key: 'food_bank', group: 'Welfare', name: 'Food Bank', axis: 'wel_food',\r\n    //     description: 'Hungry Subjects are provided food purchased by the government.'\r\n    // },\r\n    // 'food_stamps':{\r\n    //     key: 'food_stamps', group: 'Welfare', name: 'Food Stamps', axis: 'wel_food',\r\n    //     description: 'Hungry Subjects are provided money by the government to purchase food.'},\r\n    // 'univ_rations':{\r\n    //     key: 'univ_rations', group: 'Welfare', name: 'Universal Rations', axis: 'wel_food',\r\n    //     description: 'All Subjects are provided small amounts of food from the government.'},\r\n    // 'outside':{\r\n    //     key: 'outside', group: 'Welfare', name: 'Sleep Outside', axis: 'wel_house',\r\n    //     description: 'Homeless Subjects must sleep in the cold.'},\r\n    // 'homeless_shelters':{\r\n    //     key: 'homeless_shelters', group: 'Welfare', name: 'Homeless Shelters', axis: 'wel_house',\r\n    //     description: 'Homeless Subjects are provided shelter purchased by the government.'},\r\n    // 'housing_subsidy':{\r\n    //     key: 'housing_subsidy', group: 'Welfare', name: 'Housing Subsidy', axis: 'wel_house',\r\n    //     description: 'Homeless Subjects are provided money by the government to purchase shelter.'},\r\n    // 'state_apartments':{\r\n    //     key: 'state_apartments', group: 'Welfare', name: 'State Apartments', axis: 'wel_house'},\r\n    // 'stay_healthy':{\r\n    //     key: 'stay_healthy', group: 'Welfare', name: 'Stay Healthy', axis: 'wel_health',\r\n    //     description: 'Sick Subjects must pay for their own medical care.'},\r\n    // 'clinics':{\r\n    //     key: 'clinics', group: 'Welfare', name: 'Charity Clinics', axis: 'wel_health',\r\n    //     description: 'Sick Subjects are provided medicine purchased by the government.'},\r\n    // 'medical_aid':{\r\n    //     key: 'medical_aid', group: 'Welfare', name: 'Medical Aid', axis: 'wel_health',\r\n    //     description: 'Sick Subjects are provided money by the government to pay for medical care.'},\r\n    // 'univ_health':{\r\n    //     key: 'univ_health', group: 'Welfare', name: 'Universal Healthcare', axis: 'wel_health',\r\n    //     description: 'All Subjects are provided medical care by the government.'},\r\n    // 'hands_off':{\r\n    //     key: 'hands_off', group: 'Economics', name: 'Laissez-faire', axis: 'econ_sub',\r\n    //     description: 'No industries receive subsidies.'},\r\n    // 'grain_sub':{\r\n    //     key: 'grain_sub', group: 'Economics', name: 'Grain Subsidy', axis: 'econ_sub',\r\n    //     description: 'Farmers are provided money.'},\r\n    // 'arts':{\r\n    //     key: 'arts', group: 'Economics', name: 'Arts Patronage', axis: 'econ_sub'},\r\n    // 'theocracy':{\r\n    //     key: 'theocracy', group: 'Crime', name: 'Illegal Narratives', axis: 'crime_theo',\r\n    //     description: \"It is illegal for subjects to speak about other universal narratives.\"},\r\n    // 'secularism':{\r\n    //     key: 'secularism', group: 'Culture', name: 'Secularism', axis: 'cul_theo',\r\n    //     description: \"The government does not endorse a particular universal narrative.\"},\r\n    // 'atheism':{\r\n    //     key: 'atheism', group: 'Culture', name: 'State Nihilism', axis: 'cul_theo'},\r\n    // 'mythology':{\r\n    //     key: 'mythology', group: 'Culture', name: 'State Mythology 🐲', axis: 'cul_theo'},\r\n    // 'futurism':{\r\n    //     key: 'futurism', group: 'Culture', name: 'State Futurism 🚀', axis: 'cul_theo'},\r\n    // 'drama':{\r\n    //     key: 'drama', group: 'Culture', name: 'State Drama 🎵', axis: 'cul_theo'},\r\n    // '':{key: // , group: '', name: 'Religious Schooling', 'state', idealPro: [ 'trad', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'University Grants', 'ego', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'College For All', 'state', idealPro: [ 'prog', axis: 'cul_ed'},\r\n    'poll_tax':{\r\n        key: 'poll_tax', group: 'Taxation', name: 'Head Tax', axis: 'tax_basic', prereqs: [], icon: '👑',\r\n        description: 'Subjects must pay a flat tax.'},\r\n    'sales_tax':{\r\n        key: 'sales_tax', group: 'Taxation', name: 'Sales Tax', axis: 'tax_basic', prereqs: [], icon: '💸',\r\n        description: 'Subjects must pay a percentage tax for every transaction.'},\r\n    // 'wealth_tax':{\r\n    //     key: 'wealth_tax', group: 'Taxation', name: 'Wealth Tax', axis: 'tax_basic',\r\n    //     description: 'Rich subjects must pay a percentage tax on their excess cash.'},\r\n    // 'vice_tax':{\r\n    //     key: 'vice_tax', group: 'Taxation', name: 'Vice Tax', axis: 'tax_second',\r\n    //     description: 'Entertainment goods have a flat tax.'},\r\n    // 'prop_tax':{\r\n    //     key: 'prop_tax', group: 'Taxation', name: 'Property Tax', axis: 'tax_second',\r\n    //     description: 'Subjects must pay a tax on housing.'},\r\n    'death_tax':{\r\n        key: 'death_tax', group: 'Taxation', name: 'Death Tax', axis: 'tax_second', prereqs: [], icon: '☠️',\r\n        description: 'Dead subjects pay a portion of their cash to the government.'},\r\n}\r\n\r\nexport type LawGroupToLaws = {\r\n    [key in LawGroup]: ILaw[]\r\n};\r\nconst SalesTaxPercentage = 0.05;\r\nexport class Government{\r\n    public get laws(): ILaw[] {\r\n        return Object.values(this.lawTree).flatMap(law => law ? [law] : []);\r\n    }\r\n    public set laws(val: ILaw[]) {\r\n        val.forEach((v) => {\r\n            this.lawTree[v.axis] = v;\r\n        });\r\n    }\r\n    public getLawsByGroup(): LawGroupToLaws {\r\n        return this.laws.reduce((d, x) => {\r\n            d[x.group].push(x);\r\n            return d;\r\n        }, {\r\n            Taxation: [] as ILaw[],\r\n            Welfare: [] as ILaw[],\r\n            Economics: [] as ILaw[],\r\n            Crime: [] as ILaw[],\r\n            Culture: [] as ILaw[]\r\n        });\r\n    }\r\n    public lawTree: {[key in LawAxis]: ILaw|undefined} = {} as {[key in LawAxis]: ILaw|undefined};\r\n    public treasury: Live<number> = new Live<number>(0);\r\n\r\n    isLaw(l: LawKey): boolean{\r\n        return this.lawTree[LawData[l].axis]?.key === l;\r\n    }\r\n\r\n    enact(l: LawKey): void {\r\n        const data = LawData[l];\r\n        this.lawTree[data.axis] = data;\r\n    }\r\n\r\n    revoke(l: LawKey): void {\r\n        const data = LawData[l];\r\n        this.lawTree[data.axis] = undefined;\r\n    }\r\n\r\n    get salesTaxPercentage(): number{\r\n        return this.isLaw('sales_tax') ? SalesTaxPercentage : 0;\r\n    }\r\n    \r\n    PurchaseQualifiesForWelfare(bean: Bean, good: TraitGood): boolean{\r\n        switch(good){\r\n            case 'food':\r\n                return (bean.food === 'starving' || bean.food === 'hungry') && this.isLaw('food_aid');\r\n            case 'medicine':\r\n                return (bean.health === 'sick' || bean.health === 'sickly') && this.isLaw('medical_aid');\r\n        }\r\n        return false;\r\n    }\r\n    CanPayWelfare(price: number): boolean{\r\n        return this.treasury.get >= price;\r\n    }\r\n}","import { BeliefCommonality } from \"./simulation/Beliefs\";\r\nimport { BuildingTypes } from \"./simulation/Geography\";\r\nimport { RubricKeys } from \"./simulation/Player\";\r\nimport { IThreshold, TraitGood } from \"./World\";\r\n\r\nexport type PlayerEmptyHexAction = 'build';\r\nexport type PlayerHexAction = 'beam'|'upgrade';\r\nexport type PlayerBeanAction = 'scan'|'abduct'|'vaporize'|'siphon'|'empower'|'gift';\r\nexport type PlayerBeanBrainAction = 'brainwash_ideal'|'brainimplant_secondary'|'brainwash_secondary';\r\nexport type PlayerMarketAction = 'energy'|'bots';\r\nexport type PlayerGovernmentAction = '';\r\nexport type PlayerAction = PlayerHexAction|PlayerBeanAction;\r\n\r\nexport interface PlayerResources{\r\n    energy?: number;\r\n    bots?: number;\r\n    hedons?: number;\r\n    tortrons?: number;\r\n}\r\nexport interface BeanResources{\r\n    sanity?: number;\r\n}\r\nexport type BeanDeathCause = 'vaporization'|'exposure'|'starvation'|'sickness';\r\nexport function triadToString(cost: PlayerResources, sign: '+'|''|'-', qty: number = 1){\r\n    const costs = [];\r\n    if (cost.energy){\r\n        costs.push(sign+(cost.energy*qty)+' Energy');\r\n    }\r\n    if (cost.bots){\r\n        costs.push(sign+(cost.bots*qty)+' Bots');\r\n    }\r\n    if (cost.hedons){\r\n        costs.push(sign+(cost.hedons*qty)+' Hedons');\r\n    }\r\n    if (cost.tortrons){\r\n        costs.push(sign+(cost.tortrons*qty)+' Antihedons');\r\n    }\r\n    return costs.join(' ');\r\n}\r\nexport interface SecondaryResources{\r\n    research?: number;\r\n    leadership?: number;\r\n}\r\nexport interface IDifficulty{\r\n    cost: {\r\n        emptyHex: {[key in PlayerEmptyHexAction]: {[key in BuildingTypes]: PlayerResources}},\r\n        hex: {[key in PlayerHexAction]: PlayerResources} \r\n        bean: {[key in PlayerBeanAction]: PlayerResources},\r\n        bean_brain: {[key in PlayerBeanBrainAction]: BeanResources}\r\n        market: {\r\n            scrubHedons: PlayerResources,\r\n            resource: {[key in PlayerMarketAction]: PlayerResources},\r\n            beliefs: {[key in BeliefCommonality]: PlayerResources}\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {[key in TraitGood]: IThreshold},\r\n        degrade_per_tick: {\r\n            food: number,\r\n            health: number,\r\n            stamina: number,\r\n            fun: number\r\n        },\r\n        penalty: {\r\n            homeless_health: number,\r\n            starving_health: number\r\n        },\r\n        death_chance: {\r\n            [cause in BeanDeathCause]: number\r\n        }\r\n    },\r\n    report_card_progression: RubricKeys[]\r\n}\r\nexport const DefaultDifficulty: IDifficulty = {\r\n    cost: {\r\n        emptyHex: {\r\n            build: {\r\n                house: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                farm: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                theater: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                hospital: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                church: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                courthouse: {\r\n                    energy: 999,\r\n                    bots: 999\r\n                },\r\n                park: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                nature: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                }\r\n            }\r\n        },\r\n        hex: {\r\n            beam: {\r\n                energy: 3\r\n            },\r\n            upgrade: {\r\n                energy: 1,\r\n                bots: 4,\r\n            }\r\n        },\r\n        bean_brain: {\r\n            brainwash_ideal: { sanity: 4},\r\n            brainimplant_secondary: { sanity: 1},\r\n            brainwash_secondary: {sanity: 2},\r\n        },\r\n        bean: {\r\n            scan: {\r\n                energy: 1\r\n            },\r\n            abduct: {\r\n                bots: 3\r\n            },\r\n            gift: {},\r\n            empower: {},\r\n            vaporize: {\r\n                energy: 2,\r\n                bots: 4\r\n            },\r\n            siphon: {},\r\n        },\r\n        market: {\r\n            scrubHedons: {\r\n                energy: 5\r\n            },\r\n            resource: {\r\n                bots: {\r\n                    hedons: 6\r\n                },\r\n                energy: {\r\n                    hedons: 5\r\n                }\r\n            },\r\n            beliefs: {\r\n                common: {},\r\n                uncommon: {},\r\n                rare: {}\r\n            },\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {\r\n            'food': {warning: 0.6, sufficient: 1, abundant: 3},\r\n            'shelter': {warning: 0.6, sufficient: 1, abundant: 7},\r\n            'medicine': {warning: 0.6, sufficient: 1, abundant: 3},\r\n            'fun': {warning: 0.1, sufficient: 1, abundant: 3},\r\n        },\r\n        degrade_per_tick: {\r\n            food: 1/12,\r\n            health: 1/20,\r\n            stamina: 1/12,\r\n            fun: 1/6\r\n        },\r\n        penalty: {\r\n            homeless_health: 1/20,\r\n            starving_health: 1/24\r\n        },\r\n        death_chance: {\r\n            starvation: 1/8,\r\n            sickness: 1/8,\r\n            exposure: 1/8,\r\n            vaporization: 1\r\n        }\r\n    },\r\n    report_card_progression: []\r\n};","import { ChangePubSub, LiveList, LiveMap } from \"../events/Events\";\r\nimport { DefaultDifficulty, IDifficulty, PlayerResources } from \"../Game\";\r\nimport { World } from \"../World\";\r\nimport { Number_Starting_City_Pop } from \"../WorldGen\";\r\nimport { IBean } from \"./Agent\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\nimport { IDate } from \"./Time\";\r\n\r\n\r\nexport interface IPlayerData{\r\n    scanned_bean: {[beanKey: number]: boolean};\r\n    abductedBeans: IBean[];\r\n    energy: IResource;\r\n    bots: IResource;\r\n    workingReportCard: IReportCard;\r\n    techProgress: TechProgress;\r\n    currentlyResearchingTech: Tech|undefined;\r\n}\r\n\r\nexport interface IResource{\r\n    amount: number;\r\n    income: number;\r\n    change: ChangePubSub;\r\n}\r\n\r\nexport type GoalKey = 'found_utopia'|'build_house_n_farm'|'beam_3'|'scan'|'set_policy'|'brainwash'|'c+_grade';\r\nexport interface IGoal{\r\n    key: GoalKey;\r\n    text: string;\r\n    tooltip?: string;\r\n    reward?: PlayerResources,\r\n    check: (world: World) => boolean\r\n}\r\nexport interface IGoalProgress {\r\n    done: boolean,\r\n    step: number\r\n}\r\nexport interface IProgressable{\r\n    goalProgress: {[key: string]: IGoalProgress},\r\n    goals: Array<GoalKey>\r\n}\r\nexport const Goals: {[key in GoalKey]: IGoal} = {\r\n    found_utopia: {\r\n        key: 'found_utopia', text: 'Found your Utopia',\r\n       check: (world) => world.party.name != 'Goodplace'\r\n    },\r\n    build_house_n_farm: {\r\n        key: 'build_house_n_farm', text: 'Build a house and farm',\r\n        check: (world) => {\r\n            return world.cities[0].book.getCountOfType('house') > 0 &&\r\n            world.cities[0].book.getCountOfType('house') > 0;\r\n        },\r\n        reward: {\r\n            energy: 3, bots: 3\r\n        }\r\n    }, \r\n    beam_3: {\r\n        key: 'beam_3', text: 'Beam in 3 new beings', \r\n        check: (world) => {\r\n            return world.beans.get.filter(b => !b.bornInPetri).length >= (3 + Number_Starting_City_Pop)\r\n        }\r\n    }, \r\n    scan: {\r\n        key: 'scan', text: 'Scan a Subject',\r\n        check: (world) => Object.keys(world.alien.scanned_bean).length > 0\r\n    }, \r\n    set_policy: {\r\n        key: 'set_policy', text: 'Set a Gov Policy',\r\n        check: (world) => false\r\n    }, \r\n    brainwash: {\r\n        key: 'brainwash', text: 'Brainwash a Subject',\r\n        check: (world) => false\r\n    }, \r\n    'c+_grade': {\r\n        key: 'c+_grade', text: 'Receive a C+ Grade',\r\n        check: (world) => false\r\n    } \r\n};\r\n\r\nexport type Grade = 'F'|'D'|'C'|'B'|'A';\r\nexport type RubricKeys = 'Happiness'|'Prosperity'|'Stability'|'Dogma';\r\nexport type IReportCard = {[key in RubricKeys]: Grade}\r\nexport type GradingFunc = (world: World) => IReportCard;\r\nexport interface ICurriculum {\r\n    GradeWorld: GradingFunc,\r\n    RubricDescription: {[key in RubricKeys]: string} \r\n}\r\nexport const Curriculums: {[difficulty: string]: ICurriculum} = {\r\n    Default: {\r\n        GradeWorld: (world: World) => {return{\r\n            Happiness: BooleanAverageGrader(world.beans.get, (o) => o.lastHappiness >- .2),\r\n            Prosperity: BooleanAverageGrader(world.beans.get, (o) => o.food !== 'hungry'),\r\n            Stability: BooleanAverageGrader(world.beans.get, (o) => o.sanity === 'sane'),\r\n            Dogma: GradeUpToNumber((world.alien.speechcrimes[world.date.year] || 0), 10, 10),\r\n        }},\r\n        RubricDescription: {\r\n            Happiness: 'Subjects are at least 20% happy',\r\n            Prosperity: 'Subjects are not hungry',\r\n            Stability: 'Subjects are all sane',\r\n            Dogma: 'Up to 10 Speechcrimes'\r\n        }\r\n    }\r\n}\r\n/**\r\n * \r\n * @param number number of bad events\r\n * @param allowance number of allowed events\r\n * @param maximum range of \"overflow\" events\r\n */\r\nfunction GradeUpToNumber(number: number, allowance: number, maximum: number): Grade{\r\n    const normalized = 1 - Math.min(1, Math.max(0, number - allowance) / maximum);\r\n    return NormalizedScoreToGrade(normalized);\r\n}\r\nfunction BooleanAverageGrader<T>(array: T[], grade: (o: T) => boolean): Grade{\r\n    if (array.length < 1) return 'F';\r\n    return NormalizedScoreToGrade(array.filter(grade).length / array.length);\r\n}\r\nfunction NormalizedScoreToGrade(normNumber: number): Grade{\r\n    if (normNumber < .58) return 'F';\r\n    if (normNumber < .68) return 'D';\r\n    if (normNumber < .78) return 'C';\r\n    if (normNumber < .88) return 'B';\r\n    return 'A';\r\n}\r\nconst GradeWeights: {[key in Grade]: number} ={\r\n    A: 5,\r\n    B: 4,\r\n    C: 3,\r\n    D: 2,\r\n    F: 1\r\n}\r\nexport function GetAverage(reportCard: IReportCard): Grade{\r\n    return NormalizedScoreToGrade((GradeWeights[reportCard.Happiness] + \r\n        GradeWeights[reportCard.Prosperity] + \r\n        GradeWeights[reportCard.Stability] +\r\n        GradeWeights[reportCard.Dogma] \r\n    ) / 20);\r\n}\r\n\r\nexport type Tech = 'halve_sanity'|'fast_resources'|'trauma_nanobots'|'fast_leadership'|'neural_duplicator';\r\nexport interface ITechInfo{\r\n    tech: Tech,\r\n    /**\r\n     * number of tech points required to complete research\r\n     */\r\n    techPoints: number,\r\n    name: string,\r\n    description: string\r\n}\r\nexport const TechData: {[key in Tech]: ITechInfo} = {\r\n    'halve_sanity': {\r\n        tech: 'halve_sanity',\r\n        name: 'Surgical Psychops',\r\n        techPoints: 30,\r\n        description: 'Brainwashing causes -1 🧠 sanity damage'\r\n    },\r\n    'fast_resources': {\r\n        tech: 'fast_resources',\r\n        name: '0 Dimensional Supersiphons',\r\n        techPoints: 30,\r\n        description: 'Faster ⚡️ and 🤖 accumulation'\r\n    },\r\n    'trauma_nanobots': {\r\n        tech: 'trauma_nanobots',\r\n        name: 'Trauma Nanobots',\r\n        techPoints: 30,\r\n        description: 'Spend 🤖 to stop Subject from dying'\r\n    },\r\n    'fast_leadership': {\r\n        tech: 'fast_leadership',\r\n        name: 'Advanced Marketing',\r\n        techPoints: 30,\r\n        description: 'Faster 🗳️ Leadership accumulation'\r\n    },\r\n    'neural_duplicator': {\r\n        tech: 'neural_duplicator',\r\n        name: 'Level 2 Neural Duplication',\r\n        techPoints: 30,\r\n        description: 'Copy Traits 1 additional time'\r\n    }\r\n}\r\nexport interface IPlayerTechProgress{\r\n    /**\r\n     * number of research points\r\n     */\r\n    researchPoints: number\r\n}\r\nexport type TechProgress = {[key: string]: IPlayerTechProgress};\r\nexport interface BeliefInventory{\r\n    trait: TraitBelief,\r\n    charges: number\r\n}\r\n\r\nexport class Player implements IPlayerData, IProgressable{\r\n    public scanned_bean: {[beanKey: number]: boolean} = {};\r\n    public seenBeliefs = new LiveMap<string, boolean>(new Map<string, boolean>());\r\n    public beliefInventory = new LiveList<BeliefInventory>([]);\r\n    public speechcrimes: {[year: number]: number} = {};\r\n    public abductedBeans: IBean[] = [];\r\n    public energy = { amount: 16, income: 2/30, change: new ChangePubSub()};\r\n    public bots = { amount: 10, income: 2/30, change: new ChangePubSub()};\r\n    public hedons = { amount: 0, income: 0, change: new ChangePubSub()};\r\n    public tortrons = { amount: 0, income: 0, change: new ChangePubSub()};\r\n    public next_grade: IDate = { year: 1, season: 3, day: 1, hour: 0 };\r\n    public difficulty: IDifficulty = DefaultDifficulty;\r\n    public goals: GoalKey[] = ['found_utopia', 'build_house_n_farm',  'beam_3', 'scan', 'brainwash', 'set_policy', 'c+_grade'];\r\n    public goalProgress: {[key: string]: IGoalProgress} = {};\r\n    public pastReportCards: IReportCard[] = [];\r\n    public workingReportCard: IReportCard = {\r\n        Happiness: 'D',\r\n        Prosperity: 'D',\r\n        Stability: 'D',\r\n        Dogma: 'D',\r\n    };\r\n    public techProgress: TechProgress = {};\r\n    public currentlyResearchingTech: Tech|undefined;\r\n\r\n    public canAfford(cost: PlayerResources, qty: number = 1): boolean{\r\n        return (cost.bots === undefined || this.bots.amount >= cost.bots * qty) &&\r\n        (cost.energy === undefined || this.energy.amount >= cost.energy * qty) && \r\n        (cost.hedons === undefined || this.hedons.amount >= cost.hedons * qty);\r\n    }\r\n\r\n    public hasResearched(tech: Tech){\r\n        return this.techProgress[tech] != null && this.techProgress[tech].researchPoints >= TechData[tech].techPoints;\r\n    }\r\n\r\n    public useCharge(t: TraitBelief){\r\n        const all = this.beliefInventory.get;\r\n        const existing = all.find(x => x.trait === t);\r\n        if (existing){\r\n            existing.charges -= 1;\r\n            this.beliefInventory.set([...all.filter(x => x.charges > 0)]);\r\n        }\r\n    }\r\n\r\n    public purchase(cost: PlayerResources, qty: number = 1){\r\n        if (cost.bots){\r\n            this.bots.amount -= cost.bots * qty;\r\n            this.bots.change.publish({change: -cost.bots * qty});\r\n        }\r\n        if (cost.energy){\r\n            this.energy.amount -= cost.energy * qty;\r\n            this.energy.change.publish({change: -cost.energy * qty});\r\n        }\r\n        if (cost.hedons){\r\n            this.hedons.amount -= cost.hedons * qty;\r\n            this.hedons.change.publish({change: -cost.hedons * qty});\r\n        }\r\n    }\r\n\r\n    public tryPurchase(cost: PlayerResources, qty: number = 1): boolean{\r\n        if (this.canAfford(cost, qty)){\r\n            this.purchase(cost, qty);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public reward(reward: PlayerResources){\r\n        if (reward.bots){\r\n            this.bots.amount += reward.bots;\r\n            this.bots.change.publish({change: reward.bots});\r\n        }\r\n        if (reward.energy){\r\n            this.energy.amount += reward.energy;\r\n            this.energy.change.publish({change: reward.energy});\r\n        }\r\n        if (reward.hedons){\r\n            this.hedons.amount += reward.hedons;\r\n            this.hedons.change.publish({change: reward.hedons});\r\n        }\r\n\r\n    }\r\n\r\n    public checkGoals(world: World){\r\n        for (let i = 0; i < this.goals.length; i++) {\r\n            const goal = this.goals[i];\r\n            if (this.goalProgress[goal] == null){\r\n                this.goalProgress[goal] = {done: false, step: 0};\r\n            }\r\n            if (!this.goalProgress[goal].done) {\r\n                const done = Goals[goal].check(world);\r\n                const reward = Goals[goal].reward;\r\n                this.goalProgress[goal].done = done;\r\n                if (done && reward != null){\r\n                    this.reward(reward);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public checkReportCard(world: World) {\r\n        this.workingReportCard = Curriculums.Default.GradeWorld(world);\r\n    }\r\n}","export type SFXFile = 'drop.mp3'|'ding_soft.mp3'|'ding_bad.wav'|'death_bell.wav'|'scan.mp3'|'squish_pop.mp3'|'squish_suck.mp3'|'baby_squeak.wav';\r\nexport type SFX = 'drop'|'happiness'|'unhappiness'|'love'|'hate'|'death'|'scan'|'wash_in'|'wash_out'|'squeak';\r\n\r\nconst SFXToFile: {[sfx in SFX]: SFXFile} = {\r\n    drop: \"drop.mp3\",\r\n    love: \"ding_soft.mp3\",\r\n    happiness: \"ding_soft.mp3\",\r\n    unhappiness: \"ding_bad.wav\",\r\n    hate: \"ding_bad.wav\",\r\n    death: \"death_bell.wav\",\r\n    scan: 'scan.mp3',\r\n    wash_in: 'squish_pop.mp3',\r\n    wash_out: 'squish_suck.mp3',\r\n    squeak: 'baby_squeak.wav'\r\n};\r\n\r\ntype SFXMap = {[sfx in SFX]: SoundBuffer};\r\n\r\nclass SoundBuffer{\r\n    constructor(private file: SFXFile, private volume: number = 1){}\r\n\r\n    private buffer: HTMLAudioElement[] = [];\r\n    play(){\r\n        if (this.buffer.length > 0 && this.buffer[0].ended){\r\n            const audio = this.buffer.shift();\r\n            audio?.play();\r\n            if (audio)\r\n                this.buffer.push(audio);\r\n        } else {\r\n            const aud = new Audio(process.env.PUBLIC_URL+'/'+this.file);\r\n            aud.volume = this.volume;\r\n            aud.play();\r\n            this.buffer.push(aud);\r\n        }\r\n    }\r\n}\r\nexport class WorldSound{\r\n    private lib: SFXMap = {\r\n        'drop': new SoundBuffer(SFXToFile['drop'], 0.2),\r\n        'love': new SoundBuffer(SFXToFile['happiness']),\r\n        'happiness': new SoundBuffer(SFXToFile['happiness']),\r\n        'unhappiness': new SoundBuffer(SFXToFile['unhappiness']),\r\n        'hate': new SoundBuffer(SFXToFile['unhappiness']),\r\n        'death': new SoundBuffer(SFXToFile['death']),\r\n        'scan': new SoundBuffer(SFXToFile['scan'], 0.3),\r\n        'wash_in': new SoundBuffer(SFXToFile['wash_in']),\r\n        'wash_out': new SoundBuffer(SFXToFile['wash_out']),\r\n        'squeak': new SoundBuffer(SFXToFile['squeak'], 0.3),\r\n    }\r\n\r\n    public play(sfx: SFX){\r\n        this.lib[sfx].play();\r\n    }\r\n}","import { PlayerResources } from \"../Game\";\r\nimport { GetRandom, GetRandomNumber } from \"../WorldGen\";\r\nimport { BeliefCommonality, RandomBeliefBucket, SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\n\r\nexport interface MarketTraitListing {\r\n    cost: PlayerResources;\r\n    trait: TraitBelief;\r\n}\r\nexport const CommonalityBaseCost: {[b in BeliefCommonality]: number} = {\r\n    'common': 3,\r\n    'uncommon': 5,\r\n    'rare': 7\r\n};\r\nexport const CommonalityRandomMaxCost: {[b in BeliefCommonality]: number} = {\r\n    'common': 3,\r\n    'uncommon': 5,\r\n    'rare': 7\r\n};\r\n\r\nexport function GetMarketTraits(): MarketTraitListing[]{\r\n    const newTraits: MarketTraitListing[] = [];\r\n    for (let i = 0; i < 3; i++) {\r\n        const b = GetRandom(RandomBeliefBucket);\r\n        newTraits.push(getMarketTraitListing(b));\r\n    }\r\n    return newTraits;\r\n}\r\n\r\nfunction getMarketTraitListing(b: TraitBelief): MarketTraitListing{\r\n    const rare = SecondaryBeliefData[b].rarity;\r\n    return {\r\n        trait: b,\r\n        cost: {\r\n            hedons: CommonalityBaseCost[rare] + GetRandomNumber(0, CommonalityRandomMaxCost[rare])\r\n        }\r\n    }\r\n}","import { IBeanContainer, Tile, Trait, TraitEthno, TraitJob, TraitEmote } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { Economy } from \"./Economy\";\r\nimport { Government } from \"./Government\";\r\nimport { GenerateBean, GetRandom, GetRandomNumber } from \"../WorldGen\";\r\nimport { ICityPartyHQ, Party } from \"./Politics\";\r\nimport { Geography, HexPoint, IBuilding, JobToBuilding, Point, Vector } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { shuffle } from \"./Utils\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { IEventBus, Live, LiveList, PubSub } from \"../events/Events\";\r\nimport { WorldSound } from \"../WorldSound\";\r\nimport { isEnterprise } from \"./Institutions\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\n\r\n\r\nexport function reportIdeals(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: Bean[], defWin: Trait, beanPropGet: (bean: Bean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}\r\n\r\nexport class UFO{\r\n    constructor(public key: number, public point: HexPoint, public action: string){}\r\n}\r\nexport class Pickup{\r\n    constructor(public key: number, public point: Point, public type: TraitEmote){}\r\n    public velocity: Vector = {x: 0, y: 0};\r\n    public onMove = new PubSub<Point>();\r\n}\r\n\r\n\r\nexport class City extends Geography implements Tile, IBeanContainer {\r\n    public name: string = '';\r\n    public url: string = '';\r\n    public type: string = '';\r\n    public key: number = 0;\r\n    public beans = new LiveList<Bean>([]);\r\n    public historicalBeans = new LiveList<Bean>([]);\r\n    public readonly pickups = new LiveList<Pickup>([]);\r\n    public ufos: UFO[] = [];\r\n    public pickupSeed = 0;\r\n    public beanSeed = 0;\r\n    public houses: any[] = [];\r\n    public partyHQ?: ICityPartyHQ;\r\n    public yearsPartyDonations: number = 0;\r\n\r\n    /// computed properties\r\n    public majorityEthnicity: TraitEthno = 'circle';\r\n    public costOfLiving: number = 1;\r\n\r\n    constructor(private sfx: WorldSound, public readonly economy: Economy){\r\n        super();\r\n    }\r\n\r\n    public law?: Government;\r\n    public environment?: IDate;\r\n    public eventBus?: IEventBus;\r\n    public pickupMagnetPoint = new Live<Point|undefined>(undefined);\r\n\r\n    tryGetJob(bean: Bean, job: TraitJob): boolean{\r\n        if(job === 'jobless') return false;\r\n        const allOfType = this.book.getBuildings().filter((x) => x.type === JobToBuilding[job]);\r\n        \r\n        for (let i = 0; i < allOfType.length; i++) {\r\n            const building = allOfType[i];\r\n            const slots = building.openSlots();\r\n            if (slots.length > 0){\r\n                const slot = slots.shift() as BuildingJobSlot;\r\n                building.job_slots[slot] = bean.key;\r\n                bean.employerEnterpriseKey = building.key;\r\n                if (isEnterprise(building) && building.ownerBeanKey == null){\r\n                    building.ownerBeanKey = bean.key;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    unsetJob(bean: Bean){\r\n        if (bean.job === 'jobless') return;\r\n        const all = this.book.getBuildings();\r\n        for (let i = 0; i < all.length; i++) {\r\n            const building = all[i];\r\n            if (building.tryFreeBean(bean.key)){\r\n                bean.employerEnterpriseKey = undefined;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    addEmotePickup(p: Point, emote: TraitEmote){\r\n        const point = {...p};\r\n        point.x += GetRandomNumber(-10, 10);\r\n        point.y += GetRandomNumber(-10, 10);\r\n        const id = ++this.pickupSeed;\r\n        this.pickups.push(new Pickup(id, point, emote));\r\n    }\r\n\r\n    getRandomCitizen(): Bean|null{\r\n        const shuffled = shuffle(this.beans.get);\r\n        if (shuffled.length > 0) {\r\n            return shuffled[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    onCitizenDie(deadBean: Bean){\r\n        if (deadBean.cash > 0){\r\n            if (this.law && this.law.isLaw('death_tax')){\r\n                this.law.treasury.set(this.law.treasury.get + deadBean.cash);\r\n                deadBean.cash = 0;\r\n            } else {\r\n                //inheritance\r\n                const lucky = this.getRandomCitizen();\r\n                if (lucky) {\r\n                    lucky.cash = lucky.cash + deadBean.cash;\r\n                    deadBean.cash = 0;\r\n                }\r\n            }\r\n        }\r\n        this.unsetJob(deadBean);\r\n    }\r\n    breedBean(parent: Bean) {\r\n        const job: TraitJob = Math.random() <= .5 ? parent.job : GetRandom(['doc', 'farmer', 'builder', 'jobless']);\r\n        const bean = GenerateBean(this, undefined, job);\r\n        bean.ethnicity = parent.ethnicity;\r\n        bean.name = bean.name.split(' ')[0] + ' ' + parent.name.split(' ')[1];\r\n        bean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n        bean.bornInPetri = true;\r\n        if (this.environment)\r\n            bean.dob = {year: this.environment?.year, season: this.environment?.season, day: this.environment?.day, hour: this.environment?.hour};\r\n        this.beans.push(bean);\r\n    }\r\n    getTaxesAndDonations(party: Party, economy: Economy){\r\n    }\r\n    calculate(economy: Economy, law: Government) {\r\n        this.costOfLiving = economy.getCostOfLiving();\r\n        const c = this.beans.get.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\r\n            switch(bean.ethnicity){\r\n                case 'circle': count.circle++;break;\r\n                case 'square': count.square++;break;\r\n                case 'triangle': count.triangle++;break;\r\n            }\r\n            return count;\r\n        }, {circle: 0, square: 0, triangle: 0});\r\n        if (c.circle > c.square && c.circle > c.triangle){\r\n            this.majorityEthnicity = 'circle';\r\n        } else if (c.square > c.circle && c.square > c.triangle){\r\n            this.majorityEthnicity = 'square';\r\n        } else {\r\n            this.majorityEthnicity = 'triangle';\r\n        }\r\n    }\r\n    getNearestNeighbors(source: Bean): Bean[] {\r\n        return this.beans.get.filter((b) => {\r\n            if (b.key == source.key) return false;\r\n\r\n            const p = b.point;\r\n            const q = source.point;\r\n            const squared = Math.pow(p.x - q.x, 2)+Math.pow(p.y - q.y, 2);\r\n\r\n            return squared < 1600 && squared > 600;\r\n        });\r\n    }\r\n    getPopulationTraitsList(scannedBeans: {[beanKey: number]: boolean}, beans = this.beans.get): {icon: string, noun: string, count: number}[]{\r\n        return Array.from(\r\n            beans.reduce((m, b) => {\r\n                if (scannedBeans[b.key]){\r\n                    b.beliefs.forEach((t) => {\r\n                        const prev = m.get(t) || 0;\r\n                        m.set(t, prev+1);\r\n                    });\r\n                } else {\r\n                    m.set('Unknown', (m.get('Unknown') || 0) + 1);\r\n                }\r\n                return m;\r\n            }, new Map<TraitBelief|'Unknown', number>()).entries()\r\n        ).sort(([aT, aC], [bT, bC]) => bC - aC).map(([t, c]) => {\r\n            return t === 'Unknown' ? {\r\n                icon: '❔',\r\n                noun: 'Unknown',\r\n                count: c\r\n            } : {\r\n                icon: SecondaryBeliefData[t].icon,\r\n                noun: SecondaryBeliefData[t].noun,\r\n                count: c\r\n            }\r\n        });\r\n    }\r\n}","import { Bean } from \"./Bean\";\r\nimport { City } from \"./City\";\r\nimport { BuildingTypes, HexPoint, IBuilding, Point } from \"./Geography\";\r\nimport { EnterpriseType, IEnterprise } from \"./Institutions\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\n\r\nexport class Building implements IBuilding, IEnterprise{\r\n    public city?: City;\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public address: HexPoint = {q: 0, r: 0};\r\n    public type: BuildingTypes = 'farm';\r\n    public occupied_slots: Point[] = [];\r\n    public empty_slots: Point[] = [];\r\n    public upgraded: boolean = false;\r\n    public job_slots: {[key in BuildingJobSlot]: number|null} = {\r\n        0: null,\r\n        1: null,\r\n        2: null,\r\n        3: null,\r\n        4: null,\r\n        5: null,\r\n    }\r\n    public enterpriseType: EnterpriseType = 'company';\r\n    public ownerBeanKey?: number | undefined;\r\n    public ticksSinceLastSale: number = 0;\r\n    public bank: number = 0;\r\n    get cash(): number{\r\n        return this.bank;\r\n    }\r\n    set cash(revenue: number){\r\n        this.bank += revenue;\r\n        this.distributeCash();\r\n    }\r\n    distributeCash(){\r\n        const workers = this.getWorkerBeans();\r\n        switch(this.enterpriseType){\r\n            case 'company':\r\n                if (workers.length < 1) {\r\n                    //noop;\r\n                } else if (workers.length === 1){\r\n                    workers[0].cash += this.bank;\r\n                    this.bank = 0;\r\n                }\r\n                else {\r\n                    const share = this.bank / (workers.length + 0.5);\r\n                    this.bank = 0;\r\n                    let owner = workers.find(x => x.key === this.ownerBeanKey);\r\n                    if (owner == null){\r\n                        owner = workers[0];\r\n                        this.ownerBeanKey = owner.key;\r\n                    }\r\n                    workers.forEach(x => {\r\n                        if (x === owner){\r\n                            x.cash += share * 1.5;\r\n                        } else {\r\n                            x.cash += share;\r\n                        }\r\n                    });\r\n                }\r\n                break;\r\n            case 'cooperative':\r\n                const share = this.bank / workers.length;\r\n                this.bank = 0;\r\n                workers.forEach(x => {\r\n                    x.cash += share;\r\n                });\r\n                break;\r\n            case 'commune':\r\n                const commShare = this.bank / workers.length;\r\n                this.bank = 0;\r\n                workers.forEach(x => {\r\n                    x.cash += commShare;\r\n                });\r\n                break;\r\n        }\r\n    }\r\n    getWorkerBeans(): Bean[]{\r\n        const beans: Bean[] = [];\r\n        for(const bKey in this.getBeanKeys()){\r\n            const bean = this.city?.beans.get.find((y) => y.key === +bKey);\r\n            if (bean){\r\n                beans.push(bean);\r\n            }\r\n        }\r\n        return beans;\r\n    }\r\n    getBeanKeys(): number[]{\r\n        const ids: number[] = [];\r\n        const keys = Object.keys(this.job_slots);\r\n        for(const key in keys){\r\n            const slot = +key as BuildingJobSlot;\r\n            const val = this.job_slots[slot];\r\n            if (val != null){\r\n                ids.push(val);\r\n            }\r\n        }\r\n        return ids;\r\n    }\r\n    openSlots(): BuildingJobSlot[]{\r\n        return Object.keys(this.job_slots).filter((s, i) => {\r\n            return this.job_slots[+s as BuildingJobSlot] === null && (i < 3 || this.upgraded);\r\n        }).map((x) => +x);\r\n    }\r\n    usedSlots(): BuildingJobSlot[]{\r\n        return Object.keys(this.job_slots).filter((s) => {\r\n            return this.job_slots[+s as BuildingJobSlot] != null;\r\n        }).map((x) => +x);\r\n    }\r\n    tryFreeBean(beanKey: number): boolean{\r\n        const usedSlots = this.usedSlots();\r\n        for (let i = 0; i < usedSlots.length; i++) {\r\n            const slot = usedSlots[i];\r\n            const beanInSlot = this.job_slots[slot];\r\n            if (beanInSlot === beanKey){\r\n                this.job_slots[slot] = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick: () => void;\r\n    closeButtonText?: string;\r\n    hideCloseButton?: boolean\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (this.props.hideCloseButton)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n        <div className=\"modal\">\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: Bean[], \r\n    need: (b: Bean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NarrativeBeliefData, PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { Trait, TraitIcon } from \"../World\";\r\n\r\nexport class CardButton extends React.Component<{\r\n    icon: string,\r\n    name: string,\r\n    onClick?: () => void,\r\n    title?: string,\r\n    subtext?: string,\r\n    thin?: boolean,\r\n    singleLine?: boolean,\r\n    disabled?: boolean\r\n}>{\r\n    render(){\r\n        let classes = \"card button\";\r\n        if (this.props.thin) classes += ' thin';\r\n        if (this.props.singleLine) classes += ' single';\r\n        return <button className={classes} title={this.props.title} onClick={() => {\r\n            if (this.props.onClick) this.props.onClick()\r\n        }} type=\"button\" disabled={this.props.disabled}>\r\n            {this.props.icon} {this.props.name}\r\n            {\r\n                (this.props.subtext != null) ? <small>{this.props.subtext}</small> : null\r\n            }\r\n        </button>\r\n    }\r\n}\r\n\r\nexport function TraitToCard(bean: Bean, trait: Trait, onClick?: () => void){\r\n    switch(trait){\r\n        case 'trad':\r\n        case 'prog':\r\n        case 'ego':\r\n        case 'state':\r\n            return <CardButton icon={TraitIcon[trait]} title={PrimaryBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'fresh':\r\n        case 'sick':\r\n        case 'hungry':\r\n        case 'starving':\r\n        case 'stuffed':\r\n        case 'homeless':\r\n        case 'rested':\r\n        case 'circle':\r\n        case 'square':\r\n        case 'triangle':\r\n        case 'sane':\r\n        case 'disturbed':\r\n        case 'stressed':\r\n            return <CardButton icon={TraitIcon[trait]} title={keyToName[trait]} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'noFaith':\r\n        case 'rocket':\r\n        case 'dragon':\r\n        case 'music':\r\n            return <CardButton icon={TraitIcon[trait]} title={NarrativeBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        default:\r\n            return null;\r\n    }\r\n} ","import React from \"react\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { PrimaryBeliefData, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { LiveList } from \"../events/Events\";\r\nimport { CardButton } from \"../widgets/CardButton\";\r\nimport { Player } from \"../simulation/Player\";\r\n\r\ninterface OverviewPanelP {\r\n    city?: City,\r\n    beans: LiveList<Bean>,\r\n    utopia: Party,\r\n    alien: Player,\r\n    clearCity: () => void;\r\n}\r\n\r\nexport class OverviewPanel extends React.Component<OverviewPanelP> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let header = <div>\r\n            Human Emotion Farm\r\n            <div>\r\n                <small>Part of the 🌌 Galactic Xenosensation Federation</small>\r\n            </div>\r\n        </div>;\r\n        if (this.props.city) {\r\n            header = <div>\r\n                <div>\r\n                    <b>{this.props.city.name}</b>\r\n                    <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n                </div>\r\n            </div>;\r\n        }\r\n        const avg_happy = this.props.beans.get.reduce((sum, x) => sum + x.lastHappiness, 0) / (this.props.beans.get.length || 1);\r\n        const avg_cash = this.props.beans.get.reduce((sum, x) => sum + x.cash, 0) / (this.props.beans.get.length || 1);\r\n        return (\r\n            <div>\r\n                {header}\r\n                {/* <div className=\"header\"><b>Demographics</b></div> */}\r\n                <div className=\"header\"><b>👥 Subjects</b></div>\r\n                <div>\r\n                    <b>Population</b>&nbsp;\r\n                    <span>{this.props.beans.get.length}</span>\r\n                </div>\r\n                {/* <AxisReadout report={reportEthno(this.props.beans.get)}>Ethnicity</AxisReadout> */}\r\n                <NeedReadout beans={this.props.beans.get} need={(b) => b.food} dire=\"starving\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n                <NeedReadout beans={this.props.beans.get} need={(b) => b.stamina} dire=\"homeless\" abundant=\"rested\">Housing</NeedReadout>\r\n                <NeedReadout beans={this.props.beans.get} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n                <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n                <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n                {\r\n                    this.props.city ? <>\r\n                        <div className=\"header\"><b>🧠 Traits</b></div>\r\n                        <div className=\"max-w-300\">\r\n                            { \r\n                                this.props.city.getPopulationTraitsList(this.props.alien.scanned_bean).map((v) => \r\n                                    <span key={v.noun} className=\"overview-belief\">\r\n                                        {v.icon}&nbsp;{v.noun}&nbsp;x{v.count}\r\n                                    </span>)\r\n                            }\r\n                        </div>\r\n                    </> : null\r\n                }\r\n                {\r\n                    this.props.city?.beans.get?.length || 0 > 7 ? <div className=\"card-parent\">\r\n                        <CardButton icon=\"🛰️\" name=\"Scan All\" disabled={true} subtext=\"-Energy +Info\" onClick={() => {}}></CardButton>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{ report: { avg: number, winner: Trait } }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent + '%'\r\n        }\r\n        return (\r\n            <div>\r\n                <b>\r\n                    {this.props.children}\r\n                </b>&nbsp;&nbsp;\r\n                <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n                <div className=\"bar\">\r\n                    <div className=\"bar-inner\" style={style}>\r\n                        {percent}%\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { City, UFO } from \"../simulation/City\";\r\nimport { hex_to_pixel, origin_point, transformPoint } from \"../simulation/Geography\";\r\n\r\n\r\nexport class AnimatedUFO extends React.Component<{\r\n    ufo: UFO,\r\n    city: City\r\n}, {\r\n    showBeam: boolean\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            showBeam: false\r\n        };\r\n        setTimeout(() => {\r\n            this.setState({showBeam: true});\r\n            setTimeout(() => {\r\n                this.setState({showBeam: false})\r\n            }, 1800);\r\n        }, 1800);\r\n    }\r\n    render(){\r\n        let style = {\r\n          ...transformPoint(hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, this.props.ufo.point))\r\n        };\r\n        return <span style={style} className=\"ufo\">\r\n            🛸\r\n            {this.state.showBeam ? <span className=\"beam\"></span> : null}\r\n            \r\n        </span>\r\n    }\r\n}","import React, { RefObject } from \"react\";\r\n\r\nexport class Particles extends React.Component<{\r\n    particleCount: number,\r\n    className?: string,\r\n    delay: number\r\n}, {\r\n    active: boolean,\r\n    parts: RefObject<HTMLDivElement>[]\r\n}> {\r\n    private animations: Array<Animation|null> = [];\r\n    private finishedAnimationCount: number = 0;\r\n    constructor(props: any){\r\n        super(props);\r\n        let parts: RefObject<HTMLDivElement>[] = []\r\n        for (let i = 0; i < this.props.particleCount; i++) {\r\n            parts.push(React.createRef());\r\n        }\r\n        this.state = {\r\n            active: true,\r\n            parts: parts\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.animations = this.state.parts.map((p) => {\r\n            if (p.current){\r\n                const x = Math.floor(Math.random() * 400) - 200;\r\n                const y = Math.floor(Math.random() * 400) - 400;\r\n                return p.current.animate([\r\n                    {\r\n                      transform: `translate(0px, 0px)`,\r\n                      opacity: 1\r\n                    },\r\n                    {\r\n                      transform: `translate(${x}px, ${y}px)`,\r\n                      opacity: 0\r\n                    }    \r\n                ], {\r\n                    duration: 1500 + Math.random() * 1000,\r\n                    easing: 'ease-in-out',\r\n                    delay: this.props.delay + (Math.random() * 100)\r\n                });\r\n            }\r\n            return null;\r\n        });\r\n        this.animations.forEach((x) => {\r\n            if (x)\r\n            x.onfinish = () => {\r\n                this.finishedAnimationCount++;\r\n                if (this.finishedAnimationCount >= this.props.particleCount){\r\n\r\n                    this.setState({active: false, parts: []});\r\n                }\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return <div className={(this.props.className || '') + \" particle-parent\"}>\r\n            {\r\n                this.state.active ? this.state.parts.map((x, i) => {\r\n                    return <div key={i} className=\"particle\" ref={x}></div>;\r\n                }) : null\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport class DelayedParticles extends React.Component<{\r\n    particleCount: number,\r\n    className?: string,\r\n    delay: number\r\n}, {\r\n    active: boolean\r\n}> {\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        window.setTimeout(() => {\r\n            this.setState({active: true});\r\n        }, this.props.delay);\r\n    }\r\n    render(){\r\n        if (this.state.active){\r\n            return <Particles delay={0} className={this.props.className} particleCount={this.props.particleCount}></Particles>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport { EventTrigger, IEvent } from \"../events/Events\";\r\nimport { BeanDeathCause } from \"../Game\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { transformPoint } from \"../simulation/Geography\";\r\nimport { Particles } from \"../widgets/particles\";\r\nimport './spotlight.css';\r\n\r\ninterface SpotlightState{\r\n  name: string;\r\n  beanClasses: string;\r\n  faceOV?: string,\r\n  particles: {className:string,delay:number}[]\r\n}\r\ninterface SpotlightAnimationState extends SpotlightState{\r\n  start: number;\r\n}\r\nconst spotlightAnimations: {[key:string]:SpotlightAnimationState[]} = {\r\n  'death-exposure': [\r\n    {\r\n      start: 0,\r\n      name: 'death-exposure', faceOV: '🥶',\r\n      beanClasses: 'drop-tool turn-blue',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-exposure',faceOV: '💀',\r\n      beanClasses: 'drop-tool turn-blue',      \r\n      particles: [] \r\n    }\r\n  ],\r\n  'death-vaporization': [\r\n    {\r\n      start: 0,\r\n      name: 'death-vaporization',\r\n      beanClasses: '',\r\n      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-vaporization',\r\n      beanClasses: 'drop-tool',\r\n      particles: []\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-vaporization', \r\n      beanClasses: 'drop-tool', faceOV: ' ',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 3000,\r\n      name: 'death-vaporization', \r\n      beanClasses: 'drop-tool hide-body', faceOV: ' ',\r\n      particles: [\r\n        {className: 'head', delay: 0},\r\n        {className: 'body', delay: 0}\r\n      ]\r\n    }\r\n  ],\r\n  'death-sickness': [\r\n    {\r\n      start: 0,\r\n      name: 'death-sickness', faceOV: '🤢',\r\n      beanClasses: '',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '🤮',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 1400,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '🤮',\r\n      particles: [\r\n        {className: 'head', delay: 0},\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '💀',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n  ],\r\n  'death-starvation': [\r\n    {\r\n      start: 0,\r\n      name: 'death-starvation', faceOV: '🥺',\r\n      beanClasses: '',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 500,\r\n      name: 'death-starvation', faceOV: '😖',\r\n      beanClasses: 'body-shrink',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-starvation', faceOV: '😫',\r\n      beanClasses: 'body-shrink drop-tool',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 3000,\r\n      name: 'death-starvation', faceOV: '💀',\r\n      beanClasses: 'body-shrink drop-tool',      \r\n      particles: []\r\n    }\r\n  ]\r\n}\r\nexport class AnimatedSpotlight extends React.Component<{\r\n    event: IEvent,\r\n    bean: Bean,\r\n}, SpotlightState>{\r\n    constructor(props: any){\r\n        super(props);\r\n        const name = `${this.props.event.trigger}-${this.getSubtype(this.props.event.message)}`;\r\n        this.state = spotlightAnimations[name][0];\r\n    }\r\n    private lastTickMS: DOMHighResTimeStamp = 0;\r\n    private currentTime: number = 0;\r\n    private tickHandle: number = 0;\r\n    componentDidMount(){\r\n      window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n        this.lastTickMS = time; //initialize tick time\r\n        this.tickHandle = window.requestAnimationFrame(this.tick);\r\n      });\r\n    }\r\n    componentWillUnmount(){\r\n      window.cancelAnimationFrame(this.tickHandle);\r\n    }\r\n    tick = (timeMS: DOMHighResTimeStamp) => {\r\n      // Compute the delta-time against the previous time\r\n      const deltaTimeMS = (timeMS - this.lastTickMS);\r\n    \r\n      // Update the previous time\r\n      this.lastTickMS = timeMS;\r\n      if (deltaTimeMS > 0){\r\n        this.currentTime += deltaTimeMS;\r\n        const name = `${this.props.event.trigger}-${this.getSubtype(this.props.event.message)}`;\r\n        this.setState(spotlightAnimations[name].reduce((lastValid: SpotlightAnimationState, anim: SpotlightAnimationState) => {\r\n          if (this.currentTime >= anim.start)\r\n            return anim;\r\n          else\r\n            return lastValid;\r\n        }, spotlightAnimations[name][0]));\r\n\r\n      }\r\n      this.tickHandle = window.requestAnimationFrame(this.tick);\r\n    }\r\n    getSubtype(msg: string): BeanDeathCause|undefined{\r\n        return msg.includes('vaporiz') ? 'vaporization' : msg.includes('exposure') ? 'exposure' : msg.includes('sickness') ? 'sickness' : 'starvation';\r\n    }\r\n    render(){\r\n        let t: React.CSSProperties|undefined;\r\n        if (this.props.event.point)\r\n          t = transformPoint(this.props.event?.point);\r\n\r\n        const classes = [this.props.bean.job, this.props.bean.ethnicity, this.state.name, this.state.beanClasses].join(' ');\r\n        return <div className=\"spotlight\" style={t}>\r\n        <div className=\"bean-parent\">\r\n          <span className={classes+\" bean\"}>\r\n            <span className=\"bean-face\">\r\n            {this.state.faceOV || this.props.bean.getFace()}\r\n            </span>\r\n          </span>\r\n          {\r\n              this.state.particles.map((x, i) => <Particles key={i}\r\n                className={this.state.name+' '+x.className} delay={x.delay} particleCount={30}\r\n              ></Particles>)\r\n          }\r\n        </div>\r\n        <div className=\"label\">\r\n          {this.props.event.message.replace('A subject', this.props.bean.name)}\r\n        </div>\r\n        {\r\n          (\r\n            this.props.event.trigger === 'death' ? \r\n            <div className=\"card-parent\">\r\n              <button className=\"card button\" disabled>\r\n                Prevent Death<br/>-4 🤖\r\n              </button>\r\n            </div> : null\r\n          )\r\n        }\r\n      </div>\r\n    }\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { origin_point, Point, transformPoint } from \"../simulation/Geography\";\r\nimport { GoodIcon } from \"../World\";\r\n\r\ninterface AnimatedBeanP {\r\n  bean: Bean;\r\n  selected?: boolean;\r\n  sitStill?: boolean;\r\n  onClick: () => void;\r\n  static?: boolean;\r\n}\r\n\r\ninterface AnimatedBeanS{\r\n  paused: boolean,\r\n  spin: boolean;\r\n  face: string;\r\n  good?: string;\r\n  speech?: string;\r\n}\r\n\r\nfunction BeanIsBuying(bean: Bean){\r\n  return bean.state.data.act == 'buy' && bean.state.data.good != 'shelter';\r\n}\r\n\r\nexport class AnimatedBean extends React.Component<AnimatedBeanP, AnimatedBeanS> {\r\n    constructor(props: AnimatedBeanP) {\r\n      super(props);\r\n      this.delaySeedSec = (Math.random() * 60) + this.props.bean.key;\r\n      this.state = {\r\n        paused: false,\r\n        spin: false,\r\n        face: props.bean.getFace(),\r\n      };\r\n      props.bean.onAct.subscribe(this.animate);\r\n    }\r\n    animate = (deltaMS: number) => {\r\n      this.setState({\r\n        spin: this.props.bean.state.data.act == 'work',\r\n        face: this.props.bean.getFace(),\r\n        good: BeanIsBuying(this.props.bean) ? GoodIcon[this.props.bean.state.data.good || 'food'] : undefined,\r\n        speech: this.props.bean.getSpeech()\r\n      })\r\n    }\r\n    delaySeedSec: number;\r\n    getPurchase(){\r\n      if (this.state.good){\r\n        return <span className=\"purchase\">\r\n          <span className=\"money\">💸</span>\r\n          <span className=\"purchase-good\">{this.state.good}</span>\r\n        </span>\r\n      }\r\n    }\r\n    getSpeech(){\r\n      if (this.state.speech){\r\n        return <span className=\"speech\">\r\n          <span className=\"\">{this.state.speech}</span>\r\n        </span>\r\n      }\r\n    }\r\n    render() {\r\n      let classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n      classes += this.state.paused || !this.props.bean.alive ? ' paused' : '';\r\n      if (this.props.sitStill){\r\n\r\n      } else {\r\n        classes += ' bean-walker';\r\n        if (this.state.spin)\r\n          classes += ' spin';\r\n        if (this.props.selected)\r\n          classes += ' selected';\r\n        if (this.props.bean.state.data.act != 'travel')\r\n          classes += ' paused';\r\n      }\r\n\r\n      let style = {\r\n        animationDelay: '-'+this.delaySeedSec+'s'\r\n      };\r\n      style.animationDelay = '';\r\n      let title = '';\r\n      return (\r\n        <span className={classes+\" bean interactable\"}\r\n          style={style} title={title}\r\n          onClick={(e) => {e.stopPropagation(); this.props.onClick(); }}\r\n        >\r\n          {this.state.face} {this.getPurchase()} {this.getSpeech()}\r\n        </span>\r\n      )\r\n    }\r\n  }","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { SfxContext } from \"../App\";\r\nimport { UFO, City, Pickup } from \"../simulation/City\";\r\nimport { transformPoint, hex_to_pixel } from \"../simulation/Geography\";\r\nimport { EmoteIcon } from \"../World\";\r\n\r\nexport const AnimatedPickup: React.FC<{\r\n    pickup: Pickup,\r\n    //city: City\r\n}> = (props) => {\r\n    const [played, setPlayed] = useState(false);\r\n    const sfx = React.useContext(SfxContext);\r\n    useEffect(() => {\r\n        if (!played && sfx){\r\n            sfx.play('drop');\r\n            setPlayed(true);\r\n        }\r\n    })\r\n    return <span className=\"pickup bob\">\r\n        {EmoteIcon[props.pickup.type]}\r\n    </span>\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { LiveList, PubSub } from \"../events/Events\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { Pickup } from \"../simulation/City\";\r\nimport { Point } from \"../simulation/Geography\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport { AnimatedPickup } from \"./AnimatedPickup\";\r\n\r\nexport const Mover: React.FC<{\r\n    onMove: PubSub<Point>,\r\n    startPoint: Point\r\n}> = (props) => {\r\n    const el = useRef<HTMLDivElement|null>(null);\r\n    const onMove = (p: Point) => {\r\n        if (el.current && p)\r\n            el.current.style.transform = `translate(${p.x}px, ${p.y}px)`;\r\n    }\r\n    useEffect(() => {\r\n        props.onMove.subscribe(onMove);\r\n        onMove(props.startPoint);\r\n        return () => props.onMove.unsubscribe(onMove)\r\n    }, []);\r\n    return <div ref={el}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport const PickupList: React.FC<{\r\n    pickups: LiveList<Pickup>\r\n}> = (props) => {\r\n    const [list, setList] = useState(props.pickups.get);\r\n    const onChange = (l: Pickup[]) => {\r\n        setList(l);\r\n    }\r\n    useEffect(() => {\r\n        props.pickups.onChange.subscribe(onChange)\r\n        return () => props.pickups.onChange.unsubscribe(onChange)\r\n    }, []);\r\n    return <>\r\n        {\r\n            list.map((p: Pickup) => {\r\n                return <Mover onMove={p.onMove} key={p.key} startPoint={p.point}>\r\n                    <AnimatedPickup pickup={p}></AnimatedPickup>\r\n                </Mover>\r\n            })\r\n        }\r\n    </>;\r\n}\r\n\r\nexport const BeanList: React.FC<{\r\n    beans: LiveList<Bean>,\r\n    activeBeanID: number|null;\r\n    onBeanClick: (b: Bean) => void;\r\n}> = (props) => {\r\n    const [list, setList] = useState(props.beans.get);\r\n    const onChange = (l: Bean[]) => {\r\n        setList(l);\r\n    }\r\n    useEffect(() => {\r\n        props.beans.onChange.subscribe(onChange)\r\n        return () => props.beans.onChange.unsubscribe(onChange)\r\n    }, []);\r\n    return <>\r\n        {\r\n            list.map((bean: Bean) => {\r\n                return <Mover onMove={bean.onMove} key={bean.key} startPoint={bean.point}>\r\n                    <AnimatedBean bean={bean} selected={bean.key === props.activeBeanID} onClick={() => props.onBeanClick(bean)}></AnimatedBean>\r\n                </Mover>\r\n            })\r\n        }\r\n    </>;\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { LiveMap } from \"../events/Events\";\r\nimport { City } from \"../simulation/City\";\r\nimport { CityBook, IBuilding } from \"../simulation/Geography\";\r\nimport { PetriBuilding } from \"./Building\";\r\n\r\n\r\nexport const PetriBuildings: React.FC<{\r\n    city: City\r\n}> = (props) => {\r\n    const [buildings, setBuildings] = useState<IBuilding[]>(props.city.book.getBuildings());\r\n    const getBuildings = () => {\r\n        setBuildings(props.city.book.getBuildings())\r\n    }\r\n    useEffect(() => {\r\n        props.city.book.db.onChange.subscribe(getBuildings);\r\n        return () => props.city.book.db.onChange.unsubscribe(getBuildings);\r\n    });\r\n    return <>\r\n        {\r\n            buildings.map((x) => <PetriBuilding city={props.city} key={x.key} building={x}></PetriBuilding>)\r\n        }\r\n    </>\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Live } from \"../events/Events\";\r\nimport { HexPoint, Point } from \"../simulation/Geography\";\r\n\r\n\r\nexport const Magnet: React.FC<{\r\n    pickupMagnetPoint: Live<Point|undefined>\r\n}> = (props) => {\r\n    const el = useRef<HTMLDivElement|null>(null);\r\n    const [point, setPoint] = useState(props.pickupMagnetPoint.get);\r\n    const updatePoint = (p: Point|undefined) => {\r\n        setPoint(p);\r\n        if (el.current && p)\r\n            el.current.style.transform = `translate(${p.x}px, ${p.y}px)`;\r\n    }\r\n    useEffect(() => {\r\n        props.pickupMagnetPoint.onChange.subscribe(updatePoint);\r\n        updatePoint(props.pickupMagnetPoint.get);\r\n        return () => props.pickupMagnetPoint.onChange.unsubscribe(updatePoint)\r\n    });\r\n\r\n    if (point){\r\n        return <div className=\"magnet\" ref={el}>🧲</div>\r\n    } else {\r\n        return null;\r\n    }\r\n}","import { Tile } from \"../World\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport React from \"react\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, hex_to_pixel, MatterTypes, PolarPoint, polarToPoint, transformPoint, HexPoint, Point } from \"../simulation/Geography\";\r\nimport { PetriBuilding } from \"./Building\";\r\nimport { PI2 } from \"../WorldGen\";\r\nimport { City, Pickup, UFO } from \"../simulation/City\";\r\nimport { AnimatedUFO } from \"./AnimatedUFO\";\r\nimport { IEvent } from \"../events/Events\";\r\nimport { AnimatedSpotlight } from \"./AnimatedSpotlight\";\r\nimport { BeanList, PickupList } from \"./Mover\";\r\nimport { PetriBuildings } from \"./Buildings\";\r\nimport { Magnet } from \"./Magnet\";\r\n\r\n\r\ninterface WorldTilePs {\r\n  tile: Tile;\r\n  city: City;\r\n  activeBeanID: number | null;\r\n  costOfLiving: number;\r\n  spotlightEvent: IEvent | undefined;\r\n  onClick: () => void;\r\n  onBeanClick: (b: Bean) => void;\r\n  onHexClick: (hex: HexPoint) => void;\r\n}\r\nexport class WorldTile extends React.Component<WorldTilePs> {\r\n  constructor(props: WorldTilePs) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    const mtnRadius = 530;\r\n    const worldR = 550;\r\n    for (let i = 0; i < 360 / 5; i++) {\r\n      const az = i * 5 * Math.PI / 180;\r\n      const pt = polarToPoint({ r: mtnRadius, az: az });\r\n      pt.x += worldR; pt.y += worldR;\r\n      this.mtn_transforms.push(transformPoint(pt));\r\n    }\r\n  }\r\n  mtn_transforms: { transform: string }[] = [];\r\n  renderSpotlight(): JSX.Element | null {\r\n    if (this.props.spotlightEvent) {\r\n      const bean = this.props.city.historicalBeans.get.find((x) => x.key === this.props.spotlightEvent?.beanKey);\r\n      if (this.props.spotlightEvent.point && bean) {\r\n        return <AnimatedSpotlight event={this.props.spotlightEvent} bean={bean}></AnimatedSpotlight>\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  renderHexes(){\r\n    return this.props.city.hexes.map((hex, i) => {\r\n      const xy = hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, hex);\r\n      return <div className=\"hex\" key={i} style={transformPoint(xy)} \r\n        onMouseEnter={(e) => { this.props.city.pickupMagnetPoint.set(xy); }}\r\n        onClick={(e) => { this.props.onHexClick(hex); e.stopPropagation(); return false; }}>\r\n        {/* todo: move renderbuildings to here */}\r\n      </div>\r\n    });\r\n  }\r\n  render() {\r\n    const deaths = this.props.city.historicalBeans.get.filter((x) => !x.alive).map((b: Bean, i) => {\r\n      return (\r\n        <span key={i} className=\"dead\" style={{ left: (i * 10) + 'px' }}>⚰️</span>\r\n      )\r\n    });\r\n    const ufos = this.props.city.ufos.map((u: UFO, i: number) => {\r\n      return <AnimatedUFO ufo={u} key={u.key} city={this.props.city}></AnimatedUFO>\r\n    });\r\n    const mtns = this.mtn_transforms.map((x, i) => {\r\n      return <span key={i} style={x} className=\"mtn\">⛰️</span>\r\n    });\r\n    return (\r\n      <div className=\"tile\" onClick={() => this.props.onClick()} onMouseLeave={() => {this.props.city.pickupMagnetPoint.set(undefined);}}>\r\n        <svg style={{ width: '100%', height: '100%' }} className=\"petri-base\">\r\n          <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 1)\" />\r\n        </svg>\r\n        {this.renderHexes()}\r\n        {mtns}\r\n        {/* {deaths} */}\r\n        <PetriBuildings city={this.props.city}></PetriBuildings>\r\n        <PickupList pickups={this.props.city.pickups}></PickupList>\r\n        <BeanList beans={this.props.city.beans} activeBeanID={this.props.activeBeanID} onBeanClick={(b: Bean) => this.props.onBeanClick(b)}></BeanList>\r\n        {ufos}\r\n        <Magnet pickupMagnetPoint={this.props.city.pickupMagnetPoint}></Magnet>\r\n        <svg style={{ width: '100%', height: '100%' }} className=\"petri-lid\">\r\n          <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 0.2)\" />\r\n        </svg>\r\n        {this.renderSpotlight()}\r\n      </div>\r\n    )\r\n  }\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { World, TraitJob } from \"../World\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { Listing } from \"../simulation/Economy\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport class EconomyReport extends React.Component<{world: World}, {paused: boolean}> {\r\n    constructor(props: {world: World}) {\r\n      super(props);\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    render() {\r\n      const beans = this.props.world.beans.get;\r\n      const food_median = median(beans.map(x => x.discrete_food));\r\n      const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n      const shelter_median = median(beans.map(x => x.discrete_stamina)).toFixed(1);\r\n      const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n      const wealth_avg = wealth_total / (beans.length || 1);\r\n      const wealth_median = median(beans.map(x => x.cash));\r\n      const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n      const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n      const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n      const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n      const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n      const jobs = beans.reduce((obj, b) => {\r\n        obj[b.job] = (obj[b.job] || 0)+1;\r\n        return obj;\r\n      }, {} as {[key in TraitJob]: number});\r\n      const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n      function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: Listing){\r\n        obj.supply += l.quantity;\r\n        obj.price += l.price;\r\n        obj.count++;\r\n        obj.avg = obj.price / obj.count;\r\n        return obj;\r\n      }\r\n      const food = this.props.world.economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const meds = this.props.world.economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const houses = this.props.world.economy.market.listings['shelter'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      return (\r\n        <div>\r\n          <div className=\"pad-4p\">\r\n            <h2>State of the Utopia</h2>\r\n          </div>\r\n          {/* <div className=\"pad-4p\">\r\n            <h3>Subject's Health</h3>\r\n          </div> */}\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🍞 Food Security</strong>\r\n              <NeedReadout beans={this.props.world.beans.get} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {food_median.toFixed(1)} 🍞</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {food.supply} 🍞 @ ${food.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledMonthlyDemand.food} 🍞\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div>\r\n              <strong>🩺 Healthcare</strong>\r\n              <NeedReadout beans={this.props.world.beans.get} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {health_median} 🩺</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {meds.supply} 🩺 @ ${meds.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledMonthlyDemand.medicine} 🩺\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🏡 Housing</strong> <br/>\r\n              <NeedReadout beans={this.props.world.beans.get} need={(b) => b.stamina} dire=\"homeless\" abundant=\"rested\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {shelter_median} 🏡</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {houses.supply} 🏡 @ ${houses.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledMonthlyDemand.shelter} 🏡\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"pad-4p\">\r\n            <h3>Economic Health</h3>\r\n          </div> */}\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>💰 Wealth</strong> <br/>\r\n              {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${this.props.world.economy.getCostOfLiving().toFixed(2)} <br/>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Total ${wealth_total.toFixed(2)}</td>\r\n                    <td className=\"text-center\">\r\n                      Median: ${wealth_median.toFixed(2)} \r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Avg: ${wealth_avg.toFixed(2)}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              Top {wealthy_percentage.toFixed(1)}% of subjects own {wealthy_ownership.toFixed(1)}% of the wealth\r\n            </div>\r\n            <span>\r\n              <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n              <ul className=\"boxes\">\r\n                <li>{jobs.farmer || 0} farmers</li>\r\n                <li>{jobs.builder || 0} builders</li>\r\n                <li>{jobs.doc || 0} doctors</li>\r\n                <li>{jobs.entertainer || 0} entertainers</li>\r\n              </ul>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\n\r\nexport interface EventsPanelPS\r\n{\r\n    events: IEvent[],\r\n    selectBean: (beanKey?: number) => void\r\n}\r\nfunction shouldEventJumpToBean(e: IEvent): boolean{\r\n    return e.beanKey != null && (\r\n        e.trigger === 'speechcrime' ||\r\n        e.trigger === 'birth');\r\n}\r\n\r\nexport class EventsPanel extends React.Component<EventsPanelPS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let events = this.props.events.map((e, i) => {\r\n            const alert = e.icon === '🚨';\r\n            const slot = e.trigger === 'nojobslots';\r\n            return <div key={i} className={alert||slot ? 'tall': ''}>\r\n                <span className={alert ? 'police-siren': ''}>{e.icon}</span>&nbsp;\r\n                {\r\n                    shouldEventJumpToBean(e) ? <a onClick={() => this.props.selectBean(e.beanKey)} href=\"javascript:void(0)\">{e.message}</a> : <span>{e.message}</span>\r\n                }\r\n            </div>\r\n        });\r\n        if (this.props.events.length === 0){\r\n            events = [<div key={0}>\r\n                <small>No events yet</small>\r\n            </div>]\r\n        }\r\n        return (                \r\n        <div className=\"events-panel\">\r\n            <div>\r\n                <b>Events</b>\r\n            </div>\r\n            {events}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { PlayerResources, triadToString } from \"../Game\";\r\n\r\nexport class CostSmall extends React.Component<{\r\n    cost: PlayerResources,\r\n    rider?: string,\r\n    qty?: number\r\n}>{\r\n\r\n    render(){\r\n        return <small>\r\n            {triadToString(this.props.cost, '-', this.props.qty)} {this.props.rider}\r\n        </small>\r\n    }\r\n}","import React from \"react\";\r\nimport { EmoteIcon, IHappinessModifier, TraitIcon } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Economy } from \"../simulation/Economy\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { IEvent, EventBus } from \"../events/Events\";\r\nimport { withinLastYear } from \"../simulation/Time\";\r\nimport { Government } from \"../simulation/Government\";\r\nimport { Player } from \"../simulation/Player\";\r\nimport { CardButton, TraitToCard } from \"../widgets/CardButton\";\r\n\r\nimport './BeanPanel.css';\r\nimport { Act, ActivityIcon, GetPriorities } from \"../simulation/Agent\";\r\nimport { IsBeliefDivergent, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\n\r\ninterface BeanPanelP{\r\n    city: City,\r\n    bean: Bean,\r\n    economy: Economy,\r\n    law: Government,\r\n    party: Party,\r\n    alien: Player,\r\n    clearCity: () => void;\r\n    bus: EventBus\r\n    scan: (bean: Bean) => boolean;\r\n    vaporize: (bean: Bean) => void;\r\n    abduct: (bean: Bean) => void;\r\n    brainwash: () => void;\r\n    gift: () => void;\r\n}\r\n\r\ninterface BeanPanelS{\r\n    faceOverride?: string;\r\n    innerView: 'priorities'|'feelings'|'beliefs';\r\n}\r\n\r\nexport class BeanPanel extends React.Component<BeanPanelP, BeanPanelS> {\r\n    constructor(props: BeanPanelP) {\r\n        super(props);\r\n        this.state = {\r\n            innerView: 'beliefs'\r\n        }\r\n    }\r\n    scan = () => {\r\n        if (this.props.scan(this.props.bean)){\r\n            this.setState({faceOverride: '🤨'});\r\n            this._resetFace();\r\n        }\r\n    }\r\n    vaporize = () => {\r\n        this.props.vaporize(this.props.bean);\r\n        this.setState({faceOverride: '💀'});\r\n        this._resetFace();\r\n    }\r\n    support = () => {\r\n        this.setState({faceOverride: '🤩'});\r\n        this._resetFace();\r\n    }\r\n    abduct = () => {\r\n        this.props.abduct(this.props.bean);\r\n        this.setState({faceOverride: '😨'});\r\n        this._resetFace();\r\n    }\r\n    _resetFace(){\r\n        setTimeout(() => {\r\n            this.setState({faceOverride: undefined})\r\n        }, 5000);\r\n    }\r\n    happyTable(mods: IHappinessModifier[]){\r\n        return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{x.reason}</td>\r\n                <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n            </tr>\r\n        });\r\n    }\r\n    hedonTable(){\r\n        return Object.keys(this.props.bean.happiness.all).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{this.props.bean.happiness.all[x]} {this.props.bean.happiness.all[x] >= 0 ? EmoteIcon['happiness'] : EmoteIcon['unhappiness']} from </td>\r\n                <td className=\"small\">{x}</td>\r\n            </tr>\r\n        });\r\n    }\r\n    renderInner(){\r\n        if (!this.scanned){\r\n            return <div className=\"width-100p text-center\">\r\n                <small>\r\n                    Subject needs a Scan to reveal their thoughts\r\n                </small>\r\n            </div>\r\n        }\r\n        switch(this.state.innerView){\r\n            case 'beliefs':\r\n                return this.scanned ? this.beliefTable(this.props.bean.beliefs) : null\r\n            case 'feelings':\r\n                return <table className=\"width-100p\"><tbody>\r\n                    {this.scanned ? this.hedonTable() : null}\r\n                    </tbody>\r\n                </table>\r\n            case 'priorities':\r\n                return <table className=\"width-100p\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                Currently {this.props.bean.state.display}\r\n                            </td>\r\n                        </tr>\r\n                        {\r\n                            GetPriorities(this.props.bean, this.props.alien.difficulty).values.map((x) => {\r\n                                return <tr key={`p-${x.value.act}-${x.value.good}`}>\r\n                                    <td>\r\n                                    {x.priority.toFixed(1)} {ActivityIcon(x.value)}\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                        {\r\n                            this.actDurations().filter((x) => this.props.bean.activity_duration[x] > 0).map((x) => {\r\n                                const act = x as Act;\r\n                                return <tr key={act}>\r\n                                    <td>{x}</td>\r\n                                    <td>\r\n                                        {\r\n                                            (this.props.bean.activity_duration[act] / 1000).toFixed(1)\r\n                                        }s\r\n                                    </td>\r\n                                </tr>\r\n                                \r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n        }\r\n    }\r\n    actDurations(){\r\n        const acts = Object.keys(this.props.bean.activity_duration).map((x) => x as Act);\r\n        acts.sort((a, b) => this.props.bean.activity_duration[b] - this.props.bean.activity_duration[a]);\r\n        return acts;\r\n    }\r\n    beliefTable(beliefs: TraitBelief[]): React.ReactNode {\r\n        return beliefs.map((b, i) => {\r\n            const classes = 'belief-name shadow text-left '+SecondaryBeliefData[b].rarity;\r\n            return <table className=\"width-100p\" key={b+i}><tbody><tr>\r\n            <th className={classes}>\r\n                {SecondaryBeliefData[b].icon} {SecondaryBeliefData[b].adj}\r\n            </th>\r\n            <td className=\"text-right\">\r\n                {(SecondaryBeliefData[b].idealPro || []).map(y => <span key={y}>+{TraitIcon[y]}</span>)}\r\n                {(SecondaryBeliefData[b].idealCon || []).map(y => <span key={y}>-{TraitIcon[y]}</span>)}\r\n            </td>\r\n        </tr><tr><td className=\"small text-center\" colSpan={2}>{\r\n            SecondaryBeliefData[b].description ? SecondaryBeliefData[b].description?.split(';').map((x, i) => <div key={i}>{x}</div>) : null\r\n        }</td></tr></tbody></table>});\r\n    }\r\n    get scanned(){\r\n        return this.props.alien.scanned_bean[this.props.bean.key];\r\n    }\r\n    renderTraits(){\r\n        if (this.scanned){\r\n            const brainwash = this.props.brainwash.bind(this);\r\n            return <div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ethnicity, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.faith, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ideals, brainwash)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.community, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.food, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.stamina, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.health, undefined)}\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className=\"card-parent\">\r\n                <CardButton icon=\"🛰️\" name=\"Scan\" subtext=\"-Energy +Info\" onClick={this.scan} disabled={!this.props.alien.canAfford(this.props.alien.difficulty.cost.bean.scan)}></CardButton>\r\n            </div>\r\n        }\r\n    }\r\n    render(){\r\n        const classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n        return (                \r\n        <div className=\"vertical bean-panel\">\r\n            <div className=\"bean-panel-header\">\r\n                <div>\r\n                    <b>{this.props.bean.name}&nbsp;\r\n                    <small>\r\n                        of {this.props.city.name}\r\n                    </small>\r\n                    </b>\r\n                    <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n                </div>\r\n                <div className=\"bean-view\">                \r\n                    <span className={classes+\" bean\"}>\r\n                        {\r\n                            this.state.faceOverride === undefined ? this.props.bean.getFace() : this.state.faceOverride\r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <span className=\"text-center\">\r\n                        💰 ${this.props.bean.cash.toFixed(2)}\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        🙂 {Math.round(this.props.bean.lastHappiness)}%\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        {Math.round(this.props.bean.happiness.flatAverage)} {EmoteIcon['happiness']} /day\r\n                    </span>\r\n                </div>\r\n                {this.renderTraits()}\r\n            </div>\r\n            <div className=\"grow-1 pad-4\">\r\n                <div className=\"cylinder blue-orange horizontal\">\r\n                    <button type=\"button\" className={this.state.innerView=='beliefs'?'active':''} onClick={()=>this.setState({innerView:'beliefs'})}>\r\n                        😇 Traits\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='feelings'?'active':''} onClick={()=>this.setState({innerView:'feelings'})}>\r\n                        😐 Feelings\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='priorities'?'active':''} onClick={()=>this.setState({innerView:'priorities'})}>\r\n                        💪 Priorities\r\n                    </button>\r\n                </div>\r\n                {this.renderInner()}\r\n            </div>\r\n            <div className=\"bean-action-card-parent\">\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={() => this.props.brainwash()}\r\n                        title=\"Rewrite one of this being's traits\"\r\n                    >😵 Brainwash\r\n                        <small>-Sanity +-Trait</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\"  onClick={() => this.props.brainwash()}  disabled={true}\r\n                        title=\"Give this being food or meds or cash\">\r\n                        🎁 Gift\r\n                        <small>-Energy +Things</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={this.scan} disabled={true}\r\n                        title=\"Steal a bit of this being's mind\">\r\n                        🤪 Braindrain\r\n                        <small>-Energy -Sanity</small>\r\n                    </button>\r\n                    <button type=\"button\" className=\"button card\" onClick={this.vaporize}\r\n                        disabled={!this.props.alien.canAfford(this.props.alien.difficulty.cost.bean.vaporize)}\r\n                        title=\"Delete this being from the experiment\"\r\n                    >\r\n                        ☠️ Vaporize\r\n                        <CostSmall cost={this.props.alien.difficulty.cost.bean.vaporize}></CostSmall>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\"\r\n                        disabled={!this.props.alien.canAfford(this.props.alien.difficulty.cost.bean.abduct)}\r\n                        onClick={() => this.abduct()}\r\n                        title=\"Remove this being for study\"\r\n                    >\r\n                        👾 Abduct for Research\r\n                        <CostSmall cost={this.props.alien.difficulty.cost.bean.abduct} rider=\"+Tech\"></CostSmall>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { City } from \"../simulation/City\";\r\n\r\nexport interface FoundPartyPS\r\n{\r\n    cities: City[],\r\n    onFound: (state: FoundPartyS) => void\r\n}\r\nexport interface FoundPartyS\r\n{\r\n    community: TraitCommunity|null\r\n    ideal: TraitIdeals|null,\r\n    name: string,\r\n    slogan: string,\r\n    members: string,\r\n    goal: string,\r\n    cityKey: number\r\n}\r\n\r\nexport class FoundParty extends React.Component<FoundPartyPS, FoundPartyS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            community: null,\r\n            ideal: null,\r\n            name: \"Goodplace\",\r\n            slogan: \"Perfection is achievable.\",\r\n            members: \"Citizens\",\r\n            goal: \"Legislation\",\r\n            cityKey: 0\r\n        }\r\n    }\r\n    onCommunity(val: TraitCommunity){\r\n        this.setState({community: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onIdeal(val: TraitIdeals){\r\n        this.setState({ideal: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onBigFourChange(){\r\n        if (this.state.community === 'ego' && this.state.ideal === 'trad'){\r\n            this.setState({\r\n                name: 'Arcadia',\r\n                slogan: \"A man belongs on the farm.\",\r\n                members: \"Farmers\", goal: \"Tariffs\"});\r\n        } else if (this.state.community === 'ego' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Libertaria\",\r\n                slogan: \"Freedom for every being!\",\r\n                members: \"Builders\", goal: \"Right to Strike\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'trad') {\r\n            this.setState({\r\n                name: \"Ultimate Kingdom\",\r\n                slogan: \"Honor to King and family.\",\r\n                members: \"Homeowners\", goal: \"Repeal Property Tax\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Equus\",\r\n                slogan: \"True equality is peace.\",\r\n                members: \"Penniless\", goal: \"Food Welfare\"});\r\n        }\r\n    }\r\n    onName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({name: e.target.value});\r\n    }\r\n    onSlogan = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({slogan: e.target.value});\r\n    }\r\n    onCity = (key: any) => {\r\n        this.setState({cityKey: +key});\r\n    }\r\n    render(){\r\n        return <div>\r\n          <div className=\"pad-4p\">\r\n            <h2>Found your Utopia</h2>\r\n          </div>    \r\n          <div className=\"col-2\">\r\n            <div>\r\n              Perfect societies rely on the\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"state\" checked={this.state.community === 'state'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)} /> <b>Collective</b> 🕊️ {/* 🐘 🤝*/}\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"ego\" checked={this.state.community === 'ego'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)}/> <b>Independent</b> 🦅 {/*✌️*/}\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              to guarantee well-being.\r\n            </div>\r\n            <div>\r\n              Perfect beings devote themselves to\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"trad\" checked={this.state.ideal === 'trad'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)}/> <b>Elitist</b> {/*🕯️ 🔮*/} 👑\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"prog\" checked={this.state.ideal === 'prog'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)} /> <b>Progressive</b> {/*💡 🔬 🎓*/} ⚖️\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              social values.\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My Utopia is named <input type=\"text\" value={this.state.name} onChange={this.onName} />\r\n            </div>\r\n            <div>\r\n              My Utopia's mantra is <input type=\"text\" value={this.state.slogan} onChange={this.onSlogan}  />\r\n            </div>\r\n          </div>\r\n          <hr/>\r\n          <button type=\"button\" disabled={this.state.community == null || this.state.ideal == null} className=\"important btn-found-party\" onClick={() => this.props.onFound(this.state)}>Found the {this.state.name} Utopia</button>\r\n        </div>\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { ChangePubSub, PubSub } from \"../events/Events\";\r\n\r\ninterface Bubble {string: string, id: number, className?: string};\r\n\r\nfunction useBubbles<T>(sub: PubSub<T>, transform: (input: T) => {string: string, className: string}){\r\n    const [bubbles, setBubbles] = useState<Bubble[]>([]);\r\n    let bubbleSeed = 0;\r\n    const onEvent = (event: T) => {\r\n        const id = ++bubbleSeed;\r\n        setBubbles(bubbles.concat([{\r\n            id: id,\r\n            ...transform(event)\r\n        }]));\r\n        setTimeout(() => {\r\n            setBubbles(\r\n                bubbles.filter((b) => b.id != id)\r\n            )\r\n        }, 1500)\r\n    }\r\n    useEffect(() => {\r\n        sub.subscribe(onEvent);\r\n        return () => sub.unsubscribe(onEvent);\r\n    });\r\n    return bubbles;\r\n}\r\n\r\nexport class BubbleNumberText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<Bubble>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n    bubbleSeed = 0;\r\n    onChange = (ev: {change: number}) => {\r\n        const id = ++this.bubbleSeed;\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                string: (positive ? '+': '') + ev.change,\r\n                id: id,\r\n                className: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.id != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.id} className={[b.className, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.string}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}\r\n\r\nexport const BubbleSeenTraitsText: React.FC<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent: PubSub<{k: string, v: boolean}>\r\n}> = (props) => {\r\n    const bubbles = useBubbles(props.changeEvent, (input: {k: string, v: boolean}) => {\r\n        return {\r\n            string: `Discovered ${input.k}!`,\r\n            className: 'seen-belief'\r\n        }\r\n    })\r\n    return <span className=\"bubble-parent\">\r\n        {props.children}\r\n        {bubbles.map((b) => <span key={b.id} className={[b.className, props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {props.icon} {b.string}\r\n        </span>)}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"../petri-ui/AnimatedBean\";\r\nimport \"./SocialGraph.css\";\r\nimport { origin_point } from \"../simulation/Geography\";\r\nimport { LiveList } from \"../events/Events\";\r\n\r\ninterface SocialGraphP{\r\n    beans: LiveList<Bean>;\r\n    costOfLiving: number;\r\n    onClick: (b: Bean) => void\r\n}\r\ninterface SocialGraphS{\r\n    \r\n}\r\nexport class SocialGraph extends React.Component<SocialGraphP, SocialGraphS>{\r\n    constructor(props: SocialGraphP){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return <div className=\"social-graph\">\r\n            {\r\n                this.props.beans.get.map((b) => \r\n                <div key={b.key} className=\"bean-node\" onClick={() => this.props.onClick(b)}>\r\n                    <AnimatedBean bean={b} static={true} sitStill={true} \r\n                        onClick={() => {this.props.onClick(b);}}>\r\n                    </AnimatedBean>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class CapsuleLabel extends React.Component<{\r\n    icon?: string,\r\n    label?: string\r\n}, {\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const classN = 'capsule-label '+this.props.label||'';\r\n        return <span className={classN}>\r\n            <span className=\"capsule-icon\">\r\n                {this.props.icon}\r\n            </span>\r\n            <span className=\"capsule-text\">\r\n                {this.props.label}:\r\n            </span>\r\n            <span className=\"capsule-value\">\r\n                {this.props.children}\r\n            </span>\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { DefaultDifficulty, triadToString } from \"../Game\";\r\nimport { Curriculums, GetAverage, Goals, IGoal, IPlayerData, IProgressable } from \"../simulation/Player\";\r\n\r\nexport interface GoalPanelPS\r\n{\r\n  player: IPlayerData;\r\n  progress: IProgressable;\r\n}\r\n\r\nexport class GoalsPanel extends React.Component<GoalPanelPS> {\r\n  renderReward(g: IGoal){\r\n    return <div>\r\n      <small>\r\n      🎁 {triadToString(g.reward || {}, '+')}\r\n      </small>\r\n    </div>\r\n  }\r\n  renderGoal(g: IGoal){\r\n    const done = this.props.progress.goalProgress[g.key] != null && this.props.progress.goalProgress[g.key].done;\r\n    return <li>\r\n      {done ? '☑️': '⭕️'}\r\n      {g.text}\r\n      {g.tooltip != null ? <small title={g.tooltip}>❔</small> : null}\r\n      {done || g.reward == null ? null : this.renderReward(g)}\r\n    </li>\r\n  }\r\n    render(){\r\n        return (<div className=\"goals\">\r\n        <div><b>Goals</b></div>\r\n        <ul>\r\n          {this.props.progress.goals.map((key) => {\r\n            return this.renderGoal(Goals[key]);\r\n          })}\r\n        </ul>\r\n        <div><b>Report Card</b></div>\r\n        <p className=\"horizontal\">\r\n          <span>\r\n            Last Grade: <b>D</b>\r\n          </span>\r\n          <span>\r\n            Next Grade in: <b>2 mo.</b>\r\n          </span>\r\n        </p>\r\n        <p>\r\n        </p>\r\n        <table style={{margin: 'auto'}}>\r\n          <tbody>\r\n            <tr>\r\n              <th>🎯 Happiness\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Happiness}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects happy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n                <small>\r\n              {Curriculums.Default.RubricDescription.Happiness}\r\n                </small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Prosperity</th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Prosperity}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects fed and healthy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Prosperity}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Stability\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Stability}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects sane and civil?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Stability}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Dogma\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Dogma}\r\n              </td>\r\n              <td>\r\n                <small title=\"Do your society's rules match your utopian ideals?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Dogma}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={3}>\r\n                <hr />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                Avg. Grade\r\n              </th>\r\n              <td>\r\n                {GetAverage(this.props.player.workingReportCard)}\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>)\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class CampaignsPanel extends React.Component<{\r\n\r\n}>{\r\n    render(){\r\n        return <div className=\"pad-4p\">\r\n        <div className=\"subheader\">\r\n            <h3>Propaganda</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >🎙️ Buy Propaganda</button>\r\n        </div>\r\n        <span>\r\n          Propaganda changes beans' feelings on a wide variety of topics.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              📺 Broadcast Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Small chance to increase Approval among all beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              👋 Canvassing\r\n            </span>\r\n            <small>Approval+ Labor-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on a few random beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🗞️ Print Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on wealthy beans\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <div className=\"subheader\">\r\n            <h3>Appearances</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >💬 Schedule Appearance</button>\r\n        </div>\r\n        <span>\r\n          Appearances have limited reach, but have powerful effects.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🤔 Debating\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Chance to gain or lose Influence\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            📸 Photo Op\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases Approval within one Social Group\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🎤 Speechmaking\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases chance of Donations in a single City\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🙋 Town Hall\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Suppresses negative Approval in a single city                     \r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* <CharityPanel world={this.state.world} onFoundCharity={this.foundCharity}></CharityPanel>\r\n        <div>\r\n          <b>Campaign Finances</b> <br/>\r\n          <b>Expenses</b> ${seasonalCost} <b>Surplus</b> ${this.state.world.party.seasonalIncome - seasonalCost}\r\n        </div> */}\r\n      </div>\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Live } from \"../events/Events\";\r\nimport { LawGroup, LawKey, LawData } from \"../simulation/Government\";\r\nimport { BeliefInventory } from \"../simulation/Player\";\r\n\r\n\r\nexport const TreasuryReport: React.FC<{\r\n    treasury: Live<number>\r\n}> = (props) => {\r\n    const [coin, setCoin] = useState(props.treasury.get);\r\n    const update = () => {\r\n        setCoin(props.treasury.get);\r\n    }\r\n    useEffect(() => {\r\n        props.treasury.onChange.subscribe(update);\r\n        return props.treasury.onChange.unsubscribe(update);\r\n    })\r\n    return <div className=\"pad-4p\">\r\n        <div>\r\n            <strong>💰 Treasury: {coin.toFixed(2)}</strong>\r\n        </div>\r\n    </div>\r\n}","import React, { useState } from \"react\";\r\nimport { SecondaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { LawData, LawGroup, LawKey, PlayerCanSeePrereqs, PlayerKnowsPrereq, PlayerMeetsPrereqs, PrereqKey, PrereqString } from \"../simulation/Government\";\r\nimport { BeliefInventory } from \"../simulation/Player\";\r\nimport { TreasuryReport } from \"../widgets/TreasuryReport\";\r\nimport { World } from \"../World\";\r\n\r\nexport const GovernmentPanel: React.FC<{\r\n    world: World,\r\n    enactLaw: (l: LawKey) => void\r\n    revokeLaw: (l: LawKey) => void\r\n}> = (props) => {\r\n    const [view, setView] = useState<LawGroup|'funds'>('Welfare');\r\n    return <div>\r\n        <div className=\"col-2\">\r\n            <h2 className=\"marg-b-0\">Utopia Government</h2>\r\n            <div>\r\n                <div className=\"horizontal blue-orange cylinder f-size-125em marg-t-20\">\r\n                    <button type=\"button\" onClick={() => setView('Welfare')} className={view === 'Welfare' ? 'active' : ''}>\r\n                        🤲 Welfare\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setView('Crime')} className={view === 'Crime' ? 'active' : ''}>\r\n                        🚨 Crime\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setView('Taxation')} className={view === 'Taxation' ? 'active' : ''}>\r\n                        💰 Taxes\r\n                    </button>\r\n                    <button type=\"button\" onClick={() => setView('funds')} className={view === 'funds' ? 'active' : ''}>\r\n                        💸 Funds\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {\r\n            view === 'funds' ? <div>\r\n                <TreasuryReport treasury={props.world.law.treasury}></TreasuryReport>\r\n            </div> : <LawDetailList \r\n                group={view} seenBeliefs={props.world.alien.seenBeliefs.get} beliefs={props.world.alien.beliefInventory.get}\r\n                isLaw={(l) => props.world.law.isLaw(l)}\r\n                enactLaw={(l: LawKey) => props.enactLaw(l)}\r\n                revokeLaw={(l: LawKey) => props.revokeLaw(l)}\r\n            ></LawDetailList>\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport const LawDetailList: React.FC<{\r\n    group: LawGroup,\r\n    seenBeliefs: Map<string, boolean>,\r\n    beliefs: BeliefInventory[],\r\n    isLaw(l: LawKey): boolean,\r\n    enactLaw: (l: LawKey) => void\r\n    revokeLaw: (l: LawKey) => void\r\n}> = (props) => {\r\n    const laws = Object.values(LawData).filter(x => x.group === props.group);\r\n    return <div className=\"pad-4p\">\r\n        <strong>{props.group} Laws</strong>\r\n        <div className=\"horizontal scroll\">\r\n        {\r\n            laws.map((x) => <LawFormula seenBeliefs={props.seenBeliefs} id={x.key} beliefs={props.beliefs} key={x.key} enacted={props.isLaw(x.key)}\r\n                enactLaw={(l) => props.enactLaw(l)} revokeLaw={(l) => props.revokeLaw(l)}>\r\n            </LawFormula>)\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport const LawFormula: React.FC<{\r\n    id: LawKey,\r\n    seenBeliefs: Map<string, boolean>,\r\n    beliefs: BeliefInventory[],\r\n    enacted: boolean,\r\n    enactLaw: (l: LawKey) => void\r\n    revokeLaw: (l: LawKey) => void\r\n}> = (props) => {\r\n    const law = LawData[props.id];\r\n    const canSeeName = PlayerCanSeePrereqs(law.prereqs, props.seenBeliefs);\r\n    const unlocked = PlayerMeetsPrereqs(law.prereqs, props.seenBeliefs);\r\n    return <div className=\"vertical law-formula\">\r\n        <div className=\"horizontal\">\r\n            <div className=\"circular\">\r\n                {canSeeName ? law.icon : '❔'}\r\n            </div>\r\n            <div>\r\n                <strong>\r\n                    {canSeeName ? law.name : 'Unknown'}\r\n                </strong>\r\n                <div>\r\n                    {\r\n                        canSeeName ? <small> {law.description} </small> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"vertical\">\r\n            {\r\n                law.prereqs.map((x) => {\r\n                    const has = PlayerKnowsPrereq(x, props.seenBeliefs);\r\n                    const key = PrereqKey(x);\r\n                    return !has ? <span className=\"law-formula-ingredient unknown\" key={key}>\r\n                        ❔ Unknown\r\n                    </span> : <span className=\"law-formula-ingredient\" key={key}>\r\n                        {PrereqString(x)}\r\n                    </span>\r\n                })\r\n            }\r\n        </div>\r\n        {\r\n            props.enacted ? <button className=\"callout\"  onClick={() => props.revokeLaw(props.id)}>\r\n                🗑️&nbsp;Revoke Active Law\r\n            </button> : <button className=\"callout\" disabled={!unlocked} onClick={() => props.enactLaw(props.id)}>\r\n                {\r\n                    unlocked ? '✒️' : <span className=\"grey\">🔒</span>\r\n                }\r\n                &nbsp;Enact\r\n            </button>\r\n        }\r\n        {props.children}\r\n    </div>;\r\n}","import React from \"react\";\r\n\r\nexport class ConfirmButton extends React.Component<{\r\n    confirmText: string,\r\n    onConfirm: () => void,\r\n    disabled?: boolean,\r\n    className?: string\r\n}, {\r\n    confirming: boolean\r\n}> {\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {\r\n            confirming: false\r\n        }\r\n    }\r\n    click(){\r\n        if (this.state.confirming){\r\n            this.props.onConfirm();\r\n            this.setState({confirming: false});\r\n        } else {\r\n            this.setState({confirming: true});\r\n        }\r\n    }\r\n    render(){\r\n        return <button className={this.props.className} onClick={() => this.click()} disabled={this.props.disabled}>\r\n            { this.state.confirming ? this.props.confirmText : this.props.children}\r\n        </button>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class RobotArm extends React.Component<{\r\n    tool: string,\r\n    classN: string\r\n}, {\r\n\r\n}> {\r\n    render(){\r\n        const style = {};\r\n        return <svg width=\"100\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\" style={style} className={this.props.classN+\" robot-arm\"}>\r\n        <g>\r\n         <title>robotarm</title>\r\n         <rect fill=\"transparent\" id=\"canvas_background\" height=\"302\" width=\"102\" y=\"-1\" x=\"-1\"/>\r\n         <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\r\n          <rect fill=\"url(#gridpattern)\" strokeWidth=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\"/>\r\n         </g>\r\n        </g>\r\n        <g>\r\n         <title>Layer 1</title>\r\n         <rect id=\"svg_2\" height=\"200\" width=\"48\" y=\"91.63545\" x=\"25\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#BBBBBB\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_1\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n         <ellipse ry=\"20\" rx=\"20\" id=\"svg_3\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_4\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n        <ellipse ry=\"20\" rx=\"20\" id=\"svg_5\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\">{this.props.tool}</ellipse>\r\n            \r\n        </g><text y=\"250\" x=\"-20\" fontSize=\"4em\">{this.props.tool}</text>\r\n       </svg>\r\n    }\r\n}","import React from \"react\";\r\nimport { IPlayerData, ITechInfo, Tech, TechData } from \"../simulation/Player\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { RobotArm } from \"../widgets/RobotArm\";\r\nimport './research.css';\r\n\r\nexport class ResearchPanel extends React.Component<{\r\n  player: IPlayerData,\r\n  setResearch: (t: Tech) => void,\r\n  release: () => void\r\n}, {\r\n  toolI: number, toolI2: number, toolI3: number, toolI4: number\r\n}>{\r\n  tools = [\r\n  '📡',\r\n  '🗜️',\r\n  '🔬',\r\n  '💉',\r\n  '🔎',\r\n  '🧼',\r\n  '🧲',\r\n  '🎥',\r\n  '🔧',\r\n  ];\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state = {\r\n      toolI: 0,\r\n      toolI2: 2,\r\n      toolI3: 4,\r\n      toolI4: 1,\r\n    };\r\n  }\r\n  interval?: number;\r\n  loop(lastI: number){\r\n    let i = lastI + 1;\r\n    if (i === this.tools.length)\r\n      i = 0;\r\n    return i;\r\n  }\r\n  componentDidMount(){\r\n    this.interval = window.setInterval(() => {\r\n      this.setState({\r\n        toolI: this.loop(this.state.toolI),\r\n        toolI2: this.loop(this.state.toolI2),\r\n        toolI3: this.loop(this.state.toolI3),\r\n        toolI4: this.loop(this.state.toolI4),\r\n      });\r\n    }, 1000);\r\n  }\r\n  componentWillUnmount(){\r\n    if (this.interval != null)\r\n      window.clearInterval(this.interval);\r\n  }\r\n  setResearch(tech: Tech){\r\n    this.props.setResearch(tech);\r\n  }\r\n  renderTech(tech: ITechInfo){\r\n    const unstarted = this.props.player.techProgress[tech.tech] == null;\r\n    const progress = unstarted ? 0 : this.props.player.techProgress[tech.tech].researchPoints;\r\n    const total = tech.techPoints;\r\n    const style = {width: (Math.min(progress/total*100, 100))+'%'};\r\n    const complete = progress >= total;\r\n    const isCurrent = this.props.player.currentlyResearchingTech === tech.tech;\r\n    const state: '⭕️'|'✅'|'🔬' = complete ? '✅' : isCurrent ? '🔬' : '⭕️';\r\n    const rootClassName = isCurrent ? 'active': 'inactive';\r\n    return <div className={\"card-parent \"+rootClassName} key={tech.tech}>\r\n      <button className=\"card button\" onClick={() => this.setResearch(tech.tech)}>\r\n        <strong>{tech.name}</strong>\r\n        <strong className=\"pull-r f-size-125em\">{state}</strong>\r\n        <div>\r\n          {tech.description}\r\n        </div>      \r\n        <div className=\"bar f-size-12 h-12\">\r\n            <div className=\"bar-inner text-center\" style={style}>\r\n            </div>\r\n            {progress}/{total} tech\r\n        </div>\r\n      </button>\r\n    </div>\r\n  }\r\n  render(){\r\n      const techs = Object.values(TechData);\r\n      return <div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <h2>Research 🧪 Lab</h2>\r\n              <div className=\"vertical\">\r\n                {\r\n                  techs.map((t) => this.renderTech(t))\r\n                }\r\n              </div>\r\n            </div>\r\n          <div className=\"vertical\">\r\n            <div>\r\n              <div className=\"robot\">\r\n                🤖\r\n                <RobotArm classN=\"far-left\" tool={this.tools[this.state.toolI]}></RobotArm>\r\n                <RobotArm classN=\"left\" tool={this.tools[this.state.toolI2]}></RobotArm>\r\n                <RobotArm classN=\"near-right\" tool={this.tools[this.state.toolI3]}></RobotArm>\r\n                <RobotArm classN=\"far-right\" tool={this.tools[this.state.toolI4]}></RobotArm>\r\n              </div>\r\n            </div>\r\n            <div className=\"h-42em\">\r\n              {\r\n                this.props.player.abductedBeans.map((b) => {\r\n                  return <span key={b.key} className=\"victim bean triangle shake\">😨</span>\r\n                })\r\n              }\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              Currently probing {this.props.player.abductedBeans.length} beings for {this.props.player.abductedBeans.length} tech a day\r\n              <p>\r\n                <small>1 tech per research subject per day</small>\r\n              </p>\r\n            </div>\r\n            {\r\n              this.props.player.abductedBeans.length > 0 ? <div className=\"text-right\">\r\n                <ConfirmButton className=\"callout\" onConfirm={() => {this.props.release()}} confirmText=\"-1 Research Subject?\">\r\n                🎈 Release Research Subject\r\n                </ConfirmButton>\r\n              </div> : null\r\n            }\r\n          </div>\r\n        </div>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n  }\r\n}","import React from \"react\";\r\nimport \"./StopPlayFast.css\"\r\n\r\nexport class StopPlayFastButtons extends React.Component<{\r\n    timeScale: number,\r\n    setTimeScale: (s: number) => void\r\n}>{\r\n    render(){\r\n        return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n            ⌛️\r\n            <button type=\"button\" className={this.props.timeScale == 0 ? 'active': ''} onClick={() => this.props.setTimeScale(0)}>⏹</button>\r\n            <button type=\"button\" className={this.props.timeScale == 1 ? 'active': ''} onClick={() => this.props.setTimeScale(1)}>▶️</button>\r\n            <button type=\"button\" className={this.props.timeScale == 2 ? 'active': ''} onClick={() => this.props.setTimeScale(2)}>⏩</button>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport const GeoNetworkButtons: React.FC<{\r\n    activeMain: 'geo' | 'network';\r\n    setActiveMain: (v: 'geo' | 'network') => void\r\n}> = (props) => {\r\n    \r\n    return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n        👁️\r\n        <button type=\"button\" className={props.activeMain == 'geo' ? 'active': ''} onClick={() => props.setActiveMain('geo')}>🌎</button>\r\n        <button type=\"button\" className={props.activeMain == 'network' ? 'active': ''} onClick={() => props.setActiveMain('network')}>🌐</button>\r\n    </div>\r\n    \r\n}","import React from 'react';\r\n\r\nexport const Subtabs: React.FC<{\r\n    additionalClasses?: string,\r\n    active: string,\r\n    options: {icon: string, value: string, text: string, onClick: () => void}[]    \r\n}> = (props) => {\r\n\r\n    return <div className={'horizontal blue-orange cylinder f-size-125em marg-t-20'+(props.additionalClasses||'')}>\r\n        {\r\n            props.options.map((x) => <button type=\"button\" key={x.value} onClick={() => x.onClick()}  className={props.active === x.value ? 'active': ''}>\r\n                {x.icon} {x.text}\r\n            </button>)\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { Subtabs } from \"../chrome/Subtab\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { City } from \"../simulation/City\";\r\nimport { BuildingIcon, BuildingJobIcon, BuildingTypes, HexPoint, IBuilding } from \"../simulation/Geography\";\r\nimport { EnterpriseType, EnterpriseTypeIcon, EnterpriseTypes, isEnterprise } from \"../simulation/Institutions\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\n\r\nexport class HexPanel extends React.Component<{\r\n    city: City,\r\n    hex: HexPoint,\r\n    difficulty: IDifficulty,\r\n    clearHex: () => void,\r\n    build: (where: HexPoint, what: BuildingTypes) => void,\r\n    beam: (where: HexPoint) => void,\r\n    upgrade: (what: IBuilding) => void,\r\n    changeEnterprise: (what: IBuilding) => void,\r\n}, {\r\n\r\n}> {\r\n    emptyPanel(){\r\n        const eHex = this.props.difficulty.cost.emptyHex;\r\n        return <div>\r\n            <div>\r\n                <strong>Empty Lot</strong> in <strong>{this.props.city.name}</strong>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearHex()} >❌</button>\r\n            </div>\r\n            <h3>Build:</h3>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'house')}>\r\n                    {BuildingIcon['house']} House\r\n                    <CostSmall cost={eHex.build.house}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'farm')}>\r\n                    {BuildingIcon['farm']} Farm\r\n                    <CostSmall cost={eHex.build.farm}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'hospital')}>\r\n                    {BuildingIcon['hospital']} Hospital\r\n                    <CostSmall cost={eHex.build.hospital}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'theater')}>\r\n                    {BuildingIcon['theater']} Theater\r\n                    <CostSmall cost={eHex.build.theater}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'park')}>\r\n                    {BuildingIcon['park']} Park\r\n                    <CostSmall cost={eHex.build.park}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <h3>Beings:</h3>\r\n            {this.renderBeamButton()}\r\n        </div>\r\n\r\n    }\r\n    renderBeamButton(){\r\n        return <div className=\"card-parent\">\r\n        <button className=\"card button\" type=\"button\" onClick={() => this.props.beam(this.props.hex)}>\r\n            🛸 Beam In New Subject\r\n            <CostSmall cost={this.props.difficulty.cost.hex.beam} rider=\"+Subject\"></CostSmall>\r\n        </button>\r\n    </div>\r\n    }\r\n    buildingPanel(b: IBuilding){\r\n        const slots = b.usedSlots();\r\n        const free = b.openSlots();\r\n        const hasJobs = b.type != 'park' && b.type != 'nature';\r\n        return <div>\r\n            <strong>{b.upgraded && hasJobs ? 'Dense ': 'Small '}{keyToName[b.type]}</strong> in <strong>{this.props.city.name}</strong>\r\n            <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearHex()}>❌</button>\r\n        {\r\n            b.upgraded && hasJobs ? <div>\r\n                {this.renderDensityWarning(b.type)}\r\n            </div> : null\r\n        }\r\n        {\r\n            <EnterpriseTypePicker building={b} changeEnterprise={this.props.changeEnterprise}></EnterpriseTypePicker>\r\n        }\r\n        {\r\n            (slots.length === 0) ? null : <div>\r\n                <strong>Workers:</strong>\r\n                {\r\n                    slots.map((x) => {\r\n                        return {\r\n                            key: x,\r\n                            bean: this.props.city.beans.get.find((y) => y.key === b.job_slots[x])\r\n                        }\r\n                    }).map((x) => <div key={x.key}>\r\n                        {BuildingJobIcon[b.type]} {x.bean?.name} {isEnterprise(b) && b.enterpriseType === 'company' && x.bean?.key === b.ownerBeanKey ? '🎩' : ''}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        }\r\n        {\r\n            !hasJobs ? null : <div>\r\n                This {keyToName[b.type]} can support {free.length} more jobs.\r\n                {\r\n                    b.upgraded ? null : <span><br/>Upgrade it to add 3 more job slots.</span>\r\n                }\r\n            </div>\r\n        }\r\n        {\r\n            b.upgraded || !hasJobs ? null : <div><div className=\"card-parent\">\r\n                    <button className=\"card button\" type=\"button\" onClick={() => this.props.upgrade(b)}>\r\n                        🛠️ Upgrade\r\n                        <CostSmall cost={this.props.difficulty.cost.hex.upgrade}></CostSmall>\r\n                    </button>\r\n                </div>\r\n                {this.renderDensityWarning(b.type)}\r\n            </div>\r\n        }\r\n        {this.renderBeamButton()}\r\n        </div>\r\n    }\r\n    renderDensityWarning(typ: BuildingTypes){\r\n        if (typ === 'house')\r\n        return <>\r\n            <div className=\"text-center\">\r\n            <small>\r\n            🐮 Parochial subjects may emit 👎<br/>when living in dense buildings\r\n            </small>\r\n        </div> \r\n        <div className=\"text-center\">\r\n            <small>\r\n            🍸 Cosmopolitan subjects may emit 👎<br/>when living in small buildings\r\n            </small>\r\n        </div>\r\n        </>;\r\n        else return <div>\r\n\r\n        </div>\r\n    }\r\n    renderJobs(){\r\n\r\n    }\r\n    render(){\r\n        const building: IBuilding|undefined = this.props.city.book.findBuildingByCoordinate(this.props.hex);\r\n        if (building){\r\n            return this.buildingPanel(building)\r\n        } else {\r\n            return this.emptyPanel();\r\n        }\r\n    }\r\n}\r\n\r\nexport const EnterpriseTypePicker: React.FC<{\r\n    building: IBuilding,\r\n    changeEnterprise: (what: IBuilding) => void,\r\n}> = (props) => {\r\n    const b = props.building;\r\n    if (isEnterprise(b)){\r\n        const options = EnterpriseTypes.map((x) => {\r\n            return {\r\n                icon: EnterpriseTypeIcon[x],\r\n                text: x[0].toUpperCase()+x.substring(1),\r\n                value: x,\r\n                onClick: () => {\r\n                    b.enterpriseType = x;\r\n                    props.changeEnterprise(b);\r\n                }\r\n            }\r\n        })\r\n        return <Subtabs active={b.enterpriseType} options={options}></Subtabs>\r\n    } else {\r\n        return null\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\n\r\nexport interface StringDropdownPS{\r\n    options: Array<string>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any,\r\n    titleCase?: boolean\r\n}\r\ninterface StringDropdownS{\r\n    key: any;\r\n}\r\n\r\nexport class StringDropdown extends React.Component<StringDropdownPS, StringDropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n        this.setState({key: e.target.value})\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    protected getTextForOption(data: string): string{\r\n        if (this.props.titleCase){\r\n            data = data[0].toUpperCase()+data.slice(1);\r\n        }\r\n        return data;\r\n    }\r\n    options(){\r\n        return this.props.options.map((str) => {\r\n            return <option value={str} key={str} title={this.getTitleForOption(str)}>\r\n                {this.getTextForOption(str)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: string): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\n","import React, { ReactElement } from \"react\";\r\nimport { BeliefsAll, IBeliefData, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { StringDropdown } from \"../widgets/StringDropdown\";\r\nimport { TraitIcon } from \"../World\";\r\nimport './beliefs.css';\r\n\r\n\r\n\r\nexport const BeliefWidget: React.FC<{\r\n    data: IBeliefData,\r\n    cost?: number,\r\n    leftButton?: ReactElement,\r\n    titleView: ReactElement,\r\n    bottomView: ReactElement\r\n}> = (props) => {\r\n    return <div className=\"belief\">\r\n        <div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {props.data.icon}\r\n                </div>\r\n                {\r\n                    props.leftButton\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    {\r\n                        props.titleView\r\n                    }\r\n                    {\r\n                        props.cost ? \r\n                        <span className=\"pull-r\">{props.cost}🧠</span>\r\n                        : null\r\n                    }\r\n                </div>\r\n                {\r\n                props.data.description ? props.data.description.split(';').map((x, i) => \r\n                    <small className=\"marg-b-6\" key={i}> {x}\r\n                    </small>\r\n                    ) : null\r\n                }\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                       props.bottomView\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport class EditBeliefInput extends React.Component<{\r\n    data: IBeliefData,\r\n    frozen?: boolean,\r\n    divergent?: boolean,\r\n    available: number,\r\n    cost: number,\r\n    wash: () => void\r\n}, {\r\n\r\n}>{\r\n\r\n    render(){\r\n        return <div className=\"belief\"><div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {this.props.data.icon}\r\n                </div>\r\n                {\r\n                    this.props.frozen ? null : <ConfirmButton className=\"callout pad-4 marg-0\"\r\n                        confirmText={'-'+this.props.cost.toString()+'🧠?'} disabled={this.props.available < this.props.cost} onConfirm={this.props.wash}>\r\n                    🚿 <small>Wash</small>\r\n                    </ConfirmButton>\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    <strong title={this.props.data.description} className={this.props.divergent ? 'divergent marg-r-6': 'marg-r-6'}>\r\n                        {this.props.data.noun}\r\n                    </strong>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{this.props.data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {/* {\r\n                        RenderIdealBadges(this.props.data.idealPro || [], 'pos')\r\n                    }\r\n                    {\r\n                        RenderIdealBadges(this.props.data.idealCon || [], 'neg')\r\n                    }  */}\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}\r\n\r\nconst SortedBeliefs = BeliefsAll.slice().sort((a, b) => a.localeCompare(b));\r\nexport class AddBeliefInput extends React.Component<{\r\n    available: number,\r\n    cost: number,\r\n    add: (b: TraitBelief) => void\r\n}, {\r\n    belief: TraitBelief,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            belief: 'Neuroticism'\r\n        }\r\n    }\r\n    render(){\r\n        const data = SecondaryBeliefData[this.state.belief]\r\n        return <div className=\"belief\"><div className=\"horizontal badger add\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {data.icon}\r\n                </div>\r\n                <ConfirmButton className=\"callout grow-0 pad-4 marg-0\" disabled={this.props.available < this.props.cost} \r\n                    confirmText={'-'+this.props.cost.toString()+'🧠?'} onConfirm={() => this.props.add(this.state.belief)}>\r\n                    💉 <small>Implant</small>\r\n                </ConfirmButton>\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">                    \r\n                    <StringDropdown titleCase={true}\r\n                    options={SortedBeliefs} \r\n                    value={this.state.belief}\r\n                    onChange={(a: string) => {\r\n                        console.log(a);\r\n                        this.setState({belief: a as TraitBelief})\r\n                    }}\r\n                    ></StringDropdown>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        (data.idealPro || []).map((x) => <span className=\"pos badge align-mid\" key={x}>+{TraitIcon[x]}</span>)\r\n                    }\r\n                    {\r\n                        (data.idealCon || []).map((x) => <span className=\"neg badge align-mid\" key={x}>-{TraitIcon[x]}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { BeliefSubject, BeliefVerb, TraitBelief, SecondaryBeliefData, Belief, PrimaryBeliefData, NarrativeBeliefData, IsBeliefDivergent } from \"../simulation/Beliefs\";\r\nimport './modals.css';\r\nimport { EmoteIcon, TraitCommunity, TraitFaith, TraitIdeals, World } from \"../World\";\r\nimport { AddBeliefInput, BeliefWidget, EditBeliefInput } from \"./BeliefRow\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { LiveList } from \"../events/Events\";\r\nimport { BeliefInventory } from \"../simulation/Player\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\n\r\nexport const TraitInventoryList: React.FC<{\r\n    dogmatic: boolean,\r\n    live: LiveList<BeliefInventory>,\r\n    implant: (t: TraitBelief) => void\r\n}> = (props) => {\r\n    const [list, setList] = useState(props.live.get);\r\n    const onChange = (b: BeliefInventory[]) => {\r\n        setList(b);\r\n    };\r\n    useEffect(() => {\r\n        props.live.onChange.subscribe(onChange);\r\n        return () => props.live.onChange.unsubscribe(onChange)\r\n    });\r\n\r\n    return <>\r\n        {list.map((x) => <BeliefWidget \r\n        key={x.trait} data={SecondaryBeliefData[x.trait]} titleView={<strong>{SecondaryBeliefData[x.trait].noun}</strong>}\r\n        leftButton={\r\n            <ConfirmButton onConfirm={() => props.implant(x.trait)} className=\"callout marg-0\" confirmText=\"-1 🧠?\" disabled={x.charges < 1 || props.dogmatic}>\r\n                Implant\r\n            </ConfirmButton>\r\n        }\r\n        bottomView={<span>{x.charges} 🧠</span>}>\r\n        </BeliefWidget>)}\r\n    </>\r\n};\r\n\r\nexport class BrainwashingContent extends React.Component<{\r\n    world: World,\r\n    beanID: number|null,\r\n    washCommunity: (bean: Bean, c: TraitCommunity) => void,\r\n    washMotive: (bean: Bean, m: TraitIdeals) => void,\r\n    washNarrative: (bean: Bean, n: TraitFaith) => void,\r\n    washBelief: (bean: Bean, b: TraitBelief) => void,\r\n    implantBelief: (bean: Bean, b: TraitBelief) => void\r\n}, {\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const bean = this.props.world.beans.get.find(x => x.key == this.props.beanID);\r\n        const isScanned =  this.props.beanID && this.props.world.alien.scanned_bean[this.props.beanID];\r\n        if (bean == null) return <div></div>;\r\n        const dogmatic = bean.believesIn('Dogmatism');\r\n        return <div>\r\n            <div className=\"horizontal fancy-header\">\r\n                <div>\r\n                    BRAIN\r\n                </div>\r\n                <div className=\"emoji-3\">\r\n                🧠🚿\r\n                </div>\r\n                <div>\r\n                    WASH\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p className=\"pad-4p\">\r\n                    <strong>{bean.name}</strong> has {bean.discrete_sanity.toFixed(0)} sanity 🧠. \r\n                    {\r\n                        bean.sanity === 'stressed' || bean.sanity === 'disturbed' ?\r\n                            <small className=\"pull-r\">(Low sanity 🧠 causes {EmoteIcon['unhappiness']}; Negative sanity 🧠 causes extremely negative traits)</small>\r\n                        : null\r\n                    }\r\n                </p>\r\n                {\r\n                    dogmatic ? <div className=\"text-center\">\r\n                        🐶 Dogmatic subjects cannot change their minds\r\n                    </div> : null\r\n                }\r\n                { isScanned ? <div className=\"horizontal scroll\">\r\n                    <EditBeliefInput\r\n                        available={bean.discrete_sanity} frozen={dogmatic}\r\n                        wash={() => this.props.washCommunity(bean, bean.community)} \r\n                        cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                        data={PrimaryBeliefData[bean.community]}\r\n                    ></EditBeliefInput>\r\n                    <EditBeliefInput\r\n                        available={bean.discrete_sanity}  frozen={dogmatic}\r\n                        wash={() => this.props.washMotive(bean, bean.ideals)} \r\n                        cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                        data={PrimaryBeliefData[bean.ideals]}\r\n                    ></EditBeliefInput>\r\n                    <EditBeliefInput\r\n                        available={bean.discrete_sanity} frozen={dogmatic}\r\n                        wash={() => this.props.washNarrative(bean, bean.faith)} \r\n                        cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                        data={NarrativeBeliefData[bean.faith]}\r\n                    ></EditBeliefInput>\r\n                    {\r\n                        bean.beliefs.map((b) => <EditBeliefInput key={b}\r\n                        available={bean.discrete_sanity} frozen={dogmatic && b != 'Dogmatism'}\r\n                        divergent={IsBeliefDivergent(b, this.props.world.party.ideals, this.props.world.party.community)}\r\n                        wash={() => this.props.washBelief(bean, b)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0}\r\n                            data={SecondaryBeliefData[b]}\r\n                        >\r\n                        </EditBeliefInput>)\r\n                    }\r\n                    {/* {\r\n                        dogmatic ? null : <AddBeliefInput\r\n                            available={bean.discrete_sanity}\r\n                            add={(b) => this.props.implantBelief(bean, b)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean_brain.brainimplant_secondary.sanity || 0}\r\n                        ></AddBeliefInput>\r\n                    } */}\r\n                </div> : <div className=\"text-center\">🛰️ Scan this subject to reveal its Traits! </div>}\r\n                <h3 className=\"pad-4p\">\r\n                    🧠 Trait Inventory\r\n                </h3>\r\n                <div className=\"horizontal scroll\">\r\n                    <TraitInventoryList \r\n                        live={this.props.world.alien.beliefInventory} \r\n                        dogmatic={dogmatic} \r\n                        implant={(t: TraitBelief) => this.props.implantBelief(bean, t)}></TraitInventoryList>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\n\r\nexport class TimelyEventToggle extends React.Component<{\r\n    event: PubSub<IEvent>,\r\n    eventIcon: string,\r\n    eventClass: string\r\n}, {\r\n eventCount: number,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.props.event.subscribe(this.onEvent);\r\n        this.state = {\r\n            eventCount: 0\r\n        };\r\n    }\r\n    onEvent = (e: IEvent) => {\r\n        this.setState({eventCount: this.state.eventCount+1});\r\n        window.setTimeout(() => {\r\n            this.setState({\r\n                eventCount: this.state.eventCount-1\r\n            });\r\n        }, 3000);\r\n    }\r\n    render(){\r\n        return <span>\r\n            {this.state.eventCount < 1 ? this.props.children : <span className={this.props.eventClass}>{this.props.eventIcon}</span>}\r\n        </span>\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { LiveList } from \"../events/Events\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { MarketTraitListing } from \"../simulation/MarketTraits\";\r\nimport { BeliefInventory, Player } from \"../simulation/Player\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\nimport { EmoteIcon } from \"../World\";\r\n\r\n export class MarketPanel extends React.Component<{\r\n     player: Player,\r\n     market: LiveList<MarketTraitListing>,\r\n     buyEnergy: (amount: number) => void,\r\n     buyBots: (amount: number) => void,\r\n     scrubHedons: () => void,\r\n     buyTrait: (l: MarketTraitListing) => void\r\n }>{\r\n     render(){\r\n        return <div>\r\n            <div className=\"text-center\">\r\n                <strong>🌌 Galactic 😨 Emotion 💰 Market</strong>\r\n            </div>\r\n            <p>\r\n                <small>\r\n                    The premier exchange for ⚡️, 🤖,  and {EmoteIcon['happiness']}!\r\n                </small>\r\n            </p>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" onClick={() => this.props.buyEnergy(1)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.energy)}>\r\n                    +1 ⚡️ Energy\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.energy} qty={1} ></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" onClick={() => this.props.buyEnergy(5)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.energy, 5)}>\r\n                    +5 ⚡️ Energy\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.energy} qty={5} ></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" onClick={() => this.props.buyBots(1)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.bots)}>\r\n                    +1 🤖 Bot\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots} qty={1} ></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" onClick={() => this.props.buyBots(5)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.bots, 5)}>\r\n                    +5 🤖 Bots\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" onClick={() => this.props.scrubHedons()}\r\n                    disabled={this.props.player.hedons.amount >= 0 || !this.props.player.canAfford(this.props.player.difficulty.cost.market.scrubHedons)}>\r\n                    Remove 💢 Negative Hedons\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.scrubHedons} qty={1} ></CostSmall>\r\n                </button>\r\n                {/* <button className=\"card button\" onClick={() => this.props.buyBots(5)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.bots, 5)}>\r\n                    +5 🤖 Bots\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n                </button> */}\r\n            </div>\r\n            <div>\r\n                \r\n                <small>\r\n                    <i>Current 🧠 Traits for sale:</i>\r\n                </small>\r\n            </div>\r\n            <div className=\"short-scroll\">\r\n                {\r\n                    <MarketTraits hedons={this.props.player.hedons.amount} live={this.props.market} buy={this.props.buyTrait}></MarketTraits>\r\n                }\r\n            </div>\r\n        </div>\r\n     }\r\n }\r\n\r\n \r\nexport const MarketTraits: React.FC<{\r\n    live: LiveList<MarketTraitListing>,\r\n    hedons: number,\r\n    buy: (l: MarketTraitListing) => void\r\n}> = (props) => {\r\n    const [list, setList] = useState(props.live.get);\r\n    const onChange = (b: MarketTraitListing[]) => {\r\n        setList(b);\r\n    };\r\n    useEffect(() => {\r\n        props.live.onChange.subscribe(onChange);\r\n        return () => props.live.onChange.unsubscribe(onChange)\r\n    });\r\n    return <>\r\n    {\r\n    list.map((l, i) => {\r\n        const t = SecondaryBeliefData[l.trait];\r\n        const className = 'belief-name '+t.rarity;\r\n        return <div className=\"card-parent\" key={i}>\r\n            <button className=\"card button\" onClick={() => props.buy(l)} disabled={props.hedons < (l.cost.hedons || 0)}>\r\n                <span className={className}>\r\n                    {t.icon} {t.noun}\r\n                </span>\r\n                <CostSmall cost={l.cost}></CostSmall>\r\n            </button>\r\n        </div>\r\n    })\r\n    }\r\n    </>\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { World, TraitJob } from \"../World\";\r\nimport { IBeliefData, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { BeliefWidget } from \"./BeliefRow\";\r\nimport { LiveList, LiveMap } from \"../events/Events\";\r\nimport { BeliefInventory } from \"../simulation/Player\";\r\n\r\ninterface TraitsP {\r\n  seenBeliefs: LiveMap<string, boolean>,\r\n  beliefInventory: LiveList<BeliefInventory>,\r\n}\r\nexport class TraitsReport extends React.Component<TraitsP, {\r\n  hoveredTrait?: TraitBelief\r\n}> {\r\n    constructor(props: TraitsP) {\r\n      super(props);\r\n      this.state = {\r\n      }\r\n    }\r\n    render() {\r\n      const beliefs: IBeliefData[] = [];\r\n      this.props.seenBeliefs.get.forEach((val, key) => {\r\n        if (SecondaryBeliefData[key as TraitBelief] != null){\r\n          beliefs.push(SecondaryBeliefData[key as TraitBelief]);\r\n        }\r\n      });\r\n      beliefs.sort((a, b) => a.noun.localeCompare(b.noun));\r\n      return (\r\n        <div className=\"vertical\">\r\n          <div className=\"pad-4p\">\r\n            <h2>Subject 🧠 Traits</h2>\r\n          </div>\r\n          <div className=\"col-2-30-60\">\r\n            <div>\r\n              <div className=\"scroll\">\r\n                <div className=\"scoll-sticky-h\">\r\n                  <strong>Trait Inventory</strong>\r\n                </div>\r\n                {\r\n                  this.props.beliefInventory.get.length < 1 ? <div>\r\n                    No Traits! <br/>\r\n                    😵 Brainwash your subjects  <br/>\r\n                    or buy from the 🛍️ Market\r\n                    </div> : this.props.beliefInventory.get.map((x) => <div key={x.trait}>\r\n                          <div>\r\n                            <strong>\r\n                              {SecondaryBeliefData[x.trait].icon} {SecondaryBeliefData[x.trait].noun}\r\n                            </strong>\r\n                          </div>\r\n                          <div>\r\n                            This can be implanted {x.charges} more times\r\n                          </div>\r\n                        </div>)\r\n                }\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"modal-scroll-v\">\r\n                <div className=\"sticky-t-0\">\r\n                  <strong>Discovered Traits</strong>\r\n                </div>\r\n                {\r\n                  beliefs.length < 1 ? <div>\r\n                    No Traits! <br/>\r\n                    🛰️ Scan some of your subjects.\r\n                  </div> : beliefs.map((x) => <BeliefWidget key={x.noun} data={x} cost={0}\r\n                  titleView={<strong>{x.noun}</strong>}\r\n                  bottomView={<span></span>}\r\n                ></BeliefWidget>)\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from 'react';\r\nimport { EmoteIcon } from '../World';\r\n\r\nexport const GreetingPanel: React.FC = (props) => {\r\n    return <div>\r\n        <div className=\"col-2\">\r\n            <div>\r\n                <h3>Welcome to the</h3>\r\n                <h2>👽 Alien 🌍 Utopia 🔬 Laboratory</h2>\r\n                <div>\r\n                    Thank you for joining the <select><option>Human</option></select> Cultivation Division of the <strong>🌌 Galactic Xenosensation Federation!</strong> Your interdimensional petri dish is ready for farming.\r\n                </div>\r\n                <p>\r\n                    As a <select><option>Human Emotion Farmer</option></select>, you are required to execute the following duties:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        Construct <strong>🏠 Buildings</strong> for your <select><option>Human</option></select> subjects.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🛸 Beam In</strong> <select><option>Human</option></select> subjects for cultivation.\r\n                    </li>\r\n                    <li>\r\n                        Harvest your subject's positive <strong>{EmoteIcon['happiness']} Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Sell the Hedons on the <br/><strong>🌌 Galactic 😨 Emotion 💰 Market</strong>.\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p>\r\n                    The GXF's records indicate <select><option>Humans</option></select> are a<br/><u>mentally malleable</u> and <u>physically fragile</u> species. Try the following cultivation methods:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <strong>🛰️ Scan</strong> your subject's primitive minds for information on what pleases them.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🚿 Brainwash</strong> subjects to change their <strong>🧠&nbsp;Traits</strong>. Try to add Traits that emit more <strong>{EmoteIcon['happiness']}&nbsp;Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Avoid letting your subjects die or endure pain; this makes <strong>{EmoteIcon['unhappiness']}&nbsp;Antihedons</strong> which are less profitable.\r\n                    </li>\r\n                    <li>\r\n                        Use your knowledge of Traits to modify the farm's <strong>🗳️&nbsp;Government</strong> to maximize Hedon generation.\r\n                    </li>\r\n                    <li>\r\n                        Use the GXF's <strong>🧪 Research Lab</strong> to upgrade your farm, when stocked with <strong>👾 Abducted</strong> subjects.\r\n                    </li>\r\n                </ul>\r\n                <h3>\r\n                    🌌 Galactic Xenosensation Federation <br/>\r\n                    <div className=\"text-right\">\r\n                        <small>\r\n                        {/* <i>THE market leader in corporeal sensations.</i> */}\r\n                        <i>1 trillion sensations. 100% organic. 100% gourmet.</i>\r\n                        </small>\r\n                    </div>\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport './chrome/chrome.css';\r\nimport { World, TraitGood, Trait, TraitCommunity, TraitIdeals, TraitFaith } from './World';\r\nimport { GenerateWorld, GeneratePartyHQ, GenerateBuilding, GenerateBean, GetRandom } from './WorldGen';\r\nimport { Modal } from './widgets/Modal';\r\nimport { OverviewPanel } from './right-panel/OverviewPanel';\r\nimport { Bean } from './simulation/Bean';\r\nimport { WorldTile } from './petri-ui/WorldTile';\r\nimport { EconomyReport } from './modal-content/EconomyReport';\r\nimport { CharityPanel } from './modal-content/CharityPanel';\r\nimport { PoliticalEffect, Policy, CityPartyHQ, IPolicy } from './simulation/Politics';\r\nimport { EventsPanel } from './right-panel/Events';\r\nimport { BeanPanel } from './right-panel/BeanPanel';\r\nimport { FoundParty, FoundPartyS } from './modal-content/FoundParty';\r\nimport { PartyOverview } from './modal-content/PartyOverview';\r\nimport { BubbleNumberText, BubbleSeenTraitsText } from './widgets/BubbleText';\r\nimport { Season, Now, Hour } from './simulation/Time';\r\nimport { SocialGraph } from './widgets/SocialGraph';\r\nimport { CapsuleLabel } from './widgets/CapsuleLabel';\r\n\r\n\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { GoalsPanel } from './right-panel/Goals';\r\nimport { CampaignsPanel } from './modal-content/Campaigns';\r\nimport { GovernmentPanel } from './modal-content/Gov';\r\nimport { ResearchPanel } from './modal-content/Research';\r\nimport { GeoNetworkButtons, StopPlayFastButtons } from './widgets/StopPlayFast';\r\nimport { BuildingTypes, HexPoint, IBuilding, Point, transformPoint } from './simulation/Geography';\r\nimport { HexPanel } from './right-panel/HexPanel';\r\nimport { City, UFO } from './simulation/City';\r\nimport { BrainwashingContent } from './modal-content/Brainwashing';\r\nimport { SecondaryBeliefData, TraitBelief } from './simulation/Beliefs';\r\nimport { TimelyEventToggle } from './widgets/TimelyEventToggle';\r\nimport { LawAxis, LawKey } from './simulation/Government';\r\nimport { Tech } from './simulation/Player';\r\nimport { IEvent } from './events/Events';\r\nimport { WorldSound } from './WorldSound';\r\nimport { MarketPanel } from './right-panel/MarketPanel';\r\nimport { TraitsReport } from './modal-content/TraitsReport';\r\nimport { GreetingPanel } from './modal-content/GreetingPanel';\r\nimport { MarketTraitListing } from './simulation/MarketTraits';\r\n\r\nexport const keyToName: { [key in Trait | BuildingTypes]: string } = {\r\n  state: 'Collectivist', ego: 'Independent',\r\n  trad: 'Elitist', prog: 'Progressive',\r\n  circle: 'Brunette', square: 'Blonde', triangle: 'Redhead',\r\n  rocket: 'Futuristic', dragon: 'Mythical', music: 'Dramatic', noFaith: 'Nihilistic',\r\n  starving: 'Starving', hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\r\n  homeless: 'Homeless', sleepy: 'Sleepy', awake: 'Awake', rested: 'Rested',\r\n  sick: 'Sick', sickly: 'Sickly', bruised: 'Bruised', fresh: 'Robust',\r\n  sane: 'Sane', stressed: 'Confused', disturbed: 'Disturbed', 'psychotic': 'Psychotic',\r\n  house: 'House', hospital: 'Hospital', farm: 'Farm', theater: 'Theater', church: 'Church', courthouse: 'Courthouse', park: 'Park', nature: 'Elysian Scenery'\r\n};\r\n\r\nexport type ModalView = 'greeting' | 'economy' | 'campaign' | 'party_creation' | 'gov' | 'polisci' | 'brainwash' | 'traits';\r\ninterface AppPs {\r\n}\r\ninterface AppState {\r\n  world: World,\r\n  activeCityID: number | null;\r\n  activeBeanID: number | null;\r\n  activeHex: HexPoint | null;\r\n  activeModal: ModalView | null;\r\n  activeMain: 'geo' | 'network';\r\n  activeRightPanel: 'events' | 'overview' | 'goals' | 'market';\r\n  timeScale: number;\r\n  spotlightEvent: IEvent | undefined;\r\n  cursor?: Point;\r\n}\r\nexport const SfxContext = React.createContext<WorldSound|undefined>(undefined);\r\n\r\nconst LogicTickMS = 2000;\r\nconst SpotlightDurationTimeMS = 5000;\r\nconst ChargePerWash = 3;\r\nconst ChargePerMarket = 3;\r\nclass App extends React.Component<AppPs, AppState>{\r\n  constructor(props: AppPs) {\r\n    super(props);\r\n    this.state = {\r\n      world: GenerateWorld(),\r\n      activeCityID: null,\r\n      activeBeanID: null,\r\n      activeHex: null,\r\n      activeMain: 'geo',\r\n      activeModal: 'greeting',\r\n      activeRightPanel: 'overview',\r\n      timeScale: 0,\r\n      spotlightEvent: undefined\r\n    };\r\n    this.state.world.calculateComputedState();\r\n    this.state.world.bus.death.subscribe(this.onDeath);\r\n  }\r\n  private previousTimeMS: DOMHighResTimeStamp = 0;\r\n  private logicTickAccumulatorMS: number = 0;\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.keyupHandler, false);\r\n    window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n      this.previousTimeMS = time;\r\n      window.requestAnimationFrame(this.tick);\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.keyupHandler);\r\n  }\r\n  tick = (timeMS: DOMHighResTimeStamp) => {\r\n    // Compute the delta-time against the previous time\r\n    const deltaTimeMS = (timeMS - this.previousTimeMS) * this.state.timeScale;\r\n\r\n    // Update the previous time\r\n    this.previousTimeMS = timeMS;\r\n    if (deltaTimeMS > 0) {\r\n      this.logicTickAccumulatorMS += deltaTimeMS;\r\n      this.state.world.simulate_beans(deltaTimeMS);\r\n      this.state.world.simulate_pickups(deltaTimeMS);\r\n\r\n      if (this.logicTickAccumulatorMS > LogicTickMS) {\r\n        this.state.world.simulate_world();\r\n        this.setState({ world: this.state.world });\r\n        this.logicTickAccumulatorMS = 0;\r\n      }\r\n    }\r\n    window.requestAnimationFrame(this.tick);\r\n  }\r\n  cheatMode: boolean = false;\r\n  keyupHandler = (event: KeyboardEvent) => {\r\n    if (event.key === ' ') {\r\n      if (this.state.timeScale > 0) {\r\n        this.setState({ timeScale: 0 });\r\n      } else {\r\n        this.setState({ timeScale: 1 });\r\n      }\r\n    } else if (event.key === 'Escape') {\r\n      this.setState({activeModal: null});\r\n    } else if (this.cheatMode && event.key === 'B') {\r\n      this.state.world.alien.energy.amount += (this.state.world.alien.difficulty.cost.hex.beam.energy || 0);\r\n      this.beam(this.state.world.cities[0], { q: 0, r: 0 });\r\n    } else if (this.cheatMode && event.key === 'Q') {\r\n      if (this.state.world.cities[0].book.getBuildings().filter(x => x.type === 'farm').length < 1){\r\n        this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.emptyHex.build.farm.energy || 0;\r\n        this.state.world.alien.bots.amount += this.state.world.alien.difficulty.cost.emptyHex.build.farm.bots || 0;\r\n        this.build(this.state.world.cities[0], { q: 1, r: 1 }, 'farm');\r\n        this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.emptyHex.build.house.energy || 0;\r\n        this.state.world.alien.bots.amount += this.state.world.alien.difficulty.cost.emptyHex.build.house.bots || 0;\r\n        this.build(this.state.world.cities[0], { q: 1, r: 0 }, 'house');\r\n        this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.emptyHex.build.hospital.energy || 0;\r\n        this.state.world.alien.bots.amount += this.state.world.alien.difficulty.cost.emptyHex.build.hospital.bots || 0;\r\n        this.build(this.state.world.cities[0], { q: 0, r: 1 }, 'hospital');\r\n      }\r\n      this.state.world.alien.energy.amount += (this.state.world.alien.difficulty.cost.hex.beam.energy || 0) * 4;\r\n      this.beam(this.state.world.cities[0], { q: 0, r: 0 });\r\n      this.beam(this.state.world.cities[0], { q: 1, r: 0 });\r\n      this.beam(this.state.world.cities[0], { q: 0, r: 1 });\r\n      this.beam(this.state.world.cities[0], { q: 1, r: 1 });\r\n    } else if (this.cheatMode && event.key === 'S') {\r\n      this.state.world.beans.get.forEach((b) => {\r\n        if (this.state.world.alien.difficulty.cost.bean.scan.energy){\r\n          if (this.state.world.alien.energy.amount < this.state.world.alien.difficulty.cost.bean.scan.energy)\r\n            this.state.world.alien.energy.amount += this.state.world.alien.difficulty.cost.bean.scan.energy;\r\n        }\r\n        this.scan(b);\r\n      });\r\n    }\r\n    this.cheatMode = event.shiftKey && event.key === 'C';\r\n  }\r\n  foundParty = (state: FoundPartyS) => {\r\n    this.state.world.party.name = state.name;\r\n    this.state.world.party.slogan = state.slogan;\r\n    this.state.world.cities[0].name = state.name;\r\n    if (state.community)\r\n      this.state.world.party.community = state.community;\r\n    if (state.ideal)\r\n      this.state.world.party.ideals = state.ideal;\r\n    const city = this.state.world.cities.find((x) => x.key == state.cityKey);\r\n    if (city) {\r\n      GeneratePartyHQ(city, this.state.world.party);\r\n    }\r\n    this.state.world.calculateComputedState();\r\n    this.setState({\r\n      world: this.state.world,\r\n      activeModal: null\r\n    });\r\n  }\r\n  get difficulty() {\r\n    return this.state.world.alien.difficulty;\r\n  }\r\n  build = (city: City, where: HexPoint, what: BuildingTypes) => {\r\n    const cost = this.difficulty.cost.emptyHex.build[what];\r\n    if (this.state.world.alien.canAfford(cost)) {\r\n      this.state.world.alien.purchase(cost);\r\n      GenerateBuilding(city, what, where, city.economy);\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  changeEnterprise = (city: City, what: IBuilding) => {\r\n    \r\n    this.setState({ world: this.state.world });\r\n  }\r\n  upgrade = (city: City, what: IBuilding) => {\r\n    const cost = this.difficulty.cost.hex.upgrade;\r\n    if (this.state.world.alien.tryPurchase(cost)) {\r\n      what.upgraded = true;\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  beam = (city: City, where: HexPoint) => {\r\n    const cost = this.difficulty.cost.hex.beam;\r\n    if (this.state.world.alien.canAfford(cost)) {\r\n      this.state.world.alien.purchase(cost);\r\n      const newUFO = new UFO(city.ufos.length, where, 'beam-in');\r\n      city.ufos.push(newUFO);\r\n      window.setTimeout(() => {\r\n        city.beans.push(GenerateBean(city, where));\r\n        this.setState({ world: this.state.world });\r\n      }, 3000);\r\n\r\n      this.setState({ world: this.state.world }, () => {\r\n        this.removeUFO(city, newUFO.key);\r\n      });\r\n    }\r\n  }\r\n  buyBots = (amount: number) => {\r\n    const cost = this.difficulty.cost.market.resource.bots;\r\n    if (this.state.world.alien.tryPurchase(cost, amount)) {\r\n      this.state.world.alien.bots.amount += amount;\r\n      this.state.world.alien.bots.change.publish({change:amount});\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  buyEnergy = (amount: number) => {\r\n    const cost = this.difficulty.cost.market.resource.bots;\r\n    if (this.state.world.alien.tryPurchase(cost, amount)) {\r\n      this.state.world.alien.energy.amount += amount;\r\n      this.state.world.alien.energy.change.publish({change:amount});\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  scrubHedons = () => {\r\n    const cost = this.difficulty.cost.market.scrubHedons;\r\n    if (this.state.world.alien.tryPurchase(cost)) {\r\n      const old = this.state.world.alien.hedons.amount;\r\n      this.state.world.alien.hedons.amount = 0;\r\n      this.state.world.alien.hedons.change.publish({change: -old});\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  buyTrait = (l: MarketTraitListing) => {\r\n    if (this.state.world.alien.tryPurchase(l.cost)) {\r\n      \r\n      const existing = this.state.world.alien.beliefInventory.get.find((x) => x.trait === l.trait);\r\n      if (existing) {\r\n        existing.charges += ChargePerMarket;\r\n        this.state.world.alien.beliefInventory.set([...this.state.world.alien.beliefInventory.get]);\r\n      } else\r\n        this.state.world.alien.beliefInventory.push({trait: l.trait, charges: ChargePerMarket});\r\n    }\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  removeUFO(city: City, key: number) {\r\n    window.setTimeout(() => {\r\n      const myUFOI = city.ufos.findIndex((x) => x.key === key);\r\n      if (myUFOI > -1)\r\n        city.ufos.splice(myUFOI, 1);\r\n    }, 7000);\r\n  }\r\n  foundCharity = (good: TraitGood, name: string, budget: number) => {\r\n    this.state.world.addCharity(good, name, budget);\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  vaporize = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.vaporize)) {\r\n      if (bean.city) {\r\n        bean.die('vaporization');\r\n      }\r\n      this.setState({ world: this.state.world });\r\n    }\r\n  }\r\n  abduct = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.abduct)) {\r\n      bean.abduct(this.state.world.alien);\r\n      bean.city?.beans.remove(bean);\r\n      this.setState({ world: this.state.world });\r\n    }\r\n  }\r\n  enactLaw = (law: LawKey) => {\r\n    this.state.world.law.enact(law);\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  revokeLaw = (law: LawKey) => {\r\n    this.state.world.law.enact(law);\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  releaseBean = () => {\r\n    if (this.state.world.alien.abductedBeans.length > 0) {\r\n      const lucky_bean = this.state.world.alien.abductedBeans.shift();\r\n      if (lucky_bean instanceof Bean) {\r\n        lucky_bean.lifecycle = 'alive';\r\n        lucky_bean.city?.beans.push(lucky_bean);\r\n      } else {\r\n        window.alert(\"releasing data beans is unimplemented\");\r\n      }\r\n    }\r\n  }\r\n  setResearch = (t: Tech) => {\r\n    this.state.world.alien.currentlyResearchingTech = t;\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  scan = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.scan)) {\r\n      this.state.world.alien.scanned_bean[bean.key] = true;\r\n      bean.beliefs.forEach((b) => {\r\n        if (!this.state.world.alien.seenBeliefs.get.has(b)){\r\n          this.state.world.alien.seenBeliefs.add(b, true);\r\n        }\r\n      });\r\n      this.state.world.sfx.play('scan');\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  washCommunity = (bean: Bean, a: TraitCommunity) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal)) {\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n      if (bean.community === 'ego')\r\n        bean.community = 'state';\r\n      else bean.community = 'ego';\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  washMotive = (bean: Bean, a: TraitIdeals) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal)) {\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n      if (bean.ideals === 'prog')\r\n        bean.ideals = 'trad';\r\n      else bean.ideals = 'prog';\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  washNarrative = (bean: Bean, a: TraitFaith) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal)) {\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n      const oldFaith = bean.faith;\r\n      while (bean.faith === oldFaith)\r\n        bean.faith = GetRandom(['rocket', 'dragon', 'music', 'noFaith']);\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  washBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_secondary)) {\r\n      bean.beliefs.splice(\r\n        bean.beliefs.indexOf(a), 1\r\n      );\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0);\r\n      const existing = this.state.world.alien.beliefInventory.get.find((x) => x.trait === a);\r\n      if (existing) {\r\n        existing.charges += ChargePerWash;\r\n        this.state.world.alien.beliefInventory.set([...this.state.world.alien.beliefInventory.get]);\r\n      } else\r\n        this.state.world.alien.beliefInventory.push({trait: a, charges: ChargePerWash});\r\n      this.state.world.sfx.play('wash_out');\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  implantBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (bean.canPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainimplant_secondary) && \r\n      this.state.world.alien.beliefInventory.get.filter(x => x.trait == a && x.charges > 0)) {\r\n      bean.beliefs.push(a);\r\n      this.state.world.alien.useCharge(a);\r\n      this.state.world.sfx.play('wash_in');\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainimplant_secondary.sanity || 0);\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  setPolicy = (axis: LawAxis, policy: IPolicy) => {\r\n    this.state.world.party.platform[axis] = policy;\r\n    this.state.world.calculateComputedState();\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  onDeath = (event: IEvent) => {\r\n    this.state.world.sfx.play('death');\r\n    this.startSpotlight(event);\r\n  }\r\n  private timescaleBeforeSpotlight: number = 1;\r\n  startSpotlight(event: IEvent) {\r\n    this.timescaleBeforeSpotlight = this.state.timeScale;\r\n    this.setState({\r\n      spotlightEvent: event,\r\n      timeScale: 0\r\n    }, () => {\r\n      setTimeout(() => this.endSpotlight(), SpotlightDurationTimeMS);\r\n    });\r\n  }\r\n  endSpotlight() {\r\n    this.setState({\r\n      timeScale: this.timescaleBeforeSpotlight,\r\n      spotlightEvent: undefined\r\n    });\r\n  }\r\n  getPanel() {\r\n    switch (this.state.activeRightPanel) {\r\n      case 'overview':\r\n        if (this.state.activeCityID == null) {\r\n          return <OverviewPanel beans={this.state.world.beans} utopia={this.state.world.party} clearCity={() => this.setState({ activeCityID: null })} alien={this.state.world.alien}></OverviewPanel>\r\n        } else {\r\n          const city = this.state.world.cities.find((x) => x.key == this.state.activeCityID);\r\n          if (city) {\r\n\r\n            if (this.state.activeHex != null) {\r\n              return <HexPanel city={city} hex={this.state.activeHex} difficulty={this.state.world.alien.difficulty}\r\n                clearHex={() => this.setState({ activeHex: null })}\r\n                beam={(where) => this.beam(city, where)}\r\n                upgrade={(what) => this.upgrade(city, what)}\r\n                build={(where, what) => { this.build(city, where, what) }}\r\n                changeEnterprise={(what) => this.changeEnterprise(city, what)}\r\n                ></HexPanel>\r\n            }\r\n            else if (this.state.activeBeanID != null) {\r\n              const bean = city.beans.get.find((y) => y.key == this.state.activeBeanID);\r\n              if (bean)\r\n                return <BeanPanel bean={bean} city={city} alien={this.state.world.alien}\r\n                  economy={this.state.world.economy} party={this.state.world.party} bus={this.state.world.bus} law={this.state.world.law}\r\n                  scan={this.scan} vaporize={this.vaporize}\r\n                  brainwash={() => this.setState({ activeModal: 'brainwash' })}\r\n                  abduct={this.abduct}\r\n                  gift={() => this.setState({ activeModal: 'brainwash' })}\r\n                  clearCity={() => this.setState({ activeCityID: null, activeBeanID: null })}></BeanPanel>\r\n            }\r\n\r\n            return <OverviewPanel beans={city?.beans} utopia={this.state.world.party} city={city} clearCity={() => this.setState({ activeCityID: null })} alien={this.state.world.alien}></OverviewPanel>\r\n          }\r\n          else\r\n            return <div>\r\n            </div>\r\n        }\r\n      case 'goals':\r\n        return <GoalsPanel player={this.state.world.alien} progress={this.state.world.alien}></GoalsPanel>\r\n      case 'events':\r\n        return <EventsPanel events={this.state.world.bus.buffer} selectBean={(beankey?: number) => {\r\n          if (beankey)\r\n            this.setState({ activeCityID: this.state.world.cities[0].key, activeBeanID: beankey, activeHex: null, activeRightPanel: 'overview' })\r\n        }}></EventsPanel>\r\n      case 'market': \r\n        return <MarketPanel buyEnergy={this.buyEnergy} buyBots={this.buyBots} scrubHedons={this.scrubHedons} buyTrait={this.buyTrait}\r\n         player={this.state.world.alien} market={this.state.world.marketTraitsForSale}></MarketPanel>\r\n    }\r\n  }\r\n  renderGeo() {\r\n    const COL = this.state.world.economy.getCostOfLiving();\r\n    return this.state.world.cities.map((t) => {\r\n      return (\r\n        <WorldTile tile={t} city={t} costOfLiving={COL} key={t.key} spotlightEvent={this.state.spotlightEvent} activeBeanID={this.state.activeBeanID}\r\n          onClick={() => this.setState({ activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: null })}\r\n          onBeanClick={(b) => this.setState({ activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: b.key })}\r\n          onHexClick={(hex) => { this.setState({ activeCityID: t.key, activeHex: hex, activeBeanID: null, activeRightPanel: 'overview' }) }}\r\n        ></WorldTile>\r\n      )\r\n    });\r\n  }\r\n  render() {\r\n    const season = Season[this.state.world.date.season];\r\n    return (\r\n      <div className=\"canvas\"><SfxContext.Provider value={this.state.world.sfx}>\r\n        {\r\n          this.state.activeMain === 'network' ? <div className=\"canvas\">\r\n            {/* <div className=\"horizontal max-w-500 m-t-2em\">\r\n              <button type=\"button\">\r\n                😎 Influence\r\n              </button>\r\n              <button type=\"button\">\r\n                🚩 Party Preference\r\n              </button>\r\n              <button type=\"button\">\r\n                📈 Demographics\r\n              </button>\r\n            </div> */}\r\n            <SocialGraph costOfLiving={this.state.world.economy.getCostOfLiving()}\r\n              beans={this.state.world.beans}\r\n              onClick={(b) => this.setState({ activeCityID: b.cityKey, activeRightPanel: 'overview', activeBeanID: b.key, activeHex: null })} ></SocialGraph>\r\n          </div> : <TransformWrapper\r\n            defaultScale={1}\r\n            wheel={{ step: 48 }}>\r\n            <TransformComponent>\r\n              <div className=\"world\">\r\n                {this.renderGeo()}\r\n              </div>\r\n            </TransformComponent>\r\n          </TransformWrapper>\r\n        }\r\n        <div className=\"overlay\">\r\n          <Modal show={this.state.activeModal == 'greeting'} onClick={() => this.setState({ activeModal: null })}>\r\n            <GreetingPanel></GreetingPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'party_creation'} onClick={() => this.setState({ activeModal: null })} hideCloseButton={true}>\r\n            <FoundParty cities={this.state.world.cities} onFound={this.foundParty}></FoundParty>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'gov'} onClick={() => this.setState({ activeModal: null })}>\r\n            <GovernmentPanel world={this.state.world} enactLaw={this.enactLaw} revokeLaw={this.revokeLaw}></GovernmentPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'polisci'} onClick={() => this.setState({ activeModal: null })}>\r\n            <ResearchPanel release={this.releaseBean} setResearch={this.setResearch} player={this.state.world.alien}></ResearchPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'campaign'} onClick={() => this.setState({ activeModal: null })}>\r\n            <CampaignsPanel></CampaignsPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({ activeModal: null })}>\r\n            {(this.state.activeModal == 'economy' ? <EconomyReport world={this.state.world}></EconomyReport> : '')}\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'traits'} onClick={() => this.setState({ activeModal: null })}>\r\n            <TraitsReport seenBeliefs={this.state.world.alien.seenBeliefs} beliefInventory={this.state.world.alien.beliefInventory}\r\n            ></TraitsReport>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'brainwash'} onClick={() => this.setState({ activeModal: null })}>\r\n            {(this.state.activeModal == 'brainwash' ? <BrainwashingContent\r\n              world={this.state.world} beanID={this.state.activeBeanID}\r\n              washCommunity={this.washCommunity}\r\n              washMotive={this.washMotive}\r\n              washNarrative={this.washNarrative}\r\n              washBelief={this.washBelief}\r\n              implantBelief={this.implantBelief}>\r\n            </BrainwashingContent> : '')}\r\n          </Modal>\r\n          <div className=\"left\">\r\n            <div className=\"top\">\r\n              <span>👽 Alien 🌍 Utopia 🔬 Lab</span>\r\n              <span>&nbsp;Year {this.state.world.date.year},&nbsp;{season} {this.state.world.date.day} {this.renderHour()}</span>\r\n              <StopPlayFastButtons timeScale={this.state.timeScale} setTimeScale={(n: number) => { this.setState({ timeScale: n }) }}></StopPlayFastButtons>\r\n              <GeoNetworkButtons setActiveMain={(v) => this.setState({ activeMain: v })} activeMain={this.state.activeMain} ></GeoNetworkButtons>\r\n              <span></span>\r\n            </div>\r\n            <div className=\"bottom\">\r\n              <BubbleNumberText changeEvent={this.state.world.alien.energy.change} icon=\"⚡️\">\r\n                <CapsuleLabel icon=\"⚡️\" label=\"Energy\">\r\n                  {this.state.world.alien.energy.amount.toFixed(1)}\r\n                </CapsuleLabel>\r\n              </BubbleNumberText>\r\n              <BubbleNumberText changeEvent={this.state.world.alien.bots.change} icon=\"🤖\">\r\n                <CapsuleLabel icon=\"🤖\" label=\"Bots\">\r\n                  {this.state.world.alien.bots.amount.toFixed(1)}\r\n                </CapsuleLabel>\r\n              </BubbleNumberText>\r\n              <BubbleNumberText changeEvent={this.state.world.alien.hedons.change} icon=\"👍\">\r\n                <CapsuleLabel icon=\"👍\" label=\"Hedons\">\r\n                  {this.state.world.alien.hedons.amount.toFixed(0)}\r\n                </CapsuleLabel>\r\n              </BubbleNumberText>\r\n              {/* <BubbleText changeEvent={this.state.world.alien.tortrons.change} icon=\"💔\">\r\n                <CapsuleLabel icon=\"💔\" label=\"Tortrons\">\r\n                  {this.state.world.alien.tortrons.amount.toFixed(0)}\r\n                </CapsuleLabel>\r\n              </BubbleText> */}\r\n              <span>\r\n                <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'economy' })}>📊 State of the Utopia</button>\r\n                <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'gov' })}>🗳️ Gov</button>\r\n                <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'polisci' })}>🧪 Research</button>\r\n                \r\n                <BubbleSeenTraitsText changeEvent={this.state.world.alien.seenBeliefs.onAdd} icon=\"🧠\">\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'traits' })}>🧠 Traits</button>\r\n                </BubbleSeenTraitsText>\r\n                {/* <button type=\"button\" onClick={() => this.setState({activeModal:'campaign'})}>Campaigns</button> */}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"full-width-tabs\">\r\n              <button onClick={() => this.setState({ activeRightPanel: 'overview' })}>📈 Info</button>\r\n              <button onClick={() => this.setState({ activeRightPanel: 'market' })}>🛍️ Market</button>\r\n              <button onClick={() => this.setState({ activeRightPanel: 'events' })}>\r\n                <TimelyEventToggle event={this.state.world.bus.speechcrime} eventIcon=\"🚨\" eventClass=\"police-siren\">📣</TimelyEventToggle> Events\r\n              </button>\r\n              <button onClick={() => this.setState({ activeRightPanel: 'goals' })}>🏆 Goals</button>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n              {this.getPanel()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </SfxContext.Provider></div>\r\n    )\r\n  }\r\n  renderHour(): string {\r\n    switch (this.state.world.date.hour) {\r\n      default: return '☀️';\r\n      case Hour.Evening: return '🌇';\r\n      case Hour.Morning: return '🌄';\r\n      case Hour.Midnight: return '🌙';\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}