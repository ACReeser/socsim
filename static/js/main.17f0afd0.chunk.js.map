{"version":3,"sources":["events/Events.tsx","simulation/Utils.tsx","simulation/Geography.tsx","simulation/Occupation.tsx","petri-ui/Building.tsx","simulation/Priorities.tsx","simulation/Agent.tsx","simulation/Beliefs.tsx","simulation/Time.tsx","simulation/Bean.tsx","WorldGen.tsx","simulation/Economy.tsx","World.tsx","simulation/Politics.tsx","simulation/Institutions.tsx","simulation/Government.tsx","Game.tsx","simulation/Player.tsx","WorldSound.tsx","simulation/City.tsx","widgets/Modal.tsx","widgets/NeedReadout.tsx","right-panel/OverviewPanel.tsx","petri-ui/AnimatedBean.tsx","petri-ui/AnimatedUFO.tsx","widgets/particles.tsx","petri-ui/AnimatedSpotlight.tsx","petri-ui/AnimatedPickup.tsx","petri-ui/Mover.tsx","petri-ui/WorldTile.tsx","modal-content/EconomyReport.tsx","right-panel/Events.tsx","widgets/CardButton.tsx","right-panel/BeanPanel.tsx","modal-content/FoundParty.tsx","widgets/UniversalWidgets.tsx","modal-content/PartyOverview.tsx","widgets/BubbleText.tsx","widgets/SocialGraph.tsx","widgets/CapsuleLabel.tsx","right-panel/Goals.tsx","modal-content/Campaigns.tsx","modal-content/Gov.tsx","widgets/ConfirmButton.tsx","widgets/RobotArm.tsx","modal-content/Research.tsx","widgets/StopPlayFast.tsx","widgets/CostSmall.tsx","right-panel/HexPanel.tsx","widgets/StringDropdown.tsx","modal-content/BeliefRow.tsx","modal-content/Brainwashing.tsx","widgets/TimelyEventToggle.tsx","right-panel/MarketPanel.tsx","modal-content/TraitsReport.tsx","modal-content/GreetingPanel.tsx","App.tsx","serviceWorker.js","index.js"],"names":["PubSub","onPublish","callbacks","args","this","forEach","c","callback","push","splice","indexOf","ChangePubSub","EventBus","buffer","sendToBuffer","event","length","pop","unshift","speechcrime","nojobslots","birth","death","Live","current","onChange","newValue","publish","LiveList","onPush","child","set","get","all","i","LiveMap","onAdd","newKey","copy","Map","k","v","key","shuffle","array","counter","index","Math","floor","random","temp","MathClamp","input","min","max","Hex","q","r","hex_directions","hex_direction","direction","hex_neighbor","hex","dir","hex_ring","center","radius","a","results","cube","b","hex_add","j","move_towards","target","maxDistanceDelta","x","y","magnitude","sqrt","accelerate_towards","mover","acceleration","maxSpeed","colDistance","brake","delta","point","velocity","accelerator_coast","lerp","t","cube_lerp","z","cube_round","rx","round","ry","rz","x_diff","abs","y_diff","z_diff","cube_to_axial","axial_to_cube","cube_linedraw","N","cube_distance","layout_flat","f0","f1","f2","f3","b0","b1","b2","b3","start_angle","origin_point","hex_to_pixel","size","origin","h","M","polarToPoint","p","cos","az","sin","getBuildingTransform","geo","type","byType","coordByID","transformPoint","hex_size","petriOrigin","background","transform","BuildingJobSlot","Building","occupied_slots","empty_slots","upgraded","job_slots","0","1","2","3","4","5","Object","keys","filter","s","map","beanKey","usedSlots","slot","BuildingIcon","UpgradedBuildingIcon","BuildingJobIcon","GoodToBuilding","JobToBuilding","Geography","byCoord","house","farm","hospital","theater","courthouse","church","park","nature","movers","bean","ufo","pickup","numberOfRings","hexes","concat","hex_spiral","petriRadius","where","building","undefined","slot_size","getSlotOffset","hexDirectionToJobSlot","first","second","third","fourth","fifth","sixth","PetriBuilding","d","jobSlot","hasJob","props","className","style","city","slots","name","React","Component","PriorityNode","value","priority","DumbPriorityQueue","_values","values","sort","shift","PriorityQueue","index1","index2","parentIndex","swap","bubbleUp","elementPriority","leftChildIndex","rightChildIndex","leftChildPriority","rightChildPriority","indexToSwap","poppedNode","bubbleDown","AgentState","data","agent","elapsed","deltaMS","difficulty","newState","_act","Elapsed","act","intent","good","GoodIcon","ActivityDisplay","IdleState","Bean","priorities","GetPriorities","top","dequeue","travelState","substituteIntent","TravelState","createFromIntent","maybeParanoid","desiredGoodState","canBuy","maybeCrime","destinations","pos","newPos","speed","location","ActToState","create","nearby","getNearestNeighbors","maybeChat","targets","nn","chat","getRandomChat","state","ChatState","participation","destination","RouteRandom","job","GetRandom","destinationKey","Route","IntentToDestination","createFromDestination","WorkState","economy","law","work","BuyState","sinceLastAttemptMS","attempts","_bought","buy","tryBuy","tState","lastChatMS","Date","now","maybeAntagonised","maybeEnthused","RelaxState","durationMS","believesIn","discrete_fun","emote","CrimeState","steal","GetPriority","inventory_priority","market","getBeansListings","cityKey","JobToGood","quantity","wealth_priority","cash","costOfLiving","discrete_food","bean_life","vital_thresh","food","sufficient","discrete_stamina","shelter","discrete_health","medicine","lastHappiness","queue","node","enqueue","buildingType","address","start","nearestHex","pt","pixel_to_hex","offset","PrimaryBeliefData","prog","noun","adj","icon","description","trad","ego","NarrativeBeliefData","rocket","dragon","music","noFaith","SecondaryBeliefData","Diligence","Natalism","Charity","Progressivism","Libertarianism","Parochialism","Cosmopolitanism","Capitalism","Socialism","Communism","Naturalism","Hedonism","Gluttony","Paranoia","Authority","Anarchism","Greed","Gossip","Antagonism","Enthusiasm","Neuroticism","idealCon","idealPro","Dogmatism","IsBeliefDivergent","belief","utopiaMotive","utopiaCommunity","reduce","isDivergent","con","IsIdealDivergent","Season","Hour","BeliefsAll","dob","year","season","day","hour","bornInPetri","sanity","discrete_sanity","lifecycle","activity_queue","markers","ethnicity","community","ideals","buildingKey","faith","beliefs","partyLoyalty","lastSentiment","lastPartySentiment","ticksSinceLastSale","ticksSinceLastRelax","ticksSinceLastEmote","fairGoodPrice","buyFood","buyMeds","fun","buyFun","buyHousing","jobQueue","onAct","amount","multiplier","econ","homeCity","mods","TraitToModifier","health","reason","mod","majorityEthnicity","find","MaslowHappinessScore","Deficient","getCostOfLiving","party","result","GetHappiness","getHappinessModifiers","sent","getSentimentModifiers","myGood","getFairGoodPrice","traits","policies","policy","fx","mag","bad","idea","canBaby","preachBelief","crimeReason","roll","chance","trySetJob","eventBus","trigger","message","tryGetJob","unsetJob","cost","needy","least","targetBeanKey","GoodToThreshold","beans","newJob","mostInDemandJob","produceAndPrice","groceries","tryTransact","bought","stolen","housing","alive","wasNotHungry","wasNotSick","maybeDie","meds","babyChance","breedBean","isInCrisis","unhappyChance","happyChance","EmotionSanity","addEmotePickup","direct","canDonate","threshold","baseChance","cause","die","pains","GetRandomNumber","player","abductedBeans","val","abundant","base","AllGoods","Economy","OrderBook","charity","unfulfilledSeasonalDemand","totalSeasonalDemand","totalSeasonalSupply","buyer","minDemand","maxDemand","listing","getLowestPriceListing","actualDemand","price","transact","listings","subtractFromListing","seller","existing","addNewListing","getOrgsListings","inventory","addNewOrgListing","last","GoodToJob","g","lucky","getRandomCitizen","sellerCityKey","sellerBeanKey","supply","demand","fullListings","l","numberOfSamePriceListings","lowPrice","cKey","bKey","sellerOrganizationKey","sale","org","BaseParty","playerKey","organizations","slogan","availablePolicies","proposedPolicy","availableCampaigns","activeCampaigns","leadership","activeHQs","platform","institutionKey","seasonalBudget","parentInstitution","beansHelped","addCharity","LawAxisData","crime_theo","LawData","group","axis","hint","Government","lawTree","laws","Taxation","Welfare","Economics","Crime","Culture","triadToString","sign","qty","costs","energy","bots","hedons","tortrons","join","DefaultDifficulty","emptyHex","build","beam","upgrade","bean_brain","brainwash_ideal","brainimplant_secondary","brainwash_secondary","scan","abduct","gift","empower","vaporize","siphon","scrubHedons","resource","common","uncommon","rare","report_card_progression","Goals","found_utopia","text","check","world","build_house_n_farm","cities","reward","beam_3","Number_Starting_City_Pop","alien","scanned_bean","set_policy","brainwash","Curriculums","GradeWorld","Happiness","BooleanAverageGrader","o","Prosperity","Stability","Dogma","GradeUpToNumber","speechcrimes","date","RubricDescription","number","allowance","maximum","NormalizedScoreToGrade","grade","normNumber","GradeWeights","A","B","C","D","F","TechData","tech","techPoints","Player","seenBeliefs","beliefInventory","income","change","next_grade","goals","goalProgress","pastReportCards","workingReportCard","techProgress","currentlyResearchingTech","researchPoints","canAfford","purchase","goal","done","step","SFXToFile","SoundBuffer","file","volume","ended","audio","play","aud","Audio","process","WorldSound","lib","sfx","PickupPhysics","World","bus","institutions","Spring","onChat","publishEvent","onBeanDie","e","historicalBeans","onCitizenDie","onEmote","subscribe","list","institute","calculate","calculateBeliefs","Evening","inflate","resetYearlyCounters","hasResearched","resetSeasonalDemand","age","maybeBaby","tryFindRandomJob","getTaxesAndDonations","calculateComputedState","checkGoals","checkReportCard","listener","exit","enter","ChangeState","Act","pickups","collide","pickupMagnetPoint","amt","EmotionWorth","remove","onAnimate","percent","sum","yearlyInflationDollars","richest","obj","winner","yearsPartyDonations","budget","TraitIcon","hapMod","Sufficient","Abundant","EmoteIcon","reportIdeals","_report","reportCommunity","defWin","beanPropGet","avg","stash","trait","UFO","action","Pickup","City","url","ufos","pickupSeed","houses","partyHQ","environment","openSlots","tryFreeBean","id","shuffled","deadBean","parent","GenerateBean","split","count","circle","square","triangle","source","squared","pow","randomBuffer","Uint32Array","window","crypto","getRandomValues","randomNumber","ceil","choices","PI","GenerateBuilding","newBuilding","numberOf","addBuilding","GenerateWorld","GenerateCity","previousCityCount","newCity","cityPopulation","previousBeanCount","hexPoint","newBean","beanBeliefCount","StartingCash","getStartingPoint","Modal","show","hideCloseButton","onClick","closeButtonText","children","getButton","NeedReadout","dire","need","dire_style","width","full","full_style","header","keyToName","OverviewPanel","utopia","clearCity","avg_happy","avg_cash","avg_approval","report","toFixed","AxisReadout","maj","AnimatedBean","animate","setState","spin","face","getFace","speech","getSpeech","delaySeedSec","paused","static","classes","sitStill","selected","animationDelay","title","stopPropagation","getPurchase","AnimatedUFO","showBeam","setTimeout","Particles","animations","finishedAnimationCount","parts","particleCount","createRef","active","opacity","duration","easing","delay","onfinish","ref","spotlightAnimations","faceOV","beanClasses","particles","AnimatedSpotlight","lastTickMS","currentTime","tickHandle","tick","timeMS","deltaTimeMS","getSubtype","lastValid","anim","requestAnimationFrame","time","cancelAnimationFrame","msg","includes","replace","disabled","AnimatedPickup","useState","played","setPlayed","useContext","SfxContext","useEffect","Mover","el","useRef","onMove","unsubscribe","PickupList","setList","supportedBuildings","WorldTile","mtn_transforms","spotlightEvent","xy","onMouseEnter","onHexClick","activeBeanID","onBeanClick","left","u","buildings","renderBuildings","mtns","onMouseLeave","height","cx","cy","stroke","fill","renderHexes","renderSpotlight","median","half","EconomyReport","food_median","health_median","shelter_median","wealth_total","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","jobs","unemployed","jobless","reducer","farmer","builder","doc","entertainer","EventsPanel","events","alert","shouldEventJumpToBean","selectBean","href","CardButton","thin","singleLine","subtext","TraitToCard","BeanPanel","faceOverride","_resetFace","support","innerView","scanned","beliefTable","happyTable","display","ActivityIcon","divergent","colSpan","bind","chanceToDonate","renderTraits","renderInner","FoundParty","onName","onSlogan","onCity","ideal","members","onBigFourChange","checked","onCommunity","currentTarget","onIdeal","onFound","RenderIdealBadges","comm","effect","str","output","RenderBadge","RenderIdealBadge","PartyOverview","overView","detailView","collapsedGroups","collapsedAxis","view","partOfGroup","ldata","incompatibilities","rowClassName","divs","keyGetter","item","collection","groupBy","isGroup","renderDetailLaw","detailGroup","toggleGroup","detailLaw","renderOver","renderLeadership","renderFinances","renderLaws","groups","getLawsByGroup","renderHeader","renderRows","renderLawDetail","renderDetailGroup","BubbleNumberText","bubbleSeed","ev","positive","bubbles","string","changeEvent","bubbleClass","BubbleSeenTraitsText","sub","setBubbles","onEvent","useBubbles","SocialGraph","CapsuleLabel","classN","label","GoalsPanel","progress","tooltip","renderReward","reportCard","renderGoal","margin","CampaignsPanel","GovernmentPanel","ConfirmButton","confirming","onConfirm","click","confirmText","RobotArm","xmlns","overflow","strokeWidth","tool","fontSize","ResearchPanel","tools","interval","toolI","toolI2","toolI3","toolI4","lastI","setInterval","loop","clearInterval","setResearch","total","complete","isCurrent","rootClassName","techs","renderTech","release","StopPlayFastButtons","timeScale","setTimeScale","CostSmall","HexPanel","eHex","clearHex","renderBeamButton","free","hasJobs","renderDensityWarning","typ","lookupBuilding","buildingPanel","emptyPanel","StringDropdown","hidden","titleCase","toUpperCase","slice","options","getTitleForOption","getTextForOption","required","BeliefWidget","leftButton","titleView","bottomView","EditBeliefInput","frozen","toString","available","wash","SortedBeliefs","localeCompare","AddBeliefInput","add","console","log","BrainwashingContent","beanID","dogmatic","washCommunity","washMotive","washNarrative","washBelief","implantBelief","TimelyEventToggle","eventCount","eventClass","eventIcon","MarketPanel","buyEnergy","buyBots","TraitsReport","charges","GreetingPanel","hungry","sated","stuffed","podless","crowded","homeowner","sick","bruised","fresh","sane","confused","mad","createContext","App","previousTimeMS","logicTickAccumulatorMS","simulate_beans","simulate_pickups","simulate_world","keyupHandler","shiftKey","foundParty","activeModal","what","tryPurchase","newUFO","removeUFO","old","foundCharity","releaseBean","lucky_bean","has","loseSanity","oldFaith","setPolicy","onDeath","startSpotlight","timescaleBeforeSpotlight","activeCityID","activeHex","activeMain","activeRightPanel","document","addEventListener","removeEventListener","myUFOI","findIndex","endSpotlight","beankey","COL","tile","renderNetwork","renderGeo","Provider","defaultScale","wheel","main","renderHour","n","getPanel","Morning","Midnight","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.17f0afd0.chunk.js","sourcesContent":["import { IChatData } from \"../simulation/Agent\";\r\nimport { Point } from \"../simulation/Geography\";\r\n\r\nexport type EventTrigger = 'speechcrime'|'birth'|'death'|'nojobslots';\r\n\r\nexport interface IEvent{\r\n    icon: string;\r\n    message: string;\r\n    beanKey?: number;\r\n    cityKey?: number;\r\n    point?: Point;\r\n    trigger: EventTrigger;\r\n}\r\n\r\nexport class PubSub<T>{\r\n    constructor(private onPublish?: (args: T) => void){}\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public publish(args: T){\r\n        if (this.onPublish)\r\n            this.onPublish(args);\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    public unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\nexport type IEventBus = {[key in EventTrigger]: PubSub<IEvent>};\r\nexport interface IEventBuffer{\r\n    buffer: IEvent[]   \r\n}\r\nexport const EventBusBufferLength = 20; \r\nexport class EventBus implements IEventBus, IEventBuffer{\r\n    buffer: IEvent[] = [];\r\n    private sendToBuffer = (event: IEvent) => {\r\n        if (this.buffer.length > EventBusBufferLength){\r\n            this.buffer.pop();\r\n        }\r\n        this.buffer.unshift(event);\r\n    }\r\n    speechcrime = new PubSub<IEvent>(this.sendToBuffer);\r\n    nojobslots = new PubSub<IEvent>(this.sendToBuffer);\r\n    birth = new PubSub<IEvent>(this.sendToBuffer);\r\n    death = new PubSub<IEvent>(this.sendToBuffer);\r\n\r\n}\r\n\r\nexport class Live<T>{\r\n    public readonly onChange = new PubSub<T>();\r\n    constructor(protected current: T){}\r\n    public set(newValue: T){\r\n        this.current = newValue;\r\n        this.onChange.publish(newValue);\r\n    }\r\n    public get get(): T{\r\n        return this.current;\r\n    }\r\n}\r\nexport class LiveList<T> extends Live<Array<T>>{\r\n    public readonly onPush = new PubSub<T>();\r\n    public push(child: T): void{\r\n        this.set([...this.get, child]);\r\n        this.onPush.publish(child);\r\n    }\r\n    public remove(child: T): void{\r\n        const all = this.get;\r\n        const i = all.indexOf(child);\r\n        if (i > -1){\r\n            all.splice(i, 1);\r\n            this.set([...all]);\r\n        }\r\n    }\r\n}\r\nexport class LiveMap<K, V> extends Live<Map<K, V>>{\r\n    public readonly onAdd = new PubSub<{k: K, v: V}>();\r\n    public add(newKey: K, newValue: V){\r\n        const copy = new Map<K, V>(this.current);\r\n        copy.set(newKey, newValue);\r\n        this.set(copy);\r\n        this.onAdd.publish({k: newKey, v: newValue});\r\n    }\r\n    public at(key: K): V|undefined{\r\n        return this.current.get(key);\r\n    }\r\n}","\r\nexport function shuffle(array: Array<any>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function MathClamp(input: number, min: number, max: number): number{\r\n    return Math.max(Math.min(input, max), min)\r\n}\r\n\r\nexport function groupBy<T>(list: T[], keyGetter: (val: T) => string|number): Map<string|number, T[]> {\r\n    const map = new Map<string|number, T[]>();\r\n    list.forEach((item) => {\r\n         const key = keyGetter(item);\r\n         const collection = map.get(key);\r\n         if (!collection) {\r\n             map.set(key, [item]);\r\n         } else {\r\n             collection.push(item);\r\n         }\r\n    });\r\n    return map;\r\n}","import { TraitGood, TraitJob } from \"../World\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nexport interface HexPoint{\r\n    q: number;\r\n    r: number;\r\n}\r\nexport class Hex implements HexPoint{\r\n    constructor(public q: number, public r: number){}\r\n}\r\nexport const hex_directions: HexPoint[] = [\r\n    new Hex(+1, 0), new Hex(+1, -1), new Hex(0, -1), \r\n    new Hex(-1, 0), new Hex(-1, +1), new Hex(0, +1), \r\n];\r\nexport function hex_direction(direction: number): HexPoint{\r\n    return hex_directions[direction]\r\n}\r\n\r\nexport function hex_neighbor(hex: HexPoint, direction: number): HexPoint{\r\n    var dir = hex_direction(direction)\r\n    return new Hex(hex.q + dir.q, hex.r + dir.r)\r\n}\r\nexport function hex_distance(a: HexPoint, b: HexPoint): number{\r\n    return (Math.abs(a.q - b.q) \r\n          + Math.abs(a.q + a.r - b.q - b.r)\r\n          + Math.abs(a.r - b.r)) / 2\r\n}\r\nexport function hex_add(a: HexPoint, b: HexPoint): HexPoint {\r\n    return new Hex(a.q + b.q, a.r + b.r);\r\n}\r\nexport function hex_scale(a: HexPoint, k: number): HexPoint {\r\n    return new Hex(a.q * k, a.r * k);\r\n}\r\nexport function hex_ring(center: HexPoint, radius: number): HexPoint[]{\r\n    var results: HexPoint[] = [];\r\n    // this code doesn't work for radius == 0; can you see why?\r\n    var cube = hex_add(center, \r\n                        hex_scale(hex_direction(4), radius));\r\n    for (let i = 0; i < 6; i++) {\r\n        for (let j = 0; j < radius; j++) {\r\n            results.push(cube)\r\n            cube = hex_neighbor(cube, i);       \r\n        }\r\n    }\r\n    return results;\r\n}\r\nexport function hex_spiral(center: HexPoint, radius: number): HexPoint[]{\r\n    var results = [center];\r\n    for (let k = 0; k < radius; k++) {\r\n        results = results.concat(hex_ring(center, k));\r\n        //console.log(results);   \r\n    }\r\n    return results;\r\n}\r\n\r\nexport function move_towards(current: Point, target: Point, maxDistanceDelta: number)\r\n{\r\n    const a: Point = {x: target.x - current.x, y: target.y - current.y};\r\n    const magnitude = Math.sqrt(a.x * a.x + a.y * a.y);\r\n    if (magnitude <= maxDistanceDelta || magnitude == 0)\r\n    {\r\n        return target;\r\n    }\r\n    return {\r\n        x: current.x + a.x / magnitude * maxDistanceDelta,\r\n        y: current.y + a.y / magnitude * maxDistanceDelta,\r\n    };\r\n}\r\ninterface IAccelerater {point:Point,velocity:Point};\r\nexport function accelerate_towards(\r\n    mover: IAccelerater, \r\n    target: Point, \r\n    acceleration: number,\r\n    maxSpeed: number, \r\n    colDistance: number, \r\n    brake: Point): boolean\r\n{\r\n    const delta: Point = {\r\n        x: target.x - mover.point.x, \r\n        y: target.y - mover.point.y\r\n    };\r\n    const magnitude = Math.sqrt(delta.x * delta.x + delta.y * delta.y);\r\n    if (magnitude < colDistance) return true;\r\n\r\n    delta.x /= magnitude;\r\n    delta.y /= magnitude;\r\n\r\n    mover.velocity.x += delta.x * acceleration;\r\n    mover.velocity.y += delta.y * acceleration;\r\n    mover.velocity.x = MathClamp(mover.velocity.x, -maxSpeed, maxSpeed);\r\n    mover.velocity.y = MathClamp(mover.velocity.y, -maxSpeed, maxSpeed);\r\n\r\n    accelerator_coast(mover, brake);\r\n    return false;\r\n}\r\nexport function accelerator_coast(\r\n    current: IAccelerater, \r\n    brake: Point): void\r\n{\r\n    current.velocity.x *= brake.x;\r\n    current.velocity.y *= brake.y;\r\n\r\n    current.point.x += current.velocity.x;\r\n    current.point.y += current.velocity.y;\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number{\r\n    return a + (b - a) * t\r\n}\r\n\r\nexport function vector_lerp(a: Point, b: Point, t: number): Point{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t)\r\n    };\r\n}\r\nfunction cube_lerp(a: CubicPoint, b: CubicPoint, t: number): CubicPoint{\r\n    return {\r\n        x: lerp(a.x, b.x, t),\r\n        y: lerp(a.y, b.y, t),\r\n        z: lerp(a.z, b.z, t)\r\n    };\r\n}\r\nfunction cube_distance(a: CubicPoint, b: CubicPoint): number{\r\n    return (Math.abs(a.x - b.x) + Math.abs(a.y - b.y) + Math.abs(a.z - b.z)) / 2\r\n}\r\nfunction cube_round(cube: CubicPoint): CubicPoint{\r\n    var rx = Math.round(cube.x);\r\n    var ry = Math.round(cube.y);\r\n    var rz = Math.round(cube.z);\r\n\r\n    var x_diff = Math.abs(rx - cube.x)\r\n    var y_diff = Math.abs(ry - cube.y)\r\n    var z_diff = Math.abs(rz - cube.z)\r\n\r\n    if (x_diff > y_diff && x_diff > z_diff)\r\n        rx = -ry-rz;\r\n    else if (y_diff > z_diff)\r\n        ry = -rx-rz;\r\n    else\r\n        rz = -rx-ry;\r\n\r\n    return {x: rx, y: ry, z: rz};\r\n}\r\nfunction round_point_to_hex(hex: HexPoint): HexPoint{\r\n    return cube_to_axial(cube_round(axial_to_cube(hex)))\r\n\r\n}\r\nfunction cube_to_axial(cube: CubicPoint){\r\n    var q = cube.x;\r\n    var r = cube.z;\r\n    return new Hex(q, r);\r\n}\r\nfunction axial_to_cube(hex: HexPoint): CubicPoint{\r\n    return {\r\n        x: hex.q,\r\n        z: hex.r,\r\n        y: -hex.q-hex.r\r\n    };\r\n}\r\nfunction cube_linedraw(a: CubicPoint, b: CubicPoint): HexPoint[]{\r\n    var N = cube_distance(a, b);\r\n    var results: HexPoint[] = [];\r\n    for (let i = 0; i <= N; i++) {\r\n        results.push(cube_to_axial(cube_round(cube_lerp(a, b, 1.0/N * i))))\r\n    }\r\n    return results;\r\n}\r\nexport function hex_linedraw(a: HexPoint, b: HexPoint): HexPoint[]{\r\n    return cube_linedraw(axial_to_cube(a), axial_to_cube(b));\r\n}\r\n\r\nclass Orientation {\r\n    // angle is in multiples of 60°\r\n    constructor(public f0: number, public f1: number, public  f2: number, public f3: number,\r\n        public b0: number, public b1: number,public b2: number,public b3: number,\r\n        public start_angle: number){}\r\n};\r\nexport const layout_flat: Orientation = new Orientation(3.0 / 2.0, 0.0, Math.sqrt(3.0) / 2.0, Math.sqrt(3.0),\r\n                2.0 / 3.0, 0.0, -1.0 / 3.0, Math.sqrt(3.0) / 3.0,\r\n                0.0);\r\nexport const origin_point: Point = {x: 0, y: 0};\r\nexport const hex_origin: HexPoint = {q: 0, r: 0};\r\nexport function hex_to_pixel(size: Point, origin: Point, h: HexPoint): Point {\r\n    const M: Orientation = layout_flat;\r\n    const x = (M.f0 * h.q + M.f1 * h.r) * size.x;\r\n    const y = (M.f2 * h.q + M.f3 * h.r) * size.y;\r\n    return {x: x + origin.x, y: y + origin.y};\r\n}\r\nexport function pixel_to_hex(size: Point, origin: Point, p: Point) {\r\n    const M = layout_flat;\r\n    const pt = {x: (p.x - origin.x) / size.x,\r\n                y: (p.y - origin.y) / size.y\r\n            };\r\n    const q = M.b0 * pt.x + M.b1 * pt.y;\r\n    const r = M.b2 * pt.x + M.b3 * pt.y;\r\n    return new Hex(q, r);\r\n}\r\n\r\n\r\nexport interface PolarPoint{\r\n    /**\r\n     * radius (in pixels)\r\n     */\r\n    r: number;\r\n    /**\r\n     * azimuth (radians)\r\n     */\r\n    az: number;\r\n}\r\n\r\nexport function polarToPoint(p: PolarPoint): Point{\r\n    return {\r\n        x: p.r * Math.cos(p.az),\r\n        y: p.r * Math.sin(p.az)\r\n    }\r\n}\r\n\r\nexport function distanceBetweenPolar(a: PolarPoint, b: PolarPoint): number{\r\n    const aCart = polarToPoint(a);\r\n    const bCart = polarToPoint(b)\r\n    return Math.sqrt(\r\n        Math.pow(aCart.x - aCart.x, 2) +\r\n        Math.pow(bCart.y - aCart.y, 2)\r\n    );\r\n}\r\n\r\nexport interface Point{\r\n    x: number; y: number;\r\n}\r\nexport interface Vector extends Point{\r\n}\r\nexport interface CubicPoint extends Point{\r\n    z: number;\r\n}\r\n\r\n\r\n/**\r\n * matter lookup, returns CSS transforms for translation\r\n * @param geo \r\n * @param type \r\n * @param key \r\n */\r\nexport function getBuildingTransform(geo: Geography, type: BuildingTypes, key: number){\r\n    const p = geo.byType[type].coordByID[key];\r\n    if (p)\r\n        return transformPoint(hex_to_pixel(geo.hex_size, geo.petriOrigin, p));\r\n    else\r\n        return {background: 'red'}\r\n}\r\nexport function transformPoint(p: Point){\r\n    return {transform:`translate(${p.x}px, ${p.y}px)`};\r\n}\r\n\r\nexport interface IBuilding{\r\n    key: number;\r\n    type: BuildingTypes;\r\n    job_slots: {[key in BuildingJobSlot]: number|null};\r\n    upgraded: boolean,\r\n    openSlots(): BuildingJobSlot[];\r\n    usedSlots(): BuildingJobSlot[];\r\n    /**\r\n     * returns true when bean is found in slot and freed\r\n     * @param beanKey \r\n     */\r\n    tryFreeBean(beanKey: number): boolean;\r\n}\r\nexport class Building implements IBuilding{\r\n    public key: number = 0;\r\n    public type: BuildingTypes = 'farm';\r\n    public occupied_slots: Point[] = [];\r\n    public empty_slots: Point[] = [];\r\n    public upgraded: boolean = false;\r\n    public job_slots: {[key in BuildingJobSlot]: number|null} = {\r\n        0: null,\r\n        1: null,\r\n        2: null,\r\n        3: null,\r\n        4: null,\r\n        5: null,\r\n    }\r\n    openSlots(): BuildingJobSlot[]{\r\n        return Object.keys(this.job_slots).filter((s, i) => {\r\n            return this.job_slots[+s as BuildingJobSlot] === null && (i < 3 || this.upgraded);\r\n        }).map((x) => +x);\r\n    }\r\n    usedSlots(): BuildingJobSlot[]{\r\n        return Object.keys(this.job_slots).filter((s) => {\r\n            return this.job_slots[+s as BuildingJobSlot] != null;\r\n        }).map((x) => +x);\r\n    }\r\n    tryFreeBean(beanKey: number): boolean{\r\n        const usedSlots = this.usedSlots();\r\n        for (let i = 0; i < usedSlots.length; i++) {\r\n            const slot = usedSlots[i];\r\n            const beanInSlot = this.job_slots[slot];\r\n            if (beanInSlot === beanKey){\r\n                this.job_slots[slot] = null;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * address books allow lookups from entity \"name\" to location\r\n */\r\nexport interface AddressBookHex{\r\n    [entityKey: number]: HexPoint\r\n}\r\nexport interface AddressBookPoint{\r\n    [entityKey: number]: Point\r\n}\r\n/**\r\n * address grids allow lookups from location to entity\r\n * \r\n * note: coordinates are of form \"X,Y\"\r\n * and the map cannot distinguish between hex and cartesian points\r\n */\r\nexport interface AddressGrid<T>{\r\n    [coordinate: string]: T|undefined\r\n}\r\nexport interface AddressBuildingGrid extends AddressGrid<IBuilding>{}\r\n\r\nexport interface BuildingMap{\r\n    coordByID: AddressBookHex;\r\n    all: IBuilding[];\r\n}\r\n\r\nexport type BuildingTypes = 'farm'|'house'|'hospital'|'church'|'theater'|'courthouse'|'park'|'nature';\r\n//building that slowly sucks up emotions\r\nexport type MoverTypes = 'bean'|'ufo'|'pickup';\r\nexport type MatterTypes = MoverTypes|BuildingTypes;\r\n\r\nexport const BuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🐄',\r\n    'house': '🏡', 'hospital': '🏥', 'church': '⛪', 'theater': '🎪', 'courthouse':'🏫',\r\n    'park': '⛲️', 'nature': '🏞️'\r\n};\r\nexport const UpgradedBuildingIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🚜',\r\n    'house': '🏘️', 'hospital': '🏙️', 'church': '⛪', 'theater': '🏟️', 'courthouse':'🏫',\r\n    'park': '🎡', 'nature': '🏞️'\r\n};\r\nexport const BuildingJobIcon: {[key in BuildingTypes]: string} = {\r\n    'farm': '🌾',\r\n    'house': '📪', 'hospital': '🛏️', 'church': '⛪', 'theater': '🪑', 'courthouse':'🏫',\r\n    'park': '💐', 'nature': '♨️'\r\n};\r\nexport const GoodToBuilding: {[key in TraitGood]: BuildingTypes} = {\r\n    'food': 'farm',\r\n    'shelter': 'house', 'medicine':'hospital', 'fun': 'theater'\r\n};\r\nexport const JobToBuilding: {[key in TraitJob]: BuildingTypes} = {\r\n    'farmer': 'farm',\r\n    'builder': 'house', 'doc':'hospital', 'entertainer': 'theater',\r\n    'cleric': 'church', 'jobless': 'house', 'polit': 'house'\r\n};\r\n\r\nexport class Geography{\r\n    public byCoord: AddressBuildingGrid = {};\r\n    public byType: {[type in BuildingTypes]: BuildingMap} = {\r\n        house: {coordByID: {}, all: []},\r\n        farm: {coordByID: {}, all: []},\r\n        hospital: {coordByID: {}, all: []},\r\n        theater: {coordByID: {}, all: []},\r\n        courthouse: {coordByID: {}, all: []},\r\n        church: {coordByID: {}, all: []},\r\n        park: {coordByID: {}, all: []},\r\n        nature: {coordByID: {}, all: []},\r\n    }\r\n     \r\n    public movers: {[key in MoverTypes]: AddressBookPoint} = {\r\n        bean: {},\r\n        ufo: {},\r\n        pickup: {}\r\n    };\r\n    public numberOf(type: BuildingTypes): number {\r\n        return this.byType[type].all.length;\r\n    }\r\n    lookupBuilding(hex: HexPoint): undefined|IBuilding {\r\n        return this.byCoord[hex.q+','+hex.r];\r\n    }\r\n    addBuilding(where: HexPoint, building: IBuilding) {\r\n        this.byType[building.type].all.push(building);\r\n        this.byType[building.type].coordByID[building.key] = where;\r\n        this.byCoord[where.q+','+where.r] = building;\r\n        return null;\r\n    }\r\n    removeBuilding(where: HexPoint, building: IBuilding) {\r\n        const i = this.byType[building.type].all.indexOf(building);\r\n        this.byType[building.type].all.splice(i, 1);\r\n        delete this.byType[building.type].coordByID[building.key];\r\n        this.byCoord[where.q+','+where.r] = undefined;\r\n        return null;\r\n    }\r\n    public numberOfRings = 5;\r\n    public hexes: HexPoint[] = hex_spiral({q:0, r:0}, this.numberOfRings);\r\n    public hex_size: Point = {x: 70, y: 70};\r\n    public readonly petriRadius = 550;\r\n    public readonly petriOrigin = {x: this.petriRadius, y: this.petriRadius};\r\n}","export enum BuildingJobSlot{\r\n    first = 0,\r\n    second = 1,\r\n    third = 2,\r\n    fourth = 3,\r\n    fifth = 4,\r\n    sixth = 5\r\n}","\r\nimport React from \"react\";\r\nimport { City } from \"../simulation/City\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, Geography, getBuildingTransform, hex_directions, transformPoint, hex_to_pixel, origin_point, HexPoint, BuildingJobIcon, UpgradedBuildingIcon } from \"../simulation/Geography\";\r\nimport { BuildingJobSlot } from \"../simulation/Occupation\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport './Building.css';\r\n\r\nconst slot_size = {\r\n    x: 25,\r\n    y: 25\r\n}\r\nexport function getSlotOffset(direction: HexPoint){\r\n    return hex_to_pixel(slot_size, origin_point, direction);\r\n}\r\nexport function getRandomSlotOffset(){\r\n    return getSlotOffset(GetRandom(hex_directions));\r\n}\r\nconst hexDirectionToJobSlot: {[key: number]: BuildingJobSlot} = {\r\n    2: BuildingJobSlot.first,\r\n    0: BuildingJobSlot.second,\r\n    4: BuildingJobSlot.third,\r\n    1: BuildingJobSlot.fourth,\r\n    5: BuildingJobSlot.fifth,\r\n    3: BuildingJobSlot.sixth,\r\n}\r\n\r\nexport class PetriBuilding extends React.Component<{\r\n    city: City,\r\n    building: IBuilding\r\n}> {\r\n    slots() {\r\n        return hex_directions.map((d, i: number) => {\r\n            const jobSlot: BuildingJobSlot = hexDirectionToJobSlot[i];\r\n            const hasJob = this.props.building.job_slots[jobSlot] != null;\r\n            return <span key={i} className=\"slot\" style={transformPoint(getSlotOffset(d))}>\r\n                {hasJob ? BuildingJobIcon[this.props.building.type] : null}\r\n            </span>\r\n        });\r\n    }\r\n    render() {\r\n        return <div key={this.props.building.type+this.props.building.key} style={getBuildingTransform(this.props.city, this.props.building.type, this.props.building.key)} \r\n        className={\"building \"+this.props.building.type}>\r\n        {this.props.building.upgraded ? UpgradedBuildingIcon[this.props.building.type] : BuildingIcon[this.props.building.type]}\r\n        {this.slots()}\r\n        {this.props.building.type === 'courthouse' ? <span className=\"tile-label\">{this.props.city.name}</span> : null}\r\n        </div>\r\n    }\r\n}","export class PriorityNode<T>{\r\n    constructor(public value: T, public priority: number){}\r\n}\r\nexport interface IPriorityQueue<T>{\r\n    enqueue(value: PriorityNode<T>): void;\r\n    values: PriorityNode<T>[];\r\n    dequeue(): PriorityNode<T>|undefined;\r\n}\r\nexport class DumbPriorityQueue<T> implements IPriorityQueue<T>{\r\n    \r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n    \r\n    enqueue(value: PriorityNode<T>): void{\r\n        this.values.push(value);\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n\r\n    enqueueMany(values: PriorityNode<T>[]){\r\n        this.values = values;\r\n        this.values = this.values.sort((a, b) => a.priority - b.priority);\r\n    }\r\n    \r\n    dequeue(): PriorityNode<T>|undefined{\r\n        return this.values.shift();\r\n    }\r\n}\r\n\r\nexport class PriorityQueue<T> implements IPriorityQueue<T>{\r\n    public values: PriorityNode<T>[] = [];\r\n\r\n    constructor(_values: PriorityNode<T>[]){this.values = _values;}\r\n\r\n    //helper method that swaps the values and two indexes of an array\r\n    swap(index1: number, index2: number){\r\n        let temp = this.values[index1];\r\n        this.values[index1] = this.values[index2];\r\n        this.values[index2] = temp;\r\n        return this.values;\r\n    }\r\n    //helper methods that bubbles up values from end\r\n    bubbleUp(){\r\n        //get index of inserted element\r\n        let index = this.values.length - 1\r\n        //loop while index is not 0 or element no loger needs to bubble\r\n        while(index > 0){\r\n            //get parent index via formula\r\n            let parentIndex = Math.floor((index - 1)/2);\r\n            //if values is greater than parent, swap the two\r\n            if(this.values[parentIndex].priority > this.values[index].priority){\r\n                //swap with helper method\r\n                this.swap(index, parentIndex);\r\n                //change current index to parent index\r\n                index = parentIndex;\r\n            } else{\r\n                break;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    // method that pushes new value onto the end and calls the bubble helper\r\n    enqueue(value: PriorityNode<T>){\r\n        this.values.push(value)\r\n        //calculate parent, if parent is greater swap\r\n        //while loop or recurse\r\n        this.bubbleUp();\r\n        return this.values\r\n    }\r\n\r\n    bubbleDown(){\r\n        let parentIndex = 0;\r\n        const length = this.values.length;\r\n        const elementPriority = this.values[0].priority;\r\n        //loop breaks if no swaps are needed\r\n        while (true){\r\n            //get indexes of child elements by following formula\r\n            const leftChildIndex = (2 * parentIndex) + 1;\r\n            const rightChildIndex = (2 * parentIndex) + 2;\r\n            let leftChildPriority = 999;\r\n            let rightChildPriority;\r\n            let indexToSwap = null;\r\n            // if left child exists, and is greater than the element, plan to swap with the left child index\r\n            if(leftChildIndex < length){\r\n                leftChildPriority = this.values[leftChildIndex].priority\r\n                if(leftChildPriority < elementPriority){\r\n                    indexToSwap = leftChildIndex;\r\n                }\r\n            }\r\n            //if right child exists\r\n            if(rightChildIndex < length){\r\n                rightChildPriority = this.values[rightChildIndex].priority;\r\n\r\n                if(\r\n                    //if right child is greater than element and there are no plans to swap\r\n                    (rightChildPriority < elementPriority && indexToSwap === null) ||\r\n                    //OR if right child is greater than left child and there ARE plans to swap\r\n                    (rightChildPriority < leftChildPriority && indexToSwap !== null))\r\n                {\r\n                    //plan to swap with the right child\r\n                    indexToSwap = rightChildIndex\r\n                }\r\n            }\r\n            //if there are no plans to swap, break out of the loop\r\n            if(indexToSwap === null){\r\n                break;\r\n            } \r\n            //swap with planned element\r\n            this.swap(parentIndex, indexToSwap);\r\n            //starting index is now index that we swapped with\r\n            parentIndex = indexToSwap;\r\n        }  \r\n    }\r\n\r\n    dequeue(): PriorityNode<T>|undefined{\r\n        //swap first and last element\r\n        this.swap(0, this.values.length - 1);\r\n        //pop max value off of values\r\n        let poppedNode = this.values.pop();\r\n        //re-adjust heap if length is greater than 1\r\n        if(this.values.length > 1){\r\n            this.bubbleDown();\r\n        }\r\n        \r\n        return poppedNode;\r\n    }\r\n}","import { Agent } from \"https\";\r\nimport { Bean, DaysUntilSleepy } from \"./Bean\";\r\nimport { getRandomSlotOffset } from \"../petri-ui/Building\";\r\nimport { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitGood, GoodToThreshold, JobToGood, TraitSanity, GoodIcon, TraitEmote } from \"../World\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { BuildingTypes, Geography, GoodToBuilding, HexPoint, hex_linedraw, hex_origin, hex_ring, hex_to_pixel, IBuilding, JobToBuilding, move_towards, pixel_to_hex, Point, Vector } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { PubSub } from \"../events/Events\";\r\nimport { DumbPriorityQueue, IPriorityQueue, PriorityNode, PriorityQueue } from \"./Priorities\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\nimport { ISeller } from \"./Economy\";\r\nimport { IterationStatement } from \"typescript\";\r\n\r\nexport type Act = 'travel'|'work'|'sleep'|'chat'|'soapbox'|'craze'|'idle'|'buy'|'crime'|'relax';\r\n\r\n/**\r\n * cruise == interruptible travel towards destination\r\n * \r\n * approach == uninterruptible travel into destination slot\r\n */\r\nexport type Travel = 'cruise'|'approach';\r\n\r\nexport interface IActListener{\r\n    onChat: (b: Bean, speech: IChatData) => void;\r\n    onEmote: (b: Bean, emote: TraitEmote) => void;\r\n}\r\n\r\nexport interface IActivityData {\r\n    act: Act;\r\n    elapsed?: number;\r\n    location?: Point, //FROM Point\r\n    destinations?: Point[]; //point to travel to??\r\n    intent?: IActivityData; //when travelling, what do you intend to do next\r\n    good?: TraitGood; //good to buy or work\r\n    timeSpent?: number; //time spent on this action\r\n    travel?: Travel;\r\n    chat?: IChatData;\r\n}\r\n\r\nexport interface IChatData{\r\n    participation: 'speaker'|'listener';\r\n    type: 'praise'|'bully'|'preach'|'gift';\r\n    preachBelief?: TraitBelief;\r\n    /**\r\n     * strength of the preacher's persuasion\r\n     */\r\n    persuasionStrength?: number;\r\n    /**\r\n     * target key of the bean who is targeted for praise or bully\r\n     */\r\n    targetBeanKey?: number;\r\n}\r\n\r\nexport interface IAgent {\r\n    state: AgentState;\r\n    onAct?: PubSub<number>;\r\n    jobQueue: PriorityQueue<AgentState>;\r\n}\r\nexport function ChangeState(agent: IAgent, newState: AgentState){\r\n    //if ((agent as any)['key'] === 0)\r\n    //console.log(`from ${agent.state.data.act} to ${newState.data.act} in ${agent.state.Elapsed}`);\r\n    agent.state.exit(agent);\r\n    agent.state = newState;\r\n    agent.state.enter(agent);\r\n}\r\nexport function Act(agent: IAgent, deltaMS: number, difficulty: IDifficulty, listener: IActListener): void{\r\n    const result = agent.state.act(agent, deltaMS, difficulty);\r\n    if (agent.onAct)\r\n        agent.onAct.publish(deltaMS);\r\n    if (result != agent.state){\r\n        ChangeState(agent, result);\r\n        if (result.data.act === 'chat' && result.data.chat?.participation === 'speaker'){\r\n            listener.onChat(agent as Bean, result.data.chat);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class AgentState{\r\n    constructor(public data: IActivityData){}\r\n    public get Elapsed(): number {return this.data.elapsed || 0;}\r\n    enter(agent: IAgent){\r\n        this.data.elapsed = 0;\r\n    }\r\n    act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        const newState = this._act(agent, deltaMS, difficulty);\r\n        this.data.elapsed = this.Elapsed + deltaMS;\r\n        return newState;\r\n    }\r\n    abstract _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState;\r\n    exit(agent: IAgent){\r\n\r\n    }\r\n    get display(): string {\r\n        return ActivityDisplay(this.data);\r\n    }\r\n}\r\nexport class IdleState extends AgentState{\r\n    static create(){ return new IdleState({act: 'idle'})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed < 200){\r\n            return this;\r\n        }\r\n        if (agent instanceof Bean && agent.city){\r\n            const priorities = GetPriorities(agent, difficulty);\r\n            let top = priorities.dequeue();\r\n            let travelState: TravelState|null = null;\r\n\r\n            //loop through possible destinations\r\n            while (top && travelState == null){\r\n                const activity = IdleState.substituteIntent(agent, top.value);\r\n                if (activity){\r\n                    travelState = TravelState.createFromIntent(agent, top.value);\r\n                    if (travelState != null)\r\n                        return travelState;\r\n                }\r\n                top = priorities.dequeue();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    static substituteIntent(agent: IAgent, intent: IActivityData): IActivityData|null{\r\n        if (intent.act === 'buy' && intent.good != null && agent instanceof Bean){\r\n            const desiredGoodState = agent.canBuy(intent.good);\r\n            if (desiredGoodState != 'yes' && intent.good === 'fun')\r\n                intent.act = 'relax'; //relaxing is free!\r\n            else if (desiredGoodState === 'pricedout') {\r\n                if (agent instanceof Bean && agent.maybeCrime(intent.good)){\r\n                    intent.act = 'crime';\r\n                } else {\r\n                    return null; //don't travel to buy something that you can't afford\r\n                }\r\n            } else if (desiredGoodState === 'nosupply'){\r\n                return null; //don't travel to buy something that doesn't exist\r\n            }\r\n        }\r\n        return intent;\r\n    }\r\n    exit(agent: IAgent){\r\n        super.exit(agent);\r\n\r\n        if (agent instanceof Bean){\r\n            agent.maybeParanoid()\r\n        }\r\n    }\r\n}\r\n\r\nexport function IntentToDestination(agent: IAgent, intent: IActivityData): Point[]|null{\r\n    if (!(agent instanceof Bean))\r\n        return [];\r\n    else if (agent.city){\r\n        const city = agent.city;\r\n        switch(intent.act){\r\n            case 'buy':\r\n                if (intent.good)\r\n                    return RouteRandom(city, agent, GoodToBuilding[intent.good]);\r\n            case 'work':\r\n                return RouteRandom(city, agent, JobToBuilding[agent.job]);\r\n            case 'relax': {\r\n                const parks = city.byType.park.all.concat(city.byType.nature.all);\r\n                const destination: IBuilding = GetRandom(parks);\r\n                agent.destinationKey = destination.key;\r\n                return Route(city, agent, destination);\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nexport class TravelState extends AgentState{\r\n    static createFromIntent(agent: IAgent, intent: IActivityData): TravelState|null{\r\n        const destination = IntentToDestination(agent, intent);\r\n\r\n        if (destination)\r\n            return this.createFromDestination(destination, intent);\r\n        return null;\r\n    }\r\n    static createFromDestination(destinations: Point[], intent: IActivityData): TravelState{ \r\n        return new TravelState({act: 'travel', destinations: destinations, intent: intent});\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (agent instanceof Bean && agent.city && this.data.destinations && this.data.destinations.length){\r\n            const pos = agent.city.movers['bean'][agent.key];\r\n            const target = this.data.destinations[0];\r\n            const newPos = move_towards(pos, target, deltaMS / 1000 * agent.speed);\r\n            \r\n            agent.city.movers['bean'][agent.key] = newPos;\r\n            if (newPos.x == target.x && newPos.y == target.y){\r\n                this.data.location = newPos;\r\n                this.data.destinations.shift();\r\n            }\r\n        }\r\n        if (this.data.destinations == null || this.data.destinations.length === 0){\r\n            if (this.data.intent)\r\n                return ActToState[this.data.intent.act](this.data.intent);\r\n            else\r\n                return IdleState.create();\r\n        } else if (agent instanceof Bean && agent.city) {\r\n            const nearby = agent.city.getNearestNeighbors(agent);\r\n            if (nearby.length && agent.maybeChat()){\r\n                const targets = nearby.filter((nn) => nn.maybeChat());\r\n                if (targets.length < 1)\r\n                    return this;\r\n                const chat: IChatData = agent.getRandomChat(targets);\r\n                targets.forEach((z) => z.state = ChatState.create(this.data.intent, {...chat, participation: 'listener'}));\r\n                return ChatState.create(this.data, chat);\r\n            } else {\r\n                return this;\r\n            }\r\n        } else {\r\n            return this;\r\n        }\r\n    }\r\n}\r\nexport class WorkState extends AgentState{\r\n    static create(good: TraitGood){ return new WorkState({act: 'work', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 2000 && agent instanceof Bean && this.data.good && agent.city?.economy && agent.city?.law){\r\n            agent.work(agent.city.law, agent.city.economy);\r\n            return IdleState.create();\r\n        }\r\n        \r\n        return this;\r\n    }\r\n}\r\nexport class BuyState extends AgentState{\r\n    static create(good: TraitGood){ return new BuyState({act: 'buy', good: good})}\r\n    private sinceLastAttemptMS: number = 0;\r\n    private attempts: number = 0;\r\n    tryBuy(agent: IAgent){\r\n        if (agent instanceof Bean && this.data.good && agent.city?.economy)\r\n        {\r\n            this._bought = agent.buy[this.data.good](agent.city.economy);\r\n        }\r\n        this.sinceLastAttemptMS = 0;\r\n        this.attempts++;\r\n    }\r\n    enter(agent: IAgent){\r\n        this.tryBuy(agent);\r\n    }\r\n    private _bought: boolean = false;\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (!this._bought){\r\n            if (this.sinceLastAttemptMS > 250)\r\n            {\r\n                this.tryBuy(agent);\r\n                // if(this.attempts >= 3 && (this.data.good == 'food' || this.data.good == 'medicine') &&\r\n                //     agent instanceof Bean &&\r\n                //     agent.getCrimeDecision(this.data.good, 'desperation')){\r\n                //     return CrimeState.create(this.data.good);\r\n                // }\r\n            }\r\n        }\r\n        if (this.Elapsed > 1500)\r\n            return IdleState.create();\r\n        else\r\n            return this;\r\n    }\r\n}\r\nexport class ChatState extends AgentState{\r\n    static create(intent: IActivityData|undefined, chat: IChatData){ \r\n        return new ChatState({act: 'chat', intent: intent, chat: chat})\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        \r\n        if (this.Elapsed > 1000 && this.data.intent){\r\n            const tState = TravelState.createFromIntent(agent, this.data.intent);\r\n            if (tState)\r\n                return tState;\r\n        }\r\n        return this;\r\n    }\r\n    exit(agent: IAgent){\r\n        if (agent instanceof Bean && this.data.chat){\r\n            agent.lastChatMS = Date.now();\r\n            if (this.data.chat.participation === 'listener'){\r\n                if (this.data.chat.type === 'bully'){\r\n                    agent.maybeAntagonised();\r\n                }\r\n                else if (this.data.chat.type === 'praise'){\r\n                    agent.maybeEnthused();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class RelaxState extends AgentState{\r\n    static create(intent: IActivityData|undefined, chat: IChatData){ \r\n        return new RelaxState({act: 'relax', intent: intent, chat: chat})\r\n    }\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        let durationMS = 1000;\r\n        if (agent instanceof Bean && agent.believesIn('Naturalism'))\r\n            durationMS *= 3;\r\n        if (this.Elapsed > durationMS){\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n    exit(agent: IAgent){\r\n        if (agent instanceof Bean){\r\n            agent.discrete_fun += 1;\r\n            agent.emote('happiness');\r\n            if (agent.believesIn('Naturalism'))\r\n                agent.emote('happiness');\r\n        }\r\n    }\r\n}\r\nexport class CrimeState extends AgentState{\r\n    static create(good: 'food'|'medicine'){ return new CrimeState({act: 'crime', good: good})}\r\n    _act(agent: IAgent, deltaMS: number, difficulty: IDifficulty): AgentState{\r\n        if (this.Elapsed > 1500 && agent instanceof Bean && agent.city?.economy && \r\n            (this.data.good === 'food' ||\r\n            this.data.good === 'medicine')){\r\n            agent.steal(this.data.good, agent.city?.economy);\r\n            return IdleState.create();\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nconst ActToState: {[key in Act]: (data: IActivityData) => AgentState} = {\r\n    'idle': (data) => new IdleState(data),\r\n    'work': (data) => new WorkState(data),\r\n    'chat': (data) => new ChatState(data),\r\n    'travel': (data) => new TravelState(data),\r\n    'craze': (data) => new BuyState(data),\r\n    'buy': (data) => new BuyState(data),\r\n    'sleep': (data) => new BuyState(data),\r\n    'soapbox': (data) => new BuyState(data),\r\n    'crime': (data) => new CrimeState(data),\r\n    'relax': (data) => new RelaxState(data)\r\n}\r\n\r\nexport const GetPriority = {\r\n    work: function(bean:Bean): number{\r\n        if (bean.job == 'jobless' && bean.city){\r\n            return 9;\r\n        }\r\n        else if (bean.city){\r\n            //beans with no inventory prioritize work higher\r\n            let inventory_priority = 99;\r\n            if (bean.city.economy){\r\n                const quant = bean.city.economy.market.getBeansListings(bean.cityKey, bean.key, JobToGood(bean.job))?.quantity || 0;\r\n                inventory_priority = quant;\r\n            }\r\n            //beans with lots of cash prioritize work higher\r\n            const wealth_priority = bean.cash / bean.city.costOfLiving / 2;\r\n            return Math.min(inventory_priority, wealth_priority);\r\n        } else {\r\n            return 0;\r\n        }\r\n    },\r\n    food: function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 0.5 + (bean.discrete_food / difficulty.bean_life.vital_thresh.food.sufficient )\r\n    },\r\n    shelter: function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 1 + (bean.discrete_stamina / difficulty.bean_life.vital_thresh.shelter.sufficient )\r\n    },\r\n    medicine:function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 0.75 + (bean.discrete_health / difficulty.bean_life.vital_thresh.medicine.sufficient )\r\n    },\r\n    fun:function(bean:Bean, difficulty: IDifficulty): number{\r\n        return 2 + (bean.lastHappiness / 100 * 1.25 )\r\n    }\r\n}\r\n\r\nexport function GetPriorities(bean: Bean, difficulty: IDifficulty): IPriorityQueue<IActivityData>{\r\n    const queue = new DumbPriorityQueue<IActivityData>([]);\r\n    let node = new PriorityNode<IActivityData>({act: 'work', good: JobToGood(bean.job)} as IActivityData, GetPriority.work(bean));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'food'} as IActivityData, GetPriority.food(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'shelter'} as IActivityData, GetPriority.shelter(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'medicine'} as IActivityData, GetPriority.medicine(bean, difficulty));\r\n    queue.enqueue(node);\r\n    node = new PriorityNode<IActivityData>({act: 'buy', good: 'fun'} as IActivityData, GetPriority.fun(bean, difficulty));\r\n    queue.enqueue(node);\r\n    return queue;\r\n}\r\n\r\nexport function ActivityIcon(data: IActivityData): string{\r\n    switch(data.act){\r\n        case 'work':\r\n            if (data.good)\r\n                return '💪 '+ GoodIcon[data.good];\r\n            else\r\n                return '💪';\r\n        case 'buy':\r\n            if (data.good == 'shelter')\r\n                return '😴';\r\n            if (data.good)\r\n                return '💸 '+ GoodIcon[data.good];\r\n            else\r\n                return '💸';\r\n    }\r\n    return '';\r\n}\r\nexport function ActivityDisplay(data: IActivityData): string{    \r\n    switch(data.act){\r\n        case 'chat':\r\n            return `chatting`;\r\n        case 'crime':\r\n            return `commiting crime`;\r\n        case 'relax':\r\n            return `relaxing`;\r\n        case 'travel':\r\n            return `travelling to ` + data.intent?.act || '';\r\n        case 'work':\r\n            if (data.good)\r\n                return 'working to make '+ GoodIcon[data.good];\r\n            else\r\n                return 'working';\r\n        case 'buy':\r\n            if (data.good == 'shelter')\r\n                return 'sleeping 😴';\r\n            if (data.good)\r\n                return 'buying '+ GoodIcon[data.good];\r\n            else\r\n                return 'buying';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean extends ISeller, IMover, IAgent{    \r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith: TraitFaith;\r\n    shelter: TraitShelter;\r\n    health: TraitHealth;\r\n    discrete_food: number;\r\n    discrete_sanity: number;\r\n    discrete_stamina: number;\r\n    cash: number;\r\n    dob: IDate;\r\n    sanity: TraitSanity;\r\n    lifecycle: 'alive'|'dead'|'abducted'\r\n}\r\n\r\nexport interface IMover{\r\n    key: number;\r\n    speed: number;\r\n    direction: Vector;\r\n    markers: Point[];\r\n    destinationKey: number;\r\n}\r\n\r\nexport function Step(geo: Geography, mover: IMover){\r\n    if (mover.markers.length){\r\n        const pos = geo.movers['bean'][mover.key];\r\n        const target = mover.markers[0];\r\n        const newPos = move_towards(pos, target, mover.speed);\r\n        geo.movers['bean'][mover.key] = newPos;\r\n        if (newPos.x == target.x && newPos.y == target.y){\r\n            mover.markers.pop();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * fills out \"markers\" and \"destinationKey\" with random building of type\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function RouteRandom(geo: Geography, mover: IMover, buildingType: BuildingTypes): Point[]|null{\r\n    const destination: IBuilding = GetRandom(geo.byType[buildingType].all);\r\n    if (destination === undefined) return null;\r\n    mover.destinationKey = destination.key;\r\n    return Route(geo, mover, destination);\r\n}\r\n\r\n/**\r\n * fills out \"markers\" property with points to walk to destination\r\n * @param geo \r\n * @param mover \r\n * @param buildingType \r\n */\r\nexport function Route(geo: Geography, mover: IMover, destination: IBuilding){\r\n    const address: HexPoint = geo.byType[destination.type].coordByID[destination.key];\r\n    const start = geo.movers['bean'][mover.key];\r\n    const nearestHex = pixel_to_hex(geo.hex_size, geo.petriOrigin, start);\r\n    return hex_linedraw(nearestHex, address).map((h) => hex_to_pixel(geo.hex_size, geo.petriOrigin, h)).map((x, i, a) => {\r\n        if (i === a.length-1){\r\n            const offset = getRandomSlotOffset();\r\n            return {\r\n                x: x.x + offset.x,\r\n                y: x.y + offset.y\r\n            }\r\n        } else {\r\n            return x;\r\n        }\r\n    });\r\n}\r\nexport function Approach(geo: Geography, mover: IMover){\r\n\r\n}","import { TraitCommunity, TraitFaith, TraitIdeals } from \"../World\";\r\n\r\nexport type BeliefCommonality = 'common'|'uncommon'|'rare';\r\n\r\nexport type TraitBelief = 'Diligence'| // happy from work\r\n'Natalism'| // increased % of having kids\r\n'Naturalism'|\r\n'Hedonism'| //more entertainment\r\n'Progressivism'|\r\n'Libertarianism'|\r\n'Parochialism'|\r\n'Cosmopolitanism'|\r\n'Capitalism'|\r\n'Socialism'|\r\n'Communism'|\r\n// 'Tribalism'| \r\n// 'Globalism'| \r\n// 'Pacifism'| \r\n'Neuroticism'| // takes extra sanity damage\r\n'Dogmatism'| \r\n// 'Mysticism'| \r\n 'Paranoia'| \r\n// 'Evangelism'| \r\n// 'Fanaticism'| // doesn't like beings that don't share narrative \r\n'Authority'| //less crime, more crime reports\r\n'Anarchism'| // breaks rules easily\r\n//'Sadism'| \r\n'Antagonism'|\r\n'Enthusiasm'|\r\n'Gossip'|\r\n'Charity'| // % to donate\r\n'Gluttony'|\r\n'Greed'; // steal easier\r\n\r\n// 'talkative'|\r\n// 'friendly'| // likes all beings more\r\n// 'realistic'| // lower happiness\r\n// 'athletic'| // takes less health damage\r\n// 'open-minded'| // beliefs are easily changed\r\n\r\nexport type BeliefSubject = 'self'|'other';\r\nexport const BeliefSubjectText: {[key in BeliefSubject]: string} ={\r\n    other: 'People',\r\n    self: 'I'\r\n}\r\nexport const BeliefSubjectIcon: {[key in BeliefSubject]: string} ={\r\n    other: '👇',\r\n    self: '👀'\r\n}\r\nexport type BeliefVerb = 'are'|'arenot';\r\nexport type BeliefSubjectVerbTree = {[key in BeliefSubject]: {[key in BeliefVerb]: string}};\r\nexport const BeliefVerbIcon: {[key in BeliefVerb]: string} ={\r\n    are: '✔️',\r\n    arenot: '🛑'\r\n}\r\nexport const BeliefVerbText: BeliefSubjectVerbTree ={\r\n    self: {\r\n        are: 'can be',\r\n        arenot: \"shouldn't be\"\r\n    },\r\n    other: {\r\n        are: 'should be',\r\n        arenot: 'cannot be'\r\n    }\r\n}\r\nexport interface IBeliefData {\r\n    noun: string,\r\n    adj: string,\r\n    icon: string,\r\n    description?: string,\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>\r\n}\r\nexport const PrimaryBeliefData: {[key in TraitIdeals|TraitCommunity]: IBeliefData} = {\r\n    prog: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️',\r\n        description: \"Strives to help others\"\r\n    },\r\n    trad: {\r\n        noun: 'Elitism', adj: 'Elitist', icon: '👑',\r\n        description: \"Strives for individual power\"\r\n    },\r\n    state: {\r\n        noun: 'Collectivism', adj: 'Collectivist', icon: '🕊️',\r\n        description: \"Trusts in the social group\"\r\n    },\r\n    ego: {\r\n        noun: 'Independence', adj: 'Independent', icon: '🦅',\r\n        description: \"Trusts only in oneself\"\r\n    },\r\n}\r\nexport const NarrativeBeliefData: {[key in TraitFaith]: IBeliefData} = {\r\n    rocket: {\r\n        noun: 'Futurism', adj: 'Futuristic', icon: '🚀',\r\n        description: \"Loves stories of the far future\"\r\n    },\r\n    dragon: {\r\n        noun: 'Mythology', adj: 'Mythical', icon: '🐲',\r\n        description: \"Loves stories of the legendary past\"\r\n    },\r\n    music: {\r\n        noun: 'Drama', adj: 'Dramatic', icon: '🎵',\r\n        description: \"Loves stories of emotional bonding\"\r\n    },\r\n    noFaith: {\r\n        noun: 'Nihilism', adj: 'Nihilist', icon: '⚫️',\r\n        description: \"Hates fairy tales\"\r\n    },\r\n}\r\nexport const SecondaryBeliefData: {[key in TraitBelief]: IBeliefData} = {\r\n    // misc 🎲 traits\r\n    Diligence: {\r\n        noun: 'Diligence', adj: 'Diligence', icon: '💪',\r\n        description: \"🎲 to 👍 while working\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['state', 'ego']\r\n    },\r\n    Natalism: {\r\n        noun: 'Natalism', adj: 'Natalist', icon: '👶',\r\n        description: \"Extra 🎲 for 👶\" //implemented\r\n    },\r\n    Charity: {\r\n        noun: 'Charity', adj: 'Charitable', icon: '😇',\r\n        description: \"🎲 to gift 💰 to the penniless\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n    Progressivism: {\r\n        noun: 'Progressivism', adj: 'Progressive', icon: '⚖️',\r\n        description: \"🎲 to 👍 when paying taxes\"\r\n    },\r\n    Libertarianism: {\r\n        noun: 'Libertarianism', adj: 'Libertarian', icon: '🔫',\r\n        description: \"🎲 to 👎 when paying taxes\",\r\n        //idealCon: ['trad'], idealPro: ['prog']\r\n    },\r\n\r\n    // work traits\r\n    Parochialism: {\r\n        noun: 'Parochialism', adj: 'Parochial', icon: '🐮',\r\n        description: \"Extra 👍 working 🌾; 👎 from dense houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Cosmopolitanism: {\r\n        noun: 'Cosmopolitanism', adj: 'Cosmopolitan', icon: '🍸',\r\n        description: \"Extra 👍 working 🎻; 👎 from rural houses\",  //first part implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Capitalism: {\r\n        noun: 'Capitalism', adj: 'Capitalist', icon: '🎩',\r\n        description: \"👎 working in co-ops and communes\",\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Socialism: {\r\n        noun: 'Socialism', adj: 'Socialist', icon: '🤝',\r\n        description: \"Extra 👍 working in co-ops\",\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Communism: {\r\n        noun: 'Communism', adj: 'Communist', icon: '⚒️',\r\n        description: \"👎 working in companies\",\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n\r\n    // Fraud: {\r\n    //     noun: 'Fraud', adj: 'Fraudulent', icon: '🤥',\r\n    //     description: \"??\",\r\n    //     idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    // },\r\n\r\n    // 👍 traits\r\n    Naturalism: {\r\n        noun: 'Naturalism', adj: 'Naturalist', icon: '🛶',\r\n        description: \"Extra 👍 from 😎; 😎 3x longer\" //implemented\r\n    },\r\n    Hedonism: {\r\n        noun: 'Hedonism', adj: 'Hedonistic', icon: '💋',\r\n        description: \"🎲 to emote extra 👍;🎲 to 👎 when working;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Gluttony: {\r\n        noun: 'Gluttony', adj: 'Glutton', icon: '🎃',\r\n        description: \"Extra 👍 when stuffed; Extra 👎 when hungry;\", //implemented\r\n        //idealCon: ['prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Paranoia: {\r\n        noun: 'Paranoia', adj: 'Paranoid', icon: '👽',\r\n        description: \"🎲 to 👎 at any time\",  //implemented\r\n        //idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n\r\n    // 😈 Crime traits\r\n    Authority: {\r\n        noun: 'Authority', adj: 'Authoritarian', icon: '👢',\r\n        description: \"Less 🎲 for all 😈 Crime\",\r\n        //idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n    Anarchism: {\r\n        noun: 'Anarchism', adj: 'Anarchist', icon: '🖕',\r\n        description: \"Extra 🎲 for all 😈 Crime\",\r\n        //idealCon: ['state', 'prog'], idealPro: ['ego', 'trad']\r\n    },\r\n    Greed: {\r\n        noun: 'Greed', adj: 'Greedy', icon: '🤑',\r\n        description: \"Extra 🎲 for theft 😈 Crime; Extra 👍 when rich\",\r\n        //idealCon: ['prog'], idealPro: ['trad']\r\n    },\r\n    // Bloodthirst: {\r\n    //     noun: 'Bloodthirst', adj: 'Bloodthirsty', icon: '🩸',\r\n    //     description: \"🎲 for assault 😈 Crime in a 🗣️\"\r\n    // },\r\n    // Pacifism: {\r\n    //     noun: 'Pacifism', adj: 'Pacifist', icon: '😘',\r\n    //     description: \"will never punish others\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n    // Mysticism: {\r\n    //     noun: 'Mysticism', adj: 'Mystical', icon: '🔮',\r\n    //     description: \"🎲 to 👏 in any conversation\",\r\n    //     idealCon: ['trad'], idealPro: ['prog']\r\n    // },\r\n\r\n    // 🗣️ traits\r\n    Gossip: {\r\n        noun: 'Gossip', adj: 'Gossipy', icon: '📞',\r\n        description: \"Extra 🎲 to start a 🗣️\", //implemented\r\n        //idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    },\r\n    Antagonism: {\r\n        noun: 'Antagonism', adj: 'Antagonistic', icon: '🤬',\r\n        description: \"🎲 to spread 👎 in a 🗣️\" //implemented\r\n    },\r\n    Enthusiasm: {\r\n        noun: 'Enthusiasm', adj: 'Enthusiastic', icon: '🥳',\r\n        description: \"🎲 to spread 👍 in a 🗣️\" //implemented\r\n    },\r\n    // Globalism: {\r\n    //     noun: 'Globalism', adj: 'Globalist', icon: '🌍',\r\n    //     description: \"🎲 to 👍 other hair colors in a 🗣️\",\r\n    //     idealCon: ['trad'], idealPro: ['prog', 'state']\r\n    // },\r\n    // Tribalism: {\r\n    //     noun: 'Tribalism', adj: 'Tribal', icon: '🏰',\r\n    //     description: \"🎲 to 👎 other hair colors in a 🗣️\",\r\n    //     idealCon: ['prog'], idealPro: ['state', 'ego']\r\n    // },\r\n\r\n    // Evangelism: {\r\n    //     noun: 'Evangelism', adj: 'Evangelist', icon: '📣',\r\n    //     description: \"+50% persuasion of 🎭\",\r\n    //     idealCon: ['ego'], idealPro: ['state']\r\n    // },\r\n    // Fanaticism: {\r\n    //     noun: 'Fanaticism', adj: 'Fanatical', icon: '👺',\r\n    //     description: \"🎲 to 👎 other 🎭\",\r\n    //     idealCon: ['prog'], idealPro: []\r\n    // },\r\n\r\n    // super bad traits\r\n    // Sadism: {\r\n    //     noun: 'Sadism', adj: 'Sadistic', icon: '😈',\r\n    //     description: \"🎲 to ☠️ other after a 🗣️\"\r\n    // },\r\n    // Vandalism: {\r\n    //     noun: 'Vandalism', adj: 'Vandal', icon: '💩',\r\n    //     description: \"🎲 to destroy goods\"\r\n    // },\r\n    // Delirium: {\r\n    //     noun: 'Delirium', adj: 'Delirious', icon: '😪',\r\n    //     description: \"Chooses actions at random\"\r\n    // },\r\n    // DelusionalMania: {\r\n    //     noun: 'Delusional Mania', adj: 'Delusional Maniac', icon: '😵',\r\n    //     description: \"🎲 to ☠️ nearby subjects\"\r\n    // },\r\n    // Catatonia: {\r\n    //     noun: 'Catatonia', adj: 'Catatonic', icon: '😶',\r\n    //     description: \"-50% walk speed. Cannot work.\"\r\n    // },\r\n\r\n    // meta-traits\r\n    Neuroticism: {\r\n        noun: 'Neuroticism', adj: 'Neurotic', icon: '😱',\r\n        description: \"+100% 🧠 damage\", //implemented\r\n        idealCon: ['state'], idealPro: ['ego']\r\n    },\r\n    Dogmatism: {\r\n        noun: 'Dogmatism', adj: 'Dogmatic', icon: '🐶',\r\n        description: \"Cannot change beliefs\", //implemented\r\n        idealCon: ['ego'], idealPro: ['state']\r\n    },\r\n};\r\n\r\nexport function IsIdealDivergent(con: TraitCommunity|TraitIdeals, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    switch(con){\r\n        case 'trad':\r\n        case 'prog':\r\n            return con == utopiaMotive;\r\n        case 'state':\r\n        case 'ego':\r\n            return con == utopiaCommunity;\r\n    }\r\n}\r\n\r\nexport function IsBeliefDivergent(belief: TraitBelief, utopiaMotive: TraitIdeals, utopiaCommunity: TraitCommunity): boolean{\r\n    const data = SecondaryBeliefData[belief];\r\n    return data.idealCon != null && data.idealCon.reduce((isDivergent: boolean, con) => {\r\n        return isDivergent || IsIdealDivergent(con, utopiaMotive, utopiaCommunity);\r\n    }, false);\r\n}\r\n\r\nexport interface BeliefSubjectOption {key: BeliefSubject};\r\nexport interface BeliefVerbOption {key: BeliefVerb};\r\nexport interface BeliefAdjOption {key: TraitBelief};\r\n\r\nexport const BeliefSubjectAll: BeliefSubject[] = ['self', 'other'];\r\nexport const BeliefVerbAll: BeliefVerb[] = ['are', 'arenot'];\r\nexport const BeliefsAll = Object.keys(SecondaryBeliefData).map((x) => x as TraitBelief);\r\n\r\nexport interface Belief{\r\n    subject: BeliefSubject;\r\n    verb: BeliefVerb;\r\n    adj: TraitBelief;\r\n}","import { World } from \"../World\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\nexport enum Hour {Midnight, Morning, Noon, Evening}\r\n\r\nexport interface IDate{\r\n    day: number;\r\n    season: Season;\r\n    year: number;\r\n    hour: Hour;\r\n}\r\n\r\nexport function Now(world: World): IDate{\r\n    return {year: world.date.year, season: world.date.season, day: world.date.day, hour: world.date.hour};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","import { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitFood, TraitJob, JobToGood, IHappinessModifier, TraitToModifier, MaslowHappinessScore, GetHappiness, GoodToThreshold, TraitGood, TraitSanity, TraitEmote, EmotionSanity } from \"../World\";\r\nimport { RandomEthno, GetRandom, GetRandomNumber } from \"../WorldGen\";\r\nimport { Economy, ISeller } from \"./Economy\";\r\nimport { Policy, Party } from \"./Politics\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\nimport { IDate, withinLastYear } from \"./Time\";\r\nimport { Government } from \"./Government\";\r\nimport { AgentState, IActivityData, IAgent, IBean, IChatData, IdleState, IMover } from \"./Agent\";\r\nimport { JobToBuilding, Point } from \"./Geography\";\r\nimport { City } from \"./City\";\r\nimport { PriorityQueue } from \"./Priorities\";\r\nimport { SecondaryBeliefData, TraitBelief } from \"./Beliefs\";\r\nimport { IPlayerData } from \"./Player\";\r\nimport { BeanResources } from \"../Game\";\r\nimport { MathClamp } from \"./Utils\";\r\n\r\nconst BabyChance = 0.01;\r\nconst HappyChance = 0.01;\r\nconst UnhappyChance = 0.01;\r\nconst EmoteCrisisChance = .10;\r\nconst EmoteTickRamp = 12;\r\nexport const DaysUntilSleepy = 7;\r\nconst ChatCooldownMS = 4000;\r\nexport type BeanDeathCause = 'vaporization'|'exposure'|'starvation'|'sickness';\r\n\r\nconst HedonismExtraChance = 0.1;\r\nconst ParanoidUnhappyChance = 0.05;\r\nconst HedonismHateWorkChance = 0.15;\r\nconst DiligenceHappyChance = 0.25;\r\nconst ParochialHappyChance = 0.25;\r\nconst CosmopolitanHappyChance = 0.25;\r\nconst GossipChatExtraChance = 0.25;\r\nconst AntagonismBullyChance = 0.45;\r\nconst EnthusiasmPraiseChance = 0.45;\r\nexport class Bean implements IBean{\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public dob: IDate = {year: 0, season: 0, day: 1, hour: 0};\r\n    public bornInPetri: boolean = false;\r\n    public name: string = 'Human Bean';\r\n    public sanity: TraitSanity = 'sane'\r\n    public discrete_sanity: number = 10;\r\n    /**\r\n     * 0-1\r\n     */\r\n    public discrete_fun: number = 0;\r\n    public lifecycle: 'alive'|'dead'|'abducted' = 'alive';\r\n    public get alive(): boolean{\r\n        return this.lifecycle === 'alive';\r\n    }\r\n    public set alive(val: boolean){\r\n        this.lifecycle = val === true ? 'alive' : 'dead';\r\n    }\r\n\r\n    public activity_queue: IActivityData[] = [];\r\n    public speed = 60;\r\n    public direction = {x: 0,y:0}; \r\n    public markers: Point[] = [];\r\n    public destinationKey = 0;\r\n\r\n\r\n    public city: City|null = null;\r\n\r\n    public ethnicity: TraitEthno = RandomEthno();\r\n\r\n    //maslow\r\n    public discrete_food: number = 1;\r\n    public get food(): TraitFood {\r\n        if (this.discrete_food >= GoodToThreshold['food'].abundant)\r\n        return 'stuffed';\r\n        else if (this.discrete_food >= GoodToThreshold['food'].sufficient)\r\n        return 'sated'\r\n        else\r\n        return 'hungry';\r\n    }\r\n    public shelter: TraitShelter = 'crowded';\r\n    public discrete_health: number = 2;\r\n    public get health(): TraitHealth {\r\n        if (this.discrete_health >= GoodToThreshold['medicine'].abundant)\r\n        return 'fresh';\r\n        else if (this.discrete_health >= GoodToThreshold['medicine'].sufficient)\r\n        return 'bruised'\r\n        else\r\n        return 'sick';\r\n    }\r\n    //values\r\n    public community: TraitCommunity = 'ego';\r\n    public ideals: TraitIdeals = 'trad';\r\n    //other\r\n    public job: TraitJob = 'jobless';\r\n    public buildingKey?: number;\r\n    public faith: TraitFaith = 'noFaith';\r\n    public beliefs: TraitBelief[] = [];\r\n    public cash: number = 3;\r\n    public partyLoyalty: number = 0.2;\r\n    /**\r\n     * -100 to 100\r\n     */\r\n    public lastHappiness: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastSentiment: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastPartySentiment: number = 0;\r\n    public ticksSinceLastSale: number = 0;\r\n    public ticksSinceLastRelax: number = 0;\r\n    public ticksSinceLastEmote: number = 0;\r\n    /**\r\n     * days until needs sleep\r\n     */\r\n    public discrete_stamina: number = 7;\r\n    public fairGoodPrice: number = 1;\r\n    public lastChatMS: number = Date.now();\r\n    get isInCrisis(): boolean{\r\n        return this.food === 'hungry' ||\r\n        this.shelter === 'podless' ||\r\n        this.health === 'sick';\r\n    }\r\n    believesIn(belief: TraitBelief): boolean{\r\n        return this.beliefs.indexOf(belief) !== -1;\r\n    }\r\n    loseSanity(amount: number){\r\n        const multiplier = this.believesIn('Neuroticism') ? 2 : 1;\r\n        this.discrete_sanity -= multiplier * amount;\r\n    }\r\n    getHappinessModifiers(econ: Economy, homeCity: City, law: Government): IHappinessModifier[]{\r\n        const mods: IHappinessModifier[] = [\r\n            TraitToModifier[this.food],\r\n            TraitToModifier[this.shelter],\r\n            TraitToModifier[this.health],\r\n            {\r\n                reason: 'Entertainment', mod: this.discrete_fun*.4\r\n            }\r\n        ];\r\n        if (this.ideals === 'trad' && this.ethnicity != homeCity.majorityEthnicity) {\r\n            mods.push({reason: 'Xenophobic', mod: -.1});\r\n        }\r\n        if (this.community === 'ego' && this.job != 'jobless' && \r\n            homeCity.byType[JobToBuilding[this.job]].all.find(x => x.key === this.buildingKey)?.upgraded) {\r\n            mods.push({reason: 'Hates Building Density', mod: -.1});\r\n        }\r\n        if (this.cash < 1) {\r\n            mods.push({reason: 'Penniless', mod: MaslowHappinessScore.Deficient});\r\n        } else if (this.cash > econ.getCostOfLiving() * 3){\r\n            mods.push({reason: 'Upper Class', mod: 0.3});\r\n        } else if (this.cash > econ.getCostOfLiving() * 2){\r\n            mods.push({reason: 'Middle Class', mod: 0.15});\r\n        }\r\n        if (this.job === 'jobless') {\r\n            mods.push({reason: 'Unemployed', mod: MaslowHappinessScore.Deficient});\r\n        }\r\n\r\n        return mods;\r\n    }\r\n    getSentimentModifiers(econ: Economy, homeCity: City, law: Government, party: Party): {\r\n        party: IHappinessModifier[],\r\n        law: IHappinessModifier[]\r\n    }{\r\n        const result = {party: [] as IHappinessModifier[], law: [] as IHappinessModifier[]};\r\n\r\n        if (this.community === party.community){\r\n            result.party.push({reason: 'Same Community', mod: 0.15});\r\n        }\r\n        if (this.ideals === party.ideals){\r\n            result.party.push({reason: 'Same Ideals', mod: 0.15});\r\n        } else if (this.community != party.community){\r\n            result.party.push({reason: 'Incompatible Values', mod: -0.15});\r\n        }\r\n        return result;\r\n    }\r\n    calculateBeliefs(econ: Economy, homeCity: City, law: Government, party: Party): void{\r\n        this.lastHappiness = GetHappiness(this.getHappinessModifiers(econ, homeCity, law));\r\n        const sent = this.getSentimentModifiers(econ, homeCity, law, party);\r\n        this.lastSentiment = GetHappiness(sent.law);\r\n        this.lastPartySentiment = GetHappiness(sent.party);\r\n\r\n        if (this.job === 'jobless'){\r\n            this.fairGoodPrice = 1;\r\n        } else {\r\n            const myGood = JobToGood(this.job);\r\n            this.fairGoodPrice = econ.getFairGoodPrice(myGood);\r\n        }\r\n    }\r\n    /**\r\n     * non-normalized multiplier\r\n     */\r\n    getSentimentPolicies(traits: {[x:string]:boolean}, policies: Policy[]){\r\n        let multiplier = 100;\r\n        policies.forEach((policy) => {\r\n            policy.fx.forEach((fx) => {\r\n                if (traits[fx.key])\r\n                multiplier += fx.mag * 10; //-30 to +30\r\n            });\r\n        });\r\n        return multiplier / 100;\r\n    }\r\n    _getTraitMap(){\r\n        let traits = {[this.community]: true, [this.ideals]:  true, [this.ethnicity]: true};\r\n        if (this.faith != 'noFaith')\r\n            traits[this.faith] = true;\r\n        return traits;\r\n    }\r\n    getFace(): string{\r\n        // if (!this.alive)\r\n        //     return '💀';\r\n        if (this.state.data.act === 'buy' && this.state.data.good === 'shelter'){\r\n            return '😴';\r\n        }\r\n        if (this.state.data.act === 'crime'){\r\n            return '😈';\r\n        }\r\n        if (this.state.data.act === 'relax'){\r\n            return '😎';\r\n        }\r\n        if (this.state.data.act === 'chat'){\r\n            if (this.state.data.chat?.participation === 'speaker'){\r\n                switch(this.state.data?.chat?.type){\r\n                    default: return '😃';\r\n                    case 'gift': return '😇';\r\n                    case 'praise': return '🥳';\r\n                    case 'bully': return '😈';\r\n                }\r\n            }\r\n            return '🤨';\r\n        }\r\n        if (this.food === 'hungry')\r\n            return '😫';\r\n        if (this.health === 'sick')\r\n            return '🤢';\r\n        if (this.shelter === 'podless')\r\n            return '🥶';\r\n        if (this.job === 'jobless')\r\n            return '😧';\r\n        if (this.lastHappiness < 0)\r\n            return '☹️';\r\n        if (this.lastHappiness >= 50)\r\n            return '🙂';\r\n        return '😐';\r\n    }\r\n    getIdea(costOfLiving: number): {bad: boolean, idea: string}|null {\r\n        if (this.food === 'hungry')\r\n            return {bad: true, idea: '🍗'};\r\n        if (this.health === 'sick')\r\n            return {bad: true, idea: '💊'};\r\n        if (this.shelter === 'podless')\r\n            return {bad: true, idea: '🏠'};\r\n        if (this.canBaby(costOfLiving))\r\n            return {bad: false, idea: '👶'};\r\n        return null;        \r\n    }\r\n    getSpeech(): string | undefined {\r\n        if (this.state.data.act === 'chat'){\r\n            if (this.state.data.chat?.participation === 'speaker' && this.state.data.chat.preachBelief){\r\n                return '💬'+SecondaryBeliefData[this.state.data.chat.preachBelief].icon;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    getCrimeDecision(\r\n        good: TraitGood,\r\n        crimeReason: 'desperation'|'greed',\r\n    ){\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community === 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (crimeReason === 'desperation' && this.health === 'sick' || this.food === 'hungry'){\r\n            chance += .15;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    tryFindRandomJob(law: Government) {\r\n        const job: TraitJob = GetRandom(['builder', 'doc', 'farmer', 'entertainer']);\r\n        if (!this.trySetJob(job)){\r\n            \r\n            this.city?.eventBus?.nojobslots.publish({icon: '🏚️', trigger: 'nojobslots', message: `A subject cannot find a job; build or upgrade more buildings.`});\r\n        }\r\n    }\r\n    trySetJob(job: TraitJob): boolean{\r\n        if (this.city?.tryGetJob(this, job)){\r\n            this.city.unsetJob(this);\r\n            this.job = job;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    tryPurchase(cost: BeanResources) {\r\n        return (cost.sanity === undefined || this.discrete_sanity >= cost.sanity);\r\n    }\r\n    public maybeParanoid() {\r\n        if (this.believesIn('Paranoia') && Math.random() < ParanoidUnhappyChance){\r\n            this.emote('unhappiness');\r\n        }\r\n    }\r\n    public maybeAntagonised(){\r\n        this.emote('unhappiness');\r\n    }\r\n    public maybeEnthused(){\r\n        this.emote('happiness');\r\n    }\r\n    /**\r\n     * chats or conversations use 🗣️ in descriptions\r\n     * @returns \r\n     */\r\n    public maybeChat(): boolean {\r\n        if (this.lastChatMS + ChatCooldownMS > Date.now()) \r\n            return false;\r\n        if (this.state.data.act === 'chat')\r\n            return false;\r\n        const roll = Math.random();\r\n        let chance = (this.community === 'state') ? 0.2 : 0.1;\r\n        if (this.believesIn('Gossip')) \r\n            chance += GossipChatExtraChance;\r\n        return roll < chance;\r\n    }\r\n    public getRandomChat(nearby: Bean[]): IChatData {\r\n        const canPreach = this.beliefs.length;\r\n        if (canPreach){\r\n            if (this.believesIn('Charity') && this.cash >= 2){\r\n                //find a bean with less money than self, poorest in sight\r\n                const needy = nearby.filter(x => x.cash <= this.cash-1).reduce((least: Bean|null, bean) => {\r\n                    if (least == null || (bean.cash < least.cash))\r\n                        return bean;\r\n                    return least;\r\n                }, null);\r\n                if (needy) {\r\n                    this.cash -= 0.5;\r\n                    needy.cash += 0.5;\r\n                    return {\r\n                        participation: 'speaker',\r\n                        type: 'gift',\r\n                        targetBeanKey: needy.key\r\n                    }\r\n                }\r\n            } else if(this.believesIn('Enthusiasm') && Math.random() < EnthusiasmPraiseChance){\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'praise',\r\n                    preachBelief: 'Enthusiasm'\r\n                }\r\n            } else if(this.believesIn('Antagonism') && Math.random() < AntagonismBullyChance){\r\n                return {\r\n                    participation: 'speaker',\r\n                    type: 'bully',\r\n                    preachBelief: 'Antagonism'\r\n                }\r\n            }\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'preach',\r\n                preachBelief: GetRandom(this.beliefs)\r\n            }\r\n        } else {\r\n            return {\r\n                participation: 'speaker',\r\n                type: 'praise'\r\n            }\r\n        }\r\n    }\r\n    work(law: Government, econ: Economy) {\r\n        if (this.job === 'jobless'){\r\n        } else {\r\n            switch(this.job){\r\n                case 'farmer':\r\n                    this.discrete_food = Math.min(this.discrete_food+1, GoodToThreshold.food.sufficient*2);\r\n                    if (this.believesIn('Parochialism') && Math.random() <= ParochialHappyChance)\r\n                        this.emote('happiness');\r\n                    break;\r\n                case 'doc':\r\n                    this.discrete_health = Math.min(this.discrete_health+1, GoodToThreshold.medicine.sufficient*2);\r\n                    break;\r\n                case 'builder': \r\n                    this.shelter = 'crowded';\r\n                    this.discrete_stamina = 7;\r\n                    break;\r\n                case 'entertainer':\r\n                    if (this.believesIn('Cosmopolitanism') && Math.random() <= CosmopolitanHappyChance)\r\n                        this.emote('happiness');\r\n                break;\r\n            }\r\n            if (this.believesIn('Diligence') && Math.random() <= DiligenceHappyChance){\r\n                this.emote('happiness');\r\n            }\r\n            if (this.believesIn('Hedonism') && Math.random() <= HedonismHateWorkChance){\r\n                this.emote('unhappiness');\r\n            }\r\n            this.ticksSinceLastSale++;\r\n            if (this.ticksSinceLastSale > 7){\r\n                const cityHasOtherWorkers = this.city ? this.city.beans.filter(x => x.job === this.job).length > 1 : false;\r\n                //underemployment\r\n                if (cityHasOtherWorkers && Math.random() > 0.5) {\r\n                    const newJob = econ.mostInDemandJob();\r\n                    if (newJob)\r\n                        this.trySetJob(newJob);\r\n                }\r\n            }\r\n            econ.produceAndPrice(this, JobToGood(this.job), 4, this.fairGoodPrice);\r\n        }\r\n    }\r\n    private buyFood(economy: Economy) {\r\n        const groceries = economy.tryTransact(this, 'food', 0.5, 3);\r\n        if (groceries)\r\n            this.discrete_food += groceries.bought;\r\n        if (this.food === 'stuffed'){\r\n            this.emote('happiness');\r\n            if (this.believesIn('Gluttony')){\r\n                this.emote('happiness');\r\n            }\r\n        }\r\n        return groceries;\r\n    }\r\n    public buy: {[key in TraitGood]: (econ: Economy)=> boolean} = {\r\n        food: (economy: Economy) =>{\r\n            return this.buyFood(economy) != null;\r\n        },\r\n        medicine:  (economy: Economy) =>{\r\n            return this.buyMeds(economy) != null;\r\n        },\r\n        fun:  (economy: Economy) =>{\r\n            return this.buyFun(economy);\r\n        },\r\n        shelter: (economy: Economy) => {\r\n            return this.buyHousing(economy);\r\n        }\r\n    }\r\n    public steal(good: 'food'|'medicine', econ: Economy){\r\n        const stolen = econ.steal(good, 3);\r\n        if (stolen != null){\r\n            switch(good){\r\n                case 'food':\r\n                    this.discrete_food += stolen;\r\n                    break;\r\n                case 'medicine':\r\n                    this.discrete_health += stolen;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    private buyHousing(economy: Economy): boolean {\r\n        const housing = economy.tryTransact(this, 'shelter');\r\n        if (housing) {\r\n            this.discrete_stamina = 10;\r\n            this.shelter = 'crowded';\r\n        } else if (this.discrete_stamina <= 0){\r\n            this.shelter = 'podless';\r\n        }\r\n        return housing != null;\r\n    }\r\n    private buyFun(economy: Economy): boolean {\r\n        const fun = economy.tryTransact(this, 'fun');\r\n        if (fun) {\r\n            this.discrete_fun = 1;\r\n            this.emote('happiness');\r\n        }\r\n        return fun != null;\r\n    }\r\n\r\n    age(economy: Economy): IEvent|null {\r\n        if (!this.alive) return null;\r\n\r\n        const wasNotHungry = this.food !== 'hungry';\r\n        const wasNotSick = this.health !== 'sick';\r\n\r\n        this.discrete_food -= 1/7;\r\n        if (this.discrete_food < 0)\r\n            this.discrete_health -= 0.2;\r\n\r\n        const starve = this.maybeDie('starvation', 0.6);\r\n        if (starve)\r\n            return null;\r\n        else if (this.food === 'hungry' && wasNotHungry){\r\n            this.emote('unhappiness');\r\n            if (this.believesIn('Gluttony')){\r\n                this.emote('unhappiness');\r\n                this.emote('unhappiness');\r\n            }\r\n        }\r\n            \r\n        if (this.shelter === 'podless')\r\n            this.discrete_health -= 1/14;\r\n        \r\n        this.discrete_stamina--;\r\n    \r\n        const exposure = this.maybeDie('exposure', 0.2);\r\n        if (exposure)\r\n            return null;\r\n\r\n        this.discrete_health -= 1/20;\r\n        this.discrete_health = Math.min(this.discrete_health, 3);\r\n        const sick = this.maybeDie('sickness', 0.4);\r\n        if (sick)\r\n            return null;\r\n        else if (this.health === 'sick' && wasNotSick)\r\n            this.emote('unhappiness');\r\n\r\n        this.discrete_fun -= 1/10;\r\n        this.discrete_fun = Math.max(0, this.discrete_fun);\r\n        return null;\r\n    }\r\n    private buyMeds(economy: Economy) {\r\n        const meds = economy.tryTransact(this, 'medicine', 0.5, 3);\r\n        if (meds)\r\n            this.discrete_health += meds.bought;\r\n        if (this.health === 'fresh')\r\n            this.emote('happiness');\r\n        return meds;\r\n    }\r\n    get babyChance(): number{\r\n        let base = BabyChance;\r\n        if (this.believesIn('Natalism'))\r\n            return base + .15;\r\n        else\r\n            return base;\r\n    }\r\n    maybeBaby(economy: Economy): IEvent | null {\r\n        if (this.canBaby(economy.getCostOfLiving()) &&\r\n            Math.random() <= this.babyChance) {\r\n            if (this.city)\r\n                this.city.breedBean(this);\r\n            else\r\n                throw 'bean does not have city object';\r\n            return {icon: '🎉', trigger: 'birth', message: `${this.name} has a baby!`}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    canBaby(costOfLiving: number): boolean{\r\n        return this.alive && this.cash > costOfLiving * 3 &&\r\n            !this.isInCrisis;\r\n    }\r\n    maybeEmote(): TraitEmote | null {\r\n        if (this.lifecycle === 'alive'){\r\n            const unhappy = Math.random();\r\n            if (unhappy < this.unhappyChance)\r\n                return 'unhappiness';\r\n            else {\r\n                const happy = Math.random();\r\n                if (happy < this.happyChance)\r\n                    return 'happiness';\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    get unhappyChance(): number{\r\n        let base = UnhappyChance;\r\n        base -= Math.min(0, this.ticksSinceLastEmote / EmoteTickRamp);\r\n        \r\n        if (this.isInCrisis)\r\n            base += EmoteCrisisChance;\r\n        \r\n        return base;\r\n    }\r\n    get happyChance(): number{\r\n        let base = HappyChance;\r\n        base -= Math.min(0, this.ticksSinceLastEmote / EmoteTickRamp);\r\n        return base + (this.lastHappiness / 100 / 2);\r\n    }\r\n    maybeCrime(good: TraitGood): boolean {\r\n        if (good === 'shelter') return false;\r\n        if (good === 'fun') return false;\r\n        const roll = Math.random();\r\n        let chance = 0.05;\r\n        if (this.community === 'ego'){\r\n            chance += .1;\r\n        }\r\n        if (this.isInCrisis){\r\n            chance += .1;\r\n        }\r\n        if (this.believesIn('Greed')){\r\n            chance += .25;\r\n        }\r\n        if (this.believesIn('Anarchism')){\r\n            chance += .33;\r\n        }\r\n        if (this.believesIn('Authority')){\r\n            chance -= .25;\r\n        }\r\n        if (good === 'food' && this.food === 'hungry'){\r\n            chance += .25;\r\n        }\r\n        else if (good === 'medicine' && this.health === 'sick'){\r\n            chance += .25;\r\n        }\r\n        return chance <= roll;\r\n    }\r\n    emote(emote: TraitEmote){\r\n        this.ticksSinceLastEmote = 0;\r\n        this.discrete_sanity = MathClamp(this.discrete_sanity + EmotionSanity[emote], 0, 10);\r\n        this.city?.addEmotePickup(this.key, emote);\r\n        if (this.believesIn('Hedonism') && (emote === 'happiness' || emote === 'love') && Math.random() < HedonismExtraChance){\r\n            this.city?.addEmotePickup(this.key, emote);\r\n        }\r\n    }\r\n    canBuy(good: TraitGood): 'yes'|'nosupply'|'pricedout' {\r\n        return this.city?.economy?.canBuy(this, good) || 'nosupply';\r\n    }\r\n    /**\r\n     * should return 0-1 float, with 1 meaning 100%\r\n     * @param economy \r\n     */\r\n    chanceToDonate(economy: Economy, direct: boolean = false): number{\r\n        const canDonate = this.cash > economy.getCostOfLiving() * 2 && !this.isInCrisis;\r\n        if (canDonate && this.lastPartySentiment > 0.5){\r\n            const threshold = direct ? 0.2 : 0.5;\r\n            const baseChance = this.lastPartySentiment - threshold;\r\n            return (baseChance) / 2;\r\n        }\r\n        return 0;\r\n    }\r\n    maybeDonate(economy: Economy, direct: boolean = false): number{\r\n        // const chance = this.chanceToDonate(economy, direct);\r\n        // if (chance > 0){\r\n        //     const willDonate = Math.random() < chance;\r\n        //     if (willDonate){\r\n        //         const donation = 1;\r\n        //         this.cash -= donation;\r\n        //         return donation;\r\n        //     }\r\n        // }\r\n        return 0;\r\n    }\r\n    maybeDie(cause: BeanDeathCause, chance = 0.5): boolean{\r\n        if (this.discrete_health < 0 && Math.random() <= chance) {\r\n            this.die(cause);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    die(cause: BeanDeathCause){\r\n        this.alive = false;\r\n        const pains = GetRandomNumber(2, 3);\r\n        for (let i = 0; i < pains; i++) {\r\n            this.emote('hate');\r\n        }\r\n        this.city?.eventBus?.death.publish({\r\n            icon: '☠️', trigger: 'death', message: `${this.name} died of ${cause}!`, \r\n            beanKey: this.key, cityKey: this.cityKey,\r\n            point: this.city?.movers.bean[this.key]\r\n    });\r\n    }\r\n    abduct(player: IPlayerData){\r\n        this.lifecycle = 'abducted';\r\n        player.abductedBeans.push(this);\r\n    }\r\n\r\n    state: AgentState = IdleState.create();\r\n    jobQueue: PriorityQueue<AgentState> = new PriorityQueue<AgentState>([]);\r\n    onAct = new PubSub<number>();\r\n}","import { TraitIdeals, TraitCommunity, TraitEthno, TraitFaith, World, TraitJob } from './World';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Policy, BaseParty, CityPartyHQ, Party } from './simulation/Politics';\r\nimport { IBuilding, BuildingTypes, Geography, PolarPoint, polarToPoint, hex_to_pixel, HexPoint, Building } from './simulation/Geography';\r\nimport { City } from './simulation/City';\r\nimport { BeliefsAll } from './simulation/Beliefs';\r\nimport { WorldSound } from './WorldSound';\r\n\r\nexport function GetRandomNumber(min: number, max: number): number{\r\n    const randomBuffer = new Uint32Array(1);\r\n    window.crypto.getRandomValues(randomBuffer);\r\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\nexport function GetRandomIndex(length: number): number{\r\n    return GetRandomNumber(0, length-1)\r\n}\r\nexport function GetRandom<S>(choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(choices.length);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(): TraitIdeals{\r\n    return GetRandom(['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(): TraitCommunity{\r\n    return GetRandom(['state', 'ego']);\r\n}\r\nexport function RandomEthno(): TraitEthno{\r\n    return GetRandom(['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(): TraitFaith{\r\n    return GetRandom(['rocket','music','dragon', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\nexport const MAX_PETRI_RADIUS = 200;\r\nexport const PI2 = Math.PI*2;\r\nexport function RandomPolar(r?: number): PolarPoint{\r\n    return {\r\n        r: r || GetRandomNumber(0, MAX_PETRI_RADIUS),\r\n        az: GetRandomNumber(0, PI2)\r\n    };\r\n}\r\nexport function GetBuildingR(type: BuildingTypes): number{\r\n    switch(type){\r\n        case 'farm':\r\n            return GetRandomNumber(200, 300);\r\n        default: \r\n            return GetRandomNumber(80, 200);\r\n    }\r\n}\r\nexport function GenerateBuilding(geo: Geography, type: BuildingTypes, hex: HexPoint){\r\n    const newBuilding = new Building();\r\n    newBuilding.type = type;\r\n    newBuilding.key = geo.numberOf(type);\r\n    geo.addBuilding(hex, newBuilding);\r\n}\r\n\r\nconst Number_Starting_Cities = 1;\r\nexport function GenerateWorld(): World{\r\n    const world = new World();\r\n \r\n    world.law.laws = [\r\n        {group: 'Welfare', key: 'eat_cake', axis: 'wel_food'},\r\n        {group: 'Welfare', key: 'outside', axis: 'wel_house'},\r\n        {group: 'Welfare', key: 'stay_healthy', axis: 'wel_health'},\r\n        {group: 'Culture', key: 'secularism', axis: 'cul_rel'}\r\n    ];\r\n    world.party = new BaseParty();\r\n    world.institutions.push(world.party);\r\n    for (let i = 0; i < Number_Starting_Cities; i++) {\r\n        world.cities.push(GenerateCity(world.cities.length, world.sfx));\r\n        world.cities[i].eventBus = world.bus;\r\n        world.cities[i].environment = world.date;\r\n        world.cities[i].economy = world.economy;\r\n        world.cities[i].law = world.law;\r\n        for (let j = 0; j < world.cities[i].beans.length; j++) {\r\n            const bean = world.cities[i].beans[j];\r\n            bean.work(world.law, world.economy);\r\n            if (bean.job == 'farmer')\r\n                bean.work(world.law, world.economy);\r\n        }\r\n    }\r\n    world.economy.totalSeasonalDemand.food = world.beans.length;\r\n    world.economy.totalSeasonalDemand.shelter = world.beans.length;\r\n    world.economy.totalSeasonalDemand.medicine = world.beans.length;\r\n\r\n    return world;\r\n}\r\n\r\nexport function GeneratePartyHQ(city: City, party: Party) {\r\n    \r\n}\r\n\r\nexport const Number_Starting_City_Pop = 0;\r\nexport function GenerateCity(previousCityCount: number, sfx: WorldSound): City{\r\n    let newCity = new City(sfx);\r\n    newCity.key = previousCityCount;\r\n    newCity.name = GetRandom(['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', '']);\r\n    newCity.name += GetRandom(['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash']);\r\n    newCity.name += GetRandom(['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest']);\r\n    \r\n    GenerateBuilding(newCity, 'courthouse', newCity.hexes[0]); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(15, 20)]); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(21, 25)]); \r\n    GenerateBuilding(newCity, 'nature', newCity.hexes[GetRandomNumber(26, 60)]);\r\n    // GenerateBuilding(newCity, 'house', newCity.hexes[1]); \r\n    // GenerateBuilding(newCity, 'hospital', newCity.hexes[5]);\r\n    \r\n    // GenerateBuilding(newCity, 'farm', newCity.hexes[7]);\r\n\r\n    const cityPopulation = Number_Starting_City_Pop;\r\n    while(newCity.historicalBeans.length < cityPopulation){\r\n        newCity.historicalBeans.push(\r\n            GenerateBean(newCity, newCity.historicalBeans.length)\r\n        );\r\n    }\r\n\r\n    return newCity;\r\n}\r\nfunction getStartingPoint(city: City): HexPoint{\r\n    const house = GetRandom(city.byType.house.all);\r\n    if (house){\r\n        return city.byType.house.coordByID[house.key];\r\n    } else {\r\n        return {\r\n            q: 0, r: 0\r\n        }\r\n    }\r\n}\r\nexport function GenerateBean(city: City, previousBeanCount: number, hexPoint?: HexPoint, job?: TraitJob): Bean{\r\n    let newBean = new Bean();\r\n    \r\n    newBean.key = previousBeanCount;\r\n    newBean.cityKey = city.key;\r\n    newBean.city = city;\r\n    newBean.name = GetRandom(['Joe', 'Frank', 'Jill', 'Jose',\r\n    'Johnny', 'Isabelle', 'Carmen', 'Ace', 'Carl', 'Zander', 'Jean',\r\n    'Anne', 'Leslie', 'Ben', 'Ron', \r\n    'Ellen', 'Dallas', 'Kane', 'Ash', \r\n    'Jim', 'James', 'Leonard', 'Nyota', 'Christine', 'Scotty', 'Tasha', 'Geordi', 'Beverly', 'Deanna', 'Wesley', 'Majel',\r\n    'Malcolm','River',  \r\n    'Luke', \r\n    'Dana', 'Walter',  \r\n    'Rick', \r\n    'Rose', 'Donna', 'Jack', 'Amy', 'Rory', 'Martha', 'Clara', \r\n    'Arnold', 'Dave', 'Holly', \r\n    'Kara', 'Gaius','William', 'Lee', 'Laura', 'Saul',\r\n    'Max', 'Edison', 'Theora', 'Bryce', 'Murray', 'Ned',\r\n    'Daniel', 'Samantha', \r\n    'Logan', 'Francis', 'Jessica'\r\n    ]) + ' ';\r\n    newBean.name += GetRandom([\r\n        'Ripley', 'Bishop', 'Hicks', 'Vasquez', 'Hudson', \r\n        'Rico', 'Flores', 'Ibanez', 'Levy', 'Jenkins', 'Barlow', 'Zim', 'Rasczak',\r\n        'Kirk', 'McCoy', 'Sulu', 'Uhura', 'Chekov', 'Chapel', 'Rand','Riker', 'Crusher', 'Barret', \"O'Brien\",\r\n        'Reynolds', 'Tam', \r\n        'Scully', 'Mulder','Skinner', \r\n        'Connor', \r\n        'Thrace', 'Baltar', 'Smith','Adama', 'Roslin', 'Tigh', 'Song', 'Oswald', \r\n        'Deckard', \r\n        'Tyler', 'Harkness', 'Jones', 'Noble', 'Pond', 'Williams',\r\n        'Rimmer', 'Lister', \r\n        'Head', 'Carter', 'Lynch', 'McKenzie', 'Grossberg',\r\n        \"O'Neil\", 'Jackson', 'Carter'\r\n         ]);\r\n    newBean.community = RandomCommunity();\r\n    newBean.ideals = RandomIdeal();\r\n    newBean.faith = RandomFaith();\r\n    const beanBeliefCount = Math.ceil(Math.random() * 2);\r\n    for (let i = 0; i < beanBeliefCount; i++) {\r\n        newBean.beliefs.push(GetRandom(BeliefsAll));\r\n    }\r\n    \r\n    if (job == null){\r\n        switch (previousBeanCount){\r\n            case 0:\r\n                job = 'farmer'; break;\r\n            case 1:\r\n                job = 'builder'; break;\r\n            case 2:\r\n                job = 'doc'; break;\r\n            default:\r\n                job = GetRandom(['farmer', 'builder', 'doc', 'entertainer']); break;\r\n        }\r\n    }\r\n    newBean.trySetJob(job);\r\n\r\n    newBean.cash = StartingCash(newBean.job);\r\n    newBean.discrete_food = 3;\r\n\r\n    city.movers.bean[newBean.key] = hex_to_pixel(city.hex_size, city.petriOrigin, hexPoint || getStartingPoint(city));\r\n    \r\n    return newBean;\r\n}","import { TraitGood, TraitJob, GoodToJob, Trait } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { IOrganization, Charity } from \"./Institutions\";\r\nimport { City } from \"./City\";\r\nimport { GetRandom } from \"../WorldGen\";\r\nimport { IEvent, IEventBus } from \"../events/Events\";\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    ticksSinceLastSale: number;\r\n}\r\nexport interface Listing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerOrganizationKey?: number;\r\n    price: number;\r\n    seller: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'shelter', 'medicine', 'fun'];\r\n\r\nexport class Economy {\r\n    market = new OrderBook();\r\n    charity = new OrderBook();\r\n    unfulfilledSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalSupply: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    constructor(public eventBus: IEventBus){\r\n    }\r\n    public resetSeasonalDemand(){\r\n        this.unfulfilledSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalSupply = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    }\r\n    tryTransact(\r\n        buyer: IEconomicAgent, \r\n        good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1\r\n        ): {bought: number, price: number}|null {\r\n        this.totalSeasonalDemand[good] += maxDemand;\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            //console.log('agent could not find '+good);\r\n            this.unfulfilledSeasonalDemand[good] += maxDemand;\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if (listing.price <= buyer.cash * actualDemand){\r\n            return this.market.transact(listing, good, actualDemand, buyer);\r\n        } else if (buyer instanceof Bean) {\r\n            // console.log('bean couldnot afford '+good+\" @ $\"+listing?.price);\r\n            // const charityTicket = this.charity.getLowestPriceListing(good, minDemand);\r\n            // if (charityTicket && charityTicket.seller instanceof Charity) {\r\n            //     // console.log('bean got '+good+\" from charity\");\r\n            //     const actualDemand = Math.min(charityTicket.quantity, maxDemand);\r\n            //     buyer.partyLoyalty += PartyLoyaltyPerCharityUse;\r\n            //     charityTicket.seller.beansHelped++;\r\n            //     charityTicket.seller.inventory -= actualDemand;\r\n            //     return this.charity.transact(charityTicket, good, actualDemand, buyer);\r\n            // }\r\n        }\r\n        this.unfulfilledSeasonalDemand[good] += actualDemand;\r\n        return null;\r\n    }\r\n    canBuy(buyer: IEconomicAgent, good: TraitGood,\r\n        minDemand: number = 1,\r\n        maxDemand: number = 1): 'yes'|'nosupply'|'pricedout'{\r\n        const listing = this.market.getLowestPriceListing(good, minDemand);\r\n        if (listing == null){\r\n            return 'nosupply';\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        if (listing.price <= buyer.cash * actualDemand)\r\n            return 'yes';\r\n        return 'pricedout';\r\n    }\r\n    steal(\r\n        good: TraitGood,\r\n        maxDemand: number = 1\r\n        ): number|null {\r\n        const listing = GetRandom(this.market.listings[good]);\r\n        if (listing == null){\r\n            return null;\r\n        }\r\n        const actualDemand = Math.min(listing.quantity, maxDemand);\r\n        this.market.subtractFromListing(listing, good, actualDemand);\r\n        \r\n        return actualDemand;\r\n    }\r\n    produceAndPrice(seller: Bean, good: TraitGood, quantity: number, price: number) {\r\n        this.totalSeasonalSupply[good] += quantity;\r\n        const existing = this.market.getBeansListings(seller.cityKey, seller.key, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    addCharity(seller: Charity, good: TraitGood, quantity: number) {\r\n        const existing = this.charity.getOrgsListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.quantity = Math.min(existing.quantity, 10);\r\n            seller.inventory = existing.quantity;\r\n        } else {\r\n            this.charity.addNewOrgListing(good, quantity, 0, seller);\r\n            seller.inventory = quantity;\r\n        }\r\n        //this.book[good].sort((a, b) => a.price - b.price);\r\n    }\r\n    public mostInDemandJob(): TraitJob|null{\r\n        const goods: TraitGood[] = AllGoods;\r\n        const max = goods.reduce((last, good) => {\r\n            if (this.unfulfilledSeasonalDemand[good] > last.max){\r\n                last.max = this.unfulfilledSeasonalDemand[good];\r\n                last.job = GoodToJob(good);\r\n            }\r\n            return last;\r\n        }, {max: 0, job: null as TraitJob|null})\r\n\r\n        return max.job;\r\n    }\r\n    public onBeanDie(bean: Bean){\r\n        AllGoods.forEach((g) => {\r\n            const existing = this.market.getBeansListings(bean.cityKey, bean.key, g);\r\n            if (existing){\r\n                const lucky = bean.city?.getRandomCitizen();\r\n                if (lucky) {\r\n                    existing.sellerCityKey = lucky.cityKey;\r\n                    existing.sellerBeanKey = lucky.key;\r\n                    existing.seller = lucky;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public getFairGoodPrice(good: TraitGood){\r\n        const supply = this.totalSeasonalSupply[good] || 1;\r\n        const demand = this.totalSeasonalDemand[good];\r\n        return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n    }\r\n    public getCostOfLiving(){\r\n        return this.getFairGoodPrice('food')+this.getFairGoodPrice('shelter')+this.getFairGoodPrice('medicine');\r\n    }\r\n}\r\n\r\nexport class OrderBook{\r\n    public readonly listings: {[key in TraitGood]: Listing[]} = {\r\n        food: [] as Listing[],\r\n        shelter: [] as Listing[],\r\n        medicine: [] as Listing[],\r\n        fun: [] as Listing[],\r\n    };\r\n    public getLowestPriceListing(good: TraitGood, demand: number): Listing|null{\r\n        const fullListings =  this.listings[good].filter((l) => {\r\n            return l.quantity >= demand;\r\n        });\r\n        if (fullListings.length > 0){\r\n            let numberOfSamePriceListings = 1;\r\n            const lowPrice = fullListings[0].price;\r\n            for (let i = 1; i < fullListings.length; i++) {\r\n                const list = fullListings[i];\r\n                if (list.price > lowPrice)\r\n                    break;\r\n                numberOfSamePriceListings++;\r\n            }\r\n            const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n            if (i >= fullListings.length)\r\n                throw \"invalid index\";\r\n            return fullListings[i];\r\n        }\r\n        return null;\r\n    }\r\n    public getBeansListings(cKey: number, bKey: number, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == bKey && x.sellerCityKey == cKey);\r\n    }\r\n    public getOrgsListings(b: IOrganization, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerOrganizationKey == b.key);\r\n    }\r\n    public transact(listing: Listing, good: TraitGood, demand: number, buyer: IEconomicAgent){    \r\n        this.subtractFromListing(listing, good, demand);\r\n        const sale = listing.price * demand;\r\n        buyer.cash -= sale;\r\n        listing.seller.cash += sale;\r\n        listing.seller.ticksSinceLastSale = 0;\r\n        return {\r\n            bought: demand,\r\n            price: sale\r\n        }\r\n    }\r\n    public subtractFromListing(listing: Listing, good: TraitGood, demand: number){     \r\n        listing.quantity -= demand;\r\n        if (listing.quantity <= 0){\r\n            this.listings[good].splice(0, 1);\r\n        }\r\n    }\r\n    public addNewListing(good: TraitGood, quantity: number, price: number, bean: Bean){\r\n        this.listings[good].push({\r\n            sellerCityKey: bean.cityKey,\r\n            sellerBeanKey: bean.key,\r\n            price: price,\r\n            seller: bean,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public addNewOrgListing(good: TraitGood, quantity: number, price: number, org: IOrganization){\r\n        this.listings[good].push({\r\n            sellerOrganizationKey: org.key,\r\n            price: price,\r\n            seller: org,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public sort(good: TraitGood){        \r\n        this.listings[good].sort((a, b) => a.price - b.price);\r\n    }\r\n}","import * as React from 'react';\r\nimport { Bean } from './simulation/Bean';\r\nimport { Economy } from './simulation/Economy';\r\nimport { Policy, Party, BaseParty, ICityPartyHQ } from './simulation/Politics';\r\nimport { IInstitution, IOrganization, Charity } from './simulation/Institutions';\r\nimport { IEvent, EventBus } from './events/Events';\r\nimport { Season, IDate, Hour } from './simulation/Time';\r\nimport { Government } from './simulation/Government';\r\nimport { Player, TechData } from './simulation/Player';\r\nimport { accelerate_towards, accelerator_coast, Geography, move_towards } from './simulation/Geography';\r\nimport { City, Pickup } from './simulation/City';\r\nimport { shuffle } from './simulation/Utils';\r\nimport { Act, IActListener, IChatData } from './simulation/Agent';\r\nimport { IDifficulty } from './Game';\r\nimport { type } from 'os';\r\nimport { IsBeliefDivergent, SecondaryBeliefData } from './simulation/Beliefs';\r\nimport { WorldSound } from './WorldSound';\r\n\r\nexport interface IBeanContainer{\r\n    /**\r\n     * all beans ever, including dead ones\r\n     */\r\n    historicalBeans: Bean[];\r\n    /**\r\n     * current non-dead beans\r\n     */\r\n    beans: Bean[];\r\n}\r\n\r\nexport interface IWorld{\r\n    cities: City[];\r\n    law: Government;\r\n    party: Party;\r\n\r\n    institutions: IInstitution[];\r\n    bus: EventBus;\r\n    date: IDate;\r\n    alien: Player;\r\n}\r\nconst PickupPhysics = {\r\n    Brake: { x: .94, y: .94},\r\n    AccelerateS: 60,\r\n    MaxSpeed: 9,\r\n    CollisionDistance: 10\r\n}\r\nexport class World implements IWorld, IBeanContainer, IActListener{\r\n    public readonly bus = new EventBus();\r\n    public readonly economy: Economy = new Economy(this.bus);\r\n    public cities: City[] = [];\r\n    public law: Government = new Government();\r\n    public institutions: IInstitution[] = [];\r\n    public party: Party = new BaseParty();\r\n    public date: IDate = {year: 1, season: Season.Spring, day: 1, hour: 1};\r\n\r\n    public alien: Player = new Player();\r\n    public sfx = new WorldSound();\r\n\r\n    public get beans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.beans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get historicalBeans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.historicalBeans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get organizations(): IOrganization[]{\r\n        return this.institutions.reduce((list, institute) => {\r\n            return list.concat(institute.organizations);\r\n        }, [] as IOrganization[]);\r\n    }\r\n\r\n    constructor(){\r\n        this.bus.death.subscribe(this.onBeanDie);\r\n    }\r\n\r\n    /**\r\n     * update 'pushed' state\r\n     */\r\n    public calculateComputedState(){\r\n        this.cities.forEach(c => {\r\n            c.calculate(this.economy, this.law);\r\n            c.beans.forEach(b => b.calculateBeliefs(this.economy, c, this.law, this.party));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * simulates a season passing, setting a lot of state\r\n     */\r\n    public simulate_world(){\r\n        this.date.hour++\r\n        if (this.date.hour > Hour.Evening){\r\n            this.date.hour = 0;\r\n            this.date.day++;\r\n        }\r\n        if (this.date.day > 30){\r\n            this.date.day = 1;\r\n            this.date.season++;\r\n        }\r\n        if (this.date.season > 3){\r\n            this.date.year++;\r\n            this.inflate();\r\n            this.resetYearlyCounters();\r\n            this.date.season = 0;\r\n        }\r\n\r\n        this.alien.bots.amount += this.alien.bots.income;\r\n        this.alien.energy.amount += this.alien.energy.income;\r\n        if (this.alien.hasResearched('fast_resources')){\r\n            this.alien.bots.amount += this.alien.bots.income*0.5;\r\n            this.alien.energy.amount += this.alien.energy.income*0.5;\r\n        }\r\n        if (this.alien.currentlyResearchingTech){\r\n            const tech = this.alien.currentlyResearchingTech;\r\n            if(this.alien.techProgress[tech] == null){\r\n                this.alien.techProgress[tech] = {\r\n                    researchPoints: 0\r\n                }\r\n            }\r\n            const max = TechData[tech].techPoints;\r\n            const current = this.alien.techProgress[tech].researchPoints;\r\n            if (current < max)\r\n                this.alien.techProgress[tech].researchPoints += this.alien.abductedBeans.length;\r\n            if (current >= max)\r\n                this.alien.currentlyResearchingTech = undefined;\r\n        }\r\n        \r\n        this.economy.resetSeasonalDemand();\r\n\r\n        this.organizations.forEach((org) => org.work(this.law, this.economy));\r\n        \r\n        const dings: {typ: TraitEmote, i: number}[] = [];\r\n        shuffle(this.beans).forEach((b: Bean, i: number) => {\r\n            b.age(this.economy);\r\n            const e = b.maybeBaby(this.economy);\r\n            if (e) this.publishEvent(e);\r\n            if (b.job === 'jobless')\r\n                b.tryFindRandomJob(this.law);\r\n            b.ticksSinceLastEmote++;\r\n        });\r\n        this.cities.forEach((c) => c.getTaxesAndDonations(this.party, this.economy));\r\n        this.calculateComputedState();\r\n        this.alien.checkGoals(this);\r\n        this.alien.checkReportCard(this);\r\n    }\r\n    simulate_beans(deltaMS: number){\r\n        this.beans.forEach((b) => {\r\n            Act(b, deltaMS, this.alien.difficulty, this);\r\n        })\r\n    }\r\n    simulate_pickups(deltaMS: number){\r\n        const city = this.cities[0];\r\n        const pickups = city.pickups.get;\r\n        //go backwards because we'll modify the array as we go\r\n        for(let i = pickups.length - 1; i >= 0; i--) {\r\n            const pickup = pickups[i];\r\n            let collide = false;\r\n            if (city.pickupMagnetPoint){\r\n                collide = accelerate_towards(\r\n                    pickup, \r\n                    city.pickupMagnetPoint, \r\n                    PickupPhysics.AccelerateS * deltaMS/1000, \r\n                    PickupPhysics.MaxSpeed, \r\n                    PickupPhysics.CollisionDistance,\r\n                    PickupPhysics.Brake);\r\n            } else {\r\n                accelerator_coast(pickup, PickupPhysics.Brake);\r\n            }\r\n            if (collide){\r\n                const amt = EmotionWorth[pickup.type];\r\n                this.alien.hedons.amount += amt;\r\n                this.alien.hedons.change.publish({change: amt});\r\n                city.pickups.remove(pickup);\r\n                this.sfx.play(pickup.type);\r\n            } else {\r\n                pickup.onAnimate.publish(pickup.point);\r\n            }\r\n        }\r\n        // if (city.pickupMagnetPoint){\r\n        //     const magnet = city.pickupMagnetPoint;\r\n        //     const pickedUpIDs: number[] = [];\r\n        //     city.pickups.forEach((p) => {\r\n        //         p.point = move_towards(p.point, magnet, deltaMS / 1000 * 80);\r\n        //         if (p.point.x === magnet.x && p.point.y === magnet.y){\r\n        //             pickedUpIDs.push(p.key);\r\n        //         } else {\r\n        //         }\r\n        //     });\r\n        //     if (pickedUpIDs.length){\r\n        //         for (let i = city.pickups.length - 1; i >= 0; i--) {\r\n        //             if (pickedUpIDs.includes(city.pickups[i].key))   \r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n    onChat = (b: Bean, chat: IChatData) => {\r\n        if (this.party && chat.preachBelief){\r\n            if (IsBeliefDivergent(chat.preachBelief, this.party.ideals, this.party.community)){\r\n                this.publishEvent({\r\n                    icon: '🚨', trigger: 'speechcrime',\r\n                    message: `Speechcrime! ${b.name} is talking about ${SecondaryBeliefData[chat.preachBelief].noun}`,\r\n                    beanKey: b.key\r\n                });\r\n                if (this.alien.speechcrimes[this.date.year] == null)\r\n                    this.alien.speechcrimes[this.date.year] = 1;\r\n                else\r\n                    this.alien.speechcrimes[this.date.year]++;\r\n            }\r\n        }\r\n    }\r\n    onBeanDie = (e: IEvent) => {\r\n        const city = this.cities.find((x) => x.key === e.cityKey);\r\n        if (city){\r\n            const bean = city.historicalBeans.find((x) => x.key === e.beanKey);\r\n            if (bean){\r\n                city.onCitizenDie(bean);\r\n                this.economy.onBeanDie(bean);\r\n            }\r\n        }\r\n    }\r\n    onEmote = (b: Bean, emote: TraitEmote) => {\r\n    }\r\n    publishEvent(e: IEvent){\r\n        this.bus[e.trigger].publish(e);\r\n    }\r\n    inflate() {\r\n        const allMoney = this.beans.reduce((sum, b) => sum+b.cash, 0) + this.organizations.reduce((sum, o) => sum + o.cash, 0);\r\n        const percent = allMoney / 100;\r\n        const yearlyInflationDollars = Math.round(percent * 1);\r\n        if (yearlyInflationDollars > 0){\r\n            const richest = this.beans.reduce((obj: {winner?: Bean, max: number}, b) => {\r\n                if (b.cash > obj.max){\r\n                    obj.winner = b;\r\n                    obj.max = b.cash;\r\n                }\r\n                return obj;\r\n            }, {max: 0});\r\n            if (richest.winner){\r\n                richest.winner.cash += yearlyInflationDollars;\r\n            }\r\n        }\r\n    }\r\n    resetYearlyCounters() {\r\n        this.cities.forEach((c) => {\r\n            c.yearsPartyDonations = 0;\r\n        })\r\n    }\r\n    addCharity(good: TraitGood, name: string, budget: number) {\r\n        const charity = new Charity();\r\n        charity.name = name;\r\n        charity.good = good;\r\n        charity.seasonalBudget = budget;\r\n        this.party.organizations.push(charity);\r\n    }\r\n}\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface Tile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'rocket'|'music'|'dragon'|'noFaith';\r\nexport type TraitFood = 'hungry'|'sated'|'stuffed';\r\nexport type TraitShelter = 'podless'|'crowded'|'homeowner';\r\nexport type TraitHealth = 'sick'|'bruised'|'fresh';\r\nexport type TraitSanity = 'mad'|'confused'|'sane';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitShelter|TraitHealth|TraitSanity;\r\n\r\nexport const TraitIcon: {[key in Trait]: string} = {\r\n    'state': '🕊️', 'ego': '🦅',\r\n    'prog': '⚖️', 'trad': '👑',\r\n    'circle': '🤎', 'square': '💛', 'triangle': '🧡',\r\n    'rocket': '🚀', 'music': '🎵', 'dragon': '🐲',\r\n    'noFaith': '⚫️',\r\n    'hungry': '🍽️', 'sated': '🥜', 'stuffed': '🥩',\r\n    'podless': '🌨️', 'crowded': '🏘️', 'homeowner': '🏡',\r\n    'sick': '🤢', 'bruised': '🩹', 'fresh': '💪',\r\n    'mad': '🤪', 'confused': '🤤', 'sane': '🧠',\r\n}\r\nexport enum MaslowHappinessScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport const TraitToModifier: {[key in TraitFood|TraitShelter|TraitHealth]: IHappinessModifier} = {\r\n    'podless': {reason: 'Homeless', mod: MaslowHappinessScore.Deficient},\r\n    'crowded': {reason: 'Renting', mod: MaslowHappinessScore.Sufficient},\r\n    'homeowner': {reason: 'Homeowner', mod: MaslowHappinessScore.Abundant},\r\n    'sick': {reason: 'Sick', mod: MaslowHappinessScore.Deficient},\r\n    'bruised': {reason: 'Bruised', mod: MaslowHappinessScore.Sufficient},\r\n    'fresh': {reason: 'Healthy', mod: MaslowHappinessScore.Abundant},\r\n    'hungry': {reason: 'Hungry', mod: MaslowHappinessScore.Deficient},\r\n    'sated': {reason: 'Sated', mod: MaslowHappinessScore.Sufficient},\r\n    'stuffed': {reason: 'Stuffed', mod: MaslowHappinessScore.Abundant},\r\n}\r\nexport interface IThreshold {sufficient: number, abundant: number}\r\nexport const GoodToThreshold: {[key in TraitGood]: IThreshold} = {\r\n    'food': {sufficient: 1, abundant: 3},\r\n    'shelter': {sufficient: 1, abundant: 7},\r\n    'medicine': {sufficient: 1, abundant: 3},\r\n    'fun': {sufficient: 1, abundant: 3},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'builder': return 'shelter';\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'shelter': return 'builder';\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'shelter'|'medicine'|'fun';\r\nexport const GoodIcon: {[key in TraitGood]: string} ={\r\n    'food': '🥪',\r\n    'shelter': '🏠', \r\n    'medicine': '💊', \r\n    'fun': '👏'\r\n};\r\n\r\nexport type TraitEmote = 'happiness'|'unhappiness'|'love'|'hate';\r\nexport const EmoteIcon: {[key in TraitEmote]: string} ={\r\n    'love': '💛',\r\n    'happiness': '👍',\r\n    'unhappiness': '💢',\r\n    'hate': '💔'\r\n};\r\nexport const EmotionWorth: {[key in TraitEmote]: number} ={\r\n    'love': 5,\r\n    'happiness': 1,\r\n    'unhappiness': -1,\r\n    'hate': -5\r\n};\r\nexport const EmotionSanity: {[key in TraitEmote]: number} ={\r\n    'love': 1,\r\n    'happiness': 0.2,\r\n    'unhappiness': 0,\r\n    'hate': -1\r\n};","import { Trait, TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { IInstitution, IOrganization } from \"./Institutions\";\r\nimport { Government, LawAxis } from \"./Government\";\r\n\r\n\r\nexport interface Party extends IInstitution{\r\n    slogan: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    \r\n    availablePolicies: Policy[]; \r\n    proposedPolicy?: Policy;\r\n    availableCampaigns: Campaign[];\r\n    activeCampaigns: Campaign[];\r\n\r\n    platform: {[key in LawAxis]: IPolicy};\r\n\r\n    leadership: number;\r\n}\r\n\r\nexport class BaseParty implements Party{\r\n    key = 1;\r\n    playerKey = 1;\r\n    organizations: IOrganization[] = [];\r\n    public name: string = \"Citizen's Party\";\r\n    public slogan: string = \"Vote for us!\";\r\n    public community: TraitCommunity = 'state';\r\n    public ideals: TraitIdeals = 'trad';\r\n    public availablePolicies: Policy[] = [];\r\n    public proposedPolicy?: Policy;\r\n    public availableCampaigns: Campaign[] = [];\r\n    public activeCampaigns: Campaign[] = [];\r\n    public leadership: number = 10;\r\n    public activeHQs: number[] = [];\r\n    public platform: {[key in LawAxis]: IPolicy} = {} as {[key in LawAxis]: IPolicy};\r\n\r\n    constructor(){\r\n    }\r\n    // differingPolicies(law: Government): IPolicy[]{\r\n    //     return Object.keys(this.platform).filter((key: string) => {\r\n    //         const ax = key as LawAxis;\r\n    //         return this.platform[ax] != law.laws[ax];\r\n    //     }).map((key) => this.platform[key as LawAxis]);\r\n    // }\r\n}\r\n\r\nexport interface ICityPartyHQ{\r\n    cityKey: number;\r\n}\r\nexport class CityPartyHQ implements ICityPartyHQ{\r\n    cityKey: number = 0;\r\n}\r\n\r\nexport interface PoliticalEffect {\r\n    key: Trait;\r\n    /**\r\n     * magnitude (-3 to +3)\r\n     */\r\n    mag: number;\r\n}\r\nexport interface Policy {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    axis?: LawAxis;\r\n}\r\nexport interface Campaign {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    cityKey?: number;\r\n\r\n    seasonalCost: number;\r\n}\r\nexport interface IPolicy{\r\n    key: string, \r\n    name: string, \r\n    community?: TraitCommunity, \r\n    ideals?: TraitIdeals, \r\n    axis: LawAxis,\r\n    hint?: string\r\n}","import { ISeller, Economy } from \"./Economy\";\r\nimport { TraitGood, GoodToJob } from \"../World\";\r\nimport { Policy } from \"./Politics\";\r\nimport { Government } from \"./Government\";\r\n\r\nexport interface IInstitution{\r\n    key: number;\r\n    playerKey: number;\r\n    name: string;\r\n\r\n    organizations: IOrganization[];\r\n}\r\n\r\nexport interface IOrganization extends ISeller{\r\n    work(law: Government, economy: Economy): void;\r\n    key: number;\r\n    institutionKey: number;\r\n    seasonalBudget: number;\r\n    parentInstitution: IInstitution|null;\r\n    cash: number;\r\n}\r\n\r\nexport class Charity implements IOrganization, ISeller{\r\n    key = 0;\r\n    name: string = '';\r\n    institutionKey = 1;\r\n    cash = 0;\r\n    ticksSinceLastSale = 0;\r\n    seasonalBudget = 0;\r\n    good: TraitGood = 'food';\r\n    parentInstitution: IInstitution|null = null;\r\n    beansHelped: number = 0;\r\n    inventory: number = 0;\r\n    \r\n    work(law: Government, economy: Economy): void{\r\n        while(this.cash > 0 && this.inventory < 10) {\r\n            const groceries = economy.tryTransact(this, this.good);\r\n            if (groceries){\r\n                economy.addCharity(this, this.good, groceries.bought);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n} ","import { TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { IPolicy } from \"./Politics\";\r\n\r\nexport type LawGroup = 'Taxation'|'Welfare'|'Economics'|'Crime'|'Culture';\r\nexport type LawAxis = 'wel_food'|'wel_house'|'wel_health'|'tax_basic'|'tax_second'|'econ_sub'|'cul_rel'|'cul_theo'|'crime_theo';\r\n\r\nexport type LawKey = 'eat_cake'\r\n|'food_bank'\r\n|'food_stamps'\r\n|'univ_rations'\r\n|'outside'\r\n|'homeless_shelters'\r\n|'housing_subsidy'\r\n|'state_apartments'\r\n|'stay_healthy'\r\n|'clinics'\r\n|'medical_aid'\r\n|'univ_health'\r\n|'hands_off'\r\n|'grain_sub'\r\n|'arts'\r\n|'theocracy'\r\n|'secularism'\r\n|'atheism'\r\n|'mythology'\r\n|'futurism'\r\n|'drama'\r\n|'poll_tax'\r\n|'sales_tax'\r\n|'wealth_tax'\r\n|'vice_tax'\r\n|'prop_tax'\r\n|'death_tax';\r\n\r\nexport type LawPunishment = 'fine'|'imprison'|'death';\r\n\r\nexport interface ILaw{\r\n    /**\r\n     * convenience grouping property\r\n     */\r\n    group: LawGroup;\r\n    /**\r\n     * \"slot\" for law\r\n     */\r\n    axis: LawAxis;\r\n    /**\r\n     * specific law selected\r\n     */\r\n    key: LawKey;\r\n}\r\nexport interface IGovernment{\r\n    laws: ILaw[];\r\n    lawTree: {[key in LawAxis]: ILaw};\r\n}\r\nexport interface ILawData extends ILaw{\r\n    idealPro?: Array<TraitIdeals|TraitCommunity>,\r\n    idealCon?: Array<TraitIdeals|TraitCommunity>,\r\n    name: string;\r\n    hint?: string;\r\n    description?: string;\r\n}\r\nexport const LawAxisData: {[key in LawAxis]: {name: string}} = {\r\n    'wel_food': {name: 'Food Welfare'},\r\n    'wel_house': {name: 'Housing Welfare'},\r\n    'wel_health': {name: 'Healthcare'},\r\n    'tax_basic': {name: 'Taxation'},\r\n    'tax_second': {name: 'Advanced Taxation'},\r\n    'econ_sub': {name: 'Subsidies'},\r\n    'cul_rel': {name: 'Culture'},\r\n    'cul_theo': {name: 'State Narrative'},\r\n    crime_theo: {name: 'Persecution'}\r\n}\r\nexport const LawData: {[key in LawKey]: ILawData} = {\r\n    'eat_cake':{\r\n        key: 'eat_cake', group: 'Welfare', name: 'Let Them Eat Cake', idealPro: [ 'trad', 'ego' ], axis: 'wel_food',\r\n        description: 'Hungry Subjects must go without any relief.', hint: 'No state solution for hunger'},\r\n    'food_bank':{\r\n        key: 'food_bank', group: 'Welfare', name: 'Food Bank', idealPro: [ 'prog', 'ego'], axis: 'wel_food',\r\n        description: 'Hungry Subjects are provided food purchased by the government.'\r\n    },\r\n    'food_stamps':{\r\n        key: 'food_stamps', group: 'Welfare', name: 'Food Stamps', idealPro: [ 'trad', 'state'], axis: 'wel_food',\r\n        description: 'Hungry Subjects are provided money by the government to purchase food.'},\r\n    'univ_rations':{\r\n        key: 'univ_rations', group: 'Welfare', name: 'Universal Rations', idealPro: [ 'prog', 'state'], axis: 'wel_food',\r\n        description: 'All Subjects are provided small amounts of food from the government.'},\r\n    'outside':{\r\n        key: 'outside', group: 'Welfare', name: 'Sleep Outside', idealPro: [ 'trad','ego'], axis: 'wel_house',\r\n        description: 'Homeless Subjects must sleep in the cold.'},\r\n    'homeless_shelters':{\r\n        key: 'homeless_shelters', group: 'Welfare', name: 'Homeless Shelters', idealPro: [ 'prog','ego'], axis: 'wel_house',\r\n        description: 'Homeless Subjects are provided shelter purchased by the government.'},\r\n    'housing_subsidy':{\r\n        key: 'housing_subsidy', group: 'Welfare', name: 'Housing Subsidy', idealPro: [ 'trad','state'], axis: 'wel_house',\r\n        description: 'Homeless Subjects are provided money by the government to purchase shelter.'},\r\n    'state_apartments':{\r\n        key: 'state_apartments', group: 'Welfare', name: 'State Apartments', idealPro: [ 'prog','state'], axis: 'wel_house'},\r\n    'stay_healthy':{\r\n        key: 'stay_healthy', group: 'Welfare', name: 'Stay Healthy', idealPro: [ 'trad','ego'], axis: 'wel_health',\r\n        description: 'Sick Subjects must pay for their own medical care.'},\r\n    'clinics':{\r\n        key: 'clinics', group: 'Welfare', name: 'Charity Clinics', idealPro: [ 'prog','ego'], axis: 'wel_health',\r\n        description: 'Sick Subjects are provided medicine purchased by the government.'},\r\n    'medical_aid':{\r\n        key: 'medical_aid', group: 'Welfare', name: 'Medical Aid', idealPro: [ 'trad','state'], axis: 'wel_health',\r\n        description: 'Sick Subjects are provided money by the government to pay for medical care.'},\r\n    'univ_health':{\r\n        key: 'univ_health', group: 'Welfare', name: 'Universal Healthcare', idealPro: [ 'prog','state'], axis: 'wel_health',\r\n        description: 'All Subjects are provided medical care by the government.'},\r\n    'hands_off':{\r\n        key: 'hands_off', group: 'Economics', name: 'Laissez-faire', idealPro: ['ego', 'trad'], axis: 'econ_sub',\r\n        description: 'No industries receive subsidies.'},\r\n    'grain_sub':{\r\n        key: 'grain_sub', group: 'Economics', name: 'Grain Subsidy', idealPro: ['state'], axis: 'econ_sub',\r\n        description: 'Farmers are provided money.'},\r\n    'arts':{\r\n        key: 'arts', group: 'Economics', name: 'Arts Patronage', idealPro: [ 'prog', 'ego' ], axis: 'econ_sub'},\r\n    'theocracy':{\r\n        key: 'theocracy', group: 'Crime', name: 'Illegal Narratives', idealPro: [ 'trad', 'state' ], axis: 'crime_theo',\r\n        description: \"It is illegal for subjects to speak about other universal narratives.\"},\r\n    'secularism':{\r\n        key: 'secularism', group: 'Culture', name: 'Secularism', idealPro: ['ego'], axis: 'cul_theo',\r\n        description: \"The government does not endorse a particular universal narrative.\"},\r\n    'atheism':{\r\n        key: 'atheism', group: 'Culture', name: 'State Nihilism', axis: 'cul_theo'},\r\n    'mythology':{\r\n        key: 'mythology', group: 'Culture', name: 'State Mythology 🐲', idealPro: [ 'trad' ], axis: 'cul_theo'},\r\n    'futurism':{\r\n        key: 'futurism', group: 'Culture', name: 'State Futurism 🚀', idealPro: [ 'prog' ], axis: 'cul_theo'},\r\n    'drama':{\r\n        key: 'drama', group: 'Culture', name: 'State Drama 🎵', idealPro: [ 'state' ], axis: 'cul_theo'},\r\n    // '':{key: // , group: '', name: 'Religious Schooling', 'state', idealPro: [ 'trad', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'University Grants', 'ego', axis: 'cul_ed'},\r\n    // '':{key: // , group: '', name: 'College For All', 'state', idealPro: [ 'prog', axis: 'cul_ed'},\r\n    'poll_tax':{\r\n        key: 'poll_tax', group: 'Taxation', name: 'Poll Tax', idealPro: [ 'trad', 'state' ], axis: 'tax_basic',\r\n        description: 'Subjects must pay a flat tax every month.'},\r\n    'sales_tax':{\r\n        key: 'sales_tax', group: 'Taxation', name: 'Sales Tax', idealPro: [ 'ego' ], axis: 'tax_basic',\r\n        description: 'Subjects must pay a percentage tax for every transaction.'},\r\n    'wealth_tax':{\r\n        key: 'wealth_tax', group: 'Taxation', name: 'Wealth Tax', idealPro: [ 'prog', 'state' ], axis: 'tax_basic',\r\n        description: 'Rich subjects must pay a percentage tax on their excess cash.'},\r\n    'vice_tax':{\r\n        key: 'vice_tax', group: 'Taxation', name: 'Vice Tax', idealPro: [ 'trad'], axis: 'tax_second',\r\n        description: 'Entertainment goods have a flat tax.'},\r\n    'prop_tax':{\r\n        key: 'prop_tax', group: 'Taxation', name: 'Property Tax', idealPro: [ 'prog'], axis: 'tax_second',\r\n        description: 'Subjects must pay a tax on housing.'},\r\n    'death_tax':{\r\n        key: 'death_tax', group: 'Taxation', name: 'Death Tax', idealPro: [ 'prog'], axis: 'tax_second',\r\n        description: 'Dead subjects pay a portion of their cash to the government.'},\r\n}\r\n\r\nexport type LawGroupToLaws = {\r\n    [key in LawGroup]: ILaw[]\r\n};\r\nexport class Government{\r\n    public get laws(): ILaw[] {\r\n        return Object.values(this.lawTree);\r\n    }\r\n    public set laws(val: ILaw[]) {\r\n        val.forEach((v) => {\r\n            this.lawTree[v.axis] = v;\r\n        });\r\n    }\r\n    public getLawsByGroup(): LawGroupToLaws {\r\n        return this.laws.reduce((d, x) => {\r\n            d[x.group].push(x);\r\n            return d;\r\n        }, {\r\n            Taxation: [] as ILaw[],\r\n            Welfare: [] as ILaw[],\r\n            Economics: [] as ILaw[],\r\n            Crime: [] as ILaw[],\r\n            Culture: [] as ILaw[]\r\n        });\r\n    }\r\n    public lawTree: {[key in LawAxis]: ILaw} = {} as {[key in LawAxis]: ILaw};\r\n}","import { BeliefCommonality } from \"./simulation/Beliefs\";\r\nimport { BuildingTypes } from \"./simulation/Geography\";\r\nimport { RubricKeys } from \"./simulation/Player\";\r\nimport { IThreshold, TraitGood } from \"./World\";\r\n\r\nexport type PlayerEmptyHexAction = 'build';\r\nexport type PlayerHexAction = 'beam'|'upgrade';\r\nexport type PlayerBeanAction = 'scan'|'abduct'|'vaporize'|'siphon'|'empower'|'gift';\r\nexport type PlayerBeanBrainAction = 'brainwash_ideal'|'brainimplant_secondary'|'brainwash_secondary';\r\nexport type PlayerMarketAction = 'energy'|'bots';\r\nexport type PlayerGovernmentAction = '';\r\nexport type PlayerAction = PlayerHexAction|PlayerBeanAction;\r\n\r\nexport interface PlayerResources{\r\n    energy?: number;\r\n    bots?: number;\r\n    hedons?: number;\r\n    tortrons?: number;\r\n}\r\nexport interface BeanResources{\r\n    sanity?: number;\r\n}\r\nexport function triadToString(cost: PlayerResources, sign: '+'|''|'-', qty: number = 1){\r\n    const costs = [];\r\n    if (cost.energy){\r\n        costs.push(sign+(cost.energy*qty)+' Energy');\r\n    }\r\n    if (cost.bots){\r\n        costs.push(sign+(cost.bots*qty)+' Bots');\r\n    }\r\n    if (cost.hedons){\r\n        costs.push(sign+(cost.hedons*qty)+' Hedons');\r\n    }\r\n    if (cost.tortrons){\r\n        costs.push(sign+(cost.tortrons*qty)+' Tortrons');\r\n    }\r\n    return costs.join(' ');\r\n}\r\nexport interface SecondaryResources{\r\n    research?: number;\r\n    leadership?: number;\r\n}\r\nexport interface IDifficulty{\r\n    cost: {\r\n        emptyHex: {[key in PlayerEmptyHexAction]: {[key in BuildingTypes]: PlayerResources}},\r\n        hex: {[key in PlayerHexAction]: PlayerResources} \r\n        bean: {[key in PlayerBeanAction]: PlayerResources},\r\n        bean_brain: {[key in PlayerBeanBrainAction]: BeanResources}\r\n        market: {\r\n            scrubHedons: PlayerResources,\r\n            resource: {[key in PlayerMarketAction]: PlayerResources},\r\n            beliefs: {[key in BeliefCommonality]: PlayerResources}\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {[key in TraitGood]: IThreshold}\r\n    },\r\n    report_card_progression: RubricKeys[]\r\n}\r\nexport const DefaultDifficulty: IDifficulty = {\r\n    cost: {\r\n        emptyHex: {\r\n            build: {\r\n                house: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                farm: {\r\n                    energy: 1,\r\n                    bots: 3\r\n                },\r\n                theater: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                hospital: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                church: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                courthouse: {\r\n                    energy: 999,\r\n                    bots: 999\r\n                },\r\n                park: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                },\r\n                nature: {\r\n                    energy: 1,\r\n                    bots: 4\r\n                }\r\n            }\r\n        },\r\n        hex: {\r\n            beam: {\r\n                energy: 3\r\n            },\r\n            upgrade: {\r\n                energy: 1,\r\n                bots: 4,\r\n            }\r\n        },\r\n        bean_brain: {\r\n            brainwash_ideal: { sanity: 4},\r\n            brainimplant_secondary: { sanity: 3},\r\n            brainwash_secondary: {sanity: 2},\r\n        },\r\n        bean: {\r\n            scan: {\r\n                energy: 1\r\n            },\r\n            abduct: {\r\n                bots: 3\r\n            },\r\n            gift: {},\r\n            empower: {},\r\n            vaporize: {\r\n                energy: 2,\r\n                bots: 4\r\n            },\r\n            siphon: {},\r\n        },\r\n        market: {\r\n            scrubHedons: {\r\n                energy: 5\r\n            },\r\n            resource: {\r\n                bots: {\r\n                    hedons: 6\r\n                },\r\n                energy: {\r\n                    hedons: 5\r\n                }\r\n            },\r\n            beliefs: {\r\n                common: {},\r\n                uncommon: {},\r\n                rare: {}\r\n            },\r\n        }\r\n    },\r\n    bean_life: {\r\n        vital_thresh: {\r\n            'food': {sufficient: 1, abundant: 3},\r\n            'shelter': {sufficient: 1, abundant: 3},\r\n            'medicine': {sufficient: 1, abundant: 3},\r\n            'fun': {sufficient: 1, abundant: 3},\r\n        }\r\n    },\r\n    report_card_progression: []\r\n};","import { ChangePubSub, LiveList, LiveMap } from \"../events/Events\";\r\nimport { DefaultDifficulty, IDifficulty, PlayerResources } from \"../Game\";\r\nimport { World } from \"../World\";\r\nimport { Number_Starting_City_Pop } from \"../WorldGen\";\r\nimport { IBean } from \"./Agent\";\r\nimport { TraitBelief } from \"./Beliefs\";\r\nimport { IDate } from \"./Time\";\r\n\r\n\r\nexport interface IPlayerData{\r\n    scanned_bean: {[beanKey: number]: boolean};\r\n    abductedBeans: IBean[];\r\n    energy: IResource;\r\n    bots: IResource;\r\n    workingReportCard: IReportCard;\r\n    techProgress: TechProgress;\r\n    currentlyResearchingTech: Tech|undefined;\r\n}\r\n\r\nexport interface IResource{\r\n    amount: number;\r\n    income: number;\r\n    change: ChangePubSub;\r\n}\r\n\r\nexport type GoalKey = 'found_utopia'|'build_house_n_farm'|'beam_3'|'scan'|'set_policy'|'brainwash'|'c+_grade';\r\nexport interface IGoal{\r\n    key: GoalKey;\r\n    text: string;\r\n    tooltip?: string;\r\n    reward?: PlayerResources,\r\n    check: (world: World) => boolean\r\n}\r\nexport interface IGoalProgress {\r\n    done: boolean,\r\n    step: number\r\n}\r\nexport interface IProgressable{\r\n    goalProgress: {[key: string]: IGoalProgress},\r\n    goals: Array<GoalKey>\r\n}\r\nexport const Goals: {[key in GoalKey]: IGoal} = {\r\n    found_utopia: {\r\n        key: 'found_utopia', text: 'Found your Utopia',\r\n       check: (world) => world.party.name != 'Goodplace'\r\n    },\r\n    build_house_n_farm: {\r\n        key: 'build_house_n_farm', text: 'Build a house and farm',\r\n        check: (world) => {\r\n            return world.cities[0].byType.house.all.length > 0 &&\r\n            world.cities[0].byType.farm.all.length > 0;\r\n        },\r\n        reward: {\r\n            energy: 3, bots: 3\r\n        }\r\n    }, \r\n    beam_3: {\r\n        key: 'beam_3', text: 'Beam in 3 new beings', \r\n        check: (world) => {\r\n            return world.beans.filter(b => !b.bornInPetri).length >= (3 + Number_Starting_City_Pop)\r\n        }\r\n    }, \r\n    scan: {\r\n        key: 'scan', text: 'Scan a Subject',\r\n        check: (world) => Object.keys(world.alien.scanned_bean).length > 0\r\n    }, \r\n    set_policy: {\r\n        key: 'set_policy', text: 'Set a Gov Policy',\r\n        check: (world) => false\r\n    }, \r\n    brainwash: {\r\n        key: 'brainwash', text: 'Brainwash a Subject',\r\n        check: (world) => false\r\n    }, \r\n    'c+_grade': {\r\n        key: 'c+_grade', text: 'Receive a C+ Grade',\r\n        check: (world) => false\r\n    } \r\n};\r\n\r\nexport type Grade = 'F'|'D'|'C'|'B'|'A';\r\nexport type RubricKeys = 'Happiness'|'Prosperity'|'Stability'|'Dogma';\r\nexport type IReportCard = {[key in RubricKeys]: Grade}\r\nexport type GradingFunc = (world: World) => IReportCard;\r\nexport interface ICurriculum {\r\n    GradeWorld: GradingFunc,\r\n    RubricDescription: {[key in RubricKeys]: string} \r\n}\r\nexport const Curriculums: {[difficulty: string]: ICurriculum} = {\r\n    Default: {\r\n        GradeWorld: (world: World) => {return{\r\n            Happiness: BooleanAverageGrader(world.beans, (o) => o.lastHappiness >- .2),\r\n            Prosperity: BooleanAverageGrader(world.beans, (o) => o.food != 'hungry'),\r\n            Stability: BooleanAverageGrader(world.beans, (o) => o.sanity == 'sane'),\r\n            Dogma: GradeUpToNumber((world.alien.speechcrimes[world.date.year] || 0), 10, 10),\r\n        }},\r\n        RubricDescription: {\r\n            Happiness: 'Subjects are at least 20% happy',\r\n            Prosperity: 'Subjects are not hungry',\r\n            Stability: 'Subjects are all sane',\r\n            Dogma: 'Up to 10 Speechcrimes'\r\n        }\r\n    }\r\n}\r\n/**\r\n * \r\n * @param number number of bad events\r\n * @param allowance number of allowed events\r\n * @param maximum range of \"overflow\" events\r\n */\r\nfunction GradeUpToNumber(number: number, allowance: number, maximum: number): Grade{\r\n    const normalized = 1 - Math.min(1, Math.max(0, number - allowance) / maximum);\r\n    return NormalizedScoreToGrade(normalized);\r\n}\r\nfunction BooleanAverageGrader<T>(array: T[], grade: (o: T) => boolean): Grade{\r\n    if (array.length < 1) return 'F';\r\n    return NormalizedScoreToGrade(array.filter(grade).length / array.length);\r\n}\r\nfunction NormalizedScoreToGrade(normNumber: number): Grade{\r\n    if (normNumber < .58) return 'F';\r\n    if (normNumber < .68) return 'D';\r\n    if (normNumber < .78) return 'C';\r\n    if (normNumber < .88) return 'B';\r\n    return 'A';\r\n}\r\nconst GradeWeights: {[key in Grade]: number} ={\r\n    A: 5,\r\n    B: 4,\r\n    C: 3,\r\n    D: 2,\r\n    F: 1\r\n}\r\nexport function GetAverage(reportCard: IReportCard): Grade{\r\n    return NormalizedScoreToGrade((GradeWeights[reportCard.Happiness] + \r\n        GradeWeights[reportCard.Prosperity] + \r\n        GradeWeights[reportCard.Stability] +\r\n        GradeWeights[reportCard.Dogma] \r\n    ) / 20);\r\n}\r\n\r\nexport type Tech = 'halve_sanity'|'fast_resources'|'trauma_nanobots'|'fast_leadership'|'neural_duplicator';\r\nexport interface ITechInfo{\r\n    tech: Tech,\r\n    /**\r\n     * number of tech points required to complete research\r\n     */\r\n    techPoints: number,\r\n    name: string,\r\n    description: string\r\n}\r\nexport const TechData: {[key in Tech]: ITechInfo} = {\r\n    'halve_sanity': {\r\n        tech: 'halve_sanity',\r\n        name: 'Surgical Psychops',\r\n        techPoints: 30,\r\n        description: 'Brainwashing causes -1 🧠 sanity damage'\r\n    },\r\n    'fast_resources': {\r\n        tech: 'fast_resources',\r\n        name: '0 Dimensional Supersiphons',\r\n        techPoints: 30,\r\n        description: 'Faster ⚡️ and 🤖 accumulation'\r\n    },\r\n    'trauma_nanobots': {\r\n        tech: 'trauma_nanobots',\r\n        name: 'Trauma Nanobots',\r\n        techPoints: 30,\r\n        description: 'Spend 🤖 to stop Subject from dying'\r\n    },\r\n    'fast_leadership': {\r\n        tech: 'fast_leadership',\r\n        name: 'Advanced Marketing',\r\n        techPoints: 30,\r\n        description: 'Faster 🗳️ Leadership accumulation'\r\n    },\r\n    'neural_duplicator': {\r\n        tech: 'neural_duplicator',\r\n        name: 'Level 2 Neural Duplication',\r\n        techPoints: 30,\r\n        description: 'Copy Traits 1 additional time'\r\n    }\r\n}\r\nexport interface IPlayerTechProgress{\r\n    /**\r\n     * number of research points\r\n     */\r\n    researchPoints: number\r\n}\r\nexport type TechProgress = {[key: string]: IPlayerTechProgress};\r\nexport interface BeliefInventory{\r\n    trait: TraitBelief,\r\n    charges: number\r\n}\r\n\r\nexport class Player implements IPlayerData, IProgressable{\r\n    public scanned_bean: {[beanKey: number]: boolean} = {};\r\n    public seenBeliefs = new LiveMap<string, boolean>(new Map<string, boolean>());\r\n    public beliefInventory = new LiveList<BeliefInventory>([]);\r\n    public speechcrimes: {[year: number]: number} = {};\r\n    public abductedBeans: IBean[] = [];\r\n    public energy = { amount: 29, income: 2/30, change: new ChangePubSub()};\r\n    public bots = { amount: 10, income: 2/30, change: new ChangePubSub()};\r\n    public hedons = { amount: 0, income: 0, change: new ChangePubSub()};\r\n    public tortrons = { amount: 0, income: 0, change: new ChangePubSub()};\r\n    public next_grade: IDate = { year: 1, season: 3, day: 1, hour: 0 };\r\n    public difficulty: IDifficulty = DefaultDifficulty;\r\n    public goals: GoalKey[] = ['found_utopia', 'build_house_n_farm',  'beam_3', 'scan', 'brainwash', 'set_policy', 'c+_grade'];\r\n    public goalProgress: {[key: string]: IGoalProgress} = {};\r\n    public pastReportCards: IReportCard[] = [];\r\n    public workingReportCard: IReportCard = {\r\n        Happiness: 'D',\r\n        Prosperity: 'D',\r\n        Stability: 'D',\r\n        Dogma: 'D',\r\n    };\r\n    public techProgress: TechProgress = {};\r\n    public currentlyResearchingTech: Tech|undefined;\r\n\r\n    public canAfford(cost: PlayerResources, qty: number = 1): boolean{\r\n        return (cost.bots == undefined || this.bots.amount >= cost.bots * qty) &&\r\n        (cost.energy == undefined || this.energy.amount >= cost.energy * qty) && \r\n        (cost.hedons == undefined || this.hedons.amount >= cost.hedons * qty);\r\n    }\r\n\r\n    public hasResearched(tech: Tech){\r\n        return this.techProgress[tech] != null && this.techProgress[tech].researchPoints >= TechData[tech].techPoints;\r\n    }\r\n\r\n    public purchase(cost: PlayerResources, qty: number = 1){\r\n        if (cost.bots){\r\n            this.bots.amount -= cost.bots * qty;\r\n            this.bots.change.publish({change: -cost.bots * qty});\r\n        }\r\n        if (cost.energy){\r\n            this.energy.amount -= cost.energy * qty;\r\n            this.energy.change.publish({change: -cost.energy * qty});\r\n        }\r\n        if (cost.hedons){\r\n            this.hedons.amount -= cost.hedons * qty;\r\n            this.hedons.change.publish({change: -cost.hedons * qty});\r\n        }\r\n    }\r\n\r\n    public tryPurchase(cost: PlayerResources, qty: number = 1): boolean{\r\n        if (this.canAfford(cost, qty)){\r\n            this.purchase(cost, qty);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public reward(reward: PlayerResources){\r\n        if (reward.bots){\r\n            this.bots.amount += reward.bots;\r\n            this.bots.change.publish({change: reward.bots});\r\n        }\r\n        if (reward.energy){\r\n            this.energy.amount += reward.energy;\r\n            this.energy.change.publish({change: reward.energy});\r\n        }\r\n        if (reward.hedons){\r\n            this.hedons.amount += reward.hedons;\r\n            this.hedons.change.publish({change: reward.hedons});\r\n        }\r\n\r\n    }\r\n\r\n    public checkGoals(world: World){\r\n        for (let i = 0; i < this.goals.length; i++) {\r\n            const goal = this.goals[i];\r\n            if (this.goalProgress[goal] == null){\r\n                this.goalProgress[goal] = {done: false, step: 0};\r\n            }\r\n            if (!this.goalProgress[goal].done) {\r\n                const done = Goals[goal].check(world);\r\n                const reward = Goals[goal].reward;\r\n                this.goalProgress[goal].done = done;\r\n                if (done && reward != null){\r\n                    this.reward(reward);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public checkReportCard(world: World) {\r\n        this.workingReportCard = Curriculums.Default.GradeWorld(world);\r\n    }\r\n}","export type SFXFile = 'drop.mp3'|'ding_soft.mp3'|'ding_bad.wav';\r\nexport type SFX = 'drop'|'happiness'|'unhappiness'|'love'|'hate';\r\n\r\nconst SFXToFile: {[sfx in SFX]: SFXFile} = {\r\n    drop: \"drop.mp3\",\r\n    love: \"ding_soft.mp3\",\r\n    happiness: \"ding_soft.mp3\",\r\n    unhappiness: \"ding_bad.wav\",\r\n    hate: \"ding_bad.wav\"\r\n};\r\n\r\ntype SFXMap = {[sfx in SFX]: SoundBuffer};\r\n\r\nclass SoundBuffer{\r\n    constructor(private file: SFXFile, private volume: number = 1){}\r\n\r\n    private buffer: HTMLAudioElement[] = [];\r\n    play(){\r\n        if (this.buffer.length > 0 && this.buffer[0].ended){\r\n            const audio = this.buffer.shift();\r\n            audio?.play();\r\n            if (audio)\r\n                this.buffer.push(audio);\r\n        } else {\r\n            const aud = new Audio(process.env.PUBLIC_URL+'/'+this.file);\r\n            aud.volume = this.volume;\r\n            aud.play();\r\n            this.buffer.push(aud);\r\n        }\r\n    }\r\n}\r\nexport class WorldSound{\r\n    private lib: SFXMap = {\r\n        'drop': new SoundBuffer(SFXToFile['drop'], 0.2),\r\n        'love': new SoundBuffer(SFXToFile['happiness']),\r\n        'happiness': new SoundBuffer(SFXToFile['happiness']),\r\n        'unhappiness': new SoundBuffer(SFXToFile['unhappiness']),\r\n        'hate': new SoundBuffer(SFXToFile['unhappiness']),\r\n    }\r\n\r\n    public play(sfx: SFX){\r\n        this.lib[sfx].play();\r\n    }\r\n}","import { IBeanContainer, Tile, Trait, TraitEthno, TraitJob, TraitEmote } from \"../World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { Economy } from \"./Economy\";\r\nimport { Government } from \"./Government\";\r\nimport { GenerateBean, GetRandom, GetRandomNumber } from \"../WorldGen\";\r\nimport { ICityPartyHQ, Party } from \"./Politics\";\r\nimport { Geography, HexPoint, IBuilding, JobToBuilding, Point } from \"./Geography\";\r\nimport { IDate } from \"./Time\";\r\nimport { shuffle } from \"./Utils\";\r\nimport { BuildingJobSlot } from \"./Occupation\";\r\nimport { IEventBus, LiveList, PubSub } from \"../events/Events\";\r\nimport { WorldSound } from \"../WorldSound\";\r\n\r\n\r\nexport function reportIdeals(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: Bean[], defWin: Trait, beanPropGet: (bean: Bean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}\r\n\r\nexport class UFO{\r\n    constructor(public key: number, public point: HexPoint, public action: string){}\r\n}\r\nexport class Pickup{\r\n    constructor(public key: number, public point: Point, public type: TraitEmote){}\r\n    public velocity: Point = {x: 0, y: 0};\r\n    public onAnimate = new PubSub<Point>();\r\n}\r\n\r\n\r\nexport class City extends Geography implements Tile, IBeanContainer {\r\n    public name: string = '';\r\n    public url: string = '';\r\n    public type: string = '';\r\n    public key: number = 0;\r\n    public get beans(): Bean[] {\r\n        return this.historicalBeans.filter((x) => x.alive);\r\n    }\r\n    public set beans(beans: Bean[]){\r\n        throw \"can't set city beans\";\r\n    }\r\n    public historicalBeans: Bean[] = [];\r\n    public ufos: UFO[] = [];\r\n    public readonly pickups = new LiveList<Pickup>([]);\r\n    public pickupSeed = 0;\r\n    public houses: any[] = [];\r\n    public partyHQ?: ICityPartyHQ;\r\n    public yearsPartyDonations: number = 0;\r\n\r\n    /// computed properties\r\n    public majorityEthnicity: TraitEthno = 'circle';\r\n    public costOfLiving: number = 1;\r\n\r\n    constructor(private sfx: WorldSound){\r\n        super();\r\n    }\r\n\r\n    public economy?: Economy;\r\n    public law?: Government;\r\n    public environment?: IDate;\r\n    public eventBus?: IEventBus;\r\n    public pickupMagnetPoint?: Point;\r\n\r\n    tryGetJob(bean: Bean, job: TraitJob): boolean{\r\n        if(job === 'jobless') return false;\r\n        const buildingType = JobToBuilding[job];\r\n        const all = this.byType[buildingType].all;\r\n        \r\n        for (let i = 0; i < all.length; i++) {\r\n            const building = all[i];\r\n            const slots = building.openSlots();\r\n            if (slots.length > 0){\r\n                const slot = slots.shift() as BuildingJobSlot;\r\n                building.job_slots[slot] = bean.key;\r\n                bean.buildingKey = building.key;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    unsetJob(bean: Bean){\r\n        if (bean.job === 'jobless') return;\r\n        const buildingType = JobToBuilding[bean.job];\r\n        const all = this.byType[buildingType].all;\r\n        for (let i = 0; i < all.length; i++) {\r\n            const building = all[i];\r\n            if (building.tryFreeBean(bean.key)){\r\n                bean.buildingKey = undefined;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    addEmotePickup(beanKey: number, emote: TraitEmote){\r\n        const point = {...this.movers.bean[beanKey]};\r\n        point.x += GetRandomNumber(-10, 10);\r\n        point.y += GetRandomNumber(-10, 10);\r\n        const id = ++this.pickupSeed;\r\n        this.movers.pickup[id] = point;\r\n        this.pickups.push(new Pickup(id, point, emote));\r\n    }\r\n\r\n    getRandomCitizen(): Bean|null{\r\n        const shuffled = shuffle(this.beans);\r\n        if (shuffled.length > 0) {\r\n            return shuffled[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    onCitizenDie(deadBean: Bean){\r\n        if (deadBean.cash > 0){\r\n            const lucky = this.getRandomCitizen();\r\n            if (lucky) {\r\n                lucky.cash = lucky.cash + deadBean.cash;\r\n                deadBean.cash = 0;\r\n            }\r\n        }\r\n        this.unsetJob(deadBean);\r\n    }\r\n    breedBean(parent: Bean) {\r\n        const job: TraitJob = Math.random() <= .5 ? parent.job : GetRandom(['doc', 'farmer', 'builder', 'jobless']);\r\n        const bean = GenerateBean(this, this.historicalBeans.length, undefined, job);\r\n        bean.ethnicity = parent.ethnicity;\r\n        bean.name = bean.name.split(' ')[0] + ' ' + parent.name.split(' ')[1];\r\n        bean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n        bean.bornInPetri = true;\r\n        if (this.environment)\r\n            bean.dob = {year: this.environment?.year, season: this.environment?.season, day: this.environment?.day, hour: this.environment?.hour};\r\n        this.historicalBeans.push(bean);\r\n    }\r\n    getTaxesAndDonations(party: Party, economy: Economy){\r\n    }\r\n    calculate(economy: Economy, law: Government) {\r\n        this.costOfLiving = economy.getCostOfLiving();\r\n        const c = this.beans.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\r\n            switch(bean.ethnicity){\r\n                case 'circle': count.circle++;break;\r\n                case 'square': count.square++;break;\r\n                case 'triangle': count.triangle++;break;\r\n            }\r\n            return count;\r\n        }, {circle: 0, square: 0, triangle: 0});\r\n        if (c.circle > c.square && c.circle > c.triangle){\r\n            this.majorityEthnicity = 'circle';\r\n        } else if (c.square > c.circle && c.square > c.triangle){\r\n            this.majorityEthnicity = 'square';\r\n        } else {\r\n            this.majorityEthnicity = 'triangle';\r\n        }\r\n    }\r\n    getNearestNeighbors(source: Bean): Bean[] {\r\n        return this.beans.filter((b) => {\r\n            if (b.key == source.key) return false;\r\n\r\n            const p = this.movers.bean[b.key];\r\n            const q = this.movers.bean[source.key];\r\n            const squared = Math.pow(p.x - q.x, 2)+Math.pow(p.y - q.y, 2);\r\n\r\n            return squared < 1600 && squared > 600;\r\n        });\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick: () => void;\r\n    closeButtonText?: string;\r\n    hideCloseButton?: boolean\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (this.props.hideCloseButton)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n        <div className=\"modal\">\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: Bean[], \r\n    need: (b: Bean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { PrimaryBeliefData } from \"../simulation/Beliefs\";\r\n\r\ninterface OverviewPanelP {\r\n    city?: City,\r\n    beans: Bean[],\r\n    utopia: Party,\r\n    clearCity: () => void;\r\n}\r\n\r\nexport class OverviewPanel extends React.Component<OverviewPanelP> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let header = null;\r\n        if (this.props.city) {\r\n            header = <div><div><b>{this.props.city.name}</b> {PrimaryBeliefData[this.props.utopia.community].icon} {PrimaryBeliefData[this.props.utopia.ideals].icon}\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n            </div>\r\n                <div> {PrimaryBeliefData[this.props.utopia.community].adj} {PrimaryBeliefData[this.props.utopia.ideals].adj} Utopia</div>\r\n            </div>;\r\n        }\r\n        const avg_happy = this.props.beans.reduce((sum, x) => sum + x.lastHappiness, 0) / (this.props.beans.length || 1);\r\n        const avg_cash = this.props.beans.reduce((sum, x) => sum + x.cash, 0) / (this.props.beans.length || 1);\r\n        const avg_approval = this.props.beans.reduce((sum, x) => sum + x.lastPartySentiment, 0) / (this.props.beans.length || 1);\r\n        return (\r\n            <div>\r\n                {header}\r\n                <div className=\"header\"><b>Demographics</b></div>\r\n                <div>\r\n                    <b>Population</b>&nbsp;\r\n                <span>{this.props.beans.length}</span>\r\n                </div>\r\n                <AxisReadout report={reportEthno(this.props.beans)}>Ethnicity</AxisReadout>\r\n                <div className=\"header\"><b>Situation</b></div>\r\n                <NeedReadout beans={this.props.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n                <NeedReadout beans={this.props.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\">Housing</NeedReadout>\r\n                <NeedReadout beans={this.props.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n                <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n                <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n                <div className=\"header\"><b>Electorate</b></div>\r\n                {/* <AxisReadout report={reportIdeals(this.props.beans)}>Sentiment</AxisReadout> */}\r\n                <AxisReadout report={reportCommunity(this.props.beans)}>Community</AxisReadout>\r\n                <AxisReadout report={reportIdeals(this.props.beans)}>Ideals</AxisReadout>\r\n                <div>\r\n                    <b>Approval</b>&nbsp;\r\n                <span>{avg_approval.toFixed(0)}%</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{ report: { avg: number, winner: Trait } }> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent + '%'\r\n        }\r\n        return (\r\n            <div>\r\n                <b>\r\n                    {this.props.children}\r\n                </b>&nbsp;&nbsp;\r\n                <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n                <div className=\"bar\">\r\n                    <div className=\"bar-inner\" style={style}>\r\n                        {percent}%\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { origin_point, Point, transformPoint } from \"../simulation/Geography\";\r\nimport { GoodIcon } from \"../World\";\r\n\r\ninterface AnimatedBeanP {\r\n  bean: Bean;\r\n  selected?: boolean;\r\n  sitStill?: boolean;\r\n  onClick: () => void;\r\n  static?: boolean;\r\n}\r\n\r\ninterface AnimatedBeanS{\r\n  paused: boolean,\r\n  point: Point,\r\n  spin: boolean;\r\n  face: string;\r\n  good?: string;\r\n  speech?: string;\r\n}\r\n\r\nfunction BeanIsBuying(bean: Bean){\r\n  return bean.state.data.act == 'buy' && bean.state.data.good != 'shelter';\r\n}\r\n\r\nexport class AnimatedBean extends React.Component<AnimatedBeanP, AnimatedBeanS> {\r\n    constructor(props: AnimatedBeanP) {\r\n      super(props);\r\n      this.delaySeedSec = (Math.random() * 60) + this.props.bean.key;\r\n      this.state = {\r\n        paused: false,\r\n        point: props.static ? origin_point : props.bean.city ? props.bean.city.movers.bean[props.bean.key] : {x: 0, y: 0},\r\n        spin: false,\r\n        face: props.bean.getFace(),\r\n      };\r\n      props.bean.onAct.subscribe(this.animate);\r\n    }\r\n    animate = (deltaMS: number) => {\r\n      this.setState({\r\n        point: this.props.bean.city ? this.props.bean.city.movers.bean[this.props.bean.key] : {x: 0, y: 0},\r\n        spin: this.props.bean.state.data.act == 'work',\r\n        face: this.props.bean.getFace(),\r\n        good: BeanIsBuying(this.props.bean) ? GoodIcon[this.props.bean.state.data.good || 'food'] : undefined,\r\n        speech: this.props.bean.getSpeech()\r\n      })\r\n    }\r\n    delaySeedSec: number;\r\n    getPurchase(){\r\n      if (this.state.good){\r\n        return <span className=\"purchase\">\r\n          <span className=\"money\">💸</span>\r\n          <span className=\"purchase-good\">{this.state.good}</span>\r\n        </span>\r\n      }\r\n    }\r\n    getSpeech(){\r\n      if (this.state.speech){\r\n        return <span className=\"speech\">\r\n          <span className=\"\">{this.state.speech}</span>\r\n        </span>\r\n      }\r\n    }\r\n    render() {\r\n      let classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n      classes += this.state.paused || !this.props.bean.alive ? ' paused' : '';\r\n      if (this.props.sitStill){\r\n\r\n      } else {\r\n        classes += ' bean-walker';\r\n        if (this.state.spin)\r\n          classes += ' spin';\r\n        if (this.props.selected)\r\n          classes += ' selected';\r\n        if (this.props.bean.state.data.act != 'travel')\r\n          classes += ' paused';\r\n      }\r\n\r\n      let style = {\r\n        ...transformPoint(this.state.point),\r\n        animationDelay: '-'+this.delaySeedSec+'s'\r\n      };\r\n      style.animationDelay = '';\r\n      let title = '';\r\n      return (\r\n        <span className={classes+\" bean interactable\"}\r\n          style={style} title={title}\r\n          onClick={(e) => {e.stopPropagation(); this.props.onClick(); }}\r\n        >\r\n          {this.state.face} {this.getPurchase()} {this.getSpeech()}\r\n        </span>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { City, UFO } from \"../simulation/City\";\r\nimport { hex_to_pixel, origin_point, transformPoint } from \"../simulation/Geography\";\r\n\r\n\r\nexport class AnimatedUFO extends React.Component<{\r\n    ufo: UFO,\r\n    city: City\r\n}, {\r\n    showBeam: boolean\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            showBeam: false\r\n        };\r\n        setTimeout(() => {\r\n            this.setState({showBeam: true});\r\n            setTimeout(() => {\r\n                this.setState({showBeam: false})\r\n            }, 1800);\r\n        }, 1800);\r\n    }\r\n    render(){\r\n        let style = {\r\n          ...transformPoint(hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, this.props.ufo.point))\r\n        };\r\n        return <span style={style} className=\"ufo\">\r\n            🛸\r\n            {this.state.showBeam ? <span className=\"beam\"></span> : null}\r\n            \r\n        </span>\r\n    }\r\n}","import React, { RefObject } from \"react\";\r\n\r\nexport class Particles extends React.Component<{\r\n    particleCount: number,\r\n    className?: string,\r\n    delay: number\r\n}, {\r\n    active: boolean,\r\n    parts: RefObject<HTMLDivElement>[]\r\n}> {\r\n    private animations: Array<Animation|null> = [];\r\n    private finishedAnimationCount: number = 0;\r\n    constructor(props: any){\r\n        super(props);\r\n        let parts: RefObject<HTMLDivElement>[] = []\r\n        for (let i = 0; i < this.props.particleCount; i++) {\r\n            parts.push(React.createRef());\r\n        }\r\n        this.state = {\r\n            active: true,\r\n            parts: parts\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.animations = this.state.parts.map((p) => {\r\n            if (p.current){\r\n                const x = Math.floor(Math.random() * 400) - 200;\r\n                const y = Math.floor(Math.random() * 400) - 400;\r\n                return p.current.animate([\r\n                    {\r\n                      transform: `translate(0px, 0px)`,\r\n                      opacity: 1\r\n                    },\r\n                    {\r\n                      transform: `translate(${x}px, ${y}px)`,\r\n                      opacity: 0\r\n                    }    \r\n                ], {\r\n                    duration: 1500 + Math.random() * 1000,\r\n                    easing: 'ease-in-out',\r\n                    delay: this.props.delay + (Math.random() * 100)\r\n                });\r\n            }\r\n            return null;\r\n        });\r\n        this.animations.forEach((x) => {\r\n            if (x)\r\n            x.onfinish = () => {\r\n                this.finishedAnimationCount++;\r\n                if (this.finishedAnimationCount >= this.props.particleCount){\r\n\r\n                    this.setState({active: false, parts: []});\r\n                }\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return <div className={(this.props.className || '') + \" particle-parent\"}>\r\n            {\r\n                this.state.active ? this.state.parts.map((x, i) => {\r\n                    return <div key={i} className=\"particle\" ref={x}></div>;\r\n                }) : null\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport class DelayedParticles extends React.Component<{\r\n    particleCount: number,\r\n    className?: string,\r\n    delay: number\r\n}, {\r\n    active: boolean\r\n}> {\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        window.setTimeout(() => {\r\n            this.setState({active: true});\r\n        }, this.props.delay);\r\n    }\r\n    render(){\r\n        if (this.state.active){\r\n            return <Particles delay={0} className={this.props.className} particleCount={this.props.particleCount}></Particles>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport { EventTrigger, IEvent } from \"../events/Events\";\r\nimport { Bean, BeanDeathCause } from \"../simulation/Bean\";\r\nimport { transformPoint } from \"../simulation/Geography\";\r\nimport { Particles } from \"../widgets/particles\";\r\nimport './spotlight.css';\r\n\r\ninterface SpotlightState{\r\n  name: string;\r\n  beanClasses: string;\r\n  faceOV?: string,\r\n  particles: {className:string,delay:number}[]\r\n}\r\ninterface SpotlightAnimationState extends SpotlightState{\r\n  start: number;\r\n}\r\nconst spotlightAnimations: {[key:string]:SpotlightAnimationState[]} = {\r\n  'death-exposure': [\r\n    {\r\n      start: 0,\r\n      name: 'death-exposure', faceOV: '🥶',\r\n      beanClasses: 'drop-tool turn-blue',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-exposure',faceOV: '💀',\r\n      beanClasses: 'drop-tool turn-blue',      \r\n      particles: [] \r\n    }\r\n  ],\r\n  'death-vaporization': [\r\n    {\r\n      start: 0,\r\n      name: 'death-vaporization',\r\n      beanClasses: '',\r\n      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-vaporization',\r\n      beanClasses: 'drop-tool',\r\n      particles: []\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-vaporization', \r\n      beanClasses: 'drop-tool', faceOV: ' ',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 3000,\r\n      name: 'death-vaporization', \r\n      beanClasses: 'drop-tool hide-body', faceOV: ' ',\r\n      particles: [\r\n        {className: 'head', delay: 0},\r\n        {className: 'body', delay: 0}\r\n      ]\r\n    }\r\n  ],\r\n  'death-sickness': [\r\n    {\r\n      start: 0,\r\n      name: 'death-sickness', faceOV: '🤢',\r\n      beanClasses: '',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '🤮',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 1400,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '🤮',\r\n      particles: [\r\n        {className: 'head', delay: 0},\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n    {\r\n      start: 2000,\r\n      name: 'death-sickness', \r\n      beanClasses: 'drop-tool', faceOV: '💀',\r\n      particles: [\r\n        {className: 'head', delay: 0}\r\n      ]\r\n    },\r\n  ],\r\n  'death-starvation': [\r\n    {\r\n      start: 0,\r\n      name: 'death-starvation', faceOV: '🥺',\r\n      beanClasses: '',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 500,\r\n      name: 'death-starvation', faceOV: '😖',\r\n      beanClasses: 'body-shrink',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 1000,\r\n      name: 'death-starvation', faceOV: '😫',\r\n      beanClasses: 'body-shrink drop-tool',      \r\n      particles: []\r\n    },\r\n    {\r\n      start: 3000,\r\n      name: 'death-starvation', faceOV: '💀',\r\n      beanClasses: 'body-shrink drop-tool',      \r\n      particles: []\r\n    }\r\n  ]\r\n}\r\nexport class AnimatedSpotlight extends React.Component<{\r\n    event: IEvent,\r\n    bean: Bean,\r\n}, SpotlightState>{\r\n    constructor(props: any){\r\n        super(props);\r\n        const name = `${this.props.event.trigger}-${this.getSubtype(this.props.event.message)}`;\r\n        this.state = spotlightAnimations[name][0];\r\n    }\r\n    private lastTickMS: DOMHighResTimeStamp = 0;\r\n    private currentTime: number = 0;\r\n    private tickHandle: number = 0;\r\n    componentDidMount(){\r\n      window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n        this.lastTickMS = time; //initialize tick time\r\n        this.tickHandle = window.requestAnimationFrame(this.tick);\r\n      });\r\n    }\r\n    componentWillUnmount(){\r\n      window.cancelAnimationFrame(this.tickHandle);\r\n    }\r\n    tick = (timeMS: DOMHighResTimeStamp) => {\r\n      // Compute the delta-time against the previous time\r\n      const deltaTimeMS = (timeMS - this.lastTickMS);\r\n    \r\n      // Update the previous time\r\n      this.lastTickMS = timeMS;\r\n      if (deltaTimeMS > 0){\r\n        this.currentTime += deltaTimeMS;\r\n        const name = `${this.props.event.trigger}-${this.getSubtype(this.props.event.message)}`;\r\n        this.setState(spotlightAnimations[name].reduce((lastValid: SpotlightAnimationState, anim: SpotlightAnimationState) => {\r\n          if (this.currentTime >= anim.start)\r\n            return anim;\r\n          else\r\n            return lastValid;\r\n        }, spotlightAnimations[name][0]));\r\n\r\n      }\r\n      this.tickHandle = window.requestAnimationFrame(this.tick);\r\n    }\r\n    getSubtype(msg: string): BeanDeathCause|undefined{\r\n        return msg.includes('vaporiz') ? 'vaporization' : msg.includes('exposure') ? 'exposure' : msg.includes('sickness') ? 'sickness' : 'starvation';\r\n    }\r\n    render(){\r\n        let t: React.CSSProperties|undefined;\r\n        if (this.props.event.point)\r\n          t = transformPoint(this.props.event?.point);\r\n\r\n        const classes = [this.props.bean.job, this.props.bean.ethnicity, this.state.name, this.state.beanClasses].join(' ');\r\n        return <div className=\"spotlight\" style={t}>\r\n        <div className=\"bean-parent\">\r\n          <span className={classes+\" bean\"}>\r\n            <span className=\"bean-face\">\r\n            {this.state.faceOV || this.props.bean.getFace()}\r\n            </span>\r\n          </span>\r\n          {\r\n              this.state.particles.map((x, i) => <Particles key={i}\r\n                className={this.state.name+' '+x.className} delay={x.delay} particleCount={30}\r\n              ></Particles>)\r\n          }\r\n        </div>\r\n        <div className=\"label\">\r\n          {this.props.event.message.replace('A subject', this.props.bean.name)}\r\n        </div>\r\n        {\r\n          (\r\n            this.props.event.trigger === 'death' ? \r\n            <div className=\"card-parent\">\r\n              <button className=\"card button\" disabled>\r\n                Prevent Death<br/>-4 🤖\r\n              </button>\r\n            </div> : null\r\n          )\r\n        }\r\n      </div>\r\n    }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { SfxContext } from \"../App\";\r\nimport { UFO, City, Pickup } from \"../simulation/City\";\r\nimport { transformPoint, hex_to_pixel } from \"../simulation/Geography\";\r\nimport { EmoteIcon } from \"../World\";\r\n\r\nexport const AnimatedPickup: React.FC<{\r\n    pickup: Pickup,\r\n    //city: City\r\n}> = (props) => {\r\n    const [played, setPlayed] = useState(false);\r\n    const sfx = React.useContext(SfxContext);\r\n    useEffect(() => {\r\n        if (!played && sfx){\r\n            sfx.play('drop');\r\n            setPlayed(true);\r\n        }\r\n    })\r\n    return <span className=\"pickup bob\">\r\n        {EmoteIcon[props.pickup.type]}\r\n    </span>\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { LiveList, PubSub } from \"../events/Events\";\r\nimport { Pickup } from \"../simulation/City\";\r\nimport { Point } from \"../simulation/Geography\";\r\nimport { AnimatedPickup } from \"./AnimatedPickup\";\r\n\r\nexport const Mover: React.FC<{\r\n    onMove: PubSub<Point>\r\n}> = (props) => {\r\n    const el = useRef<HTMLDivElement|null>(null);\r\n    const onMove = (p: Point) => {\r\n        if (el.current)\r\n            el.current.style.transform = `translate(${p.x}px, ${p.y}px)`;\r\n    }\r\n    useEffect(() => {\r\n        props.onMove.subscribe(onMove)\r\n        return () => props.onMove.unsubscribe(onMove)\r\n    }, []);\r\n    return <div ref={el}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport const PickupList: React.FC<{\r\n    movers: LiveList<Pickup>\r\n}> = (props) => {\r\n    const [list, setList] = useState(props.movers.get);\r\n    const onChange = (l: Pickup[]) => {\r\n        setList(l);\r\n    }\r\n    useEffect(() => {\r\n        props.movers.onChange.subscribe(onChange)\r\n        return () => props.movers.onChange.unsubscribe(onChange)\r\n    }, []);\r\n    return <>\r\n        {\r\n            list.map((p: Pickup) => {\r\n                return <Mover onMove={p.onAnimate} key={p.key}>\r\n                    <AnimatedPickup pickup={p}></AnimatedPickup>\r\n                </Mover>\r\n            })\r\n        }\r\n    </>;\r\n}","import { Tile } from \"../World\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport React from \"react\";\r\nimport { IBuilding, BuildingIcon, BuildingTypes, hex_to_pixel, MatterTypes, PolarPoint, polarToPoint, getBuildingTransform, transformPoint, HexPoint, Point } from \"../simulation/Geography\";\r\nimport { PetriBuilding } from \"./Building\";\r\nimport { PI2 } from \"../WorldGen\";\r\nimport { City, Pickup, UFO } from \"../simulation/City\";\r\nimport { AnimatedUFO } from \"./AnimatedUFO\";\r\nimport { IEvent } from \"../events/Events\";\r\nimport { Particles } from \"../widgets/particles\";\r\nimport { AnimatedSpotlight } from \"./AnimatedSpotlight\";\r\nimport { AnimatedPickup } from \"./AnimatedPickup\";\r\nimport { PickupList } from \"./Mover\";\r\n\r\nconst supportedBuildings: BuildingTypes[] = ['farm', 'hospital', 'house', 'theater', 'courthouse', 'park', 'nature'];\r\ninterface WorldTilePs {\r\n  tile: Tile;\r\n  city: City;\r\n  activeBeanID: number | null;\r\n  costOfLiving: number;\r\n  spotlightEvent: IEvent | undefined;\r\n  onClick: () => void;\r\n  onBeanClick: (b: Bean) => void;\r\n  onHexClick: (hex: HexPoint) => void;\r\n}\r\nexport class WorldTile extends React.Component<WorldTilePs> {\r\n  constructor(props: WorldTilePs) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n    const mtnRadius = 530;\r\n    const worldR = 550;\r\n    for (let i = 0; i < 360 / 5; i++) {\r\n      const az = i * 5 * Math.PI / 180;\r\n      const pt = polarToPoint({ r: mtnRadius, az: az });\r\n      pt.x += worldR; pt.y += worldR;\r\n      this.mtn_transforms.push(transformPoint(pt));\r\n    }\r\n  }\r\n  mtn_transforms: { transform: string }[] = [];\r\n  renderBuildings(type: BuildingTypes) {\r\n    return this.props.city.byType[type].all.map((b: IBuilding, i) => {\r\n      return (\r\n        <PetriBuilding city={this.props.city} building={b} key={type + i} ></PetriBuilding>\r\n      )\r\n    });\r\n  }\r\n  renderSpotlight(): JSX.Element | null {\r\n    if (this.props.spotlightEvent) {\r\n      const bean = this.props.city.historicalBeans.find((x) => x.key === this.props.spotlightEvent?.beanKey);\r\n      if (this.props.spotlightEvent.point && bean) {\r\n        return <AnimatedSpotlight event={this.props.spotlightEvent} bean={bean}></AnimatedSpotlight>\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  renderHexes(){\r\n    return this.props.city.hexes.map((hex, i) => {\r\n      const xy = hex_to_pixel(this.props.city.hex_size, this.props.city.petriOrigin, hex);\r\n      return <div className=\"hex\" key={i} style={transformPoint(xy)} \r\n        onMouseEnter={(e) => { this.props.city.pickupMagnetPoint = xy; }}\r\n        onClick={(e) => { this.props.onHexClick(hex); e.stopPropagation(); return false; }}>\r\n        {/* todo: move renderbuildings to here */}\r\n      </div>\r\n    });\r\n  }\r\n  render() {\r\n    const beans = this.props.city.beans.map((b: Bean) => {\r\n      return (\r\n        <AnimatedBean bean={b} key={b.key} selected={b.key === this.props.activeBeanID} onClick={() => this.props.onBeanClick(b)}></AnimatedBean>\r\n      )\r\n    });\r\n    const deaths = this.props.city.historicalBeans.filter((x) => !x.alive).map((b: Bean, i) => {\r\n      return (\r\n        <span key={i} className=\"dead\" style={{ left: (i * 10) + 'px' }}>⚰️</span>\r\n      )\r\n    });\r\n    const ufos = this.props.city.ufos.map((u: UFO, i: number) => {\r\n      return <AnimatedUFO ufo={u} key={u.key} city={this.props.city}></AnimatedUFO>\r\n    });\r\n    const buildings = supportedBuildings.reduce((list, type) => {\r\n      return list.concat(this.renderBuildings(type));\r\n    }, [] as JSX.Element[]);\r\n    const mtns = this.mtn_transforms.map((x, i) => {\r\n      return <span key={i} style={x} className=\"mtn\">⛰️</span>\r\n    });\r\n    return (\r\n      <div className=\"tile\" onClick={() => this.props.onClick()} onMouseLeave={() => {this.props.city.pickupMagnetPoint = undefined;}}>\r\n        <svg style={{ width: '100%', height: '100%' }} className=\"petri-base\">\r\n          <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 1)\" />\r\n        </svg>\r\n        {this.renderHexes()}\r\n        {mtns}\r\n        {/* {deaths} */}\r\n        {buildings}\r\n        <PickupList movers={this.props.city.pickups}></PickupList>\r\n        {beans}\r\n        {ufos}\r\n        {/* <span className=\"tile-label\">{this.props.tile.name}</span> */}\r\n        <svg style={{ width: '100%', height: '100%' }} className=\"petri-lid\">\r\n          <circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"grey\" fill=\"rgba(255, 255, 255, 0.2)\" />\r\n        </svg>\r\n        {this.renderSpotlight()}\r\n      </div>\r\n    )\r\n  }\r\n}","import { Bean } from \"../simulation/Bean\";\r\nimport React from \"react\";\r\nimport { World, TraitJob } from \"../World\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { Listing } from \"../simulation/Economy\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport class EconomyReport extends React.Component<{world: World}, {paused: boolean}> {\r\n    constructor(props: {world: World}) {\r\n      super(props);\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    render() {\r\n      let beans = this.props.world.beans;\r\n      const food_median = median(beans.map(x => x.discrete_food));\r\n      const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n      const shelter_median = median(beans.map(x => x.discrete_stamina)).toFixed(1);\r\n      const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n      const wealth_avg = wealth_total / (beans.length || 1);\r\n      const wealth_median = median(beans.map(x => x.cash));\r\n      const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n      const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n      const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n      const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n      const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n      const jobs = beans.reduce((obj, b) => {\r\n        obj[b.job] = (obj[b.job] || 0)+1;\r\n        return obj;\r\n      }, {} as {[key in TraitJob]: number});\r\n      const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n      function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: Listing){\r\n        obj.supply += l.quantity;\r\n        obj.price += l.price;\r\n        obj.count++;\r\n        obj.avg = obj.price / obj.count;\r\n        return obj;\r\n      }\r\n      const food = this.props.world.economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const meds = this.props.world.economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const houses = this.props.world.economy.market.listings['shelter'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      return (\r\n        <div>\r\n          <div className=\"pad-4p\">\r\n            <h2>State of the Utopia</h2>\r\n          </div>\r\n          {/* <div className=\"pad-4p\">\r\n            <h3>Subject's Health</h3>\r\n          </div> */}\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🍞 Food Security</strong>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {food_median.toFixed(1)} 🍞</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {food.supply} 🍞 @ ${food.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledSeasonalDemand.food} 🍞\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div>\r\n              <strong>🩺 Healthcare</strong>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {health_median} 🩺</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {meds.supply} 🩺 @ ${meds.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledSeasonalDemand.medicine} 🩺\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🏡 Housing</strong> <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\" className=\"big\"></NeedReadout>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Median {shelter_median} 🏡</td>\r\n                    <td className=\"text-center\">\r\n                      Supply: {houses.supply} 🏡 @ ${houses.avg.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Deficit: {this.props.world.economy.unfulfilledSeasonalDemand.shelter} 🏡\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"pad-4p\">\r\n            <h3>Economic Health</h3>\r\n          </div> */}\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>💰 Wealth</strong> <br/>\r\n              {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${this.props.world.economy.getCostOfLiving().toFixed(2)} <br/>\r\n              <table className=\"width-100p\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Total ${wealth_total.toFixed(2)}</td>\r\n                    <td className=\"text-center\">\r\n                      Median: ${wealth_median.toFixed(2)} \r\n                    </td>\r\n                    <td className=\"text-right\">\r\n                      Avg: ${wealth_avg.toFixed(2)}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              Top {wealthy_percentage.toFixed(1)}% of subjects own {wealthy_ownership.toFixed(1)}% of the wealth\r\n            </div>\r\n            <span>\r\n              <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n              <ul className=\"boxes\">\r\n                <li>{jobs.farmer || 0} farmers</li>\r\n                <li>{jobs.builder || 0} builders</li>\r\n                <li>{jobs.doc || 0} doctors</li>\r\n                <li>{jobs.entertainer || 0} entertainers</li>\r\n              </ul>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\n\r\nexport interface EventsPanelPS\r\n{\r\n    events: IEvent[],\r\n    selectBean: (beanKey?: number) => void\r\n}\r\nfunction shouldEventJumpToBean(e: IEvent): boolean{\r\n    return e.beanKey != null && (\r\n        e.trigger === 'speechcrime' ||\r\n        e.trigger === 'birth');\r\n}\r\n\r\nexport class EventsPanel extends React.Component<EventsPanelPS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let events = this.props.events.map((e, i) => {\r\n            const alert = e.icon === '🚨';\r\n            const slot = e.trigger === 'nojobslots';\r\n            return <div key={i} className={alert||slot ? 'tall': ''}>\r\n                <span className={alert ? 'police-siren': ''}>{e.icon}</span>&nbsp;\r\n                {\r\n                    shouldEventJumpToBean(e) ? <a onClick={() => this.props.selectBean(e.beanKey)} href=\"javascript:void(0)\">{e.message}</a> : <span>{e.message}</span>\r\n                }\r\n            </div>\r\n        });\r\n        if (this.props.events.length === 0){\r\n            events = [<div key={0}>\r\n                <small>No events yet</small>\r\n            </div>]\r\n        }\r\n        return (                \r\n        <div className=\"events-panel\">\r\n            <div>\r\n                <b>Events</b>\r\n            </div>\r\n            {events}\r\n        </div>\r\n        )\r\n    }\r\n}","import { ReactComponent } from \"*.svg\";\r\nimport React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NarrativeBeliefData, PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { Trait, TraitIcon } from \"../World\";\r\n\r\nexport class CardButton extends React.Component<{\r\n    icon: string,\r\n    name: string,\r\n    onClick?: () => void,\r\n    title?: string,\r\n    subtext?: string,\r\n    thin?: boolean,\r\n    singleLine?: boolean\r\n}>{\r\n    render(){\r\n        let classes = \"card button\";\r\n        if (this.props.thin) classes += ' thin';\r\n        if (this.props.singleLine) classes += ' single';\r\n        return <button className={classes} title={this.props.title} onClick={() => {\r\n            if (this.props.onClick) this.props.onClick()\r\n        }} type=\"button\">\r\n            {this.props.icon} {this.props.name}\r\n            {\r\n                (this.props.subtext != null) ? <small>{this.props.subtext}</small> : null\r\n            }\r\n        </button>\r\n    }\r\n}\r\n\r\nexport function TraitToCard(bean: Bean, trait: Trait, onClick?: () => void){\r\n    switch(trait){\r\n        case 'trad':\r\n        case 'prog':\r\n        case 'ego':\r\n        case 'state':\r\n            return <CardButton icon={TraitIcon[trait]} title={PrimaryBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'fresh':\r\n        case 'sick':\r\n        case 'hungry':\r\n        case 'stuffed':\r\n        case 'podless':\r\n        case 'homeowner':\r\n        case 'circle':\r\n        case 'square':\r\n        case 'triangle':\r\n        case 'sane':\r\n        case 'confused':\r\n        case 'mad':\r\n            return <CardButton icon={TraitIcon[trait]} title={keyToName[trait]} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        case 'noFaith':\r\n        case 'rocket':\r\n        case 'dragon':\r\n        case 'music':\r\n            return <CardButton icon={TraitIcon[trait]} title={NarrativeBeliefData[trait].description} name=\"\" subtext={keyToName[trait]} thin={true} singleLine={true} onClick={onClick}></CardButton>\r\n        default:\r\n            return null;\r\n    }\r\n} ","import React from \"react\";\r\nimport { IHappinessModifier, TraitIcon } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { NeedReadout } from \"../widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno, City } from \"../simulation/City\";\r\nimport { Economy } from \"../simulation/Economy\";\r\nimport { Party } from \"../simulation/Politics\";\r\nimport { IEvent, EventBus } from \"../events/Events\";\r\nimport { withinLastYear } from \"../simulation/Time\";\r\nimport { Government } from \"../simulation/Government\";\r\nimport { Player } from \"../simulation/Player\";\r\nimport { CardButton, TraitToCard } from \"../widgets/CardButton\";\r\n\r\nimport './BeanPanel.css';\r\nimport { ActivityIcon, GetPriorities } from \"../simulation/Agent\";\r\nimport { IsBeliefDivergent, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\n\r\ninterface BeanPanelP{\r\n    city: City,\r\n    bean: Bean,\r\n    economy: Economy,\r\n    law: Government,\r\n    party: Party,\r\n    alien: Player,\r\n    clearCity: () => void;\r\n    bus: EventBus\r\n    scan: (bean: Bean) => boolean;\r\n    vaporize: (bean: Bean) => void;\r\n    abduct: (bean: Bean) => void;\r\n    brainwash: () => void;\r\n    gift: () => void;\r\n}\r\n\r\ninterface BeanPanelS{\r\n    faceOverride?: string;\r\n    innerView: 'priorities'|'feelings'|'beliefs';\r\n}\r\n\r\nexport class BeanPanel extends React.Component<BeanPanelP, BeanPanelS> {\r\n    constructor(props: BeanPanelP) {\r\n        super(props);\r\n        this.state = {\r\n            innerView: 'beliefs'\r\n        }\r\n    }\r\n    scan = () => {\r\n        if (this.props.scan(this.props.bean)){\r\n            this.setState({faceOverride: '🤨'});\r\n            this._resetFace();\r\n        }\r\n    }\r\n    vaporize = () => {\r\n        this.props.vaporize(this.props.bean);\r\n        this.setState({faceOverride: '💀'});\r\n        this._resetFace();\r\n    }\r\n    support = () => {\r\n        this.setState({faceOverride: '🤩'});\r\n        this._resetFace();\r\n    }\r\n    abduct = () => {\r\n        this.props.abduct(this.props.bean);\r\n        this.setState({faceOverride: '😨'});\r\n        this._resetFace();\r\n    }\r\n    _resetFace(){\r\n        setTimeout(() => {\r\n            this.setState({faceOverride: undefined})\r\n        }, 5000);\r\n    }\r\n    happyTable(mods: IHappinessModifier[]){\r\n        return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{x.reason}</td>\r\n                <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n            </tr>\r\n        });\r\n    }\r\n    renderInner(){\r\n        if (!this.scanned){\r\n            return <div className=\"width-100p text-center\">\r\n                <small>\r\n                    Subject needs a Scan to reveal their thoughts\r\n                </small>\r\n            </div>\r\n        }\r\n        switch(this.state.innerView){\r\n            case 'beliefs':\r\n                return this.scanned ? this.beliefTable(this.props.bean.beliefs) : null\r\n            case 'feelings':\r\n                return <table className=\"width-100p\"><tbody>\r\n                    {this.scanned ? this.happyTable(this.props.bean.getHappinessModifiers(this.props.economy, this.props.city, this.props.law)) : null}\r\n                    {/* {this.scanned ? this.happyTable(this.props.bean.getSentimentModifiers(this.props.economy, this.props.city, this.props.law, this.props.party).party) : null} */}\r\n                    </tbody>\r\n                </table>\r\n            case 'priorities':\r\n                return <table className=\"width-100p\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                Currently {this.props.bean.state.display}\r\n                            </td>\r\n                        </tr>\r\n                        {\r\n                            GetPriorities(this.props.bean, this.props.alien.difficulty).values.map((x) => {\r\n                                return <tr>\r\n                                    <td>\r\n                                    {x.priority.toFixed(1)} {ActivityIcon(x.value)}\r\n                                    </td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n        }\r\n    }\r\n    beliefTable(beliefs: TraitBelief[]): React.ReactNode {\r\n        return beliefs.map((b, i) => {\r\n            const divergent = IsBeliefDivergent(b, this.props.party.ideals, this.props.party.community);\r\n            return <table className=\"width-100p\" key={b+i}><tbody><tr>\r\n            <th className={divergent ? 'divergent text-left': \"text-left\"}>\r\n                {SecondaryBeliefData[b].icon} {SecondaryBeliefData[b].adj}\r\n            </th>\r\n            <td className=\"text-right\">\r\n                {(SecondaryBeliefData[b].idealPro || []).map(y => <span>+{TraitIcon[y]}</span>)}\r\n                {(SecondaryBeliefData[b].idealCon || []).map(y => <span>-{TraitIcon[y]}</span>)}\r\n            </td>\r\n        </tr><tr><td className=\"small text-center\" colSpan={2}>{SecondaryBeliefData[b].description}</td></tr></tbody></table>});\r\n    }\r\n    get scanned(){\r\n        return this.props.alien.scanned_bean[this.props.bean.key];\r\n    }\r\n    renderTraits(){\r\n        if (this.scanned){\r\n            const brainwash = this.props.brainwash.bind(this);\r\n            return <div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ethnicity, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.faith, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.ideals, brainwash)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.community, brainwash)}\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    {TraitToCard(this.props.bean, this.props.bean.food, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.shelter, undefined)}\r\n                    {TraitToCard(this.props.bean, this.props.bean.health, undefined)}\r\n                </div>\r\n            </div>\r\n        } else {\r\n            return <div className=\"card-parent\">\r\n                <CardButton icon=\"🛰️\" name=\"Scan\" subtext=\"-Energy +Info\" onClick={this.scan}></CardButton>\r\n            </div>\r\n        }\r\n    }\r\n    render(){\r\n        const classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n        const chance = this.props.bean.chanceToDonate(this.props.economy, true);\r\n        return (                \r\n        <div className=\"vertical bean-panel\">\r\n            <div className=\"bean-panel-header\">\r\n                <div>\r\n                    <b>{this.props.bean.name}&nbsp;\r\n                    <small>\r\n                        of {this.props.city.name}\r\n                    </small>\r\n                    </b>\r\n                    <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n                </div>\r\n                <div className=\"bean-view\">                \r\n                    <span className={classes+\" bean\"}>\r\n                        {\r\n                            this.state.faceOverride === undefined ? this.props.bean.getFace() : this.state.faceOverride\r\n                        }\r\n                    </span>\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <span className=\"text-center\">\r\n                        💰 ${this.props.bean.cash.toFixed(2)}\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        🙂 {Math.round(this.props.bean.lastHappiness)}%\r\n                    </span>\r\n                    <span className=\"text-center\">\r\n                        👍 {Math.round(this.props.bean.lastPartySentiment)}%\r\n                    </span>\r\n                </div>\r\n                {this.renderTraits()}\r\n            </div>\r\n            <div className=\"grow-1 pad-4\">\r\n                <div className=\"cylinder blue-orange horizontal\">\r\n                    <button type=\"button\" className={this.state.innerView=='beliefs'?'active':''} onClick={()=>this.setState({innerView:'beliefs'})}>\r\n                        😇 Beliefs\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='feelings'?'active':''} onClick={()=>this.setState({innerView:'feelings'})}>\r\n                        😐 Feelings\r\n                    </button>\r\n                    <button type=\"button\" className={this.state.innerView=='priorities'?'active':''} onClick={()=>this.setState({innerView:'priorities'})}>\r\n                        💪 Priorities\r\n                    </button>\r\n                </div>\r\n                {this.renderInner()}\r\n            </div>\r\n            <div className=\"bean-action-card-parent\">\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={() => this.props.brainwash()}\r\n                        title=\"Rewrite one of this being's beliefs\"\r\n                    >😵 Brainwash\r\n                        <small>-Sanity +Belief</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\"  onClick={() => this.props.brainwash()}\r\n                        title=\"Give this being food or meds or cash\">\r\n                        🎁 Gift\r\n                        <small>-Energy +Things</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\" onClick={this.scan} \r\n                        title=\"Steal a bit of this being's mind\">\r\n                        🤪 Braindrain\r\n                        <small>-Energy -Sanity</small>\r\n                    </button>\r\n                    <button type=\"button\" className=\"button card\" onClick={this.vaporize}\r\n                        title=\"Delete this being from the experiment\"\r\n                    >\r\n                        ☠️ Vaporize\r\n                        <small>-Bots -Energy</small>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button type=\"button\" className=\"button card\"\r\n                        onClick={() => this.abduct()}\r\n                        title=\"Remove this being for study\"\r\n                    >\r\n                        👾 Abduct for Research\r\n                        <small>-Bots -Sanity +Tech</small>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { TraitCommunity, TraitIdeals } from \"../World\";\r\nimport { City } from \"../simulation/City\";\r\n\r\nexport interface FoundPartyPS\r\n{\r\n    cities: City[],\r\n    onFound: (state: FoundPartyS) => void\r\n}\r\nexport interface FoundPartyS\r\n{\r\n    community: TraitCommunity|null\r\n    ideal: TraitIdeals|null,\r\n    name: string,\r\n    slogan: string,\r\n    members: string,\r\n    goal: string,\r\n    cityKey: number\r\n}\r\n\r\nexport class FoundParty extends React.Component<FoundPartyPS, FoundPartyS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            community: null,\r\n            ideal: null,\r\n            name: \"Goodplace\",\r\n            slogan: \"Perfection is achievable.\",\r\n            members: \"Citizens\",\r\n            goal: \"Legislation\",\r\n            cityKey: 0\r\n        }\r\n    }\r\n    onCommunity(val: TraitCommunity){\r\n        this.setState({community: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onIdeal(val: TraitIdeals){\r\n        this.setState({ideal: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onBigFourChange(){\r\n        if (this.state.community === 'ego' && this.state.ideal === 'trad'){\r\n            this.setState({\r\n                name: 'Arcadia',\r\n                slogan: \"A man belongs on the farm.\",\r\n                members: \"Farmers\", goal: \"Tariffs\"});\r\n        } else if (this.state.community === 'ego' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Libertaria\",\r\n                slogan: \"Freedom for every being!\",\r\n                members: \"Builders\", goal: \"Right to Strike\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'trad') {\r\n            this.setState({\r\n                name: \"Ultimate Kingdom\",\r\n                slogan: \"Honor to King and family.\",\r\n                members: \"Homeowners\", goal: \"Repeal Property Tax\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Equus\",\r\n                slogan: \"True equality is peace.\",\r\n                members: \"Penniless\", goal: \"Food Welfare\"});\r\n        }\r\n    }\r\n    onName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({name: e.target.value});\r\n    }\r\n    onSlogan = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({slogan: e.target.value});\r\n    }\r\n    onCity = (key: any) => {\r\n        this.setState({cityKey: +key});\r\n    }\r\n    render(){\r\n        return <div>\r\n          <div className=\"pad-4p\">\r\n            <h2>Found your Utopia</h2>\r\n          </div>    \r\n          <div className=\"col-2\">\r\n            <div>\r\n              Perfect societies rely on the\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"state\" checked={this.state.community === 'state'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)} /> <b>Collective</b> 🕊️ {/* 🐘 🤝*/}\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"ego\" checked={this.state.community === 'ego'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)}/> <b>Independent</b> 🦅 {/*✌️*/}\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              to guarantee well-being.\r\n            </div>\r\n            <div>\r\n              Perfect beings devote themselves to\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"trad\" checked={this.state.ideal === 'trad'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)}/> <b>Elitist</b> {/*🕯️ 🔮*/} 👑\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"prog\" checked={this.state.ideal === 'prog'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)} /> <b>Progressive</b> {/*💡 🔬 🎓*/} ⚖️\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              social values.\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My Utopia is named <input type=\"text\" value={this.state.name} onChange={this.onName} />\r\n            </div>\r\n            <div>\r\n              My Utopia's mantra is <input type=\"text\" value={this.state.slogan} onChange={this.onSlogan}  />\r\n            </div>\r\n          </div>\r\n          <hr/>\r\n          <button type=\"button\" disabled={this.state.community == null || this.state.ideal == null} className=\"important btn-found-party\" onClick={() => this.props.onFound(this.state)}>Found the {this.state.name} Utopia</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { TraitCommunity, TraitIcon, TraitIdeals } from \"../World\";\r\n\r\nexport function RenderIdealBadges(comm: Array<TraitCommunity|TraitIdeals>, effect: 'pos'|'neg'){\r\n    return comm.map((x) => RenderIdealBadge(x, effect));\r\n}\r\nexport function RenderIdealBadge(comm: TraitCommunity|TraitIdeals, effect: 'pos'|'neg'){\r\n    return RenderBadge(TraitIcon[comm], effect);\r\n}\r\nexport function RenderBadge(str: string, effect: 'pos'|'neg'){\r\n    const c = 'badge align-mid '+effect;\r\n    const output = `${effect === 'neg' ? '-': '+'}${str}`;\r\n    return <span className={c} key={output}>\r\n        {output}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { World, TraitIcon } from \"../World\";\r\nimport { IPolicy } from \"../simulation/Politics\";\r\nimport { PrimaryBeliefData } from \"../simulation/Beliefs\";\r\nimport { ILaw, ILawData, LawAxis, LawAxisData, LawData, LawGroup, LawKey } from \"../simulation/Government\";\r\nimport { RenderIdealBadges } from \"../widgets/UniversalWidgets\";\r\nimport { groupBy } from \"../simulation/Utils\";\r\n\r\nexport interface PartyOverviewPS{\r\n    world: World;\r\n    setPolicy(axis: LawAxis, policy: IPolicy): void;\r\n}\r\ninterface PartyOverviewS{\r\n    overView: 'laws'|'leadership'|'finances',\r\n    detailView: 'none'|'group_add'|'law_view',\r\n    detailGroup?: LawGroup,\r\n    detailLaw?: ILaw,\r\n    collapsedGroups: {[key in LawGroup]: boolean},\r\n    collapsedAxis: {[key in LawAxis]: boolean},\r\n}\r\n\r\nexport class PartyOverview extends React.Component<PartyOverviewPS, PartyOverviewS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            overView: 'laws',\r\n            detailView: 'none',\r\n            collapsedGroups: {\r\n                Crime: false,\r\n                Taxation: false,\r\n                Welfare: false,\r\n                Culture: false,\r\n                Economics: false,\r\n            },\r\n            collapsedAxis: {\r\n                'wel_food': false,'wel_house': false,'wel_health': false,'tax_basic': false,'tax_second': false,'econ_sub': false,'cul_rel': false,'cul_theo': false,'crime_theo': false\r\n            }\r\n        }\r\n    }\r\n    renderDetailLaw(law: LawKey, view: 'edit'|'add', partOfGroup: boolean = false){\r\n        const ldata = LawData[law];\r\n        const incompatibilities = Object.values(LawData).filter(\r\n            (x) => x.key != law && x.axis === ldata.axis\r\n        );\r\n        const rowClassName = view === 'add' ? 'border-b-1 pad-bt-8' : '';\r\n        return  <div key={law} className={rowClassName+(partOfGroup ? ' pad-l-40': '')}>\r\n        <div className=\"horizontal\">\r\n            <strong className=\"f-size-15em\">\r\n                {ldata.name}\r\n            </strong>\r\n            <span>\r\n                {RenderIdealBadges(ldata.idealPro || [], 'pos')}\r\n            </span>\r\n            {\r\n                view === 'add' ? \r\n                <button className=\"callout marg-0\">\r\n                    Adopt for 3 🗳️ \r\n                </button> : null\r\n            }\r\n        </div>\r\n        {\r\n            (partOfGroup ? null : <div>\r\n                <i>Government Policy for&nbsp;{LawAxisData[ldata.axis].name}\r\n                </i>\r\n            </div>)\r\n        }\r\n        <div>\r\n            <p>\r\n                {ldata.description}\r\n            </p>\r\n            {\r\n                view === 'edit' ? \r\n                <div className=\"horizontal\">\r\n                    <span>\r\n                        <strong>Subjects Fed:</strong> 1\r\n                    </span>\r\n                    <span>\r\n                        <strong>Last Monthly Cost:</strong> $1\r\n                    </span>\r\n                </div> : null\r\n            }\r\n            <div className=\"horizontal\">\r\n                <span>\r\n                    <strong>Max. Monthly Cost:</strong> <input type=\"number\" />\r\n                </span>\r\n            </div>\r\n            <strong>Incompatible with</strong>\r\n            {\r\n                incompatibilities.map((x, i) => <i key={x.name}>{i > 0 ? <span>,</span>: null} {x.name}</i>\r\n                )\r\n            }\r\n        </div>\r\n    </div>;\r\n    }\r\n    renderDetailGroup(group: LawGroup): JSX.Element[]{\r\n        const divs: JSX.Element[] = [];\r\n        groupBy(Object.values(LawData).filter(x => x.group === group), (y: ILawData) => {\r\n            return y.axis;\r\n        }).forEach((val) => {\r\n            const isGroup = (val.length > 1);\r\n            if (isGroup){\r\n                divs.push(<div>\r\n                    <h3>\r\n                        {LawAxisData[val[0].axis].name}\r\n                        <button className=\"callout marg-0 pull-r\" onClick={() => {\r\n                            this.state.collapsedAxis[val[0].axis] = !this.state.collapsedAxis[val[0].axis];\r\n                            this.setState({collapsedAxis: this.state.collapsedAxis});\r\n                        }}>📁</button>\r\n                    </h3>\r\n                </div>);\r\n            }\r\n            if (!isGroup || !this.state.collapsedAxis[val[0].axis]){\r\n                val.forEach((z) => {\r\n                    divs.push(this.renderDetailLaw(z.key, 'add', isGroup))\r\n                });\r\n            }\r\n        });\r\n        return divs;\r\n    }\r\n    toggleGroup(group: LawGroup){\r\n        this.state.collapsedGroups[group] = !this.state.collapsedGroups[group];\r\n        this.setState({collapsedGroups: this.state.collapsedGroups});\r\n    }\r\n    renderHeader(group: LawGroup){\r\n        return <tr>\r\n            <td>\r\n                <strong>{group}</strong>\r\n            </td>\r\n            <td>\r\n                <button className=\"callout marg-0\" onClick={() => this.setState({detailView: 'group_add', detailGroup: group})}>Add ➕</button>\r\n                <button className=\"callout marg-0\" onClick={() => this.toggleGroup(group)}>📁</button>\r\n            </td>\r\n        </tr>\r\n    }\r\n    renderRows(group: LawGroup, laws: ILaw[]): React.ReactNode{\r\n        if (this.state.collapsedGroups[group])\r\n            return null;\r\n        return laws.map((x) => {\r\n            const data = LawData[x.key];\r\n            return <tr key={x.key}>\r\n            <td>\r\n                <i>{data.name}</i> \r\n                {\r\n                    (data.idealPro || []).map((x) => TraitIcon[x])\r\n                }\r\n            </td>\r\n            <td>\r\n                <button onClick={() => this.setState({detailView: 'law_view', detailLaw: x})} className=\"callout marg-0\">View 🔍</button>\r\n            </td>\r\n        </tr>\r\n        });\r\n    }\r\n    render(){\r\n        return <div>\r\n            <div className=\"col-2\">\r\n                <h2 className=\"marg-b-0\">Utopia Government</h2>\r\n                <div>\r\n                    <div className=\"horizontal blue-orange cylinder f-size-125em marg-t-20\">\r\n                        <button type=\"button\" onClick={() => this.setState({overView: 'laws'})} className={this.state.overView === 'laws' ? 'active': ''}>\r\n                            📜 Laws\r\n                        </button>\r\n                        <button type=\"button\" onClick={() => this.setState({overView: 'leadership'})} className={this.state.overView === 'leadership' ? 'active': ''}>\r\n                            {this.props.world.party.leadership} 🗳️ Leadership\r\n                        </button>\r\n                        <button type=\"button\" onClick={() => this.setState({overView: 'finances'})} className={this.state.overView === 'finances' ? 'active': ''}>\r\n                            💰 Funding\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"pad-4p\">\r\n                {this.props.world.party.name} is a&nbsp;\r\n                {PrimaryBeliefData[this.props.world.party.community].adj} {PrimaryBeliefData[this.props.world.party.community].icon}&nbsp; \r\n                {PrimaryBeliefData[this.props.world.party.ideals].adj} {PrimaryBeliefData[this.props.world.party.ideals].icon}&nbsp;\r\n                Utopia\r\n            </div>\r\n            {this.renderOver()}\r\n        </div>\r\n    }\r\n    renderOver(): React.ReactNode {\r\n        switch(this.state.overView){\r\n            case 'leadership':\r\n                return this.renderLeadership();\r\n            case 'finances':\r\n                return this.renderFinances();\r\n            default:\r\n                return this.renderLaws();\r\n        }\r\n    }\r\n    renderLaws(){  \r\n        const groups = this.props.world.law.getLawsByGroup();\r\n        return <div className=\"col-2-30-60\">\r\n        <div className=\"max-h-365\">\r\n            <table className=\"full\">\r\n                <tbody>\r\n                    {this.renderHeader('Taxation')}\r\n                    {this.renderRows('Taxation', groups.Taxation)}\r\n                    {this.renderHeader('Welfare')}\r\n                    {this.renderRows('Welfare', groups.Welfare)}\r\n                    {this.renderHeader('Economics')}\r\n                    {this.renderRows('Economics', groups.Economics)}\r\n                    {this.renderHeader('Crime')}\r\n                    {this.renderRows('Crime', groups.Crime)}\r\n                    {this.renderHeader('Culture')}\r\n                    {this.renderRows('Culture', groups.Culture)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div className=\"border max-h-365\">\r\n            {this.renderLawDetail()}\r\n        </div>\r\n    </div>\r\n    }\r\n    renderLawDetail(){      \r\n        if (this.state.detailView === 'group_add' && this.state.detailGroup){\r\n            return this.renderDetailGroup(this.state.detailGroup);\r\n        } else if (this.state.detailView === 'law_view' && this.state.detailLaw){\r\n            return this.renderDetailLaw(this.state.detailLaw.key, 'edit')\r\n        }\r\n        return <div className=\"text-center\">\r\n            Add ➕ or View 🔍 a Law\r\n        </div>;\r\n\r\n    }\r\n    renderFinances(): React.ReactNode {\r\n        return <div>\r\n\r\n        </div>\r\n    }\r\n    renderLeadership(): React.ReactNode {\r\n        return <div>\r\n            \r\n        </div>\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { ChangePubSub, PubSub } from \"../events/Events\";\r\n\r\ninterface Bubble {string: string, id: number, className?: string};\r\n\r\nfunction useBubbles<T>(sub: PubSub<T>, transform: (input: T) => {string: string, className: string}){\r\n    const [bubbles, setBubbles] = useState<Bubble[]>([]);\r\n    let bubbleSeed = 0;\r\n    const onEvent = (event: T) => {\r\n        const id = ++bubbleSeed;\r\n        setBubbles(bubbles.concat([{\r\n            id: id,\r\n            ...transform(event)\r\n        }]));\r\n        setTimeout(() => {\r\n            setBubbles(\r\n                bubbles.filter((b) => b.id != id)\r\n            )\r\n        }, 1500)\r\n    }\r\n    useEffect(() => {\r\n        sub.subscribe(onEvent);\r\n        return () => sub.unsubscribe(onEvent);\r\n    });\r\n    return bubbles;\r\n}\r\n\r\nexport class BubbleNumberText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<Bubble>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n    bubbleSeed = 0;\r\n    onChange = (ev: {change: number}) => {\r\n        const id = ++this.bubbleSeed;\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                string: (positive ? '+': '') + ev.change,\r\n                id: id,\r\n                className: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.id != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.id} className={[b.className, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.string}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}\r\n\r\nexport const BubbleSeenTraitsText: React.FC<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent: PubSub<{k: string, v: boolean}>\r\n}> = (props) => {\r\n    const bubbles = useBubbles(props.changeEvent, (input: {k: string, v: boolean}) => {\r\n        return {\r\n            string: `Discovered ${input.k}!`,\r\n            className: 'seen-belief'\r\n        }\r\n    })\r\n    return <span className=\"bubble-parent\">\r\n        {props.children}\r\n        {bubbles.map((b) => <span key={b.id} className={[b.className, props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {props.icon} {b.string}\r\n        </span>)}\r\n    </span>\r\n}","import React from \"react\";\r\nimport { Bean } from \"../simulation/Bean\";\r\nimport { AnimatedBean } from \"../petri-ui/AnimatedBean\";\r\nimport \"./SocialGraph.css\";\r\nimport { origin_point } from \"../simulation/Geography\";\r\n\r\ninterface SocialGraphP{\r\n    beans: Bean[];\r\n    costOfLiving: number;\r\n    onClick: (b: Bean) => void\r\n}\r\ninterface SocialGraphS{\r\n    \r\n}\r\nexport class SocialGraph extends React.Component<SocialGraphP, SocialGraphS>{\r\n    constructor(props: SocialGraphP){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return <div className=\"social-graph\">\r\n            {\r\n                this.props.beans.map((b) => \r\n                <div className=\"bean-node\" onClick={() => this.props.onClick(b)}>\r\n                    <AnimatedBean bean={b} static={true} sitStill={true} \r\n                        onClick={() => {this.props.onClick(b);}}>\r\n                    </AnimatedBean>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class CapsuleLabel extends React.Component<{\r\n    icon?: string,\r\n    label?: string\r\n}, {\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render(){\r\n        const classN = 'capsule-label '+this.props.label||'';\r\n        return <span className={classN}>\r\n            <span className=\"capsule-icon\">\r\n                {this.props.icon}\r\n            </span>\r\n            <span className=\"capsule-text\">\r\n                {this.props.label}:\r\n            </span>\r\n            <span className=\"capsule-value\">\r\n                {this.props.children}\r\n            </span>\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { DefaultDifficulty, triadToString } from \"../Game\";\r\nimport { Curriculums, GetAverage, Goals, IGoal, IPlayerData, IProgressable } from \"../simulation/Player\";\r\n\r\nexport interface GoalPanelPS\r\n{\r\n  player: IPlayerData;\r\n  progress: IProgressable;\r\n}\r\n\r\nexport class GoalsPanel extends React.Component<GoalPanelPS> {\r\n  renderReward(g: IGoal){\r\n    return <div>\r\n      <small>\r\n      🎁 {triadToString(g.reward || {}, '+')}\r\n      </small>\r\n    </div>\r\n  }\r\n  renderGoal(g: IGoal){\r\n    const done = this.props.progress.goalProgress[g.key] != null && this.props.progress.goalProgress[g.key].done;\r\n    return <li>\r\n      {done ? '☑️': '⭕️'}\r\n      {g.text}\r\n      {g.tooltip != null ? <small title={g.tooltip}>❔</small> : null}\r\n      {done || g.reward == null ? null : this.renderReward(g)}\r\n    </li>\r\n  }\r\n    render(){\r\n        return (<div className=\"goals\">\r\n        <div><b>Goals</b></div>\r\n        <ul>\r\n          {this.props.progress.goals.map((key) => {\r\n            return this.renderGoal(Goals[key]);\r\n          })}\r\n        </ul>\r\n        <div><b>Report Card</b></div>\r\n        <p className=\"horizontal\">\r\n          <span>\r\n            Last Grade: <b>D</b>\r\n          </span>\r\n          <span>\r\n            Next Grade in: <b>2 mo.</b>\r\n          </span>\r\n        </p>\r\n        <p>\r\n        </p>\r\n        <table style={{margin: 'auto'}}>\r\n          <tbody>\r\n            <tr>\r\n              <th>🎯 Happiness\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Happiness}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects happy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n                <small>\r\n              {Curriculums.Default.RubricDescription.Happiness}\r\n                </small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Prosperity</th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Prosperity}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects fed and healthy?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Prosperity}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Stability\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Stability}\r\n              </td>\r\n              <td>\r\n                <small title=\"Are your subjects sane and civil?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Stability}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>🎯 Dogma\r\n              </th>\r\n              <td>\r\n                {this.props.player.workingReportCard.Dogma}\r\n              </td>\r\n              <td>\r\n                <small title=\"Do your society's rules match your utopian ideals?\">❔</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"text-left\" colSpan={3}>\r\n              <small>{Curriculums.Default.RubricDescription.Dogma}</small>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan={3}>\r\n                <hr />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                Avg. Grade\r\n              </th>\r\n              <td>\r\n                {GetAverage(this.props.player.workingReportCard)}\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>)\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class CampaignsPanel extends React.Component<{\r\n\r\n}>{\r\n    render(){\r\n        return <div className=\"pad-4p\">\r\n        <div className=\"subheader\">\r\n            <h3>Propaganda</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >🎙️ Buy Propaganda</button>\r\n        </div>\r\n        <span>\r\n          Propaganda changes beans' feelings on a wide variety of topics.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              📺 Broadcast Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Small chance to increase Approval among all beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              👋 Canvassing\r\n            </span>\r\n            <small>Approval+ Labor-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on a few random beans\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🗞️ Print Campaign\r\n            </span>\r\n            <small>Approval+ Cash-</small>\r\n            <span className=\"p\">\r\n              Chance to increase Approval on wealthy beans\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <div className=\"subheader\">\r\n            <h3>Appearances</h3>\r\n            <button type=\"button\" className=\"callout\" onClick={() => void(0)} >💬 Schedule Appearance</button>\r\n        </div>\r\n        <span>\r\n          Appearances have limited reach, but have powerful effects.\r\n        </span>\r\n        <div className=\"card-parent\">\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🤔 Debating\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Chance to gain or lose Influence\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            📸 Photo Op\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases Approval within one Social Group\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n              🎤 Speechmaking\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Increases chance of Donations in a single City\r\n            </span>\r\n          </button>\r\n          <button type=\"button\" className=\"card button\">\r\n            <span className=\"h\">\r\n            🙋 Town Hall\r\n            </span>\r\n            <small>\r\n              Labor-\r\n            </small>\r\n            <span className=\"p\">\r\n              Suppresses negative Approval in a single city                     \r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* <CharityPanel world={this.state.world} onFoundCharity={this.foundCharity}></CharityPanel>\r\n        <div>\r\n          <b>Campaign Finances</b> <br/>\r\n          <b>Expenses</b> ${seasonalCost} <b>Surplus</b> ${this.state.world.party.seasonalIncome - seasonalCost}\r\n        </div> */}\r\n      </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { World } from \"../World\";\r\n\r\nexport class GovernmentPanel extends React.Component<{\r\n    world: World\r\n}> {\r\n    render(){\r\n        return <div><div className=\"col-2\">\r\n        <h2>Government</h2>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class ConfirmButton extends React.Component<{\r\n    confirmText: string,\r\n    onConfirm: () => void,\r\n    disabled?: boolean,\r\n    className?: string\r\n}, {\r\n    confirming: boolean\r\n}> {\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {\r\n            confirming: false\r\n        }\r\n    }\r\n    click(){\r\n        if (this.state.confirming){\r\n            this.props.onConfirm();\r\n            this.setState({confirming: false});\r\n        } else {\r\n            this.setState({confirming: true});\r\n        }\r\n    }\r\n    render(){\r\n        return <button className={this.props.className} onClick={() => this.click()} disabled={this.props.disabled}>\r\n            { this.state.confirming ? this.props.confirmText : this.props.children}\r\n        </button>\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class RobotArm extends React.Component<{\r\n    tool: string,\r\n    classN: string\r\n}, {\r\n\r\n}> {\r\n    render(){\r\n        const style = {};\r\n        return <svg width=\"100\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\" style={style} className={this.props.classN+\" robot-arm\"}>\r\n        <g>\r\n         <title>robotarm</title>\r\n         <rect fill=\"transparent\" id=\"canvas_background\" height=\"302\" width=\"102\" y=\"-1\" x=\"-1\"/>\r\n         <g display=\"none\" overflow=\"visible\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\" id=\"canvasGrid\">\r\n          <rect fill=\"url(#gridpattern)\" strokeWidth=\"0\" y=\"0\" x=\"0\" height=\"100%\" width=\"100%\"/>\r\n         </g>\r\n        </g>\r\n        <g>\r\n         <title>Layer 1</title>\r\n         <rect id=\"svg_2\" height=\"200\" width=\"48\" y=\"91.63545\" x=\"25\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#BBBBBB\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_1\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n         <ellipse ry=\"20\" rx=\"20\" id=\"svg_3\" cy=\"50\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\"/>\r\n         <ellipse ry=\"48\" rx=\"48\" id=\"svg_4\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#999999\"/>\r\n        <ellipse ry=\"20\" rx=\"20\" id=\"svg_5\" cy=\"250\" cx=\"50\" strokeWidth=\"1.5\" stroke=\"#000\" fill=\"#444444\">{this.props.tool}</ellipse>\r\n            \r\n        </g><text y=\"250\" x=\"-20\" fontSize=\"4em\">{this.props.tool}</text>\r\n       </svg>\r\n    }\r\n}","import React from \"react\";\r\nimport { IPlayerData, ITechInfo, Tech, TechData } from \"../simulation/Player\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { RobotArm } from \"../widgets/RobotArm\";\r\nimport './research.css';\r\n\r\nexport class ResearchPanel extends React.Component<{\r\n  player: IPlayerData,\r\n  setResearch: (t: Tech) => void,\r\n  release: () => void\r\n}, {\r\n  toolI: number, toolI2: number, toolI3: number, toolI4: number\r\n}>{\r\n  tools = [\r\n  '📡',\r\n  '🗜️',\r\n  '🔬',\r\n  '💉',\r\n  '🔎',\r\n  '🧼',\r\n  '🧲',\r\n  '🎥',\r\n  '🔧',\r\n  ];\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state = {\r\n      toolI: 0,\r\n      toolI2: 2,\r\n      toolI3: 4,\r\n      toolI4: 1,\r\n    };\r\n  }\r\n  interval?: number;\r\n  loop(lastI: number){\r\n    let i = lastI + 1;\r\n    if (i === this.tools.length)\r\n      i = 0;\r\n    return i;\r\n  }\r\n  componentDidMount(){\r\n    this.interval = window.setInterval(() => {\r\n      this.setState({\r\n        toolI: this.loop(this.state.toolI),\r\n        toolI2: this.loop(this.state.toolI2),\r\n        toolI3: this.loop(this.state.toolI3),\r\n        toolI4: this.loop(this.state.toolI4),\r\n      });\r\n    }, 1000);\r\n  }\r\n  componentWillUnmount(){\r\n    if (this.interval != null)\r\n      window.clearInterval(this.interval);\r\n  }\r\n  setResearch(tech: Tech){\r\n    this.props.setResearch(tech);\r\n  }\r\n  renderTech(tech: ITechInfo){\r\n    const unstarted = this.props.player.techProgress[tech.tech] == null;\r\n    const progress = unstarted ? 0 : this.props.player.techProgress[tech.tech].researchPoints;\r\n    const total = tech.techPoints;\r\n    const style = {width: (Math.min(progress/total*100, 100))+'%'};\r\n    const complete = progress >= total;\r\n    const isCurrent = this.props.player.currentlyResearchingTech === tech.tech;\r\n    const state: '⭕️'|'✅'|'🔬' = complete ? '✅' : isCurrent ? '🔬' : '⭕️';\r\n    const rootClassName = isCurrent ? 'active': 'inactive';\r\n    return <div className={\"card-parent \"+rootClassName} key={tech.tech}>\r\n      <button className=\"card button\" onClick={() => this.setResearch(tech.tech)}>\r\n        <strong>{tech.name}</strong>\r\n        <strong className=\"pull-r f-size-125em\">{state}</strong>\r\n        <div>\r\n          {tech.description}\r\n        </div>      \r\n        <div className=\"bar f-size-12 h-12\">\r\n            <div className=\"bar-inner text-center\" style={style}>\r\n            </div>\r\n            {progress}/{total} tech\r\n        </div>\r\n      </button>\r\n    </div>\r\n  }\r\n  render(){\r\n      const techs = Object.values(TechData);\r\n      return <div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <h2>Research 🧪 Lab</h2>\r\n              <div className=\"vertical\">\r\n                {\r\n                  techs.map((t) => this.renderTech(t))\r\n                }\r\n              </div>\r\n            </div>\r\n          <div className=\"vertical\">\r\n            <div>\r\n              <div className=\"robot\">\r\n                🤖\r\n                <RobotArm classN=\"far-left\" tool={this.tools[this.state.toolI]}></RobotArm>\r\n                <RobotArm classN=\"left\" tool={this.tools[this.state.toolI2]}></RobotArm>\r\n                <RobotArm classN=\"near-right\" tool={this.tools[this.state.toolI3]}></RobotArm>\r\n                <RobotArm classN=\"far-right\" tool={this.tools[this.state.toolI4]}></RobotArm>\r\n              </div>\r\n            </div>\r\n            <div className=\"h-42em\">\r\n              {\r\n                this.props.player.abductedBeans.map((b) => {\r\n                  return <span key={b.key} className=\"victim bean triangle shake\">😨</span>\r\n                })\r\n              }\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              Currently probing {this.props.player.abductedBeans.length} beings for {this.props.player.abductedBeans.length} tech a day\r\n              <p>\r\n                <small>1 tech per research subject per day</small>\r\n              </p>\r\n            </div>\r\n            {\r\n              this.props.player.abductedBeans.length > 0 ? <div className=\"text-right\">\r\n                <ConfirmButton className=\"callout\" onConfirm={() => {this.props.release()}} confirmText=\"-1 Research Subject?\">\r\n                🎈 Release Research Subject\r\n                </ConfirmButton>\r\n              </div> : null\r\n            }\r\n          </div>\r\n        </div>\r\n        <div>\r\n\r\n        </div>\r\n      </div>\r\n  }\r\n}","import React from \"react\";\r\nimport \"./StopPlayFast.css\"\r\n\r\nexport class StopPlayFastButtons extends React.Component<{\r\n    timeScale: number,\r\n    setTimeScale: (s: number) => void\r\n}>{\r\n    render(){\r\n        return <div className=\"s-p-f button-group cylinder blue-orange\">\r\n            ⌛️\r\n            <button type=\"button\" className={this.props.timeScale == 0 ? 'active': ''} onClick={() => this.props.setTimeScale(0)}>⏹</button>\r\n            <button type=\"button\" className={this.props.timeScale == 1 ? 'active': ''} onClick={() => this.props.setTimeScale(1)}>▶️</button>\r\n            <button type=\"button\" className={this.props.timeScale == 2 ? 'active': ''} onClick={() => this.props.setTimeScale(2)}>⏩</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { PlayerResources, triadToString } from \"../Game\";\r\n\r\nexport class CostSmall extends React.Component<{\r\n    cost: PlayerResources,\r\n    qty?: number\r\n}>{\r\n\r\n    render(){\r\n        return <small>\r\n            {triadToString(this.props.cost, '-', this.props.qty)}\r\n        </small>\r\n    }\r\n}","import React from \"react\";\r\nimport { keyToName } from \"../App\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { City } from \"../simulation/City\";\r\nimport { BuildingIcon, BuildingJobIcon, BuildingTypes, HexPoint, IBuilding } from \"../simulation/Geography\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\n\r\nexport class HexPanel extends React.Component<{\r\n    city: City,\r\n    hex: HexPoint,\r\n    difficulty: IDifficulty,\r\n    clearHex: () => void,\r\n    build: (where: HexPoint, what: BuildingTypes) => void,\r\n    beam: (where: HexPoint) => void,\r\n    upgrade: (what: IBuilding) => void,\r\n}, {\r\n\r\n}> {\r\n    emptyPanel(){\r\n        const eHex = this.props.difficulty.cost.emptyHex;\r\n        return <div>\r\n            <div>\r\n                <strong>Empty Lot</strong> in <strong>{this.props.city.name}</strong>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearHex()} >❌</button>\r\n            </div>\r\n            <h3>Build:</h3>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'house')}>\r\n                    {BuildingIcon['house']} House\r\n                    <CostSmall cost={eHex.build.house}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'farm')}>\r\n                    {BuildingIcon['farm']} Farm\r\n                    <CostSmall cost={eHex.build.farm}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'hospital')}>\r\n                    {BuildingIcon['hospital']} Hospital\r\n                    <CostSmall cost={eHex.build.hospital}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'theater')}>\r\n                    {BuildingIcon['theater']} Theater\r\n                    <CostSmall cost={eHex.build.theater}></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" type=\"button\" onClick={() => this.props.build(this.props.hex, 'park')}>\r\n                    {BuildingIcon['park']} Park\r\n                    <CostSmall cost={eHex.build.park}></CostSmall>\r\n                </button>\r\n            </div>\r\n            <h3>Beings:</h3>\r\n            {this.renderBeamButton()}\r\n        </div>\r\n\r\n    }\r\n    renderBeamButton(){\r\n        return <div className=\"card-parent\">\r\n        <button className=\"card button\" type=\"button\" onClick={() => this.props.beam(this.props.hex)}>\r\n            🛸 Beam In New Subject\r\n            <CostSmall cost={this.props.difficulty.cost.hex.beam}></CostSmall>\r\n        </button>\r\n    </div>\r\n    }\r\n    buildingPanel(b: IBuilding){\r\n        const slots = b.usedSlots();\r\n        const free = b.openSlots();\r\n        const hasJobs = b.type != 'park' && b.type != 'nature';\r\n        return <div>\r\n            <strong>{b.upgraded && hasJobs ? 'Dense ': 'Small '}{keyToName[b.type]}</strong> in <strong>{this.props.city.name}</strong>\r\n        {\r\n            b.upgraded && hasJobs ? <div>\r\n                {this.renderDensityWarning(b.type)}\r\n            </div> : null\r\n        }\r\n        {\r\n            (slots.length === 0) ? null : <div>\r\n                <strong>Workers:</strong>\r\n                {\r\n                    slots.map((x) => <div>\r\n                        {BuildingJobIcon[b.type]} {this.props.city.beans.find((y) => y.key === b.job_slots[x])?.name}\r\n                    </div>)\r\n                }\r\n            </div>\r\n        }\r\n        {\r\n            !hasJobs ? null : <div>\r\n                This {keyToName[b.type]} can support {free.length} more jobs.\r\n                {\r\n                    b.upgraded ? null : <span><br/>Upgrade it to add 3 more job slots.</span>\r\n                }\r\n            </div>\r\n        }\r\n        {\r\n            b.upgraded || !hasJobs ? null : <div><div className=\"card-parent\">\r\n                    <button className=\"card button\" type=\"button\" onClick={() => this.props.upgrade(b)}>\r\n                        🛠️ Upgrade\r\n                        <CostSmall cost={this.props.difficulty.cost.hex.upgrade}></CostSmall>\r\n                    </button>\r\n                </div>\r\n                {this.renderDensityWarning(b.type)}\r\n            </div>\r\n        }\r\n        {this.renderBeamButton()}\r\n        </div>\r\n    }\r\n    renderDensityWarning(typ: BuildingTypes){\r\n        if (typ === 'house')\r\n        return <>\r\n            <div className=\"text-center\">\r\n            <small>\r\n            🐮 Parochial subjects may emit 👎<br/>when living in dense buildings\r\n            </small>\r\n        </div> \r\n        <div className=\"text-center\">\r\n            <small>\r\n            🍸 Cosmopolitan subjects may emit 👎<br/>when living in small buildings\r\n            </small>\r\n        </div>\r\n        </>;\r\n        else return <div>\r\n\r\n        </div>\r\n    }\r\n    renderJobs(){\r\n\r\n    }\r\n    render(){\r\n        const building: IBuilding|undefined = this.props.city.lookupBuilding(this.props.hex);\r\n        if (building){\r\n            return this.buildingPanel(building)\r\n        } else {\r\n            return this.emptyPanel();\r\n        }\r\n    }\r\n\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { BeliefSubjectIcon, BeliefSubjectText, BeliefVerbOption, BeliefVerbIcon, BeliefVerbText, BeliefSubject, BeliefVerb } from \"../simulation/Beliefs\";\r\n\r\nexport interface StringDropdownPS{\r\n    options: Array<string>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any,\r\n    titleCase?: boolean\r\n}\r\ninterface StringDropdownS{\r\n    key: any;\r\n}\r\n\r\nexport class StringDropdown extends React.Component<StringDropdownPS, StringDropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n        this.setState({key: e.target.value})\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    protected getTextForOption(data: string): string{\r\n        if (this.props.titleCase){\r\n            data = data[0].toUpperCase()+data.slice(1);\r\n        }\r\n        return data;\r\n    }\r\n    options(){\r\n        return this.props.options.map((str) => {\r\n            return <option value={str} key={str} title={this.getTitleForOption(str)}>\r\n                {this.getTextForOption(str)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: string): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\n\r\n\r\nexport class BeliefSubjectDropdown extends StringDropdown{\r\n    getTextForOption(data: string): string{\r\n        return BeliefSubjectIcon[data as BeliefSubject] + ' ' +BeliefSubjectText[data as BeliefSubject];\r\n    }\r\n}\r\n\r\nexport class SelfVerbDropdown extends StringDropdown{\r\n    getTextForOption(data: string): string{\r\n        return BeliefVerbIcon[data as BeliefVerb]+' '+BeliefVerbText['self'][data as BeliefVerb];\r\n    }\r\n}\r\nexport class OtherVerbDropdown extends StringDropdown{\r\n    getTextForOption(data: string): string{\r\n        return BeliefVerbIcon[data as BeliefVerb]+' '+BeliefVerbText['other'][data as BeliefVerb];\r\n    }\r\n}","import React, { ReactElement } from \"react\";\r\nimport './beliefs.css';\r\nimport { BeliefSubject, BeliefVerb, SecondaryBeliefData, TraitBelief, Belief, BeliefSubjectOption, BeliefVerbOption, BeliefAdjOption, BeliefsAll, BeliefSubjectAll, BeliefVerbAll, IBeliefData } from \"../simulation/Beliefs\";\r\n\r\nimport { BeliefSubjectDropdown, OtherVerbDropdown, SelfVerbDropdown, StringDropdown } from \"../widgets/StringDropdown\";\r\nimport { TraitIcon } from \"../World\";\r\nimport { IDifficulty } from \"../Game\";\r\nimport { ConfirmButton } from \"../widgets/ConfirmButton\";\r\nimport { RenderIdealBadges } from \"../widgets/UniversalWidgets\";\r\nimport { JsxElement } from \"typescript\";\r\n\r\nexport const BeliefWidget: React.FC<{\r\n    data: IBeliefData,\r\n    cost: number,\r\n    leftButton?: JsxElement,\r\n    titleView: ReactElement,\r\n    bottomView: ReactElement\r\n}> = (props) => {\r\n    return <div className=\"belief\">\r\n        <div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {props.data.icon}\r\n                </div>\r\n                {\r\n                    props.leftButton\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    {\r\n                        props.titleView\r\n                    }\r\n                    <span className=\"pull-r\">{props.cost}🧠</span>\r\n                </div>\r\n                {\r\n                props.data.description ? props.data.description.split(';').map((x) => \r\n                <small className=\"marg-b-6\"> {x}\r\n                </small>\r\n                ) : null\r\n                }\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                       props.bottomView\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport class EditBeliefInput extends React.Component<{\r\n    data: IBeliefData,\r\n    frozen?: boolean,\r\n    divergent?: boolean,\r\n    available: number,\r\n    cost: number,\r\n    wash: () => void\r\n}, {\r\n\r\n}>{\r\n\r\n    render(){\r\n        return <div className=\"belief\"><div className=\"horizontal badger\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {this.props.data.icon}\r\n                </div>\r\n                {\r\n                    this.props.frozen ? null : <ConfirmButton className=\"callout pad-4 marg-0\"\r\n                        confirmText={'-'+this.props.cost.toString()+'🧠?'} disabled={this.props.available < this.props.cost} onConfirm={this.props.wash}>\r\n                    🚿 <small>Wash</small>\r\n                    </ConfirmButton>\r\n                }\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">\r\n                    <strong title={this.props.data.description} className={this.props.divergent ? 'divergent marg-r-6': 'marg-r-6'}>\r\n                        {this.props.data.noun}\r\n                    </strong>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{this.props.data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        RenderIdealBadges(this.props.data.idealPro || [], 'pos')\r\n                    }\r\n                    {\r\n                        RenderIdealBadges(this.props.data.idealCon || [], 'neg')\r\n                    } \r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}\r\n\r\nconst SortedBeliefs = BeliefsAll.slice().sort((a, b) => a.localeCompare(b));\r\nexport class AddBeliefInput extends React.Component<{\r\n    available: number,\r\n    cost: number,\r\n    add: (b: TraitBelief) => void\r\n}, {\r\n    belief: TraitBelief,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            belief: 'Neuroticism'\r\n        }\r\n    }\r\n    render(){\r\n        const data = SecondaryBeliefData[this.state.belief]\r\n        return <div className=\"belief\"><div className=\"horizontal badger add\">\r\n            <div className=\"vertical\">\r\n                <div className=\"circular\">\r\n                    {data.icon}\r\n                </div>\r\n                <ConfirmButton className=\"callout grow-0 pad-4 marg-0\" disabled={this.props.available < this.props.cost} \r\n                    confirmText={'-'+this.props.cost.toString()+'🧠?'} onConfirm={() => this.props.add(this.state.belief)}>\r\n                    💉 <small>Implant</small>\r\n                </ConfirmButton>\r\n            </div>\r\n            <div className=\"vertical\">\r\n                <div className=\"text-center\">                    \r\n                    <StringDropdown titleCase={true}\r\n                    options={SortedBeliefs} \r\n                    value={this.state.belief}\r\n                    onChange={(a: string) => {\r\n                        console.log(a);\r\n                        this.setState({belief: a as TraitBelief})\r\n                    }}\r\n                    ></StringDropdown>\r\n                    <span className=\"pull-r\">{this.props.cost}🧠</span>\r\n                </div>\r\n                <small className=\"marg-b-6\">{data.description}</small>\r\n                <div className=\"grow-1 text-center\">\r\n                    {\r\n                        (data.idealPro || []).map((x) => <span className=\"pos badge align-mid\" key={x}>+{TraitIcon[x]}</span>)\r\n                    }\r\n                    {\r\n                        (data.idealCon || []).map((x) => <span className=\"neg badge align-mid\" key={x}>-{TraitIcon[x]}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div></div>\r\n    }\r\n}","import React from \"react\";\r\nimport { BeliefSubject, BeliefVerb, TraitBelief, SecondaryBeliefData, Belief, PrimaryBeliefData, NarrativeBeliefData, IsBeliefDivergent } from \"../simulation/Beliefs\";\r\nimport './modals.css';\r\nimport { TraitCommunity, TraitFaith, TraitIdeals, World } from \"../World\";\r\nimport { AddBeliefInput, EditBeliefInput } from \"./BeliefRow\";\r\nimport { Bean } from \"../simulation/Bean\";\r\n\r\nexport class BrainwashingContent extends React.Component<{\r\n    world: World,\r\n    beanID: number|null,\r\n    washCommunity: (bean: Bean, c: TraitCommunity) => void,\r\n    washMotive: (bean: Bean, m: TraitIdeals) => void,\r\n    washNarrative: (bean: Bean, n: TraitFaith) => void,\r\n    washBelief: (bean: Bean, b: TraitBelief) => void,\r\n    implantBelief: (bean: Bean, b: TraitBelief) => void\r\n}, {\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const bean = this.props.world.beans.find(x => x.key == this.props.beanID);\r\n        if (bean == null) return;\r\n        const dogmatic = bean.believesIn('Dogmatism');\r\n        return <div>\r\n            <div className=\"horizontal fancy-header\">\r\n                <div>\r\n                    BRAIN\r\n                </div>\r\n                <div className=\"emoji-3\">\r\n                💉🧠🚿\r\n                </div>\r\n                <div>\r\n                    WASH\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"text-center\">\r\n                    <strong>{bean.name}</strong> has {bean.discrete_sanity.toFixed(0)} sanity 🧠\r\n                </div>\r\n                {\r\n                    dogmatic ? <div className=\"text-center\">\r\n                        🐶 Dogmatic subjects cannot change their minds\r\n                    </div> : null\r\n                }\r\n                <div className=\"horizontal\">\r\n                    <div>\r\n                        <EditBeliefInput\r\n                            available={bean.discrete_sanity} frozen={dogmatic}\r\n                            wash={() => this.props.washCommunity(bean, bean.community)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                            data={PrimaryBeliefData[bean.community]}\r\n                        ></EditBeliefInput>\r\n                        <EditBeliefInput\r\n                            available={bean.discrete_sanity}  frozen={dogmatic}\r\n                            wash={() => this.props.washMotive(bean, bean.ideals)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                            data={PrimaryBeliefData[bean.ideals]}\r\n                        ></EditBeliefInput>\r\n                        <EditBeliefInput\r\n                            available={bean.discrete_sanity} frozen={dogmatic}\r\n                            wash={() => this.props.washNarrative(bean, bean.faith)} \r\n                            cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0}\r\n                            data={NarrativeBeliefData[bean.faith]}\r\n                        ></EditBeliefInput>\r\n                        {\r\n                            bean.beliefs.map((b) => <EditBeliefInput\r\n                            available={bean.discrete_sanity} frozen={dogmatic && b != 'Dogmatism'}\r\n                            divergent={IsBeliefDivergent(b, this.props.world.party.ideals, this.props.world.party.community)}\r\n                            wash={() => this.props.washBelief(bean, b)} \r\n                                cost={this.props.world.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0}\r\n                                data={SecondaryBeliefData[b]}\r\n                            >\r\n                            </EditBeliefInput>)\r\n                        }\r\n                        {\r\n                            dogmatic ? null : <AddBeliefInput\r\n                                available={bean.discrete_sanity}\r\n                                add={(b) => this.props.implantBelief(bean, b)} \r\n                                cost={this.props.world.alien.difficulty.cost.bean_brain.brainimplant_secondary.sanity || 0}\r\n                            ></AddBeliefInput>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { IEvent, PubSub } from \"../events/Events\";\r\n\r\nexport class TimelyEventToggle extends React.Component<{\r\n    event: PubSub<IEvent>,\r\n    eventIcon: string,\r\n    eventClass: string\r\n}, {\r\n eventCount: number,\r\n}>{\r\n    constructor(props: any){\r\n        super(props);\r\n        this.props.event.subscribe(this.onEvent);\r\n        this.state = {\r\n            eventCount: 0\r\n        };\r\n    }\r\n    onEvent = (e: IEvent) => {\r\n        this.setState({eventCount: this.state.eventCount+1});\r\n        window.setTimeout(() => {\r\n            this.setState({\r\n                eventCount: this.state.eventCount-1\r\n            });\r\n        }, 3000);\r\n    }\r\n    render(){\r\n        return <span>\r\n            {this.state.eventCount < 1 ? this.props.children : <span className={this.props.eventClass}>{this.props.eventIcon}</span>}\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { Player } from \"../simulation/Player\";\r\nimport { CostSmall } from \"../widgets/CostSmall\";\r\n\r\n export class MarketPanel extends React.Component<{\r\n     player: Player,\r\n     buyEnergy: (amount: number) => void,\r\n     buyBots: (amount: number) => void,\r\n     scrubHedons: () => void,\r\n }>{\r\n     render(){\r\n        return <div>\r\n            <div className=\"text-center\">\r\n                <strong>🌌 Galactic 😨 Emotion 💰 Market</strong>\r\n            </div>\r\n            <p>\r\n                <small>\r\n                    The premier exchange for ⚡️, 🤖,  and 👍!\r\n                </small>\r\n            </p>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" onClick={() => this.props.buyEnergy(1)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.energy)}>\r\n                    +1 ⚡️ Energy\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.energy} qty={1} ></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" onClick={() => this.props.buyEnergy(5)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.energy, 5)}>\r\n                    +5 ⚡️ Energy\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.energy} qty={5} ></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" onClick={() => this.props.buyBots(1)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.bots)}>\r\n                    +1 🤖 Bot\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots} qty={1} ></CostSmall>\r\n                </button>\r\n                <button className=\"card button\" onClick={() => this.props.buyBots(5)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.bots, 5)}>\r\n                    +5 🤖 Bots\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button className=\"card button\" onClick={() => this.props.scrubHedons()}\r\n                    disabled={this.props.player.hedons.amount >= 0 || !this.props.player.canAfford(this.props.player.difficulty.cost.market.scrubHedons)}>\r\n                    Remove 💢 Negative Hedons\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.scrubHedons} qty={1} ></CostSmall>\r\n                </button>\r\n                {/* <button className=\"card button\" onClick={() => this.props.buyBots(5)}\r\n                    disabled={!this.props.player.canAfford(this.props.player.difficulty.cost.market.resource.bots, 5)}>\r\n                    +5 🤖 Bots\r\n                    <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots} qty={5} ></CostSmall>\r\n                </button> */}\r\n            </div>\r\n            <div>\r\n                \r\n                <small>\r\n                    <i>Current 🧠 Traits for sale:</i>\r\n                </small>\r\n            </div>\r\n            <div className=\"short-scroll\">\r\n                <div className=\"card-parent\">\r\n                    <button className=\"card button\">\r\n                        🍸 Cosmopolitanism\r\n                        <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots}></CostSmall>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button className=\"card button\">\r\n                        👽 Paranoia\r\n                        <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots}></CostSmall>\r\n                    </button>\r\n                </div>\r\n                <div className=\"card-parent\">\r\n                    <button className=\"card button\">\r\n                        🤬 Antagonism\r\n                        <CostSmall cost={this.props.player.difficulty.cost.market.resource.bots}></CostSmall>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     }\r\n }","import { Bean } from \"../simulation/Bean\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { World, TraitJob } from \"../World\";\r\nimport { IBeliefData, SecondaryBeliefData, TraitBelief } from \"../simulation/Beliefs\";\r\nimport { BeliefWidget } from \"./BeliefRow\";\r\nimport { LiveList, LiveMap } from \"../events/Events\";\r\nimport { BeliefInventory } from \"../simulation/Player\";\r\n\r\ninterface TraitsP {\r\n  seenBeliefs: LiveMap<string, boolean>,\r\n  beliefInventory: LiveList<BeliefInventory>,\r\n}\r\nexport class TraitsReport extends React.Component<TraitsP, {\r\n  hoveredTrait?: TraitBelief\r\n}> {\r\n    constructor(props: TraitsP) {\r\n      super(props);\r\n      this.state = {\r\n      }\r\n    }\r\n    render() {\r\n      const beliefs: IBeliefData[] = [];\r\n      this.props.seenBeliefs.get.forEach((val, key) => {\r\n        if (SecondaryBeliefData[key as TraitBelief] != null){\r\n          beliefs.push(SecondaryBeliefData[key as TraitBelief]);\r\n        }\r\n      });\r\n      beliefs.sort((a, b) => a.noun.localeCompare(b.noun));\r\n      return (\r\n        <div>\r\n          <div className=\"pad-4p\">\r\n            <h2>Subject 🧠 Traits</h2>\r\n          </div>\r\n          <div className=\"col-2-30-60\">\r\n            <div>\r\n              <strong>Trait Inventory</strong> <br/>\r\n              {\r\n                this.props.beliefInventory.get.length < 1 ? <div>\r\n                  No Traits! <br/>\r\n                  😵 Brainwash your subjects  <br/>\r\n                  or buy from the 🛍️ Market\r\n                  </div> : <div>\r\n                    {\r\n                      this.props.beliefInventory.get.map((x) => <div key={x.trait}>\r\n                        <div>\r\n                          <strong>\r\n                            {SecondaryBeliefData[x.trait].icon} {SecondaryBeliefData[x.trait].noun}\r\n                          </strong>\r\n                        </div>\r\n                        <div>\r\n                          This can be implanted {x.charges} more times\r\n                        </div>\r\n                      </div>)\r\n                    }\r\n                  </div>\r\n              }\r\n            </div>\r\n            <div>\r\n              <strong>Discovered Traits</strong> <br/>\r\n              {\r\n                beliefs.length < 1 ? <div>\r\n                  No Traits! <br/>\r\n                  🛰️ Scan some of your subjects.\r\n                </div> : beliefs.map((x) => <BeliefWidget key={x.noun} data={x} cost={0}\r\n                titleView={<strong>{x.noun}</strong>}\r\n                bottomView={<span></span>}\r\n              ></BeliefWidget>)\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from 'react';\r\n\r\nexport const GreetingPanel: React.FC = (props) => {\r\n    return <div>\r\n        <div className=\"col-2\">\r\n            <div>\r\n                <h3>Welcome to the</h3>\r\n                <h2>👽 Alien 🌍 Utopia 🔬 Laboratory</h2>\r\n                <div>\r\n                    Thank you for joining the <select><option>Human</option></select> Cultivation Division of the <strong>🌌 Galactic Xenosensation Federation!</strong> Your interdimensional petri dish is ready for farming.\r\n                </div>\r\n                <p>\r\n                    As a <select><option>Human Emotion Farmer</option></select>, you are required to execute the following duties:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        Construct <strong>🏠 Buildings</strong> for your <select><option>Human</option></select> subjects.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🛸 Beam In</strong> <select><option>Human</option></select> subjects for cultivation.\r\n                    </li>\r\n                    <li>\r\n                        Harvest your subject's positive <strong>👍 Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Sell the Hedons on the <br/><strong>🌌 Galactic 😨 Emotion 💰 Market</strong>.\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p>\r\n                    The GXF's records indicate <select><option>Humans</option></select> are a<br/><u>mentally malleable</u> and <u>physically fragile</u> species. Try the following cultivation methods:\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <strong>🛰️ Scan</strong> your subject's primitive minds for information on what pleases them.\r\n                    </li>\r\n                    <li>\r\n                        <strong>🚿 Brainwash</strong> subjects to change their <strong>🧠&nbsp;Traits</strong>. Try to add Traits that emit more <strong>👍&nbsp;Hedons</strong>.\r\n                    </li>\r\n                    <li>\r\n                        Avoid letting your subjects die or endure pain; this makes <strong>👎&nbsp;Antihedons</strong> which are less profitable.\r\n                    </li>\r\n                    <li>\r\n                        Use your knowledge of Traits to modify the farm's <strong>🗳️&nbsp;Government</strong> to maximize Hedon generation.\r\n                    </li>\r\n                    <li>\r\n                        Use the GXF's <strong>🧪 Research Lab</strong> to upgrade your farm, when stocked with <strong>👾 Abducted</strong> subjects.\r\n                    </li>\r\n                </ul>\r\n                <h3>\r\n                    🌌 Galactic Xenosensation Federation <br/>\r\n                    <div className=\"text-right\">\r\n                        <small>\r\n                        {/* <i>THE market leader in corporeal sensations.</i> */}\r\n                        <i>1 trillion sensations. 100% organic. 100% gourmet.</i>\r\n                        </small>\r\n                    </div>\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport './chrome/chrome.css';\r\nimport { World, TraitGood, Trait, TraitCommunity, TraitIdeals, TraitFaith } from './World';\r\nimport { GenerateWorld, GeneratePartyHQ, GenerateBuilding, GenerateBean, GetRandom } from './WorldGen';\r\nimport { Modal } from './widgets/Modal';\r\nimport { OverviewPanel } from './right-panel/OverviewPanel';\r\nimport { Bean } from './simulation/Bean';\r\nimport { WorldTile } from './petri-ui/WorldTile';\r\nimport { EconomyReport } from './modal-content/EconomyReport';\r\nimport { CharityPanel } from './modal-content/CharityPanel';\r\nimport { PoliticalEffect, Policy, CityPartyHQ, IPolicy } from './simulation/Politics';\r\nimport { EventsPanel } from './right-panel/Events';\r\nimport { BeanPanel } from './right-panel/BeanPanel';\r\nimport { FoundParty, FoundPartyS } from './modal-content/FoundParty';\r\nimport { PartyOverview } from './modal-content/PartyOverview';\r\nimport { BubbleNumberText, BubbleSeenTraitsText } from './widgets/BubbleText';\r\nimport { Season, Now, Hour } from './simulation/Time';\r\nimport { SocialGraph } from './widgets/SocialGraph';\r\nimport { CapsuleLabel } from './widgets/CapsuleLabel';\r\n\r\n\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport { GoalsPanel } from './right-panel/Goals';\r\nimport { CampaignsPanel } from './modal-content/Campaigns';\r\nimport { GovernmentPanel } from './modal-content/Gov';\r\nimport { ResearchPanel } from './modal-content/Research';\r\nimport { StopPlayFastButtons } from './widgets/StopPlayFast';\r\nimport { BuildingTypes, HexPoint, IBuilding, Point, transformPoint } from './simulation/Geography';\r\nimport { HexPanel } from './right-panel/HexPanel';\r\nimport { City, UFO } from './simulation/City';\r\nimport { BrainwashingContent } from './modal-content/Brainwashing';\r\nimport { SecondaryBeliefData, TraitBelief } from './simulation/Beliefs';\r\nimport { TimelyEventToggle } from './widgets/TimelyEventToggle';\r\nimport { LawAxis } from './simulation/Government';\r\nimport { Tech } from './simulation/Player';\r\nimport { IEvent } from './events/Events';\r\nimport { WorldSound } from './WorldSound';\r\nimport { MarketPanel } from './right-panel/MarketPanel';\r\nimport { TraitsReport } from './modal-content/TraitsReport';\r\nimport { GreetingPanel } from './modal-content/GreetingPanel';\r\n\r\nexport const keyToName: { [key in Trait | BuildingTypes]: string } = {\r\n  state: 'Collectivist', ego: 'Independent',\r\n  trad: 'Elitist', prog: 'Progressive',\r\n  circle: 'Brunette', square: 'Blonde', triangle: 'Redhead',\r\n  rocket: 'Futuristic', dragon: 'Mythical', music: 'Dramatic', noFaith: 'Nihilistic',\r\n  hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\r\n  podless: 'Homeless', crowded: 'Crowded', homeowner: 'Homeowner',\r\n  sick: 'Sick', bruised: 'Bruised', fresh: 'Robust',\r\n  sane: 'Sane', confused: 'Confused', mad: 'Mad',\r\n  house: 'House', hospital: 'Hospital', farm: 'Farm', theater: 'Theater', church: 'Church', courthouse: 'Courthouse', park: 'Park', nature: 'Natural Scenery'\r\n};\r\n\r\nexport type ModalView = 'greeting' | 'policy' | 'economy' | 'campaign' | 'party_creation' | 'party' | 'polisci' | 'brainwash' | 'traits';\r\ninterface AppPs {\r\n}\r\ninterface AppState {\r\n  world: World,\r\n  activeCityID: number | null;\r\n  activeBeanID: number | null;\r\n  activeHex: HexPoint | null;\r\n  activeModal: ModalView | null;\r\n  activeMain: 'geo' | 'network';\r\n  activeRightPanel: 'events' | 'overview' | 'goals' | 'market';\r\n  timeScale: number;\r\n  spotlightEvent: IEvent | undefined;\r\n  cursor?: Point;\r\n}\r\nexport const SfxContext = React.createContext<WorldSound|undefined>(undefined);\r\n\r\nconst LogicTickMS = 2000;\r\nconst SpotlightDurationTimeMS = 5000;\r\nclass App extends React.Component<AppPs, AppState>{\r\n  constructor(props: AppPs) {\r\n    super(props);\r\n    this.state = {\r\n      world: GenerateWorld(),\r\n      activeCityID: null,\r\n      activeBeanID: null,\r\n      activeHex: null,\r\n      activeMain: 'geo',\r\n      activeModal: 'greeting',\r\n      activeRightPanel: 'overview',\r\n      timeScale: 0,\r\n      spotlightEvent: undefined\r\n    };\r\n    this.state.world.calculateComputedState();\r\n    this.state.world.bus.death.subscribe(this.onDeath);\r\n  }\r\n  private previousTimeMS: DOMHighResTimeStamp = 0;\r\n  private logicTickAccumulatorMS: number = 0;\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.keyupHandler, false);\r\n    window.requestAnimationFrame((time: DOMHighResTimeStamp) => {\r\n      this.previousTimeMS = time;\r\n      window.requestAnimationFrame(this.tick);\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.keyupHandler);\r\n  }\r\n  tick = (timeMS: DOMHighResTimeStamp) => {\r\n    // Compute the delta-time against the previous time\r\n    const deltaTimeMS = (timeMS - this.previousTimeMS) * this.state.timeScale;\r\n\r\n    // Update the previous time\r\n    this.previousTimeMS = timeMS;\r\n    if (deltaTimeMS > 0) {\r\n      this.logicTickAccumulatorMS += deltaTimeMS;\r\n      this.state.world.simulate_beans(deltaTimeMS);\r\n      this.state.world.simulate_pickups(deltaTimeMS);\r\n\r\n      if (this.logicTickAccumulatorMS > LogicTickMS) {\r\n        this.state.world.simulate_world();\r\n        this.setState({ world: this.state.world });\r\n        this.logicTickAccumulatorMS = 0;\r\n      }\r\n    }\r\n    window.requestAnimationFrame(this.tick);\r\n  }\r\n  keyupHandler = (event: KeyboardEvent) => {\r\n    if (event.key === ' ') {\r\n      if (this.state.timeScale > 0) {\r\n        this.setState({ timeScale: 0 });\r\n      } else {\r\n        this.setState({ timeScale: 1 });\r\n      }\r\n    } else if (event.key === 'Q' && event.shiftKey) {\r\n      this.build(this.state.world.cities[0], { q: 1, r: 1 }, 'farm');\r\n      this.build(this.state.world.cities[0], { q: 1, r: 0 }, 'house');\r\n      this.build(this.state.world.cities[0], { q: 0, r: 1 }, 'hospital');\r\n      this.beam(this.state.world.cities[0], { q: 0, r: 0 });\r\n      this.beam(this.state.world.cities[0], { q: 1, r: 0 });\r\n      this.beam(this.state.world.cities[0], { q: 0, r: 1 });\r\n      this.beam(this.state.world.cities[0], { q: 1, r: 1 });\r\n    }\r\n  }\r\n  foundParty = (state: FoundPartyS) => {\r\n    this.state.world.party.name = state.name;\r\n    this.state.world.party.slogan = state.slogan;\r\n    this.state.world.cities[0].name = state.name;\r\n    if (state.community)\r\n      this.state.world.party.community = state.community;\r\n    if (state.ideal)\r\n      this.state.world.party.ideals = state.ideal;\r\n    const city = this.state.world.cities.find((x) => x.key == state.cityKey);\r\n    if (city) {\r\n      GeneratePartyHQ(city, this.state.world.party);\r\n    }\r\n    this.state.world.calculateComputedState();\r\n    this.setState({\r\n      world: this.state.world,\r\n      activeModal: null\r\n    });\r\n  }\r\n  get difficulty() {\r\n    return this.state.world.alien.difficulty;\r\n  }\r\n  build = (city: City, where: HexPoint, what: BuildingTypes) => {\r\n    const cost = this.difficulty.cost.emptyHex.build[what];\r\n    if (this.state.world.alien.canAfford(cost)) {\r\n      this.state.world.alien.purchase(cost);\r\n      GenerateBuilding(city, what, where);\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  upgrade = (city: City, what: IBuilding) => {\r\n    const cost = this.difficulty.cost.hex.upgrade;\r\n    if (this.state.world.alien.tryPurchase(cost)) {\r\n      what.upgraded = true;\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  beam = (city: City, where: HexPoint) => {\r\n    const cost = this.difficulty.cost.hex.beam;\r\n    if (this.state.world.alien.canAfford(cost)) {\r\n      this.state.world.alien.purchase(cost);\r\n      const newUFO = new UFO(city.ufos.length, where, 'beam-in');\r\n      city.ufos.push(newUFO);\r\n      window.setTimeout(() => {\r\n        city.historicalBeans.push(GenerateBean(city, city.historicalBeans.length, where));\r\n        this.setState({ world: this.state.world });\r\n      }, 3000);\r\n\r\n      this.setState({ world: this.state.world }, () => {\r\n        this.removeUFO(city, newUFO.key);\r\n      });\r\n    }\r\n  }\r\n  buyBots = (amount: number) => {\r\n    const cost = this.difficulty.cost.market.resource.bots;\r\n    if (this.state.world.alien.tryPurchase(cost, amount)) {\r\n      this.state.world.alien.bots.amount += amount;\r\n      this.state.world.alien.bots.change.publish({change:amount});\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  buyEnergy = (amount: number) => {\r\n    const cost = this.difficulty.cost.market.resource.bots;\r\n    if (this.state.world.alien.tryPurchase(cost, amount)) {\r\n      this.state.world.alien.energy.amount += amount;\r\n      this.state.world.alien.energy.change.publish({change:amount});\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  scrubHedons = () => {\r\n    const cost = this.difficulty.cost.market.scrubHedons;\r\n    if (this.state.world.alien.tryPurchase(cost)) {\r\n      const old = this.state.world.alien.hedons.amount;\r\n      this.state.world.alien.hedons.amount = 0;\r\n      this.state.world.alien.hedons.change.publish({change: -old});\r\n    }\r\n\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  removeUFO(city: City, key: number) {\r\n    window.setTimeout(() => {\r\n      const myUFOI = city.ufos.findIndex((x) => x.key === key);\r\n      if (myUFOI > -1)\r\n        city.ufos.splice(myUFOI, 1);\r\n    }, 7000);\r\n  }\r\n  foundCharity = (good: TraitGood, name: string, budget: number) => {\r\n    this.state.world.addCharity(good, name, budget);\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  vaporize = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.vaporize)) {\r\n      if (bean.city) {\r\n        bean.die('vaporization');\r\n      }\r\n      this.setState({ world: this.state.world });\r\n    }\r\n  }\r\n  abduct = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.abduct)) {\r\n      bean.abduct(this.state.world.alien);\r\n      this.setState({ world: this.state.world });\r\n    }\r\n  }\r\n  releaseBean = () => {\r\n    if (this.state.world.alien.abductedBeans.length > 0) {\r\n      const lucky_bean = this.state.world.alien.abductedBeans.shift();\r\n      if (lucky_bean instanceof Bean) {\r\n        lucky_bean.lifecycle = 'alive';\r\n      } else {\r\n        window.alert(\"releasing data beans is unimplemented\");\r\n      }\r\n    }\r\n  }\r\n  setResearch = (t: Tech) => {\r\n    this.state.world.alien.currentlyResearchingTech = t;\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  scan = (bean: Bean) => {\r\n    if (this.state.world.alien.tryPurchase(this.state.world.alien.difficulty.cost.bean.scan)) {\r\n      this.state.world.alien.scanned_bean[bean.key] = true;\r\n      bean.beliefs.forEach((b) => {\r\n        if (!this.state.world.alien.seenBeliefs.get.has(b)){\r\n          this.state.world.alien.seenBeliefs.add(b, true);\r\n        }\r\n      })\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  washCommunity = (bean: Bean, a: TraitCommunity) => {\r\n    if (bean.tryPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal)) {\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n      if (bean.community === 'ego')\r\n        bean.community = 'state';\r\n      else bean.community = 'ego';\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  washMotive = (bean: Bean, a: TraitIdeals) => {\r\n    if (bean.tryPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal)) {\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n      if (bean.ideals === 'prog')\r\n        bean.ideals = 'trad';\r\n      else bean.ideals = 'prog';\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  washNarrative = (bean: Bean, a: TraitFaith) => {\r\n    if (bean.tryPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal)) {\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_ideal.sanity || 0);\r\n      const oldFaith = bean.faith;\r\n      while (bean.faith === oldFaith)\r\n        bean.faith = GetRandom(['rocket', 'dragon', 'music', 'noFaith']);\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  washBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (bean.tryPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainwash_secondary)) {\r\n      bean.beliefs.splice(\r\n        bean.beliefs.indexOf(a), 1\r\n      );\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainwash_secondary.sanity || 0);\r\n      this.state.world.alien.beliefInventory.push({trait: a, charges: 3});\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  implantBelief = (bean: Bean, a: TraitBelief) => {\r\n    if (bean.tryPurchase(this.state.world.alien.difficulty.cost.bean_brain.brainimplant_secondary)) {\r\n      bean.beliefs.push(a);\r\n      bean.loseSanity(this.state.world.alien.difficulty.cost.bean_brain.brainimplant_secondary.sanity || 0);\r\n      this.setState({ world: this.state.world });\r\n      return true;\r\n    }\r\n  }\r\n  setPolicy = (axis: LawAxis, policy: IPolicy) => {\r\n    this.state.world.party.platform[axis] = policy;\r\n    this.state.world.calculateComputedState();\r\n    this.setState({ world: this.state.world });\r\n  }\r\n  onDeath = (event: IEvent) => {\r\n    this.startSpotlight(event);\r\n  }\r\n  private timescaleBeforeSpotlight: number = 1;\r\n  startSpotlight(event: IEvent) {\r\n    this.timescaleBeforeSpotlight = this.state.timeScale;\r\n    this.setState({\r\n      spotlightEvent: event,\r\n      timeScale: 0\r\n    }, () => {\r\n      setTimeout(() => this.endSpotlight(), SpotlightDurationTimeMS);\r\n    });\r\n  }\r\n  endSpotlight() {\r\n    this.setState({\r\n      timeScale: this.timescaleBeforeSpotlight,\r\n      spotlightEvent: undefined\r\n    });\r\n  }\r\n  getPanel() {\r\n    switch (this.state.activeRightPanel) {\r\n      case 'overview':\r\n        if (this.state.activeCityID == null) {\r\n          return <OverviewPanel beans={this.state.world.beans} utopia={this.state.world.party} clearCity={() => this.setState({ activeCityID: null })}></OverviewPanel>\r\n        } else {\r\n          const city = this.state.world.cities.find((x) => x.key == this.state.activeCityID);\r\n          if (city) {\r\n\r\n            if (this.state.activeHex != null) {\r\n              return <HexPanel city={city} hex={this.state.activeHex} difficulty={this.state.world.alien.difficulty}\r\n                clearHex={() => this.setState({ activeHex: null })}\r\n                beam={(where) => this.beam(city, where)}\r\n                upgrade={(what) => this.upgrade(city, what)}\r\n                build={(where, what) => { this.build(city, where, what) }}></HexPanel>\r\n            }\r\n            else if (this.state.activeBeanID != null) {\r\n              const bean = city.beans.find((y) => y.key == this.state.activeBeanID);\r\n              if (bean)\r\n                return <BeanPanel bean={bean} city={city} alien={this.state.world.alien}\r\n                  economy={this.state.world.economy} party={this.state.world.party} bus={this.state.world.bus} law={this.state.world.law}\r\n                  scan={this.scan} vaporize={this.vaporize}\r\n                  brainwash={() => this.setState({ activeModal: 'brainwash' })}\r\n                  abduct={this.abduct}\r\n                  gift={() => this.setState({ activeModal: 'brainwash' })}\r\n                  clearCity={() => this.setState({ activeCityID: null, activeBeanID: null })}></BeanPanel>\r\n            }\r\n\r\n            return <OverviewPanel beans={city?.beans} utopia={this.state.world.party} city={city} clearCity={() => this.setState({ activeCityID: null })}></OverviewPanel>\r\n          }\r\n          else\r\n            return <div>\r\n            </div>\r\n        }\r\n      case 'goals':\r\n        return <GoalsPanel player={this.state.world.alien} progress={this.state.world.alien}></GoalsPanel>\r\n      case 'events':\r\n        return <EventsPanel events={this.state.world.bus.buffer} selectBean={(beankey?: number) => {\r\n          if (beankey)\r\n            this.setState({ activeCityID: this.state.world.cities[0].key, activeBeanID: beankey, activeHex: null, activeRightPanel: 'overview' })\r\n        }}></EventsPanel>\r\n      case 'market': \r\n        return <MarketPanel buyEnergy={this.buyEnergy} buyBots={this.buyBots} scrubHedons={this.scrubHedons}\r\n         player={this.state.world.alien}></MarketPanel>\r\n    }\r\n  }\r\n  renderGeo() {\r\n    const COL = this.state.world.economy.getCostOfLiving();\r\n    return this.state.world.cities.map((t) => {\r\n      return (\r\n        <WorldTile tile={t} city={t} costOfLiving={COL} key={t.key} spotlightEvent={this.state.spotlightEvent} activeBeanID={this.state.activeBeanID}\r\n          onClick={() => this.setState({ activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: null })}\r\n          onBeanClick={(b) => this.setState({ activeCityID: t.key, activeRightPanel: 'overview', activeHex: null, activeBeanID: b.key })}\r\n          onHexClick={(hex) => { this.setState({ activeCityID: t.key, activeHex: hex, activeBeanID: null, activeRightPanel: 'overview' }) }}\r\n        ></WorldTile>\r\n      )\r\n    });\r\n  }\r\n  renderNetwork() {\r\n    return <div>\r\n      <div className=\"horizontal max-w-500 m-t-2em\">\r\n        <button type=\"button\">\r\n          😎 Influence\r\n        </button>\r\n        <button type=\"button\">\r\n          🚩 Party Preference\r\n        </button>\r\n        <button type=\"button\">\r\n          📈 Demographics\r\n        </button>\r\n      </div>\r\n      <SocialGraph costOfLiving={this.state.world.economy.getCostOfLiving()}\r\n        beans={this.state.world.beans}\r\n        onClick={(b) => this.setState({ activeCityID: b.cityKey, activeRightPanel: 'overview', activeBeanID: b.key })} ></SocialGraph>\r\n    </div>\r\n  }\r\n  main() {\r\n    switch (this.state.activeMain) {\r\n      case 'network':\r\n        return this.renderNetwork();\r\n      default:\r\n        return this.renderGeo();\r\n    }\r\n  }\r\n  render() {\r\n    const season = Season[this.state.world.date.season];\r\n    return (\r\n      <div className=\"canvas\"><SfxContext.Provider value={this.state.world.sfx}>\r\n        <TransformWrapper\r\n          defaultScale={1}\r\n          wheel={{ step: 48 }}>\r\n          <TransformComponent>\r\n            <div className=\"world\">\r\n              {this.main()}\r\n            </div>\r\n          </TransformComponent>\r\n        </TransformWrapper>\r\n        <div className=\"overlay\">\r\n          <Modal show={this.state.activeModal == 'greeting'} onClick={() => this.setState({ activeModal: null })}>\r\n            <GreetingPanel></GreetingPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'party_creation'} onClick={() => this.setState({ activeModal: null })} hideCloseButton={true}>\r\n            <FoundParty cities={this.state.world.cities} onFound={this.foundParty}></FoundParty>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'party'} onClick={() => this.setState({ activeModal: null })}>\r\n            <PartyOverview world={this.state.world} setPolicy={this.setPolicy}></PartyOverview>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'polisci'} onClick={() => this.setState({ activeModal: null })}>\r\n            <ResearchPanel release={this.releaseBean} setResearch={this.setResearch} player={this.state.world.alien}></ResearchPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'policy'} onClick={() => this.setState({ activeModal: null })}>\r\n            <GovernmentPanel world={this.state.world}></GovernmentPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'campaign'} onClick={() => this.setState({ activeModal: null })}>\r\n            <CampaignsPanel></CampaignsPanel>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({ activeModal: null })}>\r\n            {(this.state.activeModal == 'economy' ? <EconomyReport world={this.state.world}></EconomyReport> : '')}\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'traits'} onClick={() => this.setState({ activeModal: null })}>\r\n            <TraitsReport seenBeliefs={this.state.world.alien.seenBeliefs} beliefInventory={this.state.world.alien.beliefInventory}\r\n            ></TraitsReport>\r\n          </Modal>\r\n          <Modal show={this.state.activeModal == 'brainwash'} onClick={() => this.setState({ activeModal: null })}>\r\n            {(this.state.activeModal == 'brainwash' ? <BrainwashingContent\r\n              world={this.state.world} beanID={this.state.activeBeanID}\r\n              washCommunity={this.washCommunity}\r\n              washMotive={this.washMotive}\r\n              washNarrative={this.washNarrative}\r\n              washBelief={this.washBelief}\r\n              implantBelief={this.implantBelief}>\r\n            </BrainwashingContent> : '')}\r\n          </Modal>\r\n          <div className=\"left\">\r\n            <div className=\"top\">\r\n              <span>\r\n                👽 Alien 🌍 Utopia 🔬 Lab\r\n            </span>\r\n              <span>\r\n                &nbsp;\r\n              Year {this.state.world.date.year},\r\n              &nbsp;\r\n              {season} {this.state.world.date.day} {this.renderHour()}\r\n              </span>\r\n              <span>\r\n                6 mo 5 days til Grade\r\n            </span>\r\n              <button type=\"button\" onClick={() => this.setState({ activeMain: 'network' })}>🌐</button>\r\n              <button type=\"button\" onClick={() => this.setState({ activeMain: 'geo' })}>🌎</button>\r\n\r\n              <StopPlayFastButtons timeScale={this.state.timeScale} setTimeScale={(n: number) => { this.setState({ timeScale: n }) }}></StopPlayFastButtons>\r\n            </div>\r\n            <div className=\"bottom\">\r\n              <BubbleNumberText changeEvent={this.state.world.alien.energy.change} icon=\"⚡️\">\r\n                <CapsuleLabel icon=\"⚡️\" label=\"Energy\">\r\n                  {this.state.world.alien.energy.amount.toFixed(1)}\r\n                </CapsuleLabel>\r\n              </BubbleNumberText>\r\n              <BubbleNumberText changeEvent={this.state.world.alien.bots.change} icon=\"🤖\">\r\n                <CapsuleLabel icon=\"🤖\" label=\"Bots\">\r\n                  {this.state.world.alien.bots.amount.toFixed(1)}\r\n                </CapsuleLabel>\r\n              </BubbleNumberText>\r\n              <BubbleNumberText changeEvent={this.state.world.alien.hedons.change} icon=\"👍\">\r\n                <CapsuleLabel icon=\"👍\" label=\"Hedons\">\r\n                  {this.state.world.alien.hedons.amount.toFixed(0)}\r\n                </CapsuleLabel>\r\n              </BubbleNumberText>\r\n              {/* <BubbleText changeEvent={this.state.world.alien.tortrons.change} icon=\"💔\">\r\n                <CapsuleLabel icon=\"💔\" label=\"Tortrons\">\r\n                  {this.state.world.alien.tortrons.amount.toFixed(0)}\r\n                </CapsuleLabel>\r\n              </BubbleText> */}\r\n              <span>\r\n                <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'economy' })}>📊 State of the Utopia</button>\r\n                <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'party' })}>🗳️ Gov</button>\r\n                <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'polisci' })}>🧪 Research</button>\r\n                \r\n                <BubbleSeenTraitsText changeEvent={this.state.world.alien.seenBeliefs.onAdd} icon=\"🧠\">\r\n                  <button type=\"button\" className=\"callout\" onClick={() => this.setState({ activeModal: 'traits' })}>🧠 Traits</button>\r\n                </BubbleSeenTraitsText>\r\n                {/* <button type=\"button\" onClick={() => this.setState({activeModal:'campaign'})}>Campaigns</button> */}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"full-width-tabs\">\r\n              <button onClick={() => this.setState({ activeRightPanel: 'overview' })}>📈 Info</button>\r\n              <button onClick={() => this.setState({ activeRightPanel: 'market' })}>🛍️ Market</button>\r\n              <button onClick={() => this.setState({ activeRightPanel: 'events' })}>\r\n                <TimelyEventToggle event={this.state.world.bus.speechcrime} eventIcon=\"🚨\" eventClass=\"police-siren\">📣</TimelyEventToggle> Events\r\n              </button>\r\n              <button onClick={() => this.setState({ activeRightPanel: 'goals' })}>🏆 Goals</button>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n              {this.getPanel()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </SfxContext.Provider></div>\r\n    )\r\n  }\r\n  renderHour(): string {\r\n    switch (this.state.world.date.hour) {\r\n      default: return '☀️';\r\n      case Hour.Evening: return '🌇';\r\n      case Hour.Morning: return '🌄';\r\n      case Hour.Midnight: return '🌙';\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}