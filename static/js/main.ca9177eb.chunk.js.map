{"version":3,"sources":["simulation/Time.tsx","Bean.tsx","WorldGen.tsx","simulation/Institutions.tsx","Economy.tsx","World.tsx","Politics.tsx","events/Events.tsx","simulation/Government.tsx","Modal.tsx","widgets/NeedReadout.tsx","simulation/City.tsx","OverviewPanel.tsx","AnimatedBean.tsx","WorldTile.tsx","EconomyReport.tsx","right-panel/Events.tsx","BeanPanel.tsx","widgets/Dropdown.tsx","modal-content/FoundParty.tsx","widgets/PolicyDropdown.tsx","modal-content/PartyOverview.tsx","App.tsx","widgets/BubbleText.tsx","widgets/SocialGraph.tsx","serviceWorker.js","index.js"],"names":["Season","Now","world","year","date","season","withinLastYear","current","last","Bean","key","cityKey","alive","dob","name","city","ethnicity","GetRandom","lastApproval","discrete_food","shelter","discrete_health","community","ideals","job","faith","cash","partyLoyalty","lastHappiness","lastSentiment","lastPartySentiment","seasonSinceLastSale","seasonSinceLastRent","lastApprovalDate","lastInsultDate","fairGoodPrice","econ","homeCity","law","mods","TraitToModifier","this","food","health","majorityEthnicity","push","reason","mod","MaslowScore","Deficient","getCostOfLiving","party","result","environment","differingPolicies","forEach","policy","GetHappiness","getHappinessModifiers","sent","getSentimentModifiers","myGood","JobToGood","getFairGoodPrice","traits","policies","multiplier","fx","mag","costOfLiving","bad","idea","canBaby","Math","random","Boolean","tryFindRandomJob","newJob","mostInDemandJob","produceAndPrice","economy","buyFood","maybeDie","groceries","tryTransact","bought","buyHousing","housing","buyMeds","min","meds","threshold","breedBean","icon","message","isInCrisis","direct","canDonate","baseChance","chance","chanceToDonate","willDonate","donation","cause","die","onCitizenDie","Charity","institutionKey","seasonalBudget","good","parentInstitution","beansHelped","inventory","addCharity","AllGoods","Economy","market","OrderBook","charity","unfulfilledSeasonalDemand","medicine","fun","totalSeasonalDemand","totalSeasonalSupply","onBeanDie","deadBean","g","existing","getBeansListings","lucky","getRandomCitizen","sellerCityKey","sellerBeanKey","seller","buyer","listing","getLowestPriceListing","price","transact","charityTicket","quantity","addNewListing","sort","getOrgsListings","addNewOrgListing","reduce","max","GoodToJob","supply","demand","listings","fullListings","filter","l","length","numberOfSamePriceListings","lowPrice","i","floor","b","find","x","sellerOrganizationKey","splice","bean","org","a","BaseParty","playerKey","organizations","slogan","availablePolicies","proposedPolicy","availableCampaigns","activeCampaigns","politicalCapital","materialCapital","labor","activeHQs","platform","seasonalIncome","seasonalActions","Object","keys","ax","policyTree","map","CityPartyHQ","NoPolicy","axis","Policies","hint","PolicyTree","dict","pol","PolicyByKey","p","ChangePubSub","callbacks","args","c","callback","indexOf","EventBus","physicalCapital","Government","values","World","cities","institutions","Spring","electionIn","yearsEvents","bus","calculate","beans","calculateBeliefs","inflate","resetYearlyCounters","resetSeasonalDemand","fundOrganizations","shuffle","work","e","eat","weather","age","maybeBaby","getTaxesAndDonations","maybeOverconsume","calculateComputedState","percent","sum","o","yearlyInflationDollars","round","richest","obj","winner","yearsPartyDonations","budget","list","concat","historicalBeans","institute","array","counter","index","temp","City","url","type","houses","partyHQ","doOnCitizenDie","shuffled","parent","GenerateBean","maybeDonate","count","circle","square","triangle","TraitCommunityIcon","TraitIdealsIcon","hapMod","Sufficient","Abundant","GetRandomIndex","randomBuffer","Uint32Array","window","crypto","getRandomValues","randomNumber","ceil","GetRandomNumber","choices","console","log","GenerateWorld","wel_food","wel_house","wel_health","econ_ex","econ_labor","econ_sub","cul_rel","cul_theo","cul_ed","law_vote","law_bribe","law_imm","tax_basic","tax_second","all","GenerateCity","next","previousCityCount","newCity","houseCount","cityPopulation","left","top","previousBeanCount","newBean","base","StartingCash","Modal","props","state","show","hideCloseButton","className","onClick","closeButtonText","children","getButton","React","Component","NeedReadout","dire","need","dire_style","width","full","abundant","full_style","header","style","keyToName","reportIdeals","_report","reportCommunity","defWin","beanPropGet","avg","stash","value","trait","OverviewPanel","toFixed","clearCity","avg_happy","avg_cash","avg_approval","report","hq","AxisReadout","maj","AnimatedBean","timerID","delaySeedSec","waitSeedSec","paused","startWander","setState","setTimeout","stopWander","clearInterval","getIdea","classes","sitStill","title","animationDelay","stopPropagation","getFace","WorldTile","tile","activeTileID","onBeanClick","deaths","h","src","alt","median","half","EconomyReport","food_median","health_median","wealth_total","y","wealth_avg","wealth_median","wealth_dire","wealth_marker","wealthy","wealthy_percentage","wealthy_ownership","s","jobs","unemployed","jobless","reducer","farmer","builder","doc","EventsPanel","events","BeanPanel","solicit","faceOverride","_resetFace","insult","support","undefined","chanceText","actionLimit","colSpan","happyTable","disabled","canSupport","canInsult","Dropdown","onChange","target","selected","hidden","options","getTitleForOption","getTextForOption","required","data","CityDropdown","FoundParty","onName","onSlogan","onCity","ideal","members","goal","val","onBigFourChange","checked","onCommunity","currentTarget","onIdeal","onFound","PolicyDropdown","PartyOverview","policyKey","setPolicy","hq_names","magnitude","magToTextSw","compass","rowSpan","BubbleText","ev","id","Date","positive","change","bubbles","t","changeEvent","subscribe","unsubscribe","bubbleClass","join","SocialGraph","ego","trad","prog","book","heart","music","noFaith","hungry","sated","stuffed","podless","crowded","homeowner","sick","bruised","fresh","App","escFunction","event","keyCode","endTurn","foundParty","GeneratePartyHQ","activeModal","foundCharity","publish","activeCityID","activeBeanID","activeMain","activeRightPanel","document","addEventListener","removeEventListener","COL","renderNetwork","renderGeo","seasonalCost","main","marginRight","getPanel","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ca9177eb.chunk.js","sourcesContent":["import { World } from \"../World\";\r\n\r\nexport enum Season {Spring, Summer, Fall, Winter}\r\n\r\nexport interface IDate{\r\n    season: Season;\r\n    year: number;\r\n}\r\n\r\nexport function Now(world: World){\r\n    return {year: world.date.year, season: world.date.season};\r\n}\r\n\r\nexport function withinLastYear(current: IDate, last: IDate): boolean{\r\n    return last.year > -1 && (\r\n        last.year == current.year || (\r\n            last.year == current.year - 1 &&\r\n            last.season > current.season\r\n        )\r\n    )\r\n}","import { TraitCommunity, TraitIdeals, TraitEthno, TraitFaith, TraitShelter, TraitHealth, TraitFood, TraitJob, City, JobToGood, IHappinessModifier, TraitToModifier, MaslowScore, GetHappiness } from \"./World\";\r\nimport { RandomEthno, GetRandom } from \"./WorldGen\";\r\nimport { Economy, ISeller } from \"./Economy\";\r\nimport { Policy, Party } from \"./Politics\";\r\nimport { IEvent } from \"./events/Events\";\r\nimport { IDate, withinLastYear } from \"./simulation/Time\";\r\nimport { Government } from \"./simulation/Government\";\r\n\r\n\r\n/**\r\n * a bean is a citizen with preferences\r\n */\r\nexport interface IBean{\r\n    key: number;\r\n    cityKey: number;\r\n    name: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    ethnicity: TraitEthno;\r\n    faith?: TraitFaith;\r\n    shelter: TraitShelter;\r\n    health: TraitHealth;\r\n    discrete_food: number;\r\n    cash: number;\r\n    dob: IDate;\r\n}\r\n\r\nconst BabyChance = 0.05;\r\nconst SeasonsUntilEviction = 1;\r\nexport class Bean implements IBean, ISeller{\r\n    public key: number = 0;\r\n    public cityKey: number = 0;\r\n    public alive: boolean = true;\r\n    public dob: IDate = {year: 0, season: 0};\r\n    public name: string = 'Bean Beanson';\r\n\r\n    public city: City|null = null;\r\n\r\n    public ethnicity: TraitEthno = RandomEthno();\r\n    public lastApproval: IDate = {year: -1, season: 0};\r\n\r\n    //maslow\r\n    public discrete_food: number = 1;\r\n    public get food(): TraitFood {\r\n        if (this.discrete_food >= 3)\r\n        return 'stuffed';\r\n        else if (this.discrete_food >= 1)\r\n        return 'sated'\r\n        else\r\n        return 'hungry';\r\n    }\r\n    public shelter: TraitShelter = 'crowded';\r\n    public discrete_health: number = 2;\r\n    public get health(): TraitHealth {\r\n        if (this.discrete_health >= 3)\r\n        return 'fresh';\r\n        else if (this.discrete_health >= 1)\r\n        return 'bruised'\r\n        else\r\n        return 'sick';\r\n    }\r\n    //values\r\n    public community: TraitCommunity = 'ego';\r\n    public ideals: TraitIdeals = 'trad';\r\n    //other\r\n    public job: TraitJob = 'jobless';\r\n    public faith?: TraitFaith;\r\n    public cash: number = 3;\r\n    public partyLoyalty: number = 0.2;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastHappiness: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastSentiment: number = 0;\r\n    /**\r\n     * -100-100\r\n     */\r\n    public lastPartySentiment: number = 0;\r\n    public seasonSinceLastSale: number = 0;\r\n    public seasonSinceLastRent: number = 0;\r\n    public lastApprovalDate: IDate = {year: -1, season: 0};\r\n    public lastInsultDate: IDate = {year: -1, season: 0};\r\n    public fairGoodPrice: number = 1;\r\n    get isInCrisis(): boolean{\r\n        return this.food == 'hungry' ||\r\n        this.shelter == 'podless' ||\r\n        this.health == 'sick';\r\n    }\r\n    getHappinessModifiers(econ: Economy, homeCity: City, law: Government): IHappinessModifier[]{\r\n        const mods: IHappinessModifier[] = [\r\n            TraitToModifier[this.food],\r\n            TraitToModifier[this.shelter],\r\n            TraitToModifier[this.health],\r\n        ];\r\n        if (this.ideals == 'trad' && this.ethnicity != homeCity.majorityEthnicity) {\r\n            mods.push({reason: 'Xenophobic', mod: -.1});\r\n        }\r\n        if (this.cash < 1) {\r\n            mods.push({reason: 'Penniless', mod: MaslowScore.Deficient});\r\n        } else if (this.cash > econ.getCostOfLiving() * 3){\r\n            mods.push({reason: 'Upper Class', mod: 0.3});\r\n        } else if (this.cash > econ.getCostOfLiving() * 2){\r\n            mods.push({reason: 'Middle Class', mod: 0.15});\r\n        }\r\n        if (this.job == 'jobless') {\r\n            mods.push({reason: 'Unemployed', mod: MaslowScore.Deficient});\r\n        }\r\n\r\n        return mods;\r\n    }\r\n    getSentimentModifiers(econ: Economy, homeCity: City, law: Government, party: Party): {\r\n        party: IHappinessModifier[],\r\n        law: IHappinessModifier[]\r\n    }{\r\n        const result = {party: [] as IHappinessModifier[], law: [] as IHappinessModifier[]};\r\n\r\n        if (this.community == party.community){\r\n            result.party.push({reason: 'Same Community', mod: 0.15});\r\n        }\r\n        if (this.ideals == party.ideals){\r\n            result.party.push({reason: 'Same Ideals', mod: 0.15});\r\n        } else if (this.community != party.community){\r\n            result.party.push({reason: 'Incompatible Values', mod: -0.15});\r\n        }\r\n        if (homeCity.environment && withinLastYear(homeCity.environment, this.lastApprovalDate)){\r\n            result.party.push({reason: 'Public Endorsement', mod: 0.2});   \r\n        }\r\n        party.differingPolicies(law).forEach((policy) => {\r\n            if (policy.community && policy.community == this.community){\r\n                result.party.push({reason: 'Likes '+policy.name, mod: 0.1});\r\n            } else if (policy.ideals && policy.ideals == this.ideals){\r\n                result.party.push({reason: 'Likes '+policy.name, mod: 0.1});\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    calculateBeliefs(econ: Economy, homeCity: City, law: Government, party: Party): void{\r\n        this.lastHappiness = GetHappiness(this.getHappinessModifiers(econ, homeCity, law));\r\n        const sent = this.getSentimentModifiers(econ, homeCity, law, party);\r\n        this.lastSentiment = GetHappiness(sent.law);\r\n        this.lastPartySentiment = GetHappiness(sent.party);\r\n\r\n        if (this.job == 'jobless'){\r\n            this.fairGoodPrice = 1;\r\n        } else {\r\n            const myGood = JobToGood(this.job);\r\n            this.fairGoodPrice = econ.getFairGoodPrice(myGood);\r\n        }\r\n    }\r\n    /**\r\n     * non-normalized multiplier\r\n     */\r\n    getSentimentPolicies(traits: {[x:string]:boolean}, policies: Policy[]){\r\n        let multiplier = 100;\r\n        policies.forEach((policy) => {\r\n            policy.fx.forEach((fx) => {\r\n                if (traits[fx.key])\r\n                multiplier += fx.mag * 10; //-30 to +30\r\n            });\r\n        });\r\n        return multiplier / 100;\r\n    }\r\n    _getTraitMap(){\r\n        let traits = {[this.community]: true, [this.ideals]:  true, [this.ethnicity]: true};\r\n        if (this.faith)\r\n            traits[this.faith] = true;\r\n        return traits;\r\n    }\r\n    getFace(): string{\r\n        if (!this.alive)\r\n            return '💀';\r\n        if (this.food == 'hungry')\r\n            return '😫';\r\n        if (this.health == 'sick')\r\n            return '🤢';\r\n        if (this.shelter == 'podless')\r\n            return '🥶';\r\n        if (this.job == 'jobless')\r\n            return '😧';\r\n        if (this.lastHappiness < 0)\r\n            return '☹️';\r\n        if (this.lastHappiness >= 50)\r\n            return '🙂';\r\n        return '😐';\r\n    }\r\n    getIdea(costOfLiving: number): {bad: boolean, idea: string}|null {\r\n        if (this.food == 'hungry')\r\n            return {bad: true, idea: '🍗'};\r\n        if (this.health == 'sick')\r\n            return {bad: true, idea: '💊'};\r\n        if (this.shelter == 'podless')\r\n            return {bad: true, idea: '🏠'};\r\n        if (this.canBaby(costOfLiving))\r\n            return {bad: false, idea: '👶'};\r\n        return null;        \r\n    }\r\n    tryFindRandomJob(law: Government) {\r\n        if (Math.random() > 0.5) {\r\n            this.job = GetRandom(['builder', 'doc', 'farmer']);\r\n        }\r\n    }\r\n    canInsult(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastInsultDate));\r\n    }\r\n    canSupport(): boolean{\r\n        return Boolean(this.city && this.city.environment && !withinLastYear(this.city.environment, this.lastApprovalDate));\r\n    }\r\n    work(law: Government, econ: Economy) {\r\n        if (this.job == 'jobless'){\r\n            this.tryFindRandomJob(law);\r\n        } else {\r\n            this.seasonSinceLastSale++;\r\n            if (this.seasonSinceLastSale > 2){\r\n                //underemployment\r\n                if (Math.random() > 0.5) {\r\n                    const newJob = econ.mostInDemandJob();\r\n                    if (newJob)\r\n                        this.job = newJob;\r\n                }\r\n            }\r\n            econ.produceAndPrice(this, JobToGood(this.job), 2.5, this.fairGoodPrice);\r\n        }\r\n    }\r\n    eat(economy: Economy): IEvent|null {\r\n        if (this.job == 'farmer'){\r\n            this.discrete_food += 1;\r\n        } else {\r\n            this.buyFood(economy);\r\n        }\r\n\r\n        this.discrete_food -= 1;\r\n        if (this.discrete_food < 0)\r\n            this.discrete_health -= 0.3;\r\n\r\n        return this.maybeDie('starvation', 0.6);\r\n    }\r\n    private buyFood(economy: Economy) {\r\n        const groceries = economy.tryTransact(this, 'food');\r\n        if (groceries)\r\n            this.discrete_food += groceries.bought;\r\n    }\r\n\r\n    weather(economy: Economy): IEvent|null {\r\n        if (!this.alive) return null;\r\n        if (this.job == 'builder'){\r\n            this.shelter = 'crowded';\r\n        } else {\r\n            const hasHousing = this.buyHousing(economy);\r\n            if (!hasHousing){\r\n                if (this.seasonSinceLastRent > SeasonsUntilEviction) {\r\n                    this.shelter = 'podless';\r\n                }\r\n                else {\r\n                    this.seasonSinceLastRent++;\r\n                }\r\n            }\r\n        }        \r\n        \r\n        if (this.shelter == 'podless')\r\n            this.discrete_health -= 0.1;\r\n        \r\n        return this.maybeDie('exposure', 0.2);\r\n    }\r\n    private buyHousing(economy: Economy): boolean {\r\n        const housing = economy.tryTransact(this, 'shelter');\r\n        if (housing) {\r\n            this.seasonSinceLastRent = 0;\r\n            this.shelter = 'crowded';\r\n        }\r\n        return housing != null;\r\n    }\r\n\r\n    age(economy: Economy): IEvent|null {\r\n        if (!this.alive) return null;\r\n        if (this.job == 'doc'){\r\n            this.discrete_health += 0.25;\r\n        } else {\r\n            this.buyMeds(economy);\r\n        }\r\n        this.discrete_health -= 0.2;\r\n        this.discrete_health = Math.min(this.discrete_health, 3);\r\n        return this.maybeDie('sickness', 0.4);\r\n    }\r\n    private buyMeds(economy: Economy) {\r\n        const meds = economy.tryTransact(this, 'medicine');\r\n        if (meds)\r\n            this.discrete_health += meds.bought;\r\n    }\r\n\r\n    maybeOverconsume(economy: Economy){\r\n        const threshold = economy.getCostOfLiving() * 2;\r\n        if (this.food != 'stuffed' && this.cash > threshold){\r\n            this.buyFood(economy);\r\n        }\r\n        if (this.health != 'fresh' && this.cash > threshold){\r\n            this.buyMeds(economy);\r\n        }\r\n    }\r\n\r\n    maybeBaby(economy: Economy): IEvent | null {\r\n        if (this.canBaby(economy.getCostOfLiving()) &&\r\n            Math.random() <= BabyChance) {\r\n            if (this.city)\r\n                this.city.breedBean(this);\r\n            else\r\n                throw 'bean doesnot have city object';\r\n            return {icon: '🎉', message: 'A new bean is born!'}\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    canBaby(costOfLiving: number): boolean{\r\n        return this.cash > costOfLiving * 3 &&\r\n            !this.isInCrisis;\r\n    }\r\n    /**\r\n     * should return 0-1 float, with 1 meaning 100%\r\n     * @param economy \r\n     */\r\n    chanceToDonate(economy: Economy, direct: boolean = false): number{\r\n        const canDonate = this.cash > economy.getCostOfLiving() * 2 && !this.isInCrisis;\r\n        if (canDonate && this.lastPartySentiment > 0.5){\r\n            const threshold = direct ? 0.2 : 0.5;\r\n            const baseChance = this.lastPartySentiment - threshold;\r\n            return (baseChance) / 2;\r\n        }\r\n        return 0;\r\n    }\r\n    maybeDonate(economy: Economy, direct: boolean = false): number{\r\n        const chance = this.chanceToDonate(economy, direct);\r\n        if (chance > 0){\r\n            const willDonate = Math.random() < chance;\r\n            if (willDonate){\r\n                const donation = 1;\r\n                this.cash -= donation;\r\n                return donation;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    maybeDie(cause: string, chance = 0.5): IEvent|null{\r\n        if (this.discrete_health < 0 && Math.random() <= chance) {\r\n            this.die();\r\n            return {icon: '☠️', message: `A bean died of ${cause}!`};\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    die(){\r\n        this.alive = false;\r\n        this.city?.onCitizenDie(this);\r\n    }\r\n}\r\n","import { City, TraitIdeals, TraitCommunity, TraitEthno, TraitFaith, World, TraitJob } from './World';\r\nimport { Bean } from './Bean';\r\nimport { Policy, BaseParty, CityPartyHQ, Party, PolicyByKey, PolicyTree, IPolicy, NoPolicy } from './Politics';\r\n\r\nexport function GetRandomNumber(min: number, max: number): number{\r\n    const randomBuffer = new Uint32Array(1);\r\n    window.crypto.getRandomValues(randomBuffer);\r\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(randomNumber * (max - min + 1)) + min;\r\n}\r\nexport function GetRandomIndex(length: number): number{\r\n    return GetRandomNumber(0, length-1)\r\n}\r\nexport function GetRandom<S>(choices: S[]):S {\r\n    const max = choices.length;\r\n    if (max == 1)\r\n        return choices[0];\r\n\r\n    const i = GetRandomIndex(choices.length);\r\n    console.log(i);\r\n    return choices[i];\r\n}\r\nexport function RandomIdeal(): TraitIdeals{\r\n    return GetRandom(['prog', 'trad']);\r\n}\r\nexport function RandomCommunity(): TraitCommunity{\r\n    return GetRandom(['state', 'ego']);\r\n}\r\nexport function RandomEthno(): TraitEthno{\r\n    return GetRandom(['circle','square','triangle']);\r\n}\r\nexport function RandomFaith(): TraitFaith{\r\n    return GetRandom(['book','music','heart', 'noFaith']);\r\n}\r\nexport function StartingCash(job: TraitJob): number{\r\n    let base = 4 + Math.floor(Math.random() * 3);\r\n    switch(job){\r\n        case 'doc': return base+2;\r\n        default: return base;\r\n    }\r\n}\r\n\r\nexport function GenerateWorld(): World{\r\n    const world = new World();\r\n    world.law.policyTree = {\r\n        wel_food: PolicyByKey('0') as IPolicy,\r\n        wel_house: PolicyByKey('4') as IPolicy,\r\n        wel_health: PolicyByKey('8') as IPolicy,\r\n        econ_ex: PolicyByKey('13') as IPolicy,\r\n        econ_labor: PolicyByKey('15') as IPolicy,\r\n        econ_sub: NoPolicy,\r\n        cul_rel: PolicyByKey('21') as IPolicy,\r\n        cul_theo: NoPolicy,\r\n        cul_ed: NoPolicy,\r\n        law_vote: PolicyByKey('31') as IPolicy,\r\n        law_bribe: PolicyByKey('32') as IPolicy,\r\n        law_imm: PolicyByKey('35') as IPolicy,\r\n        tax_basic: PolicyByKey('38') as IPolicy,\r\n        tax_second: NoPolicy,\r\n        all: NoPolicy\r\n    };\r\n    world.party = new BaseParty();\r\n    world.institutions.push(world.party);\r\n    for (let i = 0; i < 6; i++) {\r\n        world.cities.push(GenerateCity(world.cities.length));\r\n        world.cities[i].doOnCitizenDie.push(world.economy.onBeanDie);\r\n        world.cities[i].environment = world.date;\r\n\r\n        if (i < 2){\r\n            const city = world.cities[i];\r\n            //GeneratePartyHQ(city);\r\n        }\r\n    }\r\n    world.economy.totalSeasonalDemand.food = world.beans.length;\r\n    world.economy.totalSeasonalDemand.shelter = world.beans.length;\r\n    world.economy.totalSeasonalDemand.medicine = world.beans.length;\r\n\r\n    world.next();\r\n    world.next();\r\n    world.next();\r\n    world.next();\r\n    return world;\r\n}\r\n\r\nexport function GeneratePartyHQ(city: City, party: Party) {\r\n    const hq = new CityPartyHQ();\r\n    hq.cityKey = city.key;\r\n    city.partyHQ = hq;\r\n    party.activeHQs.push(hq.cityKey);\r\n}\r\n\r\nexport function GenerateCity(previousCityCount: number): City{\r\n    let newCity = new City();\r\n    newCity.key = previousCityCount;\r\n    newCity.name = GetRandom(['New ', 'Old ', 'Fort ', 'St. ', 'Mount ', 'Grand ', '', '', '', '', '', '', '', '', '', '']);\r\n    newCity.name += GetRandom(['Spring', 'Timber', 'Over', 'West', 'East', 'North', 'South', 'Rock', 'Sand', 'Clay', 'Iron', 'Ore', 'Coal', 'Liver', 'Hawk', 'Red', 'Yellow', 'Gold', 'Blue', 'Black', 'White', 'Sunny', 'Reed', 'Ox', 'Mill', 'Fern', 'Down', 'Bel', 'Bald', 'Ash']);\r\n    newCity.name += GetRandom(['water ', ' Springs', 'ville', 'dale', 'lane', 'peak', 'coast', 'beach', 'port', 'market', 'ton', 'brook', ' Creek', 'land', 'burgh', 'bridge', 'ford', 'bury', 'chester', 'son', 'vale', ' Valley', 'hill', 'more', 'wood', ' Oaks', ' Cove', 'mouth', 'way', 'crest']);\r\n\r\n    const cityPopulation = 3;\r\n    while(newCity.historicalBeans.length < cityPopulation){\r\n        newCity.historicalBeans.push(\r\n            GenerateBean(newCity, newCity.historicalBeans.length)\r\n        );\r\n    }\r\n    const houseCount = Math.floor((cityPopulation / 2) + Math.floor(Math.random() * cityPopulation / 2));\r\n    for (let i = 0; i < houseCount; i++) {\r\n        newCity.houses.push({\r\n            left: Math.floor(Math.random() * 60),\r\n            top: Math.floor(Math.random() * 60),\r\n        });\r\n    }\r\n\r\n    return newCity;\r\n}\r\nexport function GenerateBean(city: City, previousBeanCount: number): Bean{\r\n    let newBean = new Bean();\r\n    \r\n    newBean.key = previousBeanCount;\r\n    newBean.cityKey = city.key;\r\n    newBean.city = city;\r\n    newBean.name = GetRandom(['Chick', 'Broad', 'Velvet', 'Jack', 'Lima', 'Whit', 'Black-Eye', 'Baker', 'Pony', 'Castor', 'Frenchy', 'Kid', 'Runner']) + ' ';\r\n    newBean.name += GetRandom(['Bean', 'Navy', 'Sprout', 'Soy', 'Mung', 'Lent', 'Faba', 'Wax', 'Chick', 'Green', 'Pinto']);\r\n    newBean.name += GetRandom(['shell', 'seed', 'pea', 'pod', 'snap', 'vine', 'leaf', 'shoot']);\r\n    newBean.community = RandomCommunity();\r\n    newBean.ideals = RandomIdeal();\r\n    newBean.faith = RandomFaith();\r\n    const mod = previousBeanCount % 3;\r\n    newBean.job = mod == 0 ? 'farmer' : mod == 1 ? 'builder' : 'doc';\r\n    //newBean.job = GetRandom(['farmer','builder','doc']);\r\n    newBean.cash = StartingCash(newBean.job);\r\n    newBean.discrete_food = 2;\r\n    \r\n    return newBean;\r\n}","import { ISeller, Economy } from \"../Economy\";\r\nimport { TraitGood, GoodToJob } from \"../World\";\r\nimport { Policy } from \"../Politics\";\r\nimport { Government } from \"./Government\";\r\n\r\nexport interface IInstitution{\r\n    key: number;\r\n    playerKey: number;\r\n    name: string;\r\n\r\n    organizations: IOrganization[];\r\n    fundOrganizations(): void;\r\n}\r\n\r\nexport interface IOrganization extends ISeller{\r\n    work(law: Government, economy: Economy): void;\r\n    key: number;\r\n    institutionKey: number;\r\n    seasonalBudget: number;\r\n    parentInstitution: IInstitution|null;\r\n    cash: number;\r\n}\r\n\r\nexport class Charity implements IOrganization, ISeller{\r\n    key = 0;\r\n    name: string = '';\r\n    institutionKey = 1;\r\n    cash = 0;\r\n    seasonSinceLastSale = 0;\r\n    seasonalBudget = 0;\r\n    good: TraitGood = 'food';\r\n    parentInstitution: IInstitution|null = null;\r\n    beansHelped: number = 0;\r\n    inventory: number = 0;\r\n    \r\n    work(law: Government, economy: Economy): void{\r\n        while(this.cash > 0 && this.inventory < 10) {\r\n            const groceries = economy.tryTransact(this, this.good);\r\n            if (groceries){\r\n                economy.addCharity(this, this.good, groceries.bought);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n} ","import { TraitGood, TraitJob, GoodToJob, City, Trait } from \"./World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { IOrganization, Charity } from \"./simulation/Institutions\";\r\nexport interface IEconomicAgent{\r\n    cash: number;\r\n}\r\nexport interface ISeller extends IEconomicAgent{\r\n    seasonSinceLastSale: number;\r\n}\r\nexport interface Listing{\r\n    sellerCityKey?: number;\r\n    sellerBeanKey?: number;\r\n    sellerOrganizationKey?: number;\r\n    price: number;\r\n    seller: ISeller;\r\n    quantity: number;\r\n}\r\nconst AllGoods: TraitGood[] = ['food', 'shelter', 'medicine', 'fun'];\r\nconst PartyLoyaltyPerCharityUse = 0.2;\r\nexport class Economy {\r\n    market = new OrderBook();\r\n    charity = new OrderBook();\r\n    unfulfilledSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalDemand: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    totalSeasonalSupply: {[key in TraitGood]: number} = { food: 0, shelter: 0, medicine: 0, fun: 0, }\r\n    constructor(){\r\n\r\n    }\r\n    public resetSeasonalDemand(){\r\n        this.unfulfilledSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalDemand = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n        this.totalSeasonalSupply = { food: 0, shelter: 0, medicine: 0, fun: 0, };\r\n    }\r\n    tryTransact(buyer: IEconomicAgent, good: TraitGood): {bought: number, price: number}|null {\r\n        const demand = 1;\r\n        this.totalSeasonalDemand[good] += demand;\r\n        const listing = this.market.getLowestPriceListing(good, demand);\r\n        if (listing == null){\r\n            //console.log('agent could not find '+good);\r\n        }\r\n        else if (listing.price <= buyer.cash){\r\n            return this.market.transact(listing, good, demand, buyer);\r\n        } else if (buyer instanceof Bean) {\r\n            // console.log('bean couldnot afford '+good+\" @ $\"+listing?.price);\r\n            const charityTicket = this.charity.getLowestPriceListing(good, demand);\r\n            if (charityTicket && charityTicket.seller instanceof Charity) {\r\n                // console.log('bean got '+good+\" from charity\");\r\n                buyer.partyLoyalty += PartyLoyaltyPerCharityUse;\r\n                charityTicket.seller.beansHelped++;\r\n                charityTicket.seller.inventory -= demand;\r\n                return this.charity.transact(charityTicket, good, demand, buyer);\r\n            }\r\n        }\r\n        this.unfulfilledSeasonalDemand[good] += demand;\r\n        return null;\r\n    }\r\n    produceAndPrice(seller: Bean, good: TraitGood, quantity: number, price: number) {\r\n        this.totalSeasonalSupply[good] += quantity;\r\n        const existing = this.market.getBeansListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.price = price;\r\n            existing.quantity = Math.min(existing.quantity, 6);\r\n        } else {\r\n            this.market.addNewListing(good, quantity, price, seller);\r\n        }\r\n        this.market.sort(good);\r\n    }\r\n    addCharity(seller: Charity, good: TraitGood, quantity: number) {\r\n        const existing = this.charity.getOrgsListings(seller, good);\r\n        if (existing){\r\n            existing.quantity += quantity;\r\n            existing.quantity = Math.min(existing.quantity, 10);\r\n            seller.inventory = existing.quantity;\r\n        } else {\r\n            this.charity.addNewOrgListing(good, quantity, 0, seller);\r\n            seller.inventory = quantity;\r\n        }\r\n        //this.book[good].sort((a, b) => a.price - b.price);\r\n    }\r\n    public mostInDemandJob(): TraitJob|null{\r\n        const goods: TraitGood[] = AllGoods;\r\n        const max = goods.reduce((last, good) => {\r\n            if (this.unfulfilledSeasonalDemand[good] > last.max){\r\n                last.max = this.unfulfilledSeasonalDemand[good];\r\n                last.job = GoodToJob(good);\r\n            }\r\n            return last;\r\n        }, {max: 0, job: null as TraitJob|null})\r\n\r\n        return max.job;\r\n    }\r\n    public onBeanDie = (deadBean: Bean, city: City) => {\r\n        AllGoods.forEach((g) => {\r\n            const existing = this.market.getBeansListings(deadBean, g);\r\n            if (existing){\r\n                const lucky = city.getRandomCitizen();\r\n                if (lucky) {\r\n                    existing.sellerCityKey = lucky.cityKey;\r\n                    existing.sellerBeanKey = lucky.key;\r\n                    existing.seller = lucky;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public getFairGoodPrice(good: TraitGood){\r\n        const supply = this.totalSeasonalSupply[good] || 1;\r\n        const demand = this.totalSeasonalDemand[good];\r\n        return 0.25 + (0.75 * Math.min(demand/supply, 1));\r\n    }\r\n    public getCostOfLiving(){\r\n        return this.getFairGoodPrice('food')+this.getFairGoodPrice('shelter')+this.getFairGoodPrice('medicine');\r\n    }\r\n}\r\n\r\nexport class OrderBook{\r\n    public readonly listings: {[key in TraitGood]: Listing[]} = {\r\n        food: [] as Listing[],\r\n        shelter: [] as Listing[],\r\n        medicine: [] as Listing[],\r\n        fun: [] as Listing[],\r\n    };\r\n    public getLowestPriceListing(good: TraitGood, demand: number): Listing|null{\r\n        const fullListings =  this.listings[good].filter((l) => {\r\n            return l.quantity >= demand;\r\n        });\r\n        if (fullListings.length > 0){\r\n            let numberOfSamePriceListings = 1;\r\n            const lowPrice = fullListings[0].price;\r\n            for (let i = 1; i < fullListings.length; i++) {\r\n                const list = fullListings[i];\r\n                if (list.price > lowPrice)\r\n                    break;\r\n                numberOfSamePriceListings++;\r\n            }\r\n            const i = Math.floor(Math.random() * numberOfSamePriceListings);\r\n            if (i >= fullListings.length)\r\n                throw \"invalid index\";\r\n            return fullListings[i];\r\n        }\r\n        return null;\r\n    }\r\n    public getBeansListings(b: Bean, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerBeanKey == b.key && x.sellerCityKey == b.cityKey);\r\n    }\r\n    public getOrgsListings(b: IOrganization, g: TraitGood): Listing|undefined{\r\n        return this.listings[g].find((x) => x.sellerOrganizationKey == b.key);\r\n    }\r\n    public transact(listing: Listing, good: TraitGood, demand: number, buyer: IEconomicAgent){        \r\n        listing.quantity -= demand;\r\n        if (listing.quantity <= 0){\r\n            this.listings[good].splice(0, 1);\r\n        }\r\n        buyer.cash -= listing.price;\r\n        listing.seller.cash += listing.price;\r\n        listing.seller.seasonSinceLastSale--;\r\n        return {\r\n            bought: demand,\r\n            price: listing.price\r\n        }\r\n    }\r\n    public addNewListing(good: TraitGood, quantity: number, price: number, bean: Bean){\r\n        this.listings[good].push({\r\n            sellerCityKey: bean.cityKey,\r\n            sellerBeanKey: bean.key,\r\n            price: price,\r\n            seller: bean,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public addNewOrgListing(good: TraitGood, quantity: number, price: number, org: IOrganization){\r\n        this.listings[good].push({\r\n            sellerOrganizationKey: org.key,\r\n            price: price,\r\n            seller: org,\r\n            quantity: quantity\r\n        });\r\n    }\r\n    public sort(good: TraitGood){        \r\n        this.listings[good].sort((a, b) => a.price - b.price);\r\n    }\r\n}","import * as React from 'react';\r\nimport { GetRandom, RandomEthno, GenerateBean } from './WorldGen';\r\nimport { maxHeaderSize } from 'http';\r\nimport { Bean, IBean } from './Bean';\r\nimport { Economy } from './Economy';\r\nimport { Policy, Party, BaseParty, ICityPartyHQ } from './Politics';\r\nimport { IInstitution, IOrganization, Charity } from './simulation/Institutions';\r\nimport { IEvent, EventBus } from './events/Events';\r\nimport { Season, IDate } from './simulation/Time';\r\nimport { Government } from './simulation/Government';\r\n\r\n\r\nexport interface IBeanContainer{\r\n    /**\r\n     * all beans ever, including dead ones\r\n     */\r\n    historicalBeans: Bean[];\r\n    /**\r\n     * current non-dead beans\r\n     */\r\n    beans: Bean[];\r\n}\r\n\r\nexport interface IWorld{\r\n    cities: City[];\r\n    law: Government;\r\n    party: Party;\r\n    electionIn: number;\r\n    institutions: IInstitution[];\r\n    bus: EventBus;\r\n    date: IDate;\r\n}\r\nexport class World implements IWorld, IBeanContainer{\r\n    public cities: City[] = [];\r\n    public law: Government = new Government();\r\n    public economy: Economy = new Economy();\r\n    public institutions: IInstitution[] = [];\r\n    public party: Party = new BaseParty();\r\n    public date = {year: 0, season: Season.Spring};\r\n    public electionIn = 11;\r\n    public yearsEvents: IEvent[] = [];\r\n    public bus = new EventBus();\r\n\r\n    public get beans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.beans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get historicalBeans(): Bean[]{\r\n        return this.cities.reduce((list, c) => {\r\n            return list.concat(c.historicalBeans);\r\n        }, [] as Bean[]);\r\n    }\r\n    public get organizations(): IOrganization[]{\r\n        return this.institutions.reduce((list, institute) => {\r\n            return list.concat(institute.organizations);\r\n        }, [] as IOrganization[]);\r\n    }\r\n\r\n    /**\r\n     * update 'pushed' state\r\n     */\r\n    public calculateComputedState(){\r\n        this.cities.forEach(c => {\r\n            c.calculate(this.economy, this.law);\r\n            c.beans.forEach(b => b.calculateBeliefs(this.economy, c, this.law, this.party));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * simulates a season passing, setting a lot of state\r\n     */\r\n    public next(){\r\n        this.electionIn--;\r\n        if (this.electionIn <= 0){\r\n            this.electionIn = 8;\r\n        }\r\n        this.date.season++;\r\n        if (this.date.season > 3){\r\n            this.date.year++;\r\n            this.inflate();\r\n            this.resetYearlyCounters();\r\n            this.date.season = 0;\r\n        }\r\n        \r\n        this.economy.resetSeasonalDemand();\r\n\r\n        this.institutions.forEach((i) => i.fundOrganizations());\r\n\r\n        shuffle(this.beans).forEach((b: Bean) => {\r\n            b.work(this.law, this.economy);\r\n        });\r\n\r\n        this.organizations.forEach((org) => org.work(this.law, this.economy));\r\n        // console.log(JSON.stringify(this.economy.book, (key, value) => {\r\n        //     if (key != 'seller') return value;\r\n        //     else return undefined;\r\n        // }, ' '));\r\n        shuffle(this.beans).forEach((b: Bean) => {\r\n            let e = b.eat(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n            e = b.weather(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n            e = b.age(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n            e = b.maybeBaby(this.economy);\r\n            if (e) this.yearsEvents.push(e);\r\n        });\r\n        this.cities.forEach((c) => c.getTaxesAndDonations(this.party, this.economy));\r\n        shuffle(this.beans).forEach((b: Bean) => {\r\n            b.maybeOverconsume(this.economy);\r\n        });\r\n        this.calculateComputedState();\r\n    }\r\n    inflate() {\r\n        const allMoney = this.beans.reduce((sum, b) => sum+b.cash, 0) + this.organizations.reduce((sum, o) => sum + o.cash, 0);\r\n        const percent = allMoney / 100;\r\n        const yearlyInflationDollars = Math.round(percent * 1);\r\n        if (yearlyInflationDollars > 0){\r\n            const richest = this.beans.reduce((obj: {winner?: Bean, max: number}, b) => {\r\n                if (b.cash > obj.max){\r\n                    obj.winner = b;\r\n                    obj.max = b.cash;\r\n                }\r\n                return obj;\r\n            }, {max: 0});\r\n            if (richest.winner){\r\n                richest.winner.cash += yearlyInflationDollars;\r\n            }\r\n        }\r\n    }\r\n    resetYearlyCounters() {\r\n        this.yearsEvents = [];\r\n        this.cities.forEach((c) => {\r\n            c.yearsPartyDonations = 0;\r\n        })\r\n    }\r\n    addCharity(good: TraitGood, name: string, budget: number) {\r\n        const charity = new Charity();\r\n        charity.name = name;\r\n        charity.good = good;\r\n        charity.seasonalBudget = budget;\r\n        this.party.organizations.push(charity);\r\n    }\r\n}\r\nfunction shuffle(array: Array<any>) {\r\n    let counter = array.length;\r\n\r\n    // While there are elements in the array\r\n    while (counter > 0) {\r\n        // Pick a random index\r\n        let index = Math.floor(Math.random() * counter);\r\n\r\n        // Decrease counter by 1\r\n        counter--;\r\n\r\n        // And swap the last element with it\r\n        let temp = array[counter];\r\n        array[counter] = array[index];\r\n        array[index] = temp;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport interface IEnvironment{\r\n    year: number;\r\n    season: Season;\r\n}\r\n\r\nexport interface Tile {\r\n    name?: string, \r\n    url: string, \r\n    type: string,\r\n    key: number\r\n}\r\n\r\nexport class City implements Tile, IBeanContainer {\r\n    public name: string = '';\r\n    public url: string = '';\r\n    public type: string = '';\r\n    public key: number = 0;\r\n    public get beans(): Bean[] {\r\n        return this.historicalBeans.filter((x) => x.alive);\r\n    }\r\n    public set beans(beans: Bean[]){\r\n        throw \"can't set city beans\";\r\n    }\r\n    public historicalBeans: Bean[] = [];\r\n    public houses: any[] = [];\r\n    public partyHQ?: ICityPartyHQ;\r\n    public yearsPartyDonations: number = 0;\r\n    public majorityEthnicity: TraitEthno = 'circle';\r\n\r\n    public environment?: IDate;\r\n    public doOnCitizenDie: Array<(b: Bean, c: City) => void> = [];\r\n\r\n    getRandomCitizen(): Bean|null{\r\n        const shuffled = shuffle(this.beans);\r\n        if (shuffled.length > 0) {\r\n            return shuffled[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    onCitizenDie(deadBean: Bean){\r\n        if (deadBean.cash > 0){\r\n            const lucky = this.getRandomCitizen();\r\n            if (lucky) {\r\n                lucky.cash = lucky.cash + deadBean.cash;\r\n                deadBean.cash = 0;\r\n            }\r\n        }\r\n        this.doOnCitizenDie.forEach((x) => x(deadBean, this));\r\n    }\r\n    breedBean(parent: Bean) {\r\n        let bean = GenerateBean(this, this.historicalBeans.length);\r\n        bean.ethnicity = parent.ethnicity;\r\n        bean.job = Math.random() <= .5 ? parent.job : GetRandom(['doc', 'farmer', 'builder', 'jobless']);\r\n        bean.cash = parent.cash / 2;\r\n        parent.cash /= 2;\r\n        if (this.environment)\r\n            bean.dob = {year: this.environment?.year, season: this.environment?.season};\r\n        this.historicalBeans.push(bean);\r\n    }\r\n    getTaxesAndDonations(party: Party, economy: Economy){\r\n        if (this.partyHQ){\r\n            this.beans.forEach((b) => {\r\n                const donation = b.maybeDonate(economy);\r\n                party.materialCapital += donation;\r\n                this.yearsPartyDonations += donation;\r\n            });\r\n        }\r\n    }\r\n    calculate(economy: Economy, law: Government) {\r\n        const c = this.beans.reduce((count: {circle: number, square: number, triangle: number}, bean) => {\r\n            switch(bean.ethnicity){\r\n                case 'circle': count.circle++;break;\r\n                case 'square': count.square++;break;\r\n                case 'triangle': count.triangle++;break;\r\n            }\r\n            return count;\r\n        }, {circle: 0, square: 0, triangle: 0});\r\n        if (c.circle > c.square && c.circle > c.triangle){\r\n            this.majorityEthnicity = 'circle';\r\n        } else if (c.square > c.circle && c.square > c.triangle){\r\n            this.majorityEthnicity = 'square';\r\n        } else {\r\n            this.majorityEthnicity = 'triangle';\r\n        }\r\n    }\r\n}\r\n\r\nexport type TraitCommunity = 'state'|'ego';\r\nexport type TraitIdeals = 'prog'|'trad';\r\nexport type TraitEthno = 'circle'|'square'|'triangle';\r\nexport type TraitFaith = 'book'|'music'|'heart'|'noFaith';\r\nexport type TraitFood = 'hungry'|'sated'|'stuffed';\r\nexport type TraitShelter = 'podless'|'crowded'|'homeowner';\r\nexport type TraitHealth = 'sick'|'bruised'|'fresh';\r\nexport type TraitJob = 'farmer'|'builder'|'doc'|'entertainer'|'cleric'|'polit'|'jobless';\r\n\r\nexport type Trait = TraitCommunity|TraitIdeals|TraitEthno|TraitFaith|TraitFood|TraitShelter|TraitHealth;\r\nexport type Axis = 'wel_food'|'wel_house'|'wel_health'|'tax_basic'|'tax_second'|'econ_ex'|'econ_labor'|'econ_sub'|'cul_rel'|'cul_theo'|'cul_ed'|'law_vote'|'law_bribe'|'law_imm'|'all';\r\n\r\nexport const TraitCommunityIcon: {[key in TraitCommunity]: string} = {\r\n    'state': '🐘',\r\n    'ego': '🦅'\r\n}\r\nexport const TraitIdealsIcon: {[key in TraitIdeals]: string} = {\r\n    'prog': '🎓',\r\n    'trad': '👑'\r\n}\r\nexport enum MaslowScore {Deficient= -.25, Sufficient=0, Abundant=.15}\r\n\r\nexport interface IHappinessModifier{\r\n    reason: string;\r\n    /**\r\n     * -1 to 1, where 0 is \"no effect\" and +/-1 is +/-100%\r\n     */\r\n    mod: number;\r\n}\r\n\r\nexport function GetHappiness(array: IHappinessModifier[]){\r\n    const clampedPercent = Math.min(\r\n        1,\r\n        Math.max(\r\n            -1,\r\n            array.reduce((sum, hapMod) => {\r\n                sum += hapMod.mod;\r\n                return sum\r\n            }, 0)\r\n        )\r\n    );\r\n\r\n    return (clampedPercent * 100);\r\n}\r\n\r\nexport const TraitToModifier: {[key in TraitFood|TraitShelter|TraitHealth]: IHappinessModifier} = {\r\n    'podless': {reason: 'Homeless', mod: MaslowScore.Deficient},\r\n    'crowded': {reason: 'Renting', mod: MaslowScore.Sufficient},\r\n    'homeowner': {reason: 'Homeowner', mod: MaslowScore.Abundant},\r\n    'sick': {reason: 'Sick', mod: MaslowScore.Deficient},\r\n    'bruised': {reason: 'Bruised', mod: MaslowScore.Sufficient},\r\n    'fresh': {reason: 'Healthy', mod: MaslowScore.Abundant},\r\n    'hungry': {reason: 'Hungry', mod: MaslowScore.Deficient},\r\n    'sated': {reason: 'Sated', mod: MaslowScore.Sufficient},\r\n    'stuffed': {reason: 'Stuffed', mod: MaslowScore.Abundant},\r\n}\r\n\r\nexport function JobToGood(job: TraitJob): TraitGood{\r\n    switch(job){\r\n        case 'builder': return 'shelter';\r\n        case 'doc': return 'medicine';\r\n        case 'entertainer': return 'fun';\r\n        default: case 'farmer': return 'food';\r\n    }\r\n}\r\nexport function GoodToJob(good: TraitGood): TraitJob{\r\n    switch(good){\r\n        case 'shelter': return 'builder';\r\n        case 'medicine': return 'doc';\r\n        case 'fun': return 'entertainer';\r\n        default: case 'food': return 'farmer';\r\n    }\r\n}\r\nexport type TraitGood = 'food'|'shelter'|'medicine'|'fun';","import { Trait, Axis, TraitCommunity, TraitIdeals } from \"./World\";\r\nimport { IInstitution, IOrganization } from \"./simulation/Institutions\";\r\nimport { Government } from \"./simulation/Government\";\r\n\r\n\r\nexport interface Party extends IInstitution{\r\n    slogan: string;\r\n    community: TraitCommunity;\r\n    ideals: TraitIdeals;\r\n    \r\n    availablePolicies: Policy[]; \r\n    proposedPolicy?: Policy;\r\n    availableCampaigns: Campaign[];\r\n    activeCampaigns: Campaign[];\r\n\r\n    platform: {[key in Axis]: IPolicy};\r\n\r\n    politicalCapital: number;\r\n    materialCapital: number;\r\n    labor: number;\r\n\r\n    seasonalIncome: number;\r\n    seasonalActions: number;\r\n    activeHQs: number[];\r\n\r\n    differingPolicies(law: Government): IPolicy[];\r\n}\r\n\r\nexport class BaseParty implements Party{\r\n    key = 1;\r\n    playerKey = 1;\r\n    organizations: IOrganization[] = [];\r\n    public name: string = \"Citizen's Party\";\r\n    public slogan: string = \"Vote for us!\";\r\n    public community: TraitCommunity = 'state';\r\n    public ideals: TraitIdeals = 'trad';\r\n    public availablePolicies: Policy[] = [];\r\n    public proposedPolicy?: Policy;\r\n    public availableCampaigns: Campaign[] = [];\r\n    public activeCampaigns: Campaign[] = [];\r\n    public politicalCapital: number = 10;\r\n    public materialCapital: number = 20;\r\n    public labor: number = 10;\r\n    public activeHQs: number[] = [];\r\n    public platform: {[key in Axis]: IPolicy} = {} as {[key in Axis]: IPolicy};\r\n\r\n    public seasonalIncome: number = 0;\r\n    public seasonalActions: number = 0;\r\n    constructor(){\r\n    }\r\n    fundOrganizations(): void{\r\n        this.organizations.forEach((org) => {\r\n            if (this.materialCapital >= org.seasonalBudget){\r\n                this.materialCapital -= org.seasonalBudget;\r\n                org.cash += org.seasonalBudget;\r\n            }\r\n        });\r\n    }\r\n    differingPolicies(law: Government): IPolicy[]{\r\n        return Object.keys(this.platform).filter((key: string) => {\r\n            const ax = key as Axis;\r\n            return this.platform[ax] != law.policyTree[ax];\r\n        }).map((key) => this.platform[key as Axis]);\r\n    }\r\n}\r\n\r\nexport interface ICityPartyHQ{\r\n    cityKey: number;\r\n}\r\nexport class CityPartyHQ implements ICityPartyHQ{\r\n    cityKey: number = 0;\r\n}\r\n\r\nexport interface PoliticalEffect {\r\n    key: Trait;\r\n    /**\r\n     * magnitude (-3 to +3)\r\n     */\r\n    mag: number;\r\n}\r\nexport interface Policy {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    axis?: Axis;\r\n}\r\nexport interface Campaign {\r\n    key: string; \r\n    fx: PoliticalEffect[];\r\n    cityKey?: number;\r\n\r\n    seasonalCost: number;\r\n}\r\nexport interface IPolicy{\r\n    key: string, \r\n    name: string, \r\n    community?: TraitCommunity, \r\n    ideals?: TraitIdeals, \r\n    axis: Axis,\r\n    hint?: string\r\n}\r\nexport const NoPolicy: IPolicy = {key: '-1', name: 'No Policy', axis: 'all'};\r\nexport const Policies: IPolicy[] = [\r\n NoPolicy,\r\n {key: '0', name: 'Let Them Eat Cake', ideals: 'trad', community: 'ego', axis: 'wel_food', hint: 'No state solution for hunger'},\r\n {key: '1', name: 'Food Bank', ideals: 'prog', community: 'ego', axis: 'wel_food'},\r\n {key: '2', name: 'Food Stamps', ideals: 'trad', community: 'state', axis: 'wel_food'},\r\n {key: '3', name: 'Universal Rations', ideals: 'prog', community: 'state', axis: 'wel_food'},\r\n\r\n {key: '4', name: 'Sleep Outside', community: 'ego', ideals: 'trad', axis: 'wel_house'},\r\n {key: '5', name: 'Homeless Shelters', community: 'ego', ideals: 'prog', axis: 'wel_house'},\r\n {key: '6', name: 'Housing Subsidy', community: 'state', ideals: 'trad', axis: 'wel_house'},\r\n {key: '7', name: 'State Apartments', community: 'state', ideals: 'prog', axis: 'wel_house'},\r\n\r\n {key: '8', name: 'Stay Healthy', community: 'ego', ideals: 'trad', axis: 'wel_health'},\r\n {key: '9', name: 'Charity Clinics', community: 'ego', ideals: 'prog', axis: 'wel_health'},\r\n {key: '10', name: 'Medical Aid', community: 'state', ideals: 'trad', axis: 'wel_health'},\r\n {key: '11', name: 'Universal Healthcare', community: 'state', ideals: 'prog', axis: 'wel_health'},\r\n\r\n {key: '12', name: 'Tariffs', community: 'state', axis: 'econ_ex'},\r\n {key: '13', name: 'Free Market', community: 'ego', axis: 'econ_ex'},\r\n \r\n {key: '14', name: 'Legal Slavery', ideals: 'trad', axis: 'econ_labor'},\r\n {key: '15', name: 'Right to Work', community: 'ego', ideals: 'trad', axis: 'econ_labor'},\r\n {key: '16', name: 'Right to Strike', community: 'ego', ideals: 'prog', axis: 'econ_labor'},\r\n\r\n {key: '17', name: 'Laissez-faire', community: 'ego', ideals:'trad', axis: 'econ_sub'},\r\n {key: '18', name: 'Grain Subsidy', community: 'state', axis: 'econ_sub'},\r\n {key: '19', name: 'Arts Patronage', community: 'ego', ideals: 'prog', axis: 'econ_sub'},\r\n\r\n {key: '20', name: 'State Religion', community: 'state', ideals: 'trad', axis: 'cul_rel'},\r\n {key: '21', name: 'Secularism', community: 'ego', axis: 'cul_rel'},\r\n {key: '22', name: 'State Atheism', community: 'state', ideals: 'prog', axis: 'cul_rel'},\r\n\r\n {key: '23', name: 'Temple of Water 🌊', axis: 'cul_theo'},\r\n {key: '24', name: 'Church of Sun ☀️', axis: 'cul_theo'},\r\n {key: '25', name: 'Chapel of Clover ☘️', axis: 'cul_theo'},\r\n\r\n {key: '26', name: 'Religious Schooling', community: 'state', ideals: 'trad', axis: 'cul_ed'},\r\n {key: '27', name: 'University Grants', community: 'ego', axis: 'cul_ed'},\r\n {key: '28', name: 'College For All', community: 'state', ideals: 'prog', axis: 'cul_ed'},\r\n\r\n {key: '29', name: 'Landowners Vote', community: 'state', ideals: 'trad', axis: 'law_vote', hint: 'only homeowners vote'},\r\n {key: '30', name: 'Poll Tax', community: 'ego', ideals: 'trad', axis: 'law_vote', hint: 'voting requires small amount of cash'},\r\n {key: '31', name: 'Universal Suffrage', ideals: 'prog', axis: 'law_vote', hint: 'all citizens vote'},\r\n\r\n {key: '32', name: 'Scandalous Bribes', community: 'state', ideals: 'trad', axis: 'law_bribe', hint: '5% chance bribery causes scandal'},\r\n {key: '33', name: 'Legal Bribery', community: 'ego', axis: 'law_bribe', hint: 'Bribery has no consequences'},\r\n {key: '34', name: 'Anti-Corruption', community: 'state', ideals: 'prog', axis: 'law_bribe', hint: '25% chance bribery results in fine'},\r\n\r\n {key: '35', name: 'Closed Borders', ideals: 'trad', axis: 'law_imm'},\r\n {key: '36', name: 'Best and Brightest', community: 'state', ideals: 'prog', axis: 'law_imm'},\r\n {key: '37', name: 'Huddle Masses', community: 'ego', ideals: 'prog', axis: 'law_imm'},\r\n\r\n {key: '38', name: 'Head Tax', community:'state', ideals: 'trad', axis: 'tax_basic'},\r\n {key: '39', name: 'Sales Tax', community: 'ego', axis: 'tax_basic'},\r\n {key: '40', name: 'Wealth Tax', community: 'state', ideals: 'prog', axis: 'tax_basic'},\r\n\r\n {key: '38', name: 'Vice Tax', ideals: 'trad', axis: 'tax_second'},\r\n {key: '39', name: 'Property Tax', ideals: 'prog', axis: 'tax_second'},\r\n {key: '40', name: 'Death Tax', ideals: 'prog', axis: 'tax_second'},\r\n\r\n];\r\nexport const PolicyTree: {\r\n    [key in Axis]: IPolicy[]\r\n} = Policies.reduce((dict, pol) => {\r\n    if (!dict[pol.axis])\r\n        dict[pol.axis] =[];\r\n    dict[pol.axis].push(pol);\r\n    return dict;\r\n}, {} as {[key in Axis]: IPolicy[]});\r\n\r\nexport function PolicyByKey(key: string): IPolicy|undefined{\r\n    return Policies.find((p) => p.key == key);\r\n}","\r\nexport interface IEvent{\r\n    icon: string;\r\n    message: string;\r\n}\r\n\r\nexport class PubSub<T>{\r\n    private callbacks: Array<(args: T) => void> = [];\r\n    public publish(args: T){\r\n        this.callbacks.forEach((c) => c(args));\r\n    }\r\n    public subscribe(callback: (args: T) => void){\r\n        this.callbacks.push(callback);\r\n    }\r\n    unsubscribe(callback: (ev: T) => void) {\r\n        this.callbacks.splice(this.callbacks.indexOf(callback), 1);\r\n    }\r\n}\r\n\r\nexport class ChangePubSub extends PubSub<{change: number}>{\r\n}\r\n\r\nexport class EventBus{\r\n    physicalCapital = new ChangePubSub();\r\n    politicalCapital = new ChangePubSub();\r\n    labor = new ChangePubSub();\r\n}","import { IPolicy } from \"../Politics\";\r\nimport { Axis } from \"../World\";\r\n\r\nexport class Government{\r\n    public get policies(): IPolicy[] {\r\n        return Object.values(this.policyTree);\r\n    }\r\n    public policyTree: {[key in Axis]: IPolicy} = {} as {[key in Axis]: IPolicy};\r\n}","import React from \"react\";\r\n\r\nexport interface modalPs{\r\n    show: boolean;\r\n    onClick: () => void;\r\n    closeButtonText?: string;\r\n    hideCloseButton?: boolean\r\n}\r\nexport class Modal extends React.Component<modalPs> {\r\n    constructor(props: modalPs) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        }\r\n    }\r\n    getButton(){\r\n        if (this.props.hideCloseButton)\r\n            return null;\r\n        else\r\n            return <button type=\"button\" className=\"done\" onClick={() => this.props.onClick()} >{this.props.closeButtonText || 'Done'}</button>\r\n    }\r\n    render() {\r\n        if (!this.props.show) {\r\n        return null;\r\n        }\r\n        return (\r\n        <div className=\"modal\">\r\n            {this.props.children}\r\n            {this.getButton()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../Bean\";\r\nimport { Trait } from \"../World\";\r\nimport { keyToName } from \"../App\";\r\n\r\nexport class NeedReadout extends React.Component<{\r\n    beans: Bean[], \r\n    need: (b: Bean) => Trait, \r\n    dire: Trait, \r\n    abundant: Trait,\r\n    className?: string}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    header(){\r\n        if (this.props.children){\r\n            return <b>{this.props.children}</b>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    render(){\r\n        const dire = this.props.beans.filter(b => this.props.need(b) == this.props.dire).length;\r\n        const dire_style = {\r\n            width: Math.floor((dire / this.props.beans.length)*100)+'%'\r\n        }\r\n        const full = this.props.beans.filter(b => this.props.need(b) == this.props.abundant).length;\r\n        const full_style = {\r\n            width: Math.floor((full / this.props.beans.length)*100)+'%'\r\n        }\r\n        return (                \r\n        <div className={this.props.className}>\r\n            {this.header()}\r\n            {/* <span>{keyToName[this.props.report.winner]}</span> */}\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner dire\" style={dire_style}>\r\n                    {(dire > 0 ? `${dire} ${keyToName[this.props.dire]}`: '')}\r\n                </div>\r\n                <div className=\"bar-inner abundant\" style={full_style}>\r\n                    {full > 0 ? full : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import { Trait } from \"../World\";\r\nimport { Bean } from \"../Bean\";\r\n\r\n\r\nexport function reportIdeals(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'ego' as Trait, (b) => b.ideals);\r\n}\r\nexport function reportCommunity(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'state' as Trait, (b) => b.community);\r\n}\r\nexport function reportEthno(beans: Bean[]): {avg: number, winner: Trait}{\r\n    return _report(beans, 'circle' as Trait, (b) => b.ethnicity);\r\n}\r\nexport function _report(beans: Bean[], defWin: Trait, beanPropGet: (bean: Bean) => Trait): {avg: number, winner: Trait}{\r\n    const result = { avg: 0, winner: defWin };\r\n    const all = beans.reduce((stash: any, bean) => {\r\n        const value = beanPropGet(bean);\r\n        if (stash[value] == null) { stash[value] = 1;}\r\n        else { stash[value]++}\r\n        return stash;\r\n    }, {});\r\n    Object.keys(all).forEach((trait) => {\r\n        if (all[trait] > result.avg) {\r\n            result.avg = all[trait];\r\n            result.winner = trait as Trait;\r\n        }\r\n    });\r\n    result.avg /= beans.length;\r\n    return result;\r\n}","import React from \"react\";\r\nimport { City, Trait } from \"./World\";\r\nimport { keyToName } from \"./App\";\r\nimport { Bean } from \"./Bean\";\r\nimport { NeedReadout } from \"./widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno } from \"./simulation/City\";\r\n\r\ninterface OverviewPanelP{\r\n    city?: City,\r\n    beans: Bean[],\r\n    clearCity: () => void;\r\n}\r\n\r\nexport class OverviewPanel extends React.Component<OverviewPanelP> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    hq(){\r\n        if (this.props.city){\r\n            if (this.props.city.partyHQ) {\r\n                return <div>\r\n                    🏢 Has Party HQ<br/>\r\n                    ${this.props.city.yearsPartyDonations.toFixed(2)} donations this year\r\n                </div>\r\n            }\r\n            return <div className=\"text-center\">\r\n                <button type=\"button\" className=\"important\">\r\n                    🏢 Add HQ for $10\r\n                </button><br/>\r\n                <small>+1 action per season &amp; chance for donations</small>\r\n            </div>\r\n        }\r\n        return null;\r\n    }\r\n    render(){\r\n        let header = null;\r\n        if (this.props.city){\r\n            header = <div><b>{this.props.city.name}</b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n            </div>;\r\n        }\r\n        const avg_happy = this.props.beans.reduce((sum, x) => sum+x.lastHappiness, 0) / (this.props.beans.length || 1);\r\n        const avg_cash = this.props.beans.reduce((sum, x) => sum+x.cash, 0) / (this.props.beans.length || 1);\r\n        const avg_approval = this.props.beans.reduce((sum, x) => sum+x.lastPartySentiment, 0) / (this.props.beans.length || 1);\r\n        return (                \r\n        <div>\r\n            {header}\r\n            <div className=\"header\"><b>Demographics</b></div>\r\n            <div>\r\n                <b>Population</b>&nbsp;\r\n                <span>{this.props.beans.length}</span>\r\n            </div>\r\n            <AxisReadout report={reportEthno(this.props.beans)}>Ethnicity</AxisReadout>\r\n            <div className=\"header\"><b>Situation</b></div>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\">Food Security</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\">Housing</NeedReadout>\r\n            <NeedReadout beans={this.props.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\">Healthcare</NeedReadout>\r\n            <b>Avg. Money</b> ${avg_cash.toFixed(2)} &nbsp;\r\n            <b>Avg. Happiness</b> {Math.round(avg_happy)}%\r\n            <div className=\"header\"><b>Electorate</b></div>\r\n            {/* <AxisReadout report={reportIdeals(this.props.beans)}>Sentiment</AxisReadout> */}\r\n            <AxisReadout report={reportCommunity(this.props.beans)}>Community</AxisReadout>\r\n            <AxisReadout report={reportIdeals(this.props.beans)}>Ideals</AxisReadout>\r\n            <div className=\"header\"><b>Party</b></div>\r\n            {\r\n                this.hq()\r\n            }\r\n            <div>\r\n                <b>Approval</b>&nbsp;\r\n                <span>{avg_approval.toFixed(0)}%</span>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class AxisReadout extends React.Component<{report: {avg: number, winner: Trait}}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let maj = 'Leaning';\r\n        if (this.props.report.avg >= .51)\r\n            maj = 'Major'\r\n        if (this.props.report.avg >= .8)\r\n            maj = 'Extreme'\r\n        const percent = Math.floor(this.props.report.avg * 100);\r\n        const style = {\r\n            width: percent+'%'\r\n        }\r\n        return (                \r\n        <div>\r\n            <b>\r\n                { this.props.children }\r\n            </b>&nbsp;&nbsp;\r\n            <span>{maj} {keyToName[this.props.report.winner]}</span>\r\n            <div className=\"bar\">\r\n                <div className=\"bar-inner\" style={style}>\r\n                    {percent}%\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import { Bean } from \"./Bean\";\r\nimport React from \"react\";\r\n\r\ninterface AnimatedBeanP {\r\n  bean: Bean;\r\n  costOfLiving: number;\r\n  sitStill?: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nexport class AnimatedBean extends React.Component<AnimatedBeanP, {paused: boolean}> {\r\n    constructor(props: AnimatedBeanP) {\r\n      super(props);\r\n      this.timerID = null;\r\n      this.delaySeedSec = (Math.random() * 60) + this.props.bean.key;\r\n      this.waitSeedSec = 1 + (Math.random() * 3) + this.props.bean.key;\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    timerID: number|null;\r\n    delaySeedSec: number;\r\n    waitSeedSec: number;\r\n    componentDidMount() {\r\n      this.startWander();\r\n    }\r\n    startWander(){\r\n      this.setState({paused: false});\r\n      this.timerID = window.setTimeout(\r\n        () => this.stopWander(),\r\n        (1000 * this.waitSeedSec)\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      if(this.timerID)\r\n        window.clearInterval(this.timerID);\r\n    }\r\n    stopWander(){\r\n      this.setState({paused: true});\r\n      this.timerID = window.setTimeout(\r\n        () => this.startWander(),\r\n        1000\r\n      );\r\n    }\r\n    getIdea(){\r\n        if (this.state.paused) {\r\n            const idea = this.props.bean.getIdea(this.props.costOfLiving)\r\n            if (idea){\r\n                return <span className={idea.bad ? 'bad idea': 'idea'}>{idea.idea}</span>\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n      let classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n      classes += this.state.paused || !this.props.bean.alive ? ' paused' : '';\r\n      if (this.props.sitStill){\r\n\r\n      } else {\r\n        classes += ' bean-walker';\r\n      }\r\n      let title = `${this.props.bean.food} ${this.props.bean.shelter} ${this.props.bean.health} ${this.props.bean.community} ${this.props.bean.ideals} $${this.props.bean.cash}`\r\n      return (\r\n        <span className={classes+\" bean interactable\"}\r\n          style={{animationDelay: '-'+this.delaySeedSec+'s'}} title={title}\r\n          onClick={(e) => {e.stopPropagation(); this.props.onClick(); }}\r\n        >\r\n          {this.props.bean.getFace()} {this.getIdea()}\r\n        </span>\r\n      )\r\n    }\r\n  }","import { Tile, City } from \"./World\";\r\nimport { Bean } from \"./Bean\";\r\nimport { AnimatedBean } from \"./AnimatedBean\";\r\nimport React from \"react\";\r\n\r\ninterface WorldTilePs {\r\n    tile: Tile;\r\n    city: City;\r\n    costOfLiving: number;\r\n    onClick: () => void;\r\n    onBeanClick: (b: Bean) => void;\r\n  }\r\nexport class WorldTile extends React.Component<WorldTilePs> {\r\n    constructor(props: WorldTilePs) {\r\n      super(props);\r\n      this.state = {\r\n        tile: null,\r\n        city: null,\r\n        activeTileID: null,\r\n      }\r\n    }\r\n    render() {\r\n      const beans = this.props.city.beans.map((b: Bean) => {\r\n        return (\r\n          <AnimatedBean bean={b} key={b.key} costOfLiving={this.props.costOfLiving} onClick={() => this.props.onBeanClick(b)}></AnimatedBean>\r\n        )\r\n      })\r\n      const deaths = this.props.city.historicalBeans.filter((x) => !x.alive).map((b: Bean, i) => {\r\n        return (\r\n          <span key={i} className=\"dead\" style={{left: (i*10)+'px'}}>⚰️</span>\r\n        )\r\n      })\r\n      const houses = this.props.city.houses.map((h: any, i) => {\r\n        const style = {\r\n            left: h.left+'%',\r\n            top: h.top+'%'\r\n        }\r\n        return (\r\n          <span key={i} style={style} className=\"house\">🏡</span>\r\n        )\r\n      })\r\n      return (\r\n        <div className=\"tile\" onClick={() => this.props.onClick()}>\r\n          {deaths}\r\n          {houses}\r\n          {beans}\r\n          <span className=\"tile-label\">{this.props.tile.name}</span>\r\n          <img src={this.props.tile.url} alt={this.props.tile.type} />\r\n        </div>\r\n      )\r\n    }\r\n  }","import { Bean } from \"./Bean\";\r\nimport React from \"react\";\r\nimport { World, TraitJob } from \"./World\";\r\nimport { NeedReadout } from \"./widgets/NeedReadout\";\r\nimport { Listing } from \"./Economy\";\r\n\r\nfunction median(values: Array<number>){\r\n  if(values.length ===0) return 0;\r\n\r\n  values.sort(function(a,b){\r\n    return a-b;\r\n  });\r\n\r\n  var half = Math.floor(values.length / 2);\r\n\r\n  if (values.length % 2)\r\n    return values[half];\r\n\r\n  return (values[half - 1] + values[half]) / 2.0;\r\n}\r\n\r\nexport class EconomyReport extends React.Component<{world: World}, {paused: boolean}> {\r\n    constructor(props: {world: World}) {\r\n      super(props);\r\n      this.state = {\r\n        paused: false\r\n      }\r\n    }\r\n    render() {\r\n      let beans = this.props.world.beans;\r\n      const food_median = median(beans.map(x => x.discrete_food));\r\n      const health_median = median(beans.map(x => x.discrete_health)).toFixed(1);\r\n      const wealth_total = beans.reduce((sum, y) => sum + y.cash, 0);\r\n      const wealth_avg = wealth_total / (beans.length || 1);\r\n      const wealth_median = median(beans.map(x => x.cash));\r\n      const wealth_dire = beans.filter(x => x.cash < 1).length;\r\n      const wealth_marker = Math.max(wealth_avg, wealth_median);\r\n      const wealthy = beans.filter(x => x.cash > wealth_marker);\r\n      const wealthy_percentage = (wealthy.length / (beans.length || 1)) * 100;\r\n      const wealthy_ownership = (wealthy.reduce((s, x) => s+x.cash, 0) / wealth_total)*100;\r\n      const jobs = beans.reduce((obj, b) => {\r\n        obj[b.job] = (obj[b.job] || 0)+1;\r\n        return obj;\r\n      }, {} as {[key in TraitJob]: number});\r\n      const unemployed = (((jobs.jobless || 0) / beans.length)*100).toFixed(1);\r\n      function reducer(obj:  {supply: number, price: number, avg: number, count: number}, l: Listing){\r\n        obj.supply += l.quantity;\r\n        obj.price += l.price;\r\n        obj.count++;\r\n        obj.avg = obj.price / obj.count;\r\n        return obj;\r\n      }\r\n      const food = this.props.world.economy.market.listings['food'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const meds = this.props.world.economy.market.listings['medicine'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      const houses = this.props.world.economy.market.listings['shelter'].reduce(reducer, {supply: 0, price: 0, avg: 0, count: 0});\r\n      return (\r\n        <div>\r\n          <div className=\"pad-4p\">\r\n            <h3>Citizen's Health</h3>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🍞 Food Security</strong> Median:{food_median} meals <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.food} dire=\"hungry\" abundant=\"stuffed\" className=\"big\"></NeedReadout>\r\n              Supply: {food.supply} meals. Avg. price ${food.avg.toFixed(2)} <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.food} meals\r\n            </div>\r\n            <div>\r\n              <strong>🩺 Healthcare</strong> Median:{health_median} <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.health} dire=\"sick\" abundant=\"fresh\" className=\"big\"></NeedReadout>\r\n              Supply: {meds.supply} treatments. Avg. price ${meds.avg.toFixed(2)}  <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.medicine} treatments\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>🏡 Housing</strong> <br/>\r\n              <NeedReadout beans={this.props.world.beans} need={(b) => b.shelter} dire=\"podless\" abundant=\"homeowner\" className=\"big\"></NeedReadout>\r\n              Supply: {houses.supply} units. Avg. price ${houses.avg.toFixed(2)}   <br/>\r\n              Unfulfilled Demand: {this.props.world.economy.unfulfilledSeasonalDemand.shelter} units\r\n            </div>\r\n          </div>\r\n          <div className=\"pad-4p\">\r\n            <h3>Economic Health</h3>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              <strong>💰 Wealth</strong> Household Wealth: {wealth_total.toFixed(2)}<br/>\r\n              {wealth_dire} penniless citizens &nbsp; &nbsp; Cost of Living: ${this.props.world.economy.getCostOfLiving().toFixed(2)} <br/>\r\n              Median: ${wealth_median.toFixed(2)} Average: ${wealth_avg.toFixed(2)} <br/>\r\n              Top {wealthy_percentage.toFixed(1)}% of beans own {wealthy_ownership.toFixed(1)}% of the wealth\r\n            </div>\r\n            <span>\r\n              <strong>Unemployment</strong> {unemployed}% ({jobs.jobless})<br/>\r\n              <strong>Employment</strong>\r\n              <ul className=\"boxes\">\r\n                <li>{jobs.farmer} farmers</li>\r\n                <li>{jobs.builder} builders</li>\r\n                <li>{jobs.doc} doctors</li>\r\n              </ul>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport { IEvent } from \"../events/Events\";\r\n\r\nexport interface EventsPanelPS\r\n{\r\n    events: IEvent[]\r\n}\r\n\r\nexport class EventsPanel extends React.Component<EventsPanelPS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render(){\r\n        let events = this.props.events.map((e, i) => {\r\n            return <div key={i}>\r\n                <span>{e.icon}</span>&nbsp;\r\n                <span>{e.message}</span>\r\n            </div>\r\n        });\r\n        if (this.props.events.length === 0){\r\n            events = [<div key={0}>\r\n                <small>No events yet this year</small>\r\n            </div>]\r\n        }\r\n        return (                \r\n        <div>\r\n            <div>\r\n                <b>Events</b>\r\n            </div>\r\n            {events}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { City, Trait, IHappinessModifier } from \"./World\";\r\nimport { keyToName } from \"./App\";\r\nimport { Bean } from \"./Bean\";\r\nimport { NeedReadout } from \"./widgets/NeedReadout\";\r\nimport { reportIdeals, reportCommunity, reportEthno } from \"./simulation/City\";\r\nimport { Economy } from \"./Economy\";\r\nimport { Party } from \"./Politics\";\r\nimport { IEvent, EventBus } from \"./events/Events\";\r\nimport { withinLastYear } from \"./simulation/Time\";\r\nimport { Government } from \"./simulation/Government\";\r\n\r\ninterface BeanPanelP{\r\n    city: City,\r\n    bean: Bean,\r\n    economy: Economy,\r\n    law: Government,\r\n    party: Party,\r\n    clearCity: () => void;\r\n    bus: EventBus\r\n    solicit: (bean: Bean) => boolean;\r\n    insult: (bean: Bean) => void;\r\n    support: (bean: Bean) => void;\r\n}\r\n\r\ninterface BeanPanelS{\r\n    faceOverride?: string;\r\n}\r\n\r\nexport class BeanPanel extends React.Component<BeanPanelP, BeanPanelS> {\r\n    constructor(props: BeanPanelP) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    solicit = () => {\r\n        if (this.props.solicit(this.props.bean)){\r\n            this.setState({faceOverride: '😇'});\r\n            this._resetFace();\r\n        }\r\n    }\r\n    insult = () => {\r\n        this.props.insult(this.props.bean);\r\n        this.setState({faceOverride: '😡'});\r\n        this._resetFace();\r\n    }\r\n    support = () => {\r\n        this.props.support(this.props.bean);\r\n        this.setState({faceOverride: '🤩'});\r\n        this._resetFace();\r\n    }\r\n    _resetFace(){\r\n        setTimeout(() => {\r\n            this.setState({faceOverride: undefined})\r\n        }, 5000);\r\n    }\r\n    happyTable(mods: IHappinessModifier[]){\r\n        return mods.filter((y) => y.mod != 0).map((x, i) => {\r\n            return <tr key={i}>\r\n                <td className=\"small text-right\">{x.reason}</td>\r\n                <td className=\"small\">{Math.round(x.mod * 100)}%</td>\r\n            </tr>\r\n        });\r\n    }\r\n    render(){\r\n        const classes = this.props.bean.job + ' ' + this.props.bean.ethnicity;\r\n        const chance = this.props.bean.chanceToDonate(this.props.economy, true);\r\n        const chanceText = (chance * 100).toFixed(0) + '% to gain Cash';\r\n        const actionLimit = this.props.party.activeHQs.length + 2;\r\n        return (                \r\n        <div>\r\n            <div>\r\n                <b>{this.props.bean.name}&nbsp;\r\n                <small>\r\n                    of {this.props.city.name}\r\n                </small>\r\n                </b>\r\n                <button type=\"button\" className=\"pull-r\" onClick={() => this.props.clearCity()} >❌</button>\r\n            </div>\r\n            <div className=\"bean-view\">                \r\n                <span className={classes+\" bean\"}>\r\n                    {\r\n                        this.state.faceOverride === undefined ? this.props.bean.getFace() : this.state.faceOverride\r\n                    }\r\n                </span>\r\n            </div>\r\n            <table className=\"width-100p\"><tbody>\r\n                <tr>\r\n                    <td>\r\n                        <b>Ethnicity</b> \r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.ethnicity]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2} className=\"header\">\r\n                        <b>Situation</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Food Security</b> \r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.food]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Shelter</b>\r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.shelter]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Healthcare</b>\r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.health]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Money</b>\r\n                    </td>\r\n                    <td>\r\n                        ${this.props.bean.cash.toFixed(2)}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Happiness</b>\r\n                    </td>\r\n                    <td>\r\n                        {Math.round(this.props.bean.lastHappiness)}%\r\n                    </td>\r\n                </tr>\r\n                {this.happyTable(this.props.bean.getHappinessModifiers(this.props.economy, this.props.city, this.props.law))}\r\n                <tr>\r\n                    <td>\r\n                        <b>Community</b>\r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.community]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Ideal</b>\r\n                    </td>\r\n                    <td>\r\n                        {keyToName[this.props.bean.ideals]}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2} className=\"header\">\r\n                        <b>Party</b>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <b>Approval</b>\r\n                    </td>\r\n                    <td>\r\n                        {Math.round(this.props.bean.lastPartySentiment)}%\r\n                    </td>\r\n                </tr>\r\n                {this.happyTable(this.props.bean.getSentimentModifiers(this.props.economy, this.props.city, this.props.law, this.props.party).party)}\r\n                {/* <tr>\r\n                    <td>\r\n                        <b>Party Loyalty</b>\r\n                    </td>\r\n                    <td>\r\n                        <span>{Math.round(this.props.bean.partyLoyalty * 100)}%</span>\r\n                    </td>\r\n                </tr> */}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" disabled={chance < 0.05} className=\"button card\" onClick={this.solicit} title={chanceText}>\r\n                    🤲 Solicit Donation\r\n                    <small>+Cash -Labor</small>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\" onClick={this.support} disabled={!this.props.bean.canSupport()}\r\n                    title=\"Spend Political Capital to increase this bean's party approval\"\r\n                >😘 Endorse\r\n                    <small>+Approval -Influence</small>\r\n                </button>\r\n                <button type=\"button\" className=\"button card\" onClick={this.solicit} title={chanceText}>\r\n                    💪 Recruit\r\n                    <small>+Labor -Influence</small>\r\n                </button>\r\n            </div>\r\n            <div className=\"card-parent\">\r\n                <button type=\"button\" className=\"button card\" onClick={this.insult} disabled={!this.props.bean.canInsult()}\r\n                    title=\"Decrease this bean's party approval to gain Political Capital\"\r\n                >\r\n                    😈 Denounce\r\n                    <small>+Influence -Approval</small>\r\n                </button>\r\n                <button type=\"button\" disabled={this.props.party.materialCapital < 1} className=\"button card\" onClick={this.solicit} title=\"Pay $ to increase approval\">\r\n                    💰 Bribe\r\n                    <small>+Approval -Cash</small>\r\n                </button>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <small>\r\n                    {actionLimit - this.props.party.seasonalActions} of {actionLimit} Activities remaining\r\n                </small>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { City } from \"../World\";\r\n\r\nexport interface DropdownPS<T>{\r\n    options: Array<T&{key: any}>,\r\n    onChange: (key: any) => void,\r\n    hint?: string,\r\n    value?: any\r\n}\r\ninterface DropdownS{\r\n    key: any;\r\n}\r\n\r\nexport abstract class Dropdown<T> extends React.Component<DropdownPS<T>, DropdownS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            key: props.value || null\r\n        }\r\n    }\r\n    onChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.onChange(e.target.value);\r\n    }\r\n    hint(){\r\n        if (this.props.hint){\r\n            return <option value=\"\" disabled selected hidden>{this.props.hint}</option>\r\n        } \r\n        return undefined;\r\n    }\r\n    abstract getTextForOption(data: T): string;\r\n    options(){\r\n        return this.props.options.map((o) => {\r\n            return <option value={o.key} key={o.key} title={this.getTitleForOption(o)}>\r\n                {this.getTextForOption(o)}\r\n            </option>\r\n        })\r\n    }\r\n    render(){\r\n        return <select onChange={this.onChange} value={this.state.key} required={this.props.hint != null}>\r\n            {this.hint()}\r\n            {this.options()}\r\n        </select>\r\n    }\r\n    protected getTitleForOption(data: T): string|undefined{\r\n        return undefined;\r\n    }\r\n}\r\nexport class CityDropdown extends Dropdown<City>{\r\n    getTextForOption(data: City): string{\r\n        return data.name;\r\n    }\r\n}","import React, { ChangeEvent } from \"react\";\r\nimport { TraitCommunity, TraitIdeals, City } from \"../World\";\r\nimport { CityDropdown } from \"../widgets/Dropdown\";\r\n\r\nexport interface FoundPartyPS\r\n{\r\n    cities: City[],\r\n    onFound: (state: FoundPartyS) => void\r\n}\r\nexport interface FoundPartyS\r\n{\r\n    community: TraitCommunity|null\r\n    ideal: TraitIdeals|null,\r\n    name: string,\r\n    slogan: string,\r\n    members: string,\r\n    goal: string,\r\n    cityKey: number\r\n}\r\n\r\nexport class FoundParty extends React.Component<FoundPartyPS, FoundPartyS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            community: null,\r\n            ideal: null,\r\n            name: \"Citizen's Party\",\r\n            slogan: \"Vote for us!\",\r\n            members: \"Citizens\",\r\n            goal: \"Legislation\",\r\n            cityKey: 0\r\n        }\r\n    }\r\n    onCommunity(val: TraitCommunity){\r\n        this.setState({community: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onIdeal(val: TraitIdeals){\r\n        this.setState({ideal: val}, () => {\r\n            this.onBigFourChange();\r\n        });\r\n    }\r\n    onBigFourChange(){\r\n        if (this.state.community === 'ego' && this.state.ideal === 'trad'){\r\n            this.setState({\r\n                name: 'Liberal Family Party',\r\n                slogan: \"Father Knows Best.\",\r\n                members: \"Farmers\", goal: \"Tariffs\"});\r\n        } else if (this.state.community === 'ego' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Free Worker's Party\",\r\n                slogan: \"Liberty for Labor!\",\r\n                members: \"Builders\", goal: \"Right to Strike\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'trad') {\r\n            this.setState({\r\n                name: \"National Landowners' Party\",\r\n                slogan: \"For Culture & Country!\",\r\n                members: \"Homeowners\", goal: \"Repeal Property Tax\"});\r\n        } else if (this.state.community === 'state' && this.state.ideal === 'prog') {\r\n            this.setState({\r\n                name: \"Social People's Party\",\r\n                slogan: \"Equality, Guaranteed.\",\r\n                members: \"Penniless\", goal: \"Food Welfare\"});\r\n        }\r\n    }\r\n    onName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({name: e.target.value});\r\n    }\r\n    onSlogan = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({slogan: e.target.value});\r\n    }\r\n    onCity = (key: any) => {\r\n        this.setState({cityKey: +key});\r\n    }\r\n    render(){\r\n        return <div>            \r\n          <h2>Found your Political Party</h2>\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My fellow party members believe the\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"state\" checked={this.state.community === 'state'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)} /> <b>Government</b> 🐘 {/*🤝*/}\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"community\" value=\"ego\" checked={this.state.community === 'ego'} onChange={(e) => this.onCommunity(e.currentTarget.value as TraitCommunity)}/> <b>Individual</b> 🦅 {/*✌️*/}\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              is responsible for well-being.\r\n            </div>\r\n            <div>\r\n              My fellow party members believe in\r\n              <div>\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"trad\" checked={this.state.ideal === 'trad'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)}/> <b>Traditional</b> {/*🕯️ 🔮*/} 👑\r\n                </label>\r\n                &nbsp;&nbsp;or&nbsp;&nbsp;\r\n                <label>\r\n                  <input type=\"radio\" name=\"ideal\" value=\"prog\" checked={this.state.ideal === 'prog'} onChange={(e) => this.onIdeal(e.currentTarget.value as TraitIdeals)} /> <b>Progressive</b> {/*💡 🔬*/} 🎓\r\n                </label>\r\n              </div>\r\n              &nbsp;\r\n              social values.\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My party's first members are mostly <b>{this.state.members}</b>\r\n            </div>\r\n            <div>\r\n              My party's first major goal is to pass <b>{this.state.goal}</b>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My party is named <input type=\"text\" value={this.state.name} onChange={this.onName} />\r\n            </div>\r\n            <div>\r\n              My party's slogan is <input type=\"text\" value={this.state.slogan} onChange={this.onSlogan}  />\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-2\">\r\n            <div>\r\n              My party is based in&nbsp;<CityDropdown options={this.props.cities} onChange={this.onCity}></CityDropdown>\r\n            </div>\r\n            <div>\r\n              \r\n            </div>\r\n          </div>\r\n          <button type=\"button\" disabled={this.state.community == null || this.state.ideal == null} className=\"important btn-found-party\" onClick={() => this.props.onFound(this.state)}>Found the {this.state.name}</button>\r\n        </div>\r\n    }\r\n}","import React from \"react\";\r\nimport { IPolicy } from \"../Politics\";\r\nimport { Dropdown } from \"./Dropdown\";\r\nimport { TraitCommunityIcon, TraitIdealsIcon } from \"../World\";\r\n\r\nexport class PolicyDropdown extends Dropdown<IPolicy|undefined>{\r\n    getTextForOption(data: IPolicy): string{\r\n        return `${data.name} ${data.community ? TraitCommunityIcon[data.community]: ''}${data.ideals ? TraitIdealsIcon[data.ideals]: ''}`;\r\n    }\r\n    getTitleForOption(data: IPolicy): string|undefined{\r\n        return data.hint;\r\n    }\r\n}","import React from \"react\";\r\nimport { World, Axis, TraitCommunityIcon, TraitIdealsIcon } from \"../World\";\r\nimport { policy, keyToName } from \"../App\";\r\nimport { PolicyDropdown } from \"../widgets/PolicyDropdown\";\r\nimport { PolicyTree, PolicyByKey, IPolicy } from \"../Politics\";\r\n\r\nexport interface PartyOverviewPS{\r\n    world: World;\r\n    setPolicy(axis: Axis, policy: IPolicy): void;\r\n}\r\ninterface PartyOverviewS{\r\n\r\n}\r\n\r\nexport class PartyOverview extends React.Component<PartyOverviewPS, PartyOverviewS> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    setPolicy(axis: Axis){\r\n        return (policyKey: string) => {\r\n            const pol = PolicyByKey(policyKey);\r\n            if (pol){\r\n                this.props.setPolicy(axis, pol);\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        const hqs = this.props.world.cities.filter((x) => x.partyHQ != null);\r\n        const hq_names = hqs.map((x, i) => <i>{(i > 0 ? ', ': '')}{x.name}</i>);\r\n        const actionLimit = this.props.world.party.activeHQs.length + 2;\r\n\r\n        return <div>\r\n            <div className=\"col-2\">\r\n            <div>\r\n              <h2>\r\n                {this.props.world.party.name}\r\n              </h2>\r\n            </div>\r\n            <div>              \r\n              <h2 className=\"slogan-group\">\r\n                <span className=\"slogan-before\">\r\n                  <span className=\"align-base\">\r\n                    ★★★\r\n                  </span>\r\n                </span>\r\n                <span className=\"slogan\">\r\n                  {this.props.world.party.slogan}\r\n                </span>\r\n                <span className=\"slogan-after\">\r\n                  <span className=\"align-base\">\r\n                    ★★★\r\n                  </span>\r\n                </span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"policies\">\r\n            {this.props.world.party.availablePolicies.map((p) => policy(p))}\r\n          </div>\r\n          <div className=\"pad-4p\">\r\n                <h3 className=\"small\">\r\n                    Platform\r\n                    <button type=\"button\" className=\"pull-r\">\r\n                    🧪 View Political Science\r\n                    </button>\r\n                </h3>\r\n                <div className=\"horizontal\">\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Welfare</div>\r\n                        <PolicyDropdown options={PolicyTree.wel_food} value={this.props.world.party.platform.wel_food} onChange={this.setPolicy('wel_food')} hint=\"Nutrition\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.wel_house} value={this.props.world.party.platform.wel_house} onChange={this.setPolicy('wel_house')} hint=\"Housing\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.wel_health} value={this.props.world.party.platform.wel_health} onChange={this.setPolicy('wel_health')} hint=\"Healthcare\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Taxation</div>\r\n                        <PolicyDropdown options={PolicyTree.tax_basic} value={this.props.world.party.platform.tax_basic} onChange={this.setPolicy('tax_basic')} hint=\"Basic Tax\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.tax_second} value={this.props.world.party.platform.tax_second} onChange={this.setPolicy('tax_second')} hint=\"Secondary Tax\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Economics</div>\r\n                        <PolicyDropdown options={PolicyTree.econ_ex} value={this.props.world.party.platform.econ_ex} onChange={this.setPolicy('econ_ex')} hint=\"External\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.econ_labor} value={this.props.world.party.platform.econ_labor} onChange={this.setPolicy('econ_labor')} hint=\"Labor\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.econ_sub} value={this.props.world.party.platform.econ_sub} onChange={this.setPolicy('econ_sub')} hint=\"Subsidies\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Culture</div>\r\n                        <PolicyDropdown options={PolicyTree.cul_rel} value={this.props.world.party.platform.cul_rel} onChange={this.setPolicy('cul_rel')} hint=\"Religion\"></PolicyDropdown>\r\n                        {\r\n                            this.props.world.party.platform.cul_rel && this.props.world.party.platform.cul_rel.key == '20' ?\r\n                            <PolicyDropdown options={PolicyTree.cul_theo} value={this.props.world.party.platform.cul_theo} onChange={this.setPolicy('cul_theo')} hint=\"Theocracy\"></PolicyDropdown> : null\r\n                        }\r\n                        <PolicyDropdown options={PolicyTree.cul_ed} value={this.props.world.party.platform.cul_ed} onChange={this.setPolicy('cul_ed')} hint=\"Education\"></PolicyDropdown>\r\n                    </div>\r\n                    <div className=\"vertical reverse\">\r\n                        <div className=\"platform-subheader\">Law</div>\r\n                        <PolicyDropdown options={PolicyTree.law_vote} value={this.props.world.party.platform.law_vote} onChange={this.setPolicy('law_vote')} hint=\"Voting\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.law_bribe} value={this.props.world.party.platform.law_bribe} onChange={this.setPolicy('law_bribe')} hint=\"Corruption\"></PolicyDropdown>\r\n                        <PolicyDropdown options={PolicyTree.law_imm} value={this.props.world.party.platform.law_imm} onChange={this.setPolicy('law_imm')} hint=\"Immigration\"></PolicyDropdown>\r\n                    </div>\r\n                </div>\r\n                <div className=\"horizontal\">\r\n                    <div className=\"grow-1 platform-identity\">\r\n                        { keyToName[this.props.world.party.community]}\r\n                        &nbsp;\r\n                        {TraitCommunityIcon[this.props.world.party.community]}\r\n                    </div>\r\n                    <div className=\"grow-1 platform-identity\">\r\n                        { keyToName[this.props.world.party.ideals]}\r\n                        &nbsp;\r\n                        {TraitIdealsIcon[this.props.world.party.ideals]}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        Legislative Focus: &nbsp;\r\n                        <PolicyDropdown \r\n                            options={Object.values(this.props.world.party.platform).filter(x => x != null)}\r\n                            onChange={() => {}}\r\n                        ></PolicyDropdown>\r\n                    </label>\r\n                </div>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            <div>\r\n                <h3 className=\"small\">Finances</h3>\r\n                <small>Where money is being raised and spent</small>\r\n                <table className=\"classic\">\r\n                {/* <thead>\r\n                    <tr>\r\n                        <th colSpan={3}>Finances</th>\r\n                    </tr>\r\n                </thead> */}\r\n                <tbody>\r\n                <tr>\r\n                    <th rowSpan={3}>Revenue</th>\r\n                    <td>\r\n                        Solicitations\r\n                    </td>\r\n                    <td> +$1 </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Unsolicited Donations</td>\r\n                    <td>+$1</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Fundraisers</td>\r\n                    <td>+$1</td>\r\n                </tr>\r\n                <tr>\r\n                    <th className=\"border-t\" rowSpan={2}>Expenses</th>\r\n                    <td className=\"border-t\">\r\n                        Charities\r\n                    </td>\r\n                    <td className=\"border-t\">\r\n                        -$1\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        Propaganda\r\n                    </td>\r\n                    <td>\r\n                        -$1\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th className=\"border-t\" rowSpan={2}>Physical<br/>Capital</th>\r\n                    <td className=\"border-t\">\r\n                        Income\r\n                    </td>\r\n                    <td className=\"border-t\">\r\n                        ${this.props.world.party.seasonalIncome.toFixed(2)}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        On Hand\r\n                    </td>\r\n                    <td>\r\n                        ${this.props.world.party.materialCapital.toFixed(2)}\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n            <div>\r\n                <h3 className=\"small\">Headquarters</h3>\r\n                <small>Party HQs add Activities and cash donations</small>\r\n                <div>\r\n                    <strong>HQ Locations:</strong> {hq_names}\r\n                </div>\r\n                <h3 className=\"small\">Activities</h3>\r\n                <small>Number of things that can be done in one season</small>\r\n                <div>\r\n                    2 free actions + {this.props.world.party.activeHQs.length} Activities from party HQs\r\n                </div>\r\n                <div>\r\n                    {actionLimit - this.props.world.party.seasonalActions} Activities remaining this season\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { World, Tile, City, TraitGood, Axis } from './World';\nimport { GenerateWorld, GeneratePartyHQ } from './WorldGen';\nimport { Modal } from './Modal';\nimport { OverviewPanel } from './OverviewPanel';\nimport { Bean } from './Bean';\nimport { AnimatedBean } from './AnimatedBean';\nimport { WorldTile } from './WorldTile';\nimport { EconomyReport } from './EconomyReport';\nimport { CharityPanel } from './CharityPanel';\nimport { PoliticalEffect, Policy, CityPartyHQ, IPolicy } from './Politics';\nimport { EventsPanel } from './right-panel/Events';\nimport { BeanPanel } from './BeanPanel';\nimport { FoundParty, FoundPartyS } from './modal-content/FoundParty';\nimport { PartyOverview } from './modal-content/PartyOverview';\nimport { BubbleText } from './widgets/BubbleText';\nimport { Season, Now } from './simulation/Time';\nimport { SocialGraph } from './widgets/SocialGraph';\n\n\n\nexport const keyToName = {\n  state: 'Statist', ego: 'Egoist', \n  trad: 'Traditionalist', prog: 'Progressive', \n  circle: 'Circle', square: 'Square', triangle: 'Triangle', \n  book: 'Book', heart: 'Heart', music: 'Music', noFaith: 'Faithless',\n  hungry: 'Hungry', sated: 'Sated', stuffed: 'Stuffed',\n  podless: 'Homeless', crowded: 'Crowded', homeowner: 'Homeowner',\n  sick: 'Sick', bruised: 'Bruised', fresh: 'Fresh'\n};\nexport const magToText = {'-3':'---', '-2':'--', '-1':'-', '1':'+', '2':'++', '3':'+++' };\nfunction magToTextSw(magnitude: number){\n  switch(magnitude) {\n    case -3:\n      return '---';\n    case -2:\n      return '--';\n    case -1:\n      return '-';\n    case 1:\n      return '+';\n    case 2:\n      return '++';\n    case 3:\n      return '+++';\n    default:\n      return '/';\n  }\n}\nfunction compass(p: PoliticalEffect){\n  return (\n    <span className=\"badge\">\n      { keyToName[p.key] }\n      { magToTextSw(p.mag) }\n    </span>\n  )\n}\nexport function policy(p: Policy){\n  return (\n    <div className=\"policy\" key={p.key}>\n      <b>{p.key}</b>\n      <p>\n        {p.fx.map((x) => compass(x))}\n      </p>\n    </div>\n  )\n}\n\nexport type ModalView = 'policy'|'economy'|'campaign'|'party_creation'|'party'|'polisci';\ninterface AppPs{\n}\ninterface AppState{\n  world: World,\n  activeCityID: number|null;\n  activeBeanID: number|null;\n  activeModal: ModalView|null;\n  activeMain: 'geo'|'network';\n  activeRightPanel: 'events'|'overview'|'goals';\n}\n\nclass App extends React.Component<AppPs, AppState>{\n  constructor(props: AppPs) {\n    super(props);\n    this.state = {\n      world: GenerateWorld(),\n      activeCityID: null,\n      activeBeanID: null,\n      activeMain: 'geo',\n      activeModal: 'party_creation',\n      activeRightPanel: 'overview'\n    };\n    this.state.world.calculateComputedState();\n  }\n  componentDidMount(){\n    document.addEventListener(\"keyup\", this.escFunction, false);\n  }\n  componentWillUnmount(){\n    document.removeEventListener(\"keyup\", this.escFunction);\n  }\n  escFunction = (event: KeyboardEvent) => {\n    if(event.keyCode === 13) {\n      this.endTurn();\n    }\n  }\n  endTurn() {\n    this.state.world.next();\n    this.setState({world: this.state.world});\n  }\n  foundParty = (state: FoundPartyS) => {\n    this.state.world.party.name = state.name;\n    this.state.world.party.slogan = state.slogan;\n    if (state.community)\n      this.state.world.party.community = state.community;\n    if (state.ideal)\n      this.state.world.party.ideals = state.ideal;\n    const city = this.state.world.cities.find((x) => x.key == state.cityKey);\n    if (city) {\n      city.beans.forEach((b) => {\n        if(state.community) b.community = state.community;\n        if(state.ideal) b.ideals = state.ideal;\n      })\n      GeneratePartyHQ(city, this.state.world.party);\n    }\n    this.state.world.calculateComputedState();\n    this.setState({\n      world: this.state.world,\n      activeModal: null});\n  }\n  foundCharity = (good: TraitGood, name: string, budget: number) => {\n    this.state.world.addCharity(good, name, budget);\n    this.setState({world: this.state.world});\n  }\n  insult = (bean: Bean) => {\n    this.state.world.party.politicalCapital += 1;\n    bean.lastInsultDate = Now(this.state.world);\n    if (bean.city)\n      bean.calculateBeliefs(this.state.world.economy, bean.city, this.state.world.law, this.state.world.party);\n    this.setState({world: this.state.world});\n    this.state.world.bus.politicalCapital.publish({change: 1});\n  }\n  support = (bean: Bean) => {\n    this.state.world.party.politicalCapital -= 1;\n    bean.lastApprovalDate = Now(this.state.world);\n    if (bean.city)\n      bean.calculateBeliefs(this.state.world.economy, bean.city, this.state.world.law, this.state.world.party);\n    this.setState({world: this.state.world});\n    this.state.world.bus.politicalCapital.publish({change: -1});\n  }\n  solicit = (bean: Bean) => {\n    const donation = bean.maybeDonate(this.state.world.economy, true);\n    if (donation > 0){\n      this.state.world.party.materialCapital += donation;\n      this.setState({world: this.state.world});\n      this.state.world.bus.physicalCapital.publish({change: donation});\n      return true;\n    } else {\n      return false;\n    }\n  }\n  setPolicy = (axis: Axis, policy: IPolicy) => {\n    this.state.world.party.platform[axis] = policy;\n    this.state.world.calculateComputedState();\n    this.setState({world: this.state.world});\n  }\n  getPanel(){\n    switch(this.state.activeRightPanel){\n      case 'overview':\n        if (this.state.activeCityID == null) {\n          return <OverviewPanel beans={this.state.world.beans} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>\n        } else {\n          const city = this.state.world.cities.find((x) => x.key == this.state.activeCityID);\n          if (city) {\n            if (this.state.activeBeanID != null) {\n              const bean = city.beans.find((y) => y.key == this.state.activeBeanID);\n              if (bean)\n                return <BeanPanel bean={bean} city={city} \n                economy={this.state.world.economy} party={this.state.world.party} bus={this.state.world.bus} law={this.state.world.law}\n                solicit={this.solicit} insult={this.insult} support={this.support}\n                clearCity={() => this.setState({activeCityID: null, activeBeanID: null})}></BeanPanel>\n            }\n\n            return <OverviewPanel beans={city?.beans} city={city} clearCity={() => this.setState({activeCityID: null})}></OverviewPanel>            \n          }\n          else\n            return <div>\n            </div>\n        }\n      case 'goals':\n        return <div>\n          <div><b>Goals</b></div>\n          <ul>\n            <li>\n            ☑️ Create Party\n            </li>\n            <li>\n            ⭕️ Solicit Donations\n              <span title=\"Select a single Bean and Solicit Donation\">❔</span>\n            </li>\n            <li>\n            ⭕️ Review Party\n            </li>\n            <li>\n            ⭕️ Create Propaganda\n            </li>\n            <li>\n            ⭕️ Pass Legislation\n            </li>\n          </ul>\n        </div>\n      case 'events':\n        return <EventsPanel events={this.state.world.yearsEvents}></EventsPanel>\n    }\n  }\n  renderGeo() {\n    const COL = this.state.world.economy.getCostOfLiving();\n    return this.state.world.cities.map((t) => {\n      return (\n        <WorldTile tile={t} city={t} costOfLiving={COL} key={t.key}\n          onClick={() => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeBeanID: null})} \n          onBeanClick={(b) => this.setState({activeCityID: t.key, activeRightPanel: 'overview', activeBeanID: b.key})} \n          ></WorldTile>\n      )\n    });\n  }\n  renderNetwork(){\n    return <div>\n      <div className=\"horizontal max-w-500 m-t-2em\">\n        <button type=\"button\">\n        😎 Influence\n        </button>\n        <button type=\"button\">\n        🚩 Party Preference\n        </button>\n        <button type=\"button\">\n        📈 Demographics\n        </button>\n      </div>\n      <SocialGraph costOfLiving={this.state.world.economy.getCostOfLiving()} \n        beans={this.state.world.beans}\n        onClick={(b) => this.setState({activeCityID: b.cityKey, activeRightPanel: 'overview', activeBeanID: b.key})} ></SocialGraph>\n    </div>\n  }\n  main(){\n    switch(this.state.activeMain){\n      case 'network':\n        return this.renderNetwork();\n      default:\n        return this.renderGeo();\n    }\n  }\n  render() {\n    const season = Season[this.state.world.date.season];\n    const seasonalCost = this.state.world.party.activeCampaigns.reduce((sum, x) => sum +x.seasonalCost, 0);\n    return (\n    <div className=\"canvas\">\n      <div className=\"world\">\n        {this.main()}\n      </div>\n      <div className=\"overlay\">\n        <Modal show={this.state.activeModal == 'party_creation'} onClick={() => this.setState({activeModal: null})} hideCloseButton={true}>\n          <FoundParty cities={this.state.world.cities} onFound={this.foundParty}></FoundParty>\n        </Modal>\n        <Modal show={this.state.activeModal == 'party'} onClick={() => this.setState({activeModal: null})}>\n          <PartyOverview world={this.state.world} setPolicy={this.setPolicy}></PartyOverview>\n        </Modal>\n        <Modal show={this.state.activeModal == 'polisci'} onClick={() => this.setState({activeModal: null})} hideCloseButton={true}>\n          <div className=\"col-2\">\n            <h2>Political Science</h2>\n            <div>\n\n            </div>\n          </div>\n        </Modal>\n        <Modal show={this.state.activeModal == 'policy'} onClick={() => this.setState({activeModal: null})}>\n          <div className=\"col-2\">\n            <h2>Government</h2>\n            <div>\n\n            </div>\n          </div>\n          <div className=\"pad-4p\">\n            <h3>Policy</h3>\n            <div className=\"horizontal\">\n              <div className=\"vertical\">\n                <strong>Welfare</strong>\n                <div>Nutrition: {this.state.world.law.policyTree.wel_food.name}</div>\n                <div>Housing: {this.state.world.law.policyTree.wel_house.name}</div>\n                <div>Healthcare: {this.state.world.law.policyTree.wel_health.name}</div>\n              </div>\n              <div className=\"vertical\">\n                <strong>Taxation</strong>\n                <div>{this.state.world.law.policyTree.tax_basic.name}</div>\n                <div>{this.state.world.law.policyTree.tax_second.name}</div>\n              </div>\n              <div className=\"vertical\">\n                <strong>Economics</strong>\n                <div>External: {this.state.world.law.policyTree.econ_ex.name}</div>\n                <div>Labor: {this.state.world.law.policyTree.econ_labor.name}</div>\n                <div>Subsidies: {this.state.world.law.policyTree.econ_sub.name}</div>\n              </div>\n              <div className=\"vertical\">\n                <strong>Culture</strong>\n                <div>Religion: {this.state.world.law.policyTree.cul_rel.name}</div>\n                {this.state.world.law.policyTree.cul_rel.key == '20' ? <div>Theocracy: {this.state.world.law.policyTree.cul_theo.name}</div>: null}\n                <div>Education: {this.state.world.law.policyTree.cul_ed.name}</div>\n              </div>\n              <div className=\"vertical\">\n                <strong>Law</strong>\n                <div>Voting: {this.state.world.law.policyTree.law_vote.name}</div>\n                <div>Corruption: {this.state.world.law.policyTree.law_bribe.name}</div>\n                <div>Immigration: {this.state.world.law.policyTree.law_imm.name}</div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n        <Modal show={this.state.activeModal == 'campaign'} onClick={() => this.setState({activeModal: null})}>\n          <div className=\"pad-4p\">\n            <div className=\"subheader\">\n                <h3>Propaganda</h3>\n                <button type=\"button\" className=\"callout\" onClick={() => void(0)} >🎙️ Buy Propaganda</button>\n            </div>\n            <span>\n              Propaganda changes beans' feelings on a wide variety of topics.\n            </span>\n            <div className=\"card-parent\">\n              <button type=\"button\" className=\"card button\">\n                <span className=\"h\">\n                  📺 Broadcast Campaign\n                </span>\n                <small>Approval+ Cash-</small>\n                <span className=\"p\">\n                  Small chance to increase Approval among all beans\n                </span>\n              </button>\n              <button type=\"button\" className=\"card button\">\n                <span className=\"h\">\n                  👋 Canvassing\n                </span>\n                <small>Approval+ Labor-</small>\n                <span className=\"p\">\n                  Chance to increase Approval on a few random beans\n                </span>\n              </button>\n              <button type=\"button\" className=\"card button\">\n                <span className=\"h\">\n                  🗞️ Print Campaign\n                </span>\n                <small>Approval+ Cash-</small>\n                <span className=\"p\">\n                  Chance to increase Approval on wealthy beans\n                </span>\n              </button>\n            </div>\n            <div className=\"subheader\">\n                <h3>Appearances</h3>\n                <button type=\"button\" className=\"callout\" onClick={() => void(0)} >💬 Schedule Appearance</button>\n            </div>\n            <span>\n              Appearances have limited reach, but have powerful effects.\n            </span>\n            <div className=\"card-parent\">\n              <button type=\"button\" className=\"card button\">\n                <span className=\"h\">\n                🤔 Debating\n                </span>\n                <small>\n                  Labor-\n                </small>\n                <span className=\"p\">\n                  Chance to gain or lose Influence\n                </span>\n              </button>\n              <button type=\"button\" className=\"card button\">\n                <span className=\"h\">\n                📸 Photo Op\n                </span>\n                <small>\n                  Labor-\n                </small>\n                <span className=\"p\">\n                  Increases Approval within one Social Group\n                </span>\n              </button>\n              <button type=\"button\" className=\"card button\">\n                <span className=\"h\">\n                  🎤 Speechmaking\n                </span>\n                <small>\n                  Labor-\n                </small>\n                <span className=\"p\">\n                  Increases chance of Donations in a single City\n                </span>\n              </button>\n              <button type=\"button\" className=\"card button\">\n                <span className=\"h\">\n                🙋 Town Hall\n                </span>\n                <small>\n                  Labor-\n                </small>\n                <span className=\"p\">\n                  Suppresses negative Approval in a single city                     \n                </span>\n              </button>\n            </div>\n            {/* <CharityPanel world={this.state.world} onFoundCharity={this.foundCharity}></CharityPanel>\n            <div>\n              <b>Campaign Finances</b> <br/>\n              <b>Expenses</b> ${seasonalCost} <b>Surplus</b> ${this.state.world.party.seasonalIncome - seasonalCost}\n            </div> */}\n          </div>\n        </Modal>\n        <Modal show={this.state.activeModal == 'economy'} onClick={() => this.setState({activeModal: null})}>\n          {(this.state.activeModal == 'economy'? <EconomyReport world={this.state.world}></EconomyReport> : '')}\n        </Modal>\n        <div className=\"left\">\n          <div className=\"top\">\n            <span>\n              &nbsp;\n              Year {this.state.world.date.year}, \n              &nbsp;\n              {season}\n            </span>\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            &nbsp;\n            <span>\n              Budget\n            </span>\n            <div className=\"pull-r horizontal\" style={{marginRight: 2+'em'}}>\n              <button type=\"button\" onClick={() => this.setState({activeMain: 'network'})}>🌐</button>\n              <button type=\"button\" onClick={() => this.setState({activeMain: 'geo'})}>🌎</button>\n              <span>\n                election in {this.state.world.electionIn} seasons\n                &nbsp;\n                <button type=\"button\" className=\"important\" onClick={() => this.endTurn()}>End Turn</button>\n              </span>\n            </div>\n          </div>\n          <div className=\"bottom\">\n            <BubbleText changeEvent={this.state.world.bus.physicalCapital} icon=\"💰\">\n              <b>💰 Cash</b> {this.state.world.party.materialCapital.toFixed(0)}\n            </BubbleText>\n            <BubbleText changeEvent={this.state.world.bus.politicalCapital} icon=\"🤝\">\n              <b>🤝 Influence</b> {this.state.world.party.politicalCapital}\n            </BubbleText>\n            <BubbleText changeEvent={this.state.world.bus.labor} icon=\"🤝\">\n              <b>💪 Labor</b> {this.state.world.party.labor}\n            </BubbleText>\n            <span>\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'economy'})}>State of the Nation</button>\n              <button type=\"button\" className=\"callout\" onClick={() => this.setState({activeModal:'party'})}>Party</button>\n              <button type=\"button\" onClick={() => this.setState({activeModal:'polisci'})}>PoliSci</button>\n              <button type=\"button\" onClick={() => this.setState({activeModal:'campaign'})}>Campaigns</button>\n              <button type=\"button\" onClick={() => this.setState({activeModal:'policy'})}>Law</button>\n            </span>\n          </div>\n        </div>\n        <div className=\"right\">\n          <div className=\"full-width-tabs\">\n            <button onClick={() => this.setState({activeRightPanel: 'overview'})}>📈 Overview</button>\n            <button onClick={() => this.setState({activeRightPanel: 'events'})}>📣 Events</button>\n            <button onClick={() => this.setState({activeRightPanel: 'goals'})}>🏆 Goals</button>\n          </div>\n          {this.getPanel()}\n        </div>\n      </div>\n    </div>\n  )}\n}\n\nexport default App;\n","import React from \"react\";\r\nimport { ChangePubSub } from \"../events/Events\";\r\n\r\nexport class BubbleText extends React.Component<{\r\n    bubbleClass?: string,\r\n    icon?: string,\r\n    changeEvent?: ChangePubSub\r\n}, {\r\n    bubbles: Array<{s: string, t: number, c?: string}>\r\n}> {\r\n\r\n    constructor(props: any){\r\n        super(props);\r\n        this.state = {\r\n            bubbles: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.subscribe(this.onChange)\r\n        }\r\n    }\r\n\r\n    onChange = (ev: {change: number}) => {\r\n        const id = +(new Date());\r\n        const positive = ev.change > 0;\r\n        this.setState({\r\n            bubbles: this.state.bubbles.concat([{\r\n                s: (positive ? '+': '') + ev.change,\r\n                t: id,\r\n                c: positive ? 'pos' : 'neg'\r\n            }])\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                bubbles: this.state.bubbles.filter((b) => b.t != id)\r\n            })\r\n        }, 1500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.props.changeEvent){\r\n            this.props.changeEvent.unsubscribe(this.onChange);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const bubbles = this.state.bubbles.map((b) => <span key={b.t} className={[b.c, this.props.bubbleClass, \"bubbler\"].join(' ')}>\r\n            {this.props.icon} {b.s}\r\n        </span>)\r\n        return <span className=\"bubble-parent\">\r\n            {this.props.children}\r\n            {bubbles}\r\n        </span>\r\n    }\r\n}","import React from \"react\";\r\nimport { Bean } from \"../Bean\";\r\nimport { AnimatedBean } from \"../AnimatedBean\";\r\nimport \"./SocialGraph.css\";\r\n\r\ninterface SocialGraphP{\r\n    beans: Bean[];\r\n    costOfLiving: number;\r\n    onClick: (b: Bean) => void\r\n}\r\ninterface SocialGraphS{\r\n    \r\n}\r\nexport class SocialGraph extends React.Component<SocialGraphP, SocialGraphS>{\r\n    constructor(props: SocialGraphP){\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render(){\r\n        return <div className=\"social-graph\">\r\n            {\r\n                this.props.beans.map((b) => \r\n                <div className=\"bean-node\" onClick={() => this.props.onClick(b)}>\r\n                    <AnimatedBean bean={b} costOfLiving={this.props.costOfLiving} sitStill={true} \r\n                        onClick={() => {this.props.onClick(b);}}>\r\n                    </AnimatedBean>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}